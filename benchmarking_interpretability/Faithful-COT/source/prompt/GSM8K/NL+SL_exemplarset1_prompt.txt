# Q: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many trees are there in the beginning? (independent, support: ["There are 15 trees"])
trees_begin = 15
# 2. How many trees are there in the end? (independent, support: ["there will be 21 trees"])
trees_end = 21
# 3. How many trees did the grove workers plant today? (depends on 1 and 2, support: [])
trees_today = trees_end - trees_begin
# 4. Final Answer: How many trees did the grove workers plant today? (depends on 3, support: [])
answer = trees_today

# Q: Elizabeth, Emma, and Elsa went shopping on Wednesday. In total Emma spent $58. If Elsa spent twice as much as Emma, and Elizabeth spent four times as much as Elsa, how much money did they spend in total?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How much did Emma spend? (independent, support: ["In total Emma spent $58"])
emma_spent = 58
# 2. How much did Elsa spend? (depends on 1, support: ["Elsa spent twice as much as Emma"])
elsa_spent = emma_spent * 2
# 3. How much did Elizabeth spend? (depends on 2, support: ["Elizabeth spent four times as much as Elsa"])
elizabeth_spent = elsa_spent * 4
# 4. How much did they spend in total? (depends on 1, 2, and 3, support: [])
total_spent = emma_spent + elsa_spent + elizabeth_spent
# 5. Final Answer: How much money did they spend in total? (depends on 4, support: [])
answer = total_spent

# Q: It takes David 10 minutes to wash 4 windows. David's house has 64 windows. How many minutes will it take David to wash all of the windows?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How long does it take Davit to wash 4 windows? (independent, support: ["It takes David 10 minutes to wash 4 windows"])
minutes_to_wash_4_windows = 10
# 2. How many windows does David's house have? (independent, support: ["David's house has 64 windows"])
total_windows = 64
# 3. How many minutes does it take David to wash 1 window? (depends on 1, support: [])
minutes_to_wash_1_window = minutes_to_wash_4_windows / 4
# 4. How many minutes will it take David to wash all the windows? (depends on 2 and 3, support: [])
total_minutes = total_windows * minutes_to_wash_1_window
# 5. Final Asnwer: How many minutes will it take David to wash all the windows? (depends on 4, support: [])
answer = total_minutes

# Q: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many computers were there in the beginning? (independent, support: ["There were nine computers"])
computers_begin = 9
# 2. How many computers were installed each day? (independent, support: ["Five more computers were installed each day"])
computers_each_day = 5
# 3. How many days were there from monday to thursday? (independent, support: ["External knowledge: days of the week are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, so there are 4 days from Monday to Thursday"])
days_monday_to_thursday = 4
# 4. How many new computers were installed? (depends on 2 and 3, support: [])
computers_new = 0
for i in range(days_monday_to_thursday):
    computers_new += computers_each_day
# 5. How many computers are now in the server room? (depends on 1 and 4, support: [])
computers_now = computers_begin + computers_new
# 6. Final Answer: How many computers are now in the server room? (depends on 5, support: [])
answer = computers_now

# Q: On Tuesday last week, Leo dropped off 10 pairs of trousers and some shirts at Sudsy Laundry. He was given a bill of $140, charged at $5 per shirt and $9 for each pair of trousers. When he went to pick up his clothes yesterday, the attendant insisted that he had only dropped off 2 shirts. Leo reported the matter to the manager, who ordered the attendant to search for the rest of Leo's shirts. How many shirts were missing?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many pairs of trousers were dropped off? (independent, support: ["Leo dropped off 10 pairs of trousers"])
pairs_of_trousers = 10
# 2. What was the total cost of the bill? (independent, support: ["He was given a bill of $140"])
total_cost = 140
# 3. How much does it cost to launder each shirt? (independent, support: ["$5 per shirt"])
cost_per_shirt = 5
# 4. How much does it cost to launder each pair of trousers? (independent, support: ["$9 for each pair of trousers"])
cost_per_pair_of_trousers = 9
# 5. What would be the cost if Leo only dropped off 2 shirts? (depends on 1, 3, and 4, support: [])
cost_with_2_shirts = (pairs_of_trousers * cost_per_pair_of_trousers) + (2 * cost_per_shirt)
# 6. How many shirts were missing? (depends on 2, 3, and 5, support: [])
missing_shirts = (total_cost - cost_with_2_shirts) / cost_per_shirt
# 7. Final Answer: How many shirts were missing? (depends on 6, support: [])
answer = missing_shirts

# Q: There were 90 people at the summer picnic. There were 50 soda cans, 50 plastic bottles of sparkling water, and 50 glass bottles of juice. One-half of the guests drank soda, one-third of the guests drank sparkling water, and four-fifths of the juices were consumed. How many recyclable cans and bottles were collected?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many people were at the summer picnic? (independent, support: ["There were 90 people"])
people = 90
# 2. How many soda cans were there? (independent, support: ["There were 50 soda cans"])
soda_cans = 50
# 3. How many plastic bottles of sparkling water were there? (independent, support: ["50 plastic bottles of sparkling water"])
sparkling_water_bottles = 50
# 4. How many glass bottles of juice were there? (independent, support: ["50 glass bottles of juice"])
juice_bottles = 50
# 5. How many guests drank soda? (depends on 1, support: ["One-half of the guests drank soda"])
soda_consumed = people * 1/2
# 6. How many guests drank sparkling water? (depends on 1, support: ["one-third of the guests drank sparkling water"])
sparkling_water_consumed = people * 1/3
# 7. How many juices were consumed? (depends on 4, support: ["four-fifths of the juices were consumed"])
juices_consumed = juice_bottles * 4/5
# 8. How many recyclable cans and bottles were collected? (depends on 5, 6, and 7, support: [])
cans_and_bottles_collected = soda_consumed + sparkling_water_consumed + juices_consumed
# 9. Final Answer: How many recyclable cans and bottles were collected? (depends on 8, support: [])
answer = cans_and_bottles_collected

# Q: There were 349 pieces of candy in a bowl. Talitha took 108 pieces and Solomon took 153 pieces. How many pieces of candy remain in the bowl?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many total pieces of candy start in the bowl? (independent, support: ["There were 349 pieces of candy in a bowl"])
initial_candy = 349
# 2. How many pieces does Talitha take? (independent, support: ["Talitha took 108 pieces"])
talitha_takes = 108
# 3. How many pieces does Solomon take? (independent, support: ["Solomon took 153 pieces"])
solomon_takes = 153
# 4. How many pieces of candy remain in the bowl? (depends on 1, 2, and 3, support: [])
remaining_pieces = initial_candy - talitha_takes - solomon_takes
# 5. Final Asnwer: How many pieces of candy remain in the bowl? (depends on 4, support: [])
answer = remaining_pieces

# Q: In a fruit salad, there are raspberries, green grapes, and red grapes. There are seven more than 3 times the number of red grapes as green grapes. There are 5 less raspberries than green grapes. If there are 102 pieces of fruit in the salad, how many red grapes are in the salad?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many green grapes are there? (independent, support: [])
green_grapes = Symbol("green_grapes")
# 2. How many red grapes are there? (depends on 1, support: ["There are seven more than 3 times the number of red grapes as green grapes"])
red_grapes = 3 * green_grapes + 7
# 3. How many raspberries are there? (depends on 1, support: ["There are 5 less raspberries than green grapes"])
raspberries = green_grapes - 5
# 4. How many total pieces of fruit are there? (depends on 1, 2, and 3, support: "there are 102 pieces of fruit in the salad")
total_fruit_eq = Eq(green_grapes + red_grapes + raspberries, 102)
# 5. How many green grapes are in the salad based on this equation? (depends on 1 and 4, support: [])
green_grapes_val = solve_it(total_fruit_eq, green_grapes)[green_grapes]
# 6. How many red grapes are in the salad given the number of green grapes? (depends on 1, 2 and 5, support: "how many red grapes are in the salad?"])
red_grapes_val = red_grapes.subs(green_grapes, green_grapes_val)
# 7. Final Answer: how many red grapes are in the salad? (depends on 6, support: [])
answer = red_grapes_val