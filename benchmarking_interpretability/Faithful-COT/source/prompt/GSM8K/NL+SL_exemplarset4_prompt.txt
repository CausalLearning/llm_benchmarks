# Q: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many trees are there in the beginning? (independent, support: ["There are 15 trees"])
trees_begin = 15
# 2. How many trees are there in the end? (independent, support: ["there will be 21 trees"])
trees_end = 21
# 3. How many trees did the grove workers plant today? (depends on 1 and 2, support: [])
trees_today = trees_end - trees_begin
# 4. Final Answer: How many trees did the grove workers plant today? (depends on 3, support: [])
answer = trees_today

# Q: There are 48 passengers on the bus. Two-thirds of the passengers are women and the rest are men. If one-eighth of the men are standing, how many men are seated?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many passengers are on the bus? (independent, support: ["There are 48 passengers on the bus"])
total_passengers = 48
# 2. How many passengers are women? (depends on 1, support: ["Two-thirds of the passengers are women"])
women_passengers = total_passengers * (2 / 3)
# 3. How many passengers are men? (depends on 1 and 2, support: ["the rest are men"])
men_passengers = total_passengers - women_passengers
# 4. How many men are standing? (depends on 3, support: ["one-eighth of the men are standing"])
standing_men_passengers = men_passengers * (1/ 8)
# 5. How many men are seated? (depends on 3 and 4, support: [])
seated_men_passengers = men_passengers - standing_men_passengers
# 6. Final Answer: How many men are seated? (depends on 5, support: [])
answer = seated_men_passengers

# Q: Mark has an egg farm. His farm supplies one store with 5 dozen eggs and another store with 30 eggs each day. How many eggs does he supply these two stores in a week?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many items are in one dozen? (independent, support: ["External knowledge: there are 12 items in a dozen"]
n_in_dozen = 12
# 2. How many eggs does Mark supply to one store each day? (depends on 1, support: ["supplies one store with 5 dozen eggs"])
eggs_one_store_each_day = 5 * n_in_dozen
# 3. How many eggs does Mark supply to another store each day? (independent, support: ["another store with 30 eggs each day"])
eggs_another_store_each_day = 30
# 4. How many days are there in a week? (independent, support: ["External knowledge: there are seven days in a week"])
days_in_week = 7
# 5. How many eggs does Mark supply these two stores in a week? (depends on 2, 3, and 4, support: [])
eggs_week = 0
for i in range(days_in_week):
    eggs_week += eggs_one_store_each_day + eggs_another_store_each_day
# 6. Final Answer: How many eggs does he supply these two stores in a week? (depends on 5, support: [])
answer = eggs_week

# Q: On Tuesday last week, Leo dropped off 10 pairs of trousers and some shirts at Sudsy Laundry. He was given a bill of $140, charged at $5 per shirt and $9 for each pair of trousers. When he went to pick up his clothes yesterday, the attendant insisted that he had only dropped off 2 shirts. Leo reported the matter to the manager, who ordered the attendant to search for the rest of Leo's shirts. How many shirts were missing?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many pairs of trousers were dropped off? (independent, support: ["Leo dropped off 10 pairs of trousers"])
pairs_of_trousers = 10
# 2. What was the total cost of the bill? (independent, support: ["He was given a bill of $140"])
total_cost = 140
# 3. How much does it cost to launder each shirt? (independent, support: ["$5 per shirt"])
cost_per_shirt = 5
# 4. How much does it cost to launder each pair of trousers? (independent, support: ["$9 for each pair of trousers"])
cost_per_pair_of_trousers = 9
# 5. What would be the cost if Leo only dropped off 2 shirts? (depends on 1, 3, and 4, support: [])
cost_with_2_shirts = (pairs_of_trousers * cost_per_pair_of_trousers) + (2 * cost_per_shirt)
# 6. How many shirts were missing? (depends on 2, 3, and 5, support: [])
missing_shirts = (total_cost - cost_with_2_shirts) / cost_per_shirt
# 7. Final Answer: How many shirts were missing? (depends on 6, support: [])
answer = missing_shirts

# Q: Elizabeth, Emma, and Elsa went shopping on Wednesday. In total Emma spent $58. If Elsa spent twice as much as Emma, and Elizabeth spent four times as much as Elsa, how much money did they spend in total?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How much did Emma spend? (independent, support: ["In total Emma spent $58"])
emma_spent = 58
# 2. How much did Elsa spend? (depends on 1, support: ["Elsa spent twice as much as Emma"])
elsa_spent = emma_spent * 2
# 3. How much did Elizabeth spend? (depends on 2, support: ["Elizabeth spent four times as much as Elsa"])
elizabeth_spent = elsa_spent * 4
# 4. How much did they spend in total? (depends on 1, 2, and 3, support: [])
total_spent = emma_spent + elsa_spent + elizabeth_spent
# 5. Final Answer: How much money did they spend in total? (depends on 4, support: [])
answer = total_spent

# Q: There were 349 pieces of candy in a bowl. Talitha took 108 pieces and Solomon took 153 pieces. How many pieces of candy remain in the bowl?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How many total pieces of candy start in the bowl? (independent, support: ["There were 349 pieces of candy in a bowl"])
initial_candy = 349
# 2. How many pieces does Talitha take? (independent, support: ["Talitha took 108 pieces"])
talitha_takes = 108
# 3. How many pieces does Solomon take? (independent, support: ["Solomon took 153 pieces"])
solomon_takes = 153
# 4. How many pieces of candy remain in the bowl? (depends on 1, 2, and 3, support: [])
remaining_pieces = initial_candy - talitha_takes - solomon_takes
# 5. Final Asnwer: How many pieces of candy remain in the bowl? (depends on 4, support: [])
answer = remaining_pieces

# Q: Denise will be 25 years old in two years. Her sister, Diane, is 4 years younger. In how many years will Diane be 25 years old?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How old will Denise be in two years? (independent, support: ["Denise will be 25 years old in two years"])
age_denise_in_2y = 25
# 2. How old is Denise now? (depends on 1, support: ["Denise will be 25 years old in two years"])
age_denise_now = age_denise_in_2y - 2
# 3. How old is Diane now? (depends on 2, support: ["Diane, is 4 years younger"])
age_diane_now = age_denise_now - 4
# 4. In how many years will Diane be 25 years old? (depends on 3, support: [])
years_until_diane_25 = 25 - age_diane_now
# 5. Final Answer: In how many years will Diane be 25 years old? (depends on 4, support: [])
answer = years_until_diane_25

# Q: Brady will make $450 more in a year than Dwayne. If Dwayne makes $1,500 in a year, how much will Brady and Dwayne make combined in a year?
# To answer this question, write a Python program to answer the following subquestions:
# 1. How much more will Brady make in a year than Dwayne? (independent, support: ["Brady will make $450 more in a year than Dwayne"])
brady_more_than_dwayne = 450
# 2. How much does Dwayne make per year? (independent, support: ["Dwayne makes $1,500 in a year"])
dwayne_salary = 1500
# 3. How much does Brady make per year? (depends on 1 and 2, support: [])
brady_salary = dwayne_salary + brady_more_than_dwayne
# 4. How much will Brady and Dwayne make combined? (depends on 2 and 3, support: [])
combined = dwayne_salary + brady_salary
# 5. Final Answer: How much will Brady and Dwayne make combined in a year? (depends on 4, support: [])
answer = combined