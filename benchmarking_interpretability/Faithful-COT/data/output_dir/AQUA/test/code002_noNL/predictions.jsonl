{"id": 0, "answer": "E", "completion": "time = Symbol('time', positive=True)\nangle_of_elevation = 45 + time * (60 - 45) / 10\ndistance_travelled = time * 60\nheight_of_tower = distance_travelled * tan(angle_of_elevation * pi / 180)\nsolution = solve_it(height_of_tower - distance_travelled, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nangle_of_elevation = 45 + time * (60 - 45) / 10\ndistance_travelled = time * 60\nheight_of_tower = distance_travelled * tan(angle_of_elevation * pi / 180)\nsolution = solve_it(height_of_tower - distance_travelled, time)\nanswer = solution[time]\n\n"]}
{"id": 1, "answer": "E", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\ncoupon_discount = 20\nfinal_price = discounted_price - coupon_discount\nsolution = solve_it(final_price - 0.5 * original_price - 1.9, original_price)\nanswer = solution[original_price]\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\ncoupon_discount = 20\nfinal_price = discounted_price - coupon_discount\nsolution = solve_it(final_price - 0.5 * original_price - 1.9, original_price)\nanswer = solution[original_price]\n\n"]}
{"id": 2, "answer": "A", "completion": "options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break\n\n", "completions": ["options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break\n\n"]}
{"id": 3, "answer": "A", "completion": "prob_A_increase = 0.56\nprob_B_increase = 0.74\nprob_A_decrease = 1 - prob_A_increase\nprob_B_decrease = 1 - prob_B_increase\nprob_A_decrease_and_B_decrease = prob_A_decrease * prob_B_decrease\nanswer = prob_A_decrease_and_B_decrease\n\n", "completions": ["prob_A_increase = 0.56\nprob_B_increase = 0.74\nprob_A_decrease = 1 - prob_A_increase\nprob_B_decrease = 1 - prob_B_increase\nprob_A_decrease_and_B_decrease = prob_A_decrease * prob_B_decrease\nanswer = prob_A_decrease_and_B_decrease\n\n"]}
{"id": 4, "answer": "B", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = 0.2\nsolution = solve_it(selling_price - cost_price - profit * cost_price, cost_price)\nanswer = solution[cost_price]\n\n", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = 0.2\nsolution = solve_it(selling_price - cost_price - profit * cost_price, cost_price)\nanswer = solution[cost_price]\n\n"]}
{"id": 5, "answer": "E", "completion": "num_marbles_in_bag = Symbol('num_marbles_in_bag', positive=True)\nnum_black_marbles_in_bag = num_marbles_in_bag / 20\nnum_white_marbles_in_bag = num_marbles_in_bag - num_black_marbles_in_bag\nnum_marbles_pulled_out_first_time = 20\nnum_marbles_pulled_out_second_time = 20\nnum_black_marbles_pulled_out_second_time = 1\nsolution = solve_it([num_black_marbles_pulled_out_second_time / num_marbles_pulled_out_second_time - num_black_marbles_in_bag / num_marbles_in_bag, num_black_marbles_in_bag - num_marbles_pulled_out_first_time], [num_marbles_in_bag, num_black_marbles_in_bag])\nanswer = solution[num_marbles_in_bag]\n\n", "completions": ["num_marbles_in_bag = Symbol('num_marbles_in_bag', positive=True)\nnum_black_marbles_in_bag = num_marbles_in_bag / 20\nnum_white_marbles_in_bag = num_marbles_in_bag - num_black_marbles_in_bag\nnum_marbles_pulled_out_first_time = 20\nnum_marbles_pulled_out_second_time = 20\nnum_black_marbles_pulled_out_second_time = 1\nsolution = solve_it([num_black_marbles_pulled_out_second_time / num_marbles_pulled_out_second_time - num_black_marbles_in_bag / num_marbles_in_bag, num_black_marbles_in_bag - num_marbles_pulled_out_first_time], [num_marbles_in_bag, num_black_marbles_in_bag])\nanswer = solution[num_marbles_in_bag]\n\n"]}
{"id": 6, "answer": "D", "completion": "num_letters = 26\nnum_numbers = 10\nnum_distinct_bike_nos = num_letters ** 2 * num_numbers ** 2\nnum_distinct_letters = num_letters ** 2\nanswer = (num_distinct_bike_nos, num_distinct_letters)\n\n", "completions": ["num_letters = 26\nnum_numbers = 10\nnum_distinct_bike_nos = num_letters ** 2 * num_numbers ** 2\nnum_distinct_letters = num_letters ** 2\nanswer = (num_distinct_bike_nos, num_distinct_letters)\n\n"]}
{"id": 7, "answer": "None", "completion": "speed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([speed * time - distance, speed * time - distance / 4, speed - 100, speed - 75], [speed, distance, time])\nanswer = solution[time]\n\n", "completions": ["speed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([speed * time - distance, speed * time - distance / 4, speed - 100, speed - 75], [speed, distance, time])\nanswer = solution[time]\n\n"]}
{"id": 8, "answer": "A", "completion": "students = 200\nprom_night_attendees = 0.45 * students\ndebating_session_participants = 0.35 * students\nanswer = students - prom_night_attendees - debating_session_participants\n\n", "completions": ["students = 200\nprom_night_attendees = 0.45 * students\ndebating_session_participants = 0.35 * students\nanswer = students - prom_night_attendees - debating_session_participants\n\n"]}
{"id": 9, "answer": "D", "completion": "commission = 0.1\nsalary = 1000\nsales = Symbol('sales', positive=True)\nsolution = solve_it(sales * commission * 250 - salary, sales)\nanswer = solution[sales]\n\n", "completions": ["commission = 0.1\nsalary = 1000\nsales = Symbol('sales', positive=True)\nsolution = solve_it(sales * commission * 250 - salary, sales)\nanswer = solution[sales]\n\n"]}
{"id": 10, "answer": "E", "completion": "production_cost = 110\nmonthly_production = 420\nmonthly_revenue = Symbol('monthly_revenue', positive=True)\nsolution = solve_it(monthly_revenue * 12 - production_cost * monthly_production * 12 - 626400, monthly_revenue)\nanswer = solution[monthly_revenue]\n\n", "completions": ["production_cost = 110\nmonthly_production = 420\nmonthly_revenue = Symbol('monthly_revenue', positive=True)\nsolution = solve_it(monthly_revenue * 12 - production_cost * monthly_production * 12 - 626400, monthly_revenue)\nanswer = solution[monthly_revenue]\n\n"]}
{"id": 11, "answer": "A", "completion": "total_staplers = Symbol('total_staplers', positive=True)\ndefective_staplers = 0.1 * total_staplers\nrejected_staplers = 0.02 * (total_staplers - defective_staplers)\nsolution = solve_it(rejected_staplers - 72, total_staplers)\nanswer = solution[total_staplers]\n\n", "completions": ["total_staplers = Symbol('total_staplers', positive=True)\ndefective_staplers = 0.1 * total_staplers\nrejected_staplers = 0.02 * (total_staplers - defective_staplers)\nsolution = solve_it(rejected_staplers - 72, total_staplers)\nanswer = solution[total_staplers]\n\n"]}
{"id": 12, "answer": "C", "completion": "machine_a_speed = 1 / 6\nmachine_b_speed = 1 / 9\ntotal_speed = machine_a_speed + machine_b_speed\nanswer = 10 / total_speed\n\n", "completions": ["machine_a_speed = 1 / 6\nmachine_b_speed = 1 / 9\ntotal_speed = machine_a_speed + machine_b_speed\nanswer = 10 / total_speed\n\n"]}
{"id": 13, "answer": "D", "completion": "answer = 45 - 30\n\n", "completions": ["answer = 45 - 30\n\n"]}
{"id": 14, "answer": "C", "completion": "answer = factorial(7)\n\n", "completions": ["answer = factorial(7)\n\n"]}
{"id": 15, "answer": "A", "completion": "A = Symbol('A')\nB = Symbol('B')\nP_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A / P_B\nanswer = P_A_given_B\n\n", "completions": ["A = Symbol('A')\nB = Symbol('B')\nP_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A / P_B\nanswer = P_A_given_B\n\n"]}
{"id": 16, "answer": "A", "completion": "options = [1, 2, 3, 4]\nfor option in options:\n    if 20 / option + 10 == 10 and 10 / option + 20 == 20:\n        answer = option\n        break\n\n", "completions": ["options = [1, 2, 3, 4]\nfor option in options:\n    if 20 / option + 10 == 10 and 10 / option + 20 == 20:\n        answer = option\n        break\n\n"]}
{"id": 17, "answer": "B", "completion": "total_months = 22\ntotal_sales = 42 * 10 + 20 * 10\nanswer = total_sales / total_months\n\n", "completions": ["total_months = 22\ntotal_sales = 42 * 10 + 20 * 10\nanswer = total_sales / total_months\n\n"]}
{"id": 18, "answer": "D", "completion": "x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z')\naverage_excluding_highest_and_lowest = (z * y - 2 * x) / (z - 2)\n\n", "completions": ["x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z')\naverage_excluding_highest_and_lowest = (z * y - 2 * x) / (z - 2)\n\n"]}
{"id": 19, "answer": "C", "completion": "options = [4, 4.5, 5, 5.5, 6.5]\nfor option in options:\n    if (5 + option * 19 - 15 - 7) / (13 * 13 - 156) == 6:\n        answer = option\n        break\n\n", "completions": ["options = [4, 4.5, 5, 5.5, 6.5]\nfor option in options:\n    if (5 + option * 19 - 15 - 7) / (13 * 13 - 156) == 6:\n        answer = option\n        break\n\n"]}
{"id": 20, "answer": "A", "completion": "selling_price = Symbol('selling_price', positive=True)\nprofit = 3000\nprofit_percentage = 25\nsolution = solve_it(selling_price * profit_percentage / 100 - profit, selling_price)\nanswer = solution[selling_price]\n\n", "completions": ["selling_price = Symbol('selling_price', positive=True)\nprofit = 3000\nprofit_percentage = 25\nsolution = solve_it(selling_price * profit_percentage / 100 - profit, selling_price)\nanswer = solution[selling_price]\n\n"]}
{"id": 21, "answer": "B", "completion": "alex_time = 7\njacob_time = 9\ntotal_time = 35 * (alex_time + jacob_time)\njacob_time_spent = total_time / 2\njacob_toys = jacob_time_spent / jacob_time\nanswer = jacob_toys\n\n", "completions": ["alex_time = 7\njacob_time = 9\ntotal_time = 35 * (alex_time + jacob_time)\njacob_time_spent = total_time / 2\njacob_toys = jacob_time_spent / jacob_time\nanswer = jacob_toys\n\n"]}
{"id": 22, "answer": "None", "completion": "tea_concentration = Symbol('tea_concentration', positive=True)\nmilk_concentration = Symbol('milk_concentration', positive=True)\nsolution = solve_it([tea_concentration - 0.5, milk_concentration - 0.5, tea_concentration - 0.15 * milk_concentration, tea_concentration - 0.1 * milk_concentration], [tea_concentration, milk_concentration])\nanswer = solution[tea_concentration]\n\n", "completions": ["tea_concentration = Symbol('tea_concentration', positive=True)\nmilk_concentration = Symbol('milk_concentration', positive=True)\nsolution = solve_it([tea_concentration - 0.5, milk_concentration - 0.5, tea_concentration - 0.15 * milk_concentration, tea_concentration - 0.1 * milk_concentration], [tea_concentration, milk_concentration])\nanswer = solution[tea_concentration]\n\n"]}
{"id": 23, "answer": "A", "completion": "num_students = Symbol('num_students', positive=True)\nsolution = solve_it(num_students / 16 + num_students / 10 + num_students / 8 - num_students, num_students)\nnum_students = solution[num_students]\nmax_students = num_students + num_students / 16 + num_students / 10 + num_students / 8\nmin_students = num_students - num_students / 16 - num_students / 10 - num_students / 8\nanswer = max_students - min_students\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nsolution = solve_it(num_students / 16 + num_students / 10 + num_students / 8 - num_students, num_students)\nnum_students = solution[num_students]\nmax_students = num_students + num_students / 16 + num_students / 10 + num_students / 8\nmin_students = num_students - num_students / 16 - num_students / 10 - num_students / 8\nanswer = max_students - min_students\n\n"]}
{"id": 24, "answer": "D", "completion": "speed = 15 - 4\ntime = 21 / 60\ndistance = speed * time\nanswer = distance\n\n", "completions": ["speed = 15 - 4\ntime = 21 / 60\ndistance = speed * time\nanswer = distance\n\n"]}
{"id": 25, "answer": "B", "completion": "cost = Symbol('cost', positive=True)\nprofit = 20\nsolution = solve_it(cost * 1.4 - cost - profit, cost)\nanswer = solution[cost]\n\n", "completions": ["cost = Symbol('cost', positive=True)\nprofit = 20\nsolution = solve_it(cost * 1.4 - cost - profit, cost)\nanswer = solution[cost]\n\n"]}
{"id": 26, "answer": "C", "completion": "amount = 500\ninterest_rate = 6\ninterest = amount * interest_rate / 100 * 4\nanswer = amount + interest\n\n", "completions": ["amount = 500\ninterest_rate = 6\ninterest = amount * interest_rate / 100 * 4\nanswer = amount + interest\n\n"]}
{"id": 27, "answer": "A", "completion": "options = [(99, 10), (85, 9), (50, 7), (1, 1), (1, 0)]\nfor option in options:\n    if option[0] > 100 or option[1] > sqrt(option[0]):\n        answer = option\n        break\n\n", "completions": ["options = [(99, 10), (85, 9), (50, 7), (1, 1), (1, 0)]\nfor option in options:\n    if option[0] > 100 or option[1] > sqrt(option[0]):\n        answer = option\n        break\n\n"]}
{"id": 28, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nforward_journey_time = 6\nreturn_journey_time = 4\nsolution = solve_it([distance / speed - forward_journey_time, distance / (speed + 12) - return_journey_time], [distance, speed])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nforward_journey_time = 6\nreturn_journey_time = 4\nsolution = solve_it([distance / speed - forward_journey_time, distance / (speed + 12) - return_journey_time], [distance, speed])\nanswer = solution[distance]\n\n"]}
{"id": 29, "answer": "None", "completion": "brother_age = Symbol('brother_age', positive=True)\nsolution = solve_it(brother_age - 2 * brother_age - 60, brother_age)\nanswer = solution[brother_age]\n\n", "completions": ["brother_age = Symbol('brother_age', positive=True)\nsolution = solve_it(brother_age - 2 * brother_age - 60, brother_age)\nanswer = solution[brother_age]\n\n"]}
{"id": 30, "answer": "B", "completion": "wholesale_cost = Symbol('wholesale_cost', positive=True)\nretail_price = wholesale_cost * 1.6\nactual_price = retail_price * 0.8\nanswer = (actual_price - wholesale_cost) / wholesale_cost\n\n", "completions": ["wholesale_cost = Symbol('wholesale_cost', positive=True)\nretail_price = wholesale_cost * 1.6\nactual_price = retail_price * 0.8\nanswer = (actual_price - wholesale_cost) / wholesale_cost\n\n"]}
{"id": 31, "answer": "A", "completion": "map_distance = 20\nactual_distance_per_inch = 10 / 4\nactual_distance = map_distance * actual_distance_per_inch\nanswer = actual_distance\n\n", "completions": ["map_distance = 20\nactual_distance_per_inch = 10 / 4\nactual_distance = map_distance * actual_distance_per_inch\nanswer = actual_distance\n\n"]}
{"id": 32, "answer": "A", "completion": "width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nsolution = solve_it([2 * (width + height) - 48, 2 * (width + height) - 66], [width, height])\nanswer = solution[width] * solution[height]\n\n", "completions": ["width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nsolution = solve_it([2 * (width + height) - 48, 2 * (width + height) - 66], [width, height])\nanswer = solution[width] * solution[height]\n\n"]}
{"id": 33, "answer": "B", "completion": "answer = 3 * 4 * 1 * 3\n\n", "completions": ["answer = 3 * 4 * 1 * 3\n\n"]}
{"id": 34, "answer": "B", "completion": "width = 3\nheight = 4\nlength = 15\nsphere_radius = Symbol('sphere_radius', positive=True)\nsolution = solve_it(sphere_radius ** 2 - (width / 2) ** 2 - (height / 2) ** 2 - (length / 2) ** 2, sphere_radius)\nanswer = solution[sphere_radius] * 2\n\n", "completions": ["width = 3\nheight = 4\nlength = 15\nsphere_radius = Symbol('sphere_radius', positive=True)\nsolution = solve_it(sphere_radius ** 2 - (width / 2) ** 2 - (height / 2) ** 2 - (length / 2) ** 2, sphere_radius)\nanswer = solution[sphere_radius] * 2\n\n"]}
{"id": 35, "answer": "D", "completion": "distance_from_home = Symbol('distance_from_home', positive=True)\nsolution = solve_it(distance_from_home - 3 - 5 - 3 - 2, distance_from_home)\nanswer = solution[distance_from_home]\n\n", "completions": ["distance_from_home = Symbol('distance_from_home', positive=True)\nsolution = solve_it(distance_from_home - 3 - 5 - 3 - 2, distance_from_home)\nanswer = solution[distance_from_home]\n\n"]}
{"id": 36, "answer": "None", "completion": "marked_price = Symbol('marked_price', positive=True)\ndiscount_5 = 0.05 * marked_price\ndiscount_7 = 0.07 * marked_price\nsolution = solve_it(discount_5 - discount_7 - 15, marked_price)\nanswer = solution[marked_price]\n\n", "completions": ["marked_price = Symbol('marked_price', positive=True)\ndiscount_5 = 0.05 * marked_price\ndiscount_7 = 0.07 * marked_price\nsolution = solve_it(discount_5 - discount_7 - 15, marked_price)\nanswer = solution[marked_price]\n\n"]}
{"id": 37, "answer": "E", "completion": "number = Symbol('number', positive=True)\nactual_answer = 7 / 8 * number\nwrong_answer = 7 / 18 * number\nsolution = solve_it(wrong_answer - actual_answer - 770, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nactual_answer = 7 / 8 * number\nwrong_answer = 7 / 18 * number\nsolution = solve_it(wrong_answer - actual_answer - 770, number)\nanswer = solution[number]\n\n"]}
{"id": 38, "answer": "D", "completion": "fixed_salary = 500\nsales = Symbol('sales', positive=True)\nsalary = fixed_salary + 0.05 * sales\nsolution = solve_it(salary - 1500, sales)\nanswer = solution[sales]\n\n", "completions": ["fixed_salary = 500\nsales = Symbol('sales', positive=True)\nsalary = fixed_salary + 0.05 * sales\nsolution = solve_it(salary - 1500, sales)\nanswer = solution[sales]\n\n"]}
{"id": 39, "answer": "A", "completion": "speed_1 = 200\nspeed_2 = 400\nspeed_3 = 600\nspeed_4 = 800\ntotal_distance = 4 * speed_1\ntotal_time = total_distance / speed_1\naverage_speed = total_distance / total_time\nanswer = average_speed\n\n", "completions": ["speed_1 = 200\nspeed_2 = 400\nspeed_3 = 600\nspeed_4 = 800\ntotal_distance = 4 * speed_1\ntotal_time = total_distance / speed_1\naverage_speed = total_distance / total_time\nanswer = average_speed\n\n"]}
{"id": 40, "answer": "A", "completion": "white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners + brown_sharpeners + white_sharpeners - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n", "completions": ["white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners + brown_sharpeners + white_sharpeners - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n"]}
{"id": 41, "answer": "B", "completion": "rate_of_hose_A = Symbol('rate_of_hose_A', positive=True)\nrate_of_hose_B = Symbol('rate_of_hose_B', positive=True)\npool_volume = Symbol('pool_volume', positive=True)\ntime_taken_by_hose_A_alone = 8\ntime_taken_by_hose_A_and_B_together = 3\nsolution = solve_it([rate_of_hose_A * time_taken_by_hose_A_alone - pool_volume, rate_of_hose_A * time_taken_by_hose_A_and_B_together + rate_of_hose_B * time_taken_by_hose_A_and_B_together - pool_volume], [rate_of_hose_A, rate_of_hose_B, pool_volume])\nanswer = pool_volume / solution[rate_of_hose_B]\n\n", "completions": ["rate_of_hose_A = Symbol('rate_of_hose_A', positive=True)\nrate_of_hose_B = Symbol('rate_of_hose_B', positive=True)\npool_volume = Symbol('pool_volume', positive=True)\ntime_taken_by_hose_A_alone = 8\ntime_taken_by_hose_A_and_B_together = 3\nsolution = solve_it([rate_of_hose_A * time_taken_by_hose_A_alone - pool_volume, rate_of_hose_A * time_taken_by_hose_A_and_B_together + rate_of_hose_B * time_taken_by_hose_A_and_B_together - pool_volume], [rate_of_hose_A, rate_of_hose_B, pool_volume])\nanswer = pool_volume / solution[rate_of_hose_B]\n\n"]}
{"id": 42, "answer": "C", "completion": "original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent\n\n", "completions": ["original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent\n\n"]}
{"id": 43, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number * 1000 + number - 3 * (number + 1000), number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number * 1000 + number - 3 * (number + 1000), number)\nanswer = solution[number]\n\n"]}
{"id": 44, "answer": "A", "completion": "num_students = 100\nnum_students_in_chess_club = 0.24 * num_students\nnum_students_in_swim_team = 0.2 * num_students\nnum_students_in_both = num_students_in_chess_club - num_students_in_swim_team\nnum_students_in_swim_team_only = num_students_in_swim_team - num_students_in_both\nanswer = num_students_in_swim_team_only / num_students\n\n", "completions": ["num_students = 100\nnum_students_in_chess_club = 0.24 * num_students\nnum_students_in_swim_team = 0.2 * num_students\nnum_students_in_both = num_students_in_chess_club - num_students_in_swim_team\nnum_students_in_swim_team_only = num_students_in_swim_team - num_students_in_both\nanswer = num_students_in_swim_team_only / num_students\n\n"]}
{"id": 45, "answer": "B", "completion": "population = 78000\nfor i in range(2):\n    population = population * 1.05\nanswer = population\n\n", "completions": ["population = 78000\nfor i in range(2):\n    population = population * 1.05\nanswer = population\n\n"]}
{"id": 46, "answer": "E", "completion": "distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = Symbol('time', positive=True)\nsolution = solve_it(distance - speed_1 * time - speed_2 * time, time)\nanswer = solution[time]\n\n", "completions": ["distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = Symbol('time', positive=True)\nsolution = solve_it(distance - speed_1 * time - speed_2 * time, time)\nanswer = solution[time]\n\n"]}
{"id": 47, "answer": "E", "completion": "salary = 1500\ncommission = 0.15\nincome = 6000\nsolution = solve_it(salary + commission * income - 6000, income)\nanswer = solution[income]\n\n", "completions": ["salary = 1500\ncommission = 0.15\nincome = 6000\nsolution = solve_it(salary + commission * income - 6000, income)\nanswer = solution[income]\n\n"]}
{"id": 48, "answer": "A", "completion": "amount = 360\nmonthly_payment = 31.5\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(amount * (1 + interest_rate / 100) ** 12 - 12 * monthly_payment, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["amount = 360\nmonthly_payment = 31.5\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(amount * (1 + interest_rate / 100) ** 12 - 12 * monthly_payment, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 49, "answer": "A", "completion": "price = Symbol('price', positive=True)\ndiscount = 0.3\nsolution = solve_it(price * (1 - discount) - price, price)\nanswer = (1 - solution[price]) * 100\n\n", "completions": ["price = Symbol('price', positive=True)\ndiscount = 0.3\nsolution = solve_it(price * (1 - discount) - price, price)\nanswer = (1 - solution[price]) * 100\n\n"]}
{"id": 50, "answer": "A", "completion": "num_25_paise_coins = Symbol('num_25_paise_coins', positive=True)\nnum_50_paise_coins = Symbol('num_50_paise_coins', positive=True)\nnum_1_rupee_coins = Symbol('num_1_rupee_coins', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25_paise_coins + num_50_paise_coins + num_1_rupee_coins, num_25_paise_coins * 0.25 + num_50_paise_coins * 0.5 + num_1_rupee_coins - total_amount], [num_25_paise_coins, num_50_paise_coins, num_1_rupee_coins])\nanswer = (solution[num_25_paise_coins], solution[num_50_paise_coins], solution[num_1_rupee_coins])\n\n", "completions": ["num_25_paise_coins = Symbol('num_25_paise_coins', positive=True)\nnum_50_paise_coins = Symbol('num_50_paise_coins', positive=True)\nnum_1_rupee_coins = Symbol('num_1_rupee_coins', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25_paise_coins + num_50_paise_coins + num_1_rupee_coins, num_25_paise_coins * 0.25 + num_50_paise_coins * 0.5 + num_1_rupee_coins - total_amount], [num_25_paise_coins, num_50_paise_coins, num_1_rupee_coins])\nanswer = (solution[num_25_paise_coins], solution[num_50_paise_coins], solution[num_1_rupee_coins])\n\n"]}
{"id": 51, "answer": "C", "completion": "income = Symbol('income', positive=True)\nexpenses = 3500\nsavings = 0.125 * income\nsolution = solve_it(income - expenses - savings, income)\nanswer = solution[income]\n\n", "completions": ["income = Symbol('income', positive=True)\nexpenses = 3500\nsavings = 0.125 * income\nsolution = solve_it(income - expenses - savings, income)\nanswer = solution[income]\n\n"]}
{"id": 52, "answer": "B", "completion": "toys_per_box = 5 * 12\nboxes_per_tempo = 98\ntoys_per_tempo = toys_per_box * boxes_per_tempo\ntempos_required = 29400 / toys_per_tempo\nanswer = tempos_required\n\n", "completions": ["toys_per_box = 5 * 12\nboxes_per_tempo = 98\ntoys_per_tempo = toys_per_box * boxes_per_tempo\ntempos_required = 29400 / toys_per_tempo\nanswer = tempos_required\n\n"]}
{"id": 53, "answer": "A", "completion": "answer = factorial(10) / (factorial(2) * factorial(8))\n\n", "completions": ["answer = factorial(10) / (factorial(2) * factorial(8))\n\n"]}
{"id": 54, "answer": "E", "completion": "brown_speed = 1 / 6\nblack_speed = 1 / 8\nblue_speed = 1 / 12\nbrown_work_time = 8\nblack_work_time = 6\ntotal_work_time = brown_work_time + black_work_time\nblue_work_time = total_work_time - brown_work_time * brown_speed - black_work_time * black_speed\nanswer = blue_work_time / blue_speed\n\n", "completions": ["brown_speed = 1 / 6\nblack_speed = 1 / 8\nblue_speed = 1 / 12\nbrown_work_time = 8\nblack_work_time = 6\ntotal_work_time = brown_work_time + black_work_time\nblue_work_time = total_work_time - brown_work_time * brown_speed - black_work_time * black_speed\nanswer = blue_work_time / blue_speed\n\n"]}
{"id": 55, "answer": "A", "completion": "train_a_frequency = 16\ntrain_b_frequency = 17\nanswer = lcm(train_a_frequency, train_b_frequency)\n\n", "completions": ["train_a_frequency = 16\ntrain_b_frequency = 17\nanswer = lcm(train_a_frequency, train_b_frequency)\n\n"]}
{"id": 56, "answer": "B", "completion": "cube_size = 5\nsmall_cube_size = 1\nnum_small_cubes = cube_size ** 3\nnum_faces_painted = 6 * (cube_size - 2) ** 2\nnum_faces_unpainted = num_small_cubes * 6 - num_faces_painted\nanswer = num_faces_unpainted\n\n", "completions": ["cube_size = 5\nsmall_cube_size = 1\nnum_small_cubes = cube_size ** 3\nnum_faces_painted = 6 * (cube_size - 2) ** 2\nnum_faces_unpainted = num_small_cubes * 6 - num_faces_painted\nanswer = num_faces_unpainted\n\n"]}
{"id": 57, "answer": "D", "completion": "total_chocolates = 100\ncocoa_flavored_chocolates = 10\nvanilla_flavored_chocolates = total_chocolates - cocoa_flavored_chocolates\nsquashed_chocolates = 0.9 * vanilla_flavored_chocolates\nvanilla_flavored_not_squashed_chocolates = vanilla_flavored_chocolates - squashed_chocolates\nanswer = vanilla_flavored_not_squashed_chocolates / total_chocolates\n\n", "completions": ["total_chocolates = 100\ncocoa_flavored_chocolates = 10\nvanilla_flavored_chocolates = total_chocolates - cocoa_flavored_chocolates\nsquashed_chocolates = 0.9 * vanilla_flavored_chocolates\nvanilla_flavored_not_squashed_chocolates = vanilla_flavored_chocolates - squashed_chocolates\nanswer = vanilla_flavored_not_squashed_chocolates / total_chocolates\n\n"]}
{"id": 58, "answer": "D", "completion": "depth = 30\njump = 3\nfall = 2\ndays = Symbol('days', positive=True)\nsolution = solve_it(depth - jump * days + fall * (days - 1), days)\nanswer = solution[days]\n\n", "completions": ["depth = 30\njump = 3\nfall = 2\ndays = Symbol('days', positive=True)\nsolution = solve_it(depth - jump * days + fall * (days - 1), days)\nanswer = solution[days]\n\n"]}
{"id": 59, "answer": "E", "completion": "options = [47, 91, 41, 67, 44]\nfor option in options:\n    if (option + option + 2 + option + 4 + option + 6 + option + 8) % 10 == 0:\n        answer = option\n        break\n\n", "completions": ["options = [47, 91, 41, 67, 44]\nfor option in options:\n    if (option + option + 2 + option + 4 + option + 6 + option + 8) % 10 == 0:\n        answer = option\n        break\n\n"]}
{"id": 60, "answer": "E", "completion": "total_students = Symbol('total_students', positive=True)\nstudents_interested_in_football = 0.08 * total_students\nstudents_interested_in_cricket = 0.8 * total_students\nstudents_interested_in_basketball = 0.1 * total_students\nstudents_not_interested_in_any_game = 20\nsolution = solve_it([students_interested_in_football + students_interested_in_cricket + students_interested_in_basketball + students_not_interested_in_any_game - total_students], [total_students])\nanswer = solution[total_students]\n\n", "completions": ["total_students = Symbol('total_students', positive=True)\nstudents_interested_in_football = 0.08 * total_students\nstudents_interested_in_cricket = 0.8 * total_students\nstudents_interested_in_basketball = 0.1 * total_students\nstudents_not_interested_in_any_game = 20\nsolution = solve_it([students_interested_in_football + students_interested_in_cricket + students_interested_in_basketball + students_not_interested_in_any_game - total_students], [total_students])\nanswer = solution[total_students]\n\n"]}
{"id": 61, "answer": "D", "completion": "R = Symbol('R', positive=True)\nQ = Symbol('Q', positive=True)\nT = Symbol('T', positive=True)\nsolution = solve_it([Q - R - T, R + T - 50], [R, Q])\nanswer = solution[R] - solution[Q]\n\n", "completions": ["R = Symbol('R', positive=True)\nQ = Symbol('Q', positive=True)\nT = Symbol('T', positive=True)\nsolution = solve_it([Q - R - T, R + T - 50], [R, Q])\nanswer = solution[R] - solution[Q]\n\n"]}
{"id": 62, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ncost = 3.5 + 0.1 * distance\nsolution = solve_it(cost - 8.5, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ncost = 3.5 + 0.1 * distance\nsolution = solve_it(cost - 8.5, distance)\nanswer = solution[distance]\n\n"]}
{"id": 63, "answer": "B", "completion": "current_average = 51\nnew_average = 54\nnew_runs = 78\nmatches = Symbol('matches', positive=True)\nsolution = solve_it((matches * current_average + new_runs) / (matches + 1) - new_average, matches)\nanswer = solution[matches]\n\n", "completions": ["current_average = 51\nnew_average = 54\nnew_runs = 78\nmatches = Symbol('matches', positive=True)\nsolution = solve_it((matches * current_average + new_runs) / (matches + 1) - new_average, matches)\nanswer = solution[matches]\n\n"]}
{"id": 64, "answer": "D", "completion": "answer = 10\n\n", "completions": ["answer = 10\n\n"]}
{"id": 65, "answer": "C", "completion": "length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])\n\n", "completions": ["length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])\n\n"]}
{"id": 66, "answer": "A", "completion": "vitamin_e_percentage = 9\nvitamin_a_percentage = 8\nvitamin_e_required = Symbol('vitamin_e_required', positive=True)\nvitamin_a_required = Symbol('vitamin_a_required', positive=True)\ngrams_of_health_food = Symbol('grams_of_health_food', positive=True)\nsolution = solve_it([vitamin_e_required * grams_of_health_food / 100 - vitamin_e_percentage, vitamin_a_required * grams_of_health_food / 100 - vitamin_a_percentage], [vitamin_e_required, vitamin_a_required])\nanswer = solution[grams_of_health_food]\n\n", "completions": ["vitamin_e_percentage = 9\nvitamin_a_percentage = 8\nvitamin_e_required = Symbol('vitamin_e_required', positive=True)\nvitamin_a_required = Symbol('vitamin_a_required', positive=True)\ngrams_of_health_food = Symbol('grams_of_health_food', positive=True)\nsolution = solve_it([vitamin_e_required * grams_of_health_food / 100 - vitamin_e_percentage, vitamin_a_required * grams_of_health_food / 100 - vitamin_a_percentage], [vitamin_e_required, vitamin_a_required])\nanswer = solution[grams_of_health_food]\n\n"]}
{"id": 67, "answer": "None", "completion": "num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hour = 2 * num_helpers\nsmall_cakes_per_hour = 35 * num_helpers\nsolution = solve_it([large_cakes_per_hour * 3 - 20, small_cakes_per_hour * 3 - 700], num_helpers)\nanswer = solution[num_helpers]\n\n", "completions": ["num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hour = 2 * num_helpers\nsmall_cakes_per_hour = 35 * num_helpers\nsolution = solve_it([large_cakes_per_hour * 3 - 20, small_cakes_per_hour * 3 - 700], num_helpers)\nanswer = solution[num_helpers]\n\n"]}
{"id": 68, "answer": "A", "completion": "length_of_RS = 5\nlength_of_RT = 17\nlength_of_ST = 22\nlength_of_RU = (length_of_RT - length_of_RS) / 2\nanswer = length_of_RU\n\n", "completions": ["length_of_RS = 5\nlength_of_RT = 17\nlength_of_ST = 22\nlength_of_RU = (length_of_RT - length_of_RS) / 2\nanswer = length_of_RU\n\n"]}
{"id": 69, "answer": "None", "completion": "pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nsolution = solve_it([6 * pita_breads - 2 * rolls, 3 * rolls - 5 * baguettes, 2 * baguettes - pita_breads], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]\n\n", "completions": ["pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nsolution = solve_it([6 * pita_breads - 2 * rolls, 3 * rolls - 5 * baguettes, 2 * baguettes - pita_breads], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]\n\n"]}
{"id": 70, "answer": "A", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount = 20\nsolution = solve_it([discounted_price - original_price * (100 - discount) / 100, discounted_price - original_price], [original_price, discounted_price])\nanswer = (solution[original_price] - solution[discounted_price]) / solution[discounted_price] * 100\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount = 20\nsolution = solve_it([discounted_price - original_price * (100 - discount) / 100, discounted_price - original_price], [original_price, discounted_price])\nanswer = (solution[original_price] - solution[discounted_price]) / solution[discounted_price] * 100\n\n"]}
{"id": 71, "answer": "A", "completion": "bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\nsolution = solve_it(6 * bus_fare + 8 * train_fare - 1512, [bus_fare, train_fare])\nanswer = solution[train_fare]\n\n", "completions": ["bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\nsolution = solve_it(6 * bus_fare + 8 * train_fare - 1512, [bus_fare, train_fare])\nanswer = solution[train_fare]\n\n"]}
{"id": 72, "answer": "B", "completion": "width = 3\nheight = 8\nanswer = 2 * (width + height)\n\n", "completions": ["width = 3\nheight = 8\nanswer = 2 * (width + height)\n\n"]}
{"id": 73, "answer": "B", "completion": "answer = factorial(6)\n\n", "completions": ["answer = factorial(6)\n\n"]}
{"id": 74, "answer": "E", "completion": "x = Symbol('x', positive=True)\npicket_width = 1 / 2\nspace_between_pickets = 6\nlength_of_fence = x * picket_width + (x - 1) * space_between_pickets\nanswer = length_of_fence / 12\n\n", "completions": ["x = Symbol('x', positive=True)\npicket_width = 1 / 2\nspace_between_pickets = 6\nlength_of_fence = x * picket_width + (x - 1) * space_between_pickets\nanswer = length_of_fence / 12\n\n"]}
{"id": 75, "answer": "C", "completion": "ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = 10 * ship_speed\ndistance_travelled_by_ship = 180\ndistance_travelled_by_plane = plane_speed * distance_travelled_by_ship / (plane_speed - ship_speed)\nanswer = distance_travelled_by_plane\n\n", "completions": ["ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = 10 * ship_speed\ndistance_travelled_by_ship = 180\ndistance_travelled_by_plane = plane_speed * distance_travelled_by_ship / (plane_speed - ship_speed)\nanswer = distance_travelled_by_plane\n\n"]}
{"id": 76, "answer": "A", "completion": "num_deer_caught_in_2001 = 300\nnum_deer_caught_in_2002 = 500\nnum_deer_with_tags_in_2002 = 20\nnum_deer_with_tags_in_2001 = num_deer_with_tags_in_2002 * num_deer_caught_in_2001 / num_deer_caught_in_2002\ntotal_deer_population = num_deer_with_tags_in_2001 * num_deer_caught_in_2002 / num_deer_with_tags_in_2002\nanswer = total_deer_population\n\n", "completions": ["num_deer_caught_in_2001 = 300\nnum_deer_caught_in_2002 = 500\nnum_deer_with_tags_in_2002 = 20\nnum_deer_with_tags_in_2001 = num_deer_with_tags_in_2002 * num_deer_caught_in_2001 / num_deer_caught_in_2002\ntotal_deer_population = num_deer_with_tags_in_2001 * num_deer_caught_in_2002 / num_deer_with_tags_in_2002\nanswer = total_deer_population\n\n"]}
{"id": 77, "answer": "A", "completion": "answer = 0.9\n\n", "completions": ["answer = 0.9\n\n"]}
{"id": 78, "answer": "B", "completion": "num_vehicles = 10\ntotal_weight = 12.2 * num_vehicles\nnew_total_weight = total_weight + 2.6 * (num_vehicles + 1)\nnew_num_vehicles = num_vehicles + 1\nnew_average_weight = new_total_weight / new_num_vehicles\nanswer = new_average_weight\n\n", "completions": ["num_vehicles = 10\ntotal_weight = 12.2 * num_vehicles\nnew_total_weight = total_weight + 2.6 * (num_vehicles + 1)\nnew_num_vehicles = num_vehicles + 1\nnew_average_weight = new_total_weight / new_num_vehicles\nanswer = new_average_weight\n\n"]}
{"id": 79, "answer": "B", "completion": "population_one_year_ago = Symbol('population_one_year_ago', positive=True)\npopulation_two_years_ago = Symbol('population_two_years_ago', positive=True)\npopulation_one_year_from_now = population_one_year_ago * 1.1\npopulation_two_years_from_now = population_two_years_ago * 1.1 ** 2\nsolution = solve_it([population_two_years_from_now - 2 * population_one_year_from_now, population_one_year_from_now - population_one_year_ago], [population_one_year_ago, population_two_years_ago])\nanswer = solution[population_one_year_ago] / solution[population_two_years_ago] - 1\n\n", "completions": ["population_one_year_ago = Symbol('population_one_year_ago', positive=True)\npopulation_two_years_ago = Symbol('population_two_years_ago', positive=True)\npopulation_one_year_from_now = population_one_year_ago * 1.1\npopulation_two_years_from_now = population_two_years_ago * 1.1 ** 2\nsolution = solve_it([population_two_years_from_now - 2 * population_one_year_from_now, population_one_year_from_now - population_one_year_ago], [population_one_year_ago, population_two_years_ago])\nanswer = solution[population_one_year_ago] / solution[population_two_years_ago] - 1\n\n"]}
{"id": 80, "answer": "A", "completion": "arjun_money = Symbol('arjun_money', positive=True)\nsajal_money = Symbol('sajal_money', positive=True)\nsolution = solve_it([sajal_money + 30 - 2 * arjun_money, arjun_money + 10 - 3 * (sajal_money - 10)], [arjun_money, sajal_money])\nanswer = (solution[arjun_money], solution[sajal_money])\n\n", "completions": ["arjun_money = Symbol('arjun_money', positive=True)\nsajal_money = Symbol('sajal_money', positive=True)\nsolution = solve_it([sajal_money + 30 - 2 * arjun_money, arjun_money + 10 - 3 * (sajal_money - 10)], [arjun_money, sajal_money])\nanswer = (solution[arjun_money], solution[sajal_money])\n\n"]}
{"id": 81, "answer": "A", "completion": "width = 100\narea = 3000\nlength = area / width\nanswer = length\n\n", "completions": ["width = 100\narea = 3000\nlength = area / width\nanswer = length\n\n"]}
{"id": 82, "answer": "B", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ngcd = 11\nlcm = 7700\nsolution = solve_it([gcd_it(num1, num2) - gcd, lcm_it(num1, num2) - lcm, num1 - 350], [num1, num2])\nanswer = solution[num2]\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ngcd = 11\nlcm = 7700\nsolution = solve_it([gcd_it(num1, num2) - gcd, lcm_it(num1, num2) - lcm, num1 - 350], [num1, num2])\nanswer = solution[num2]\n\n"]}
{"id": 83, "answer": "B", "completion": "side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 4 * area, side)\nanswer = solution[side]\n\n", "completions": ["side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 4 * area, side)\nanswer = solution[side]\n\n"]}
{"id": 84, "answer": "A", "completion": "original_length = 30\nnew_length = original_length * 3 / 5\nanswer = new_length\n\n", "completions": ["original_length = 30\nnew_length = original_length * 3 / 5\nanswer = new_length\n\n"]}
{"id": 85, "answer": "E", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nM = a * b * c\nN = c * b * a\nsolution = solve_it([M - N + 396 * c - 990, M - 300], [a, b, c])\nanswer = len(solution[a])\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nM = a * b * c\nN = c * b * a\nsolution = solve_it([M - N + 396 * c - 990, M - 300], [a, b, c])\nanswer = len(solution[a])\n\n"]}
{"id": 86, "answer": "E", "completion": "num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = 0.2 * num_students\nnum_students_taking_math = 0.28 * num_students\nsolution = solve_it(num_students_taking_physics + num_students_taking_math - num_students - 501, num_students)\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = 0.2 * num_students\nnum_students_taking_math = 0.28 * num_students\nsolution = solve_it(num_students_taking_physics + num_students_taking_math - num_students - 501, num_students)\nanswer = solution[num_students]\n\n"]}
{"id": 87, "answer": "C", "completion": "Raj_age = Symbol('Raj_age', positive=True)\nRahim_age = Symbol('Rahim_age', positive=True)\nsolution = solve_it(Raj_age - 5 - Rahim_age / 3, Raj_age)\nanswer = solution[Raj_age] + 5\n\n", "completions": ["Raj_age = Symbol('Raj_age', positive=True)\nRahim_age = Symbol('Rahim_age', positive=True)\nsolution = solve_it(Raj_age - 5 - Rahim_age / 3, Raj_age)\nanswer = solution[Raj_age] + 5\n\n"]}
{"id": 88, "answer": "A", "completion": "cow_speed = 10\nfield_area = 14 * 14\nanswer = field_area / cow_speed\n\n", "completions": ["cow_speed = 10\nfield_area = 14 * 14\nanswer = field_area / cow_speed\n\n"]}
{"id": 89, "answer": "C", "completion": "selling_price = Symbol('selling_price', positive=True)\nprofit = 10\nsolution = solve_it(selling_price * (1 + profit / 100) - 27.5, selling_price)\nanswer = solution[selling_price]\n\n", "completions": ["selling_price = Symbol('selling_price', positive=True)\nprofit = 10\nsolution = solve_it(selling_price * (1 + profit / 100) - 27.5, selling_price)\nanswer = solution[selling_price]\n\n"]}
{"id": 90, "answer": "B", "completion": "answer = 3\n\n", "completions": ["answer = 3\n\n"]}
{"id": 91, "answer": "B", "completion": "fixed_cost = Symbol('fixed_cost', positive=True)\nvariable_cost = Symbol('variable_cost', positive=True)\nsolution = solve_it([540 * variable_cost + fixed_cost - 1800, 620 * variable_cost + fixed_cost - 2040], [fixed_cost, variable_cost])\nanswer = solution[fixed_cost] + 500 * solution[variable_cost]\n\n", "completions": ["fixed_cost = Symbol('fixed_cost', positive=True)\nvariable_cost = Symbol('variable_cost', positive=True)\nsolution = solve_it([540 * variable_cost + fixed_cost - 1800, 620 * variable_cost + fixed_cost - 2040], [fixed_cost, variable_cost])\nanswer = solution[fixed_cost] + 500 * solution[variable_cost]\n\n"]}
{"id": 92, "answer": "A", "completion": "ball_a_speed = 2 / 26\nball_b_speed = 5 / 35\nanswer = 1 / (ball_a_speed - ball_b_speed)\n\n", "completions": ["ball_a_speed = 2 / 26\nball_b_speed = 5 / 35\nanswer = 1 / (ball_a_speed - ball_b_speed)\n\n"]}
{"id": 93, "answer": "D", "completion": "hardcover = 30\nfiction = 20\nanswer = min(hardcover, fiction)\n\n", "completions": ["hardcover = 30\nfiction = 20\nanswer = min(hardcover, fiction)\n\n"]}
{"id": 94, "answer": "D", "completion": "num_sunday_papers = Symbol('num_sunday_papers', positive=True)\nnum_other_day_papers = Symbol('num_other_day_papers', positive=True)\ncost_sunday_papers = 4 * num_sunday_papers\ncost_other_day_papers = 1 * num_other_day_papers\ntotal_cost = 210\nsolution = solve_it([cost_sunday_papers + cost_other_day_papers - total_cost, num_sunday_papers - 2 * num_other_day_papers], [num_sunday_papers, num_other_day_papers])\nanswer = solution[num_other_day_papers]\n\n", "completions": ["num_sunday_papers = Symbol('num_sunday_papers', positive=True)\nnum_other_day_papers = Symbol('num_other_day_papers', positive=True)\ncost_sunday_papers = 4 * num_sunday_papers\ncost_other_day_papers = 1 * num_other_day_papers\ntotal_cost = 210\nsolution = solve_it([cost_sunday_papers + cost_other_day_papers - total_cost, num_sunday_papers - 2 * num_other_day_papers], [num_sunday_papers, num_other_day_papers])\nanswer = solution[num_other_day_papers]\n\n"]}
{"id": 95, "answer": "B", "completion": "num_friends = Symbol('num_friends', positive=True)\ncost_per_friend = Symbol('cost_per_friend', positive=True)\nsolution = solve_it([num_friends * cost_per_friend - 96, (num_friends - 4) * (cost_per_friend + 4) - 96], [num_friends, cost_per_friend])\nanswer = solution[num_friends]\n\n", "completions": ["num_friends = Symbol('num_friends', positive=True)\ncost_per_friend = Symbol('cost_per_friend', positive=True)\nsolution = solve_it([num_friends * cost_per_friend - 96, (num_friends - 4) * (cost_per_friend + 4) - 96], [num_friends, cost_per_friend])\nanswer = solution[num_friends]\n\n"]}
{"id": 96, "answer": "C", "completion": "side = Symbol('side', positive=True)\nlength = 27\nbreadth = 17\nsolution = solve_it(side ** 2 - length * breadth, side)\nanswer = solution[side]\n\n", "completions": ["side = Symbol('side', positive=True)\nlength = 27\nbreadth = 17\nsolution = solve_it(side ** 2 - length * breadth, side)\nanswer = solution[side]\n\n"]}
{"id": 97, "answer": "A", "completion": "num_sons = 5\nnum_daughters = 4\nnum_nephews = 2\ntotal_amount = 8600\namount_per_nephew = Symbol('amount_per_nephew', positive=True)\namount_per_daughter = 4 * amount_per_nephew\namount_per_son = 5 * amount_per_nephew\nsolution = solve_it([num_sons * amount_per_son + num_daughters * amount_per_daughter + num_nephews * amount_per_nephew - total_amount, amount_per_daughter - 4 * amount_per_nephew, amount_per_son - 5 * amount_per_nephew], [amount_per_nephew, amount_per_daughter, amount_per_son])\nanswer = solution[amount_per_daughter]\n\n", "completions": ["num_sons = 5\nnum_daughters = 4\nnum_nephews = 2\ntotal_amount = 8600\namount_per_nephew = Symbol('amount_per_nephew', positive=True)\namount_per_daughter = 4 * amount_per_nephew\namount_per_son = 5 * amount_per_nephew\nsolution = solve_it([num_sons * amount_per_son + num_daughters * amount_per_daughter + num_nephews * amount_per_nephew - total_amount, amount_per_daughter - 4 * amount_per_nephew, amount_per_son - 5 * amount_per_nephew], [amount_per_nephew, amount_per_daughter, amount_per_son])\nanswer = solution[amount_per_daughter]\n\n"]}
{"id": 98, "answer": "D", "completion": "meenu_weight = Symbol('meenu_weight', positive=True)\nsilu_weight = 51\nsolution = solve_it(meenu_weight + meenu_weight / 2 - 29, meenu_weight)\nanswer = solution[meenu_weight]\n\n", "completions": ["meenu_weight = Symbol('meenu_weight', positive=True)\nsilu_weight = 51\nsolution = solve_it(meenu_weight + meenu_weight / 2 - 29, meenu_weight)\nanswer = solution[meenu_weight]\n\n"]}
{"id": 99, "answer": "B", "completion": "tablets = 5\ntime_per_tablet = 15\nanswer = tablets * time_per_tablet\n\n", "completions": ["tablets = 5\ntime_per_tablet = 15\nanswer = tablets * time_per_tablet\n\n"]}
{"id": 100, "answer": "A", "completion": "green_sweets = 120\nred_sweets = 3 * green_sweets / 4\nanswer = red_sweets\n\n", "completions": ["green_sweets = 120\nred_sweets = 3 * green_sweets / 4\nanswer = red_sweets\n\n"]}
{"id": 101, "answer": "B", "completion": "num_members = Symbol('num_members', positive=True)\nyoungest_member_age = 7\ncommon_difference = 3 / 12\nsum_of_ages = 250\nsolution = solve_it(num_members * (youngest_member_age + (num_members - 1) * common_difference) - sum_of_ages, num_members)\nanswer = solution[num_members]\n\n", "completions": ["num_members = Symbol('num_members', positive=True)\nyoungest_member_age = 7\ncommon_difference = 3 / 12\nsum_of_ages = 250\nsolution = solve_it(num_members * (youngest_member_age + (num_members - 1) * common_difference) - sum_of_ages, num_members)\nanswer = solution[num_members]\n\n"]}
{"id": 102, "answer": "D", "completion": "M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)\n\n", "completions": ["M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)\n\n"]}
{"id": 103, "answer": "E", "completion": "cost_price = 1200\ndiscount = 0.2\nprofit = 0.2\nselling_price = cost_price / (1 - discount)\nprofit_price = selling_price * (1 + profit)\nanswer = profit_price\n\n", "completions": ["cost_price = 1200\ndiscount = 0.2\nprofit = 0.2\nselling_price = cost_price / (1 - discount)\nprofit_price = selling_price * (1 + profit)\nanswer = profit_price\n\n"]}
{"id": 104, "answer": "D", "completion": "train_a_speed = 40\ntrain_b_speed = 72\ntrain_a_departure_time = 11\ntrain_b_departure_time = 14\ntrain_a_distance = train_a_speed * (train_b_departure_time - train_a_departure_time)\ntrain_b_distance = train_b_speed * (train_b_departure_time - train_a_departure_time)\ntotal_distance = train_a_distance + train_b_distance\nanswer = train_b_departure_time + total_distance / (train_a_speed + train_b_speed)\n\n", "completions": ["train_a_speed = 40\ntrain_b_speed = 72\ntrain_a_departure_time = 11\ntrain_b_departure_time = 14\ntrain_a_distance = train_a_speed * (train_b_departure_time - train_a_departure_time)\ntrain_b_distance = train_b_speed * (train_b_departure_time - train_a_departure_time)\ntotal_distance = train_a_distance + train_b_distance\nanswer = train_b_departure_time + total_distance / (train_a_speed + train_b_speed)\n\n"]}
{"id": 105, "answer": "None", "completion": "john_money = Symbol('john_money', positive=True)\nmark_money = Symbol('mark_money', positive=True)\nsolution = solve_it([john_money - mark_money / 2 - 75, john_money - mark_money / 3 - 75], [john_money, mark_money])\nanswer = solution[john_money]\n\n", "completions": ["john_money = Symbol('john_money', positive=True)\nmark_money = Symbol('mark_money', positive=True)\nsolution = solve_it([john_money - mark_money / 2 - 75, john_money - mark_money / 3 - 75], [john_money, mark_money])\nanswer = solution[john_money]\n\n"]}
{"id": 106, "answer": "B", "completion": "num_lilies = Symbol('num_lilies', positive=True)\ndays = Symbol('days', positive=True)\nsolution = solve_it(num_lilies * 2 ** (days / 2) - 64, days)\nanswer = solution[days]\n\n", "completions": ["num_lilies = Symbol('num_lilies', positive=True)\ndays = Symbol('days', positive=True)\nsolution = solve_it(num_lilies * 2 ** (days / 2) - 64, days)\nanswer = solution[days]\n\n"]}
{"id": 107, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done_by_x_men = x ** 3\nwork_done_by_y_men = y ** 3 / x ** 2\nanswer = work_done_by_y_men\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done_by_x_men = x ** 3\nwork_done_by_y_men = y ** 3 / x ** 2\nanswer = work_done_by_y_men\n\n"]}
{"id": 108, "answer": "E", "completion": "answer = 5 * 4 * 3 * 2\n\n", "completions": ["answer = 5 * 4 * 3 * 2\n\n"]}
{"id": 109, "answer": "E", "completion": "angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AC + angle_BD - angle_AB\nanswer = angle_AD\n\n", "completions": ["angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AC + angle_BD - angle_AB\nanswer = angle_AD\n\n"]}
{"id": 110, "answer": "A", "completion": "employees_taking_winter_vacation = 0.75\nemployees_taking_winter_and_summer_vacation = 0.4\nemployees_taking_neither_winter_nor_summer_vacation = 0.2\nemployees_taking_summer_vacation = employees_taking_winter_and_summer_vacation + employees_taking_neither_winter_nor_summer_vacation\nemployees_taking_summer_vacation_but_not_winter_vacation = employees_taking_summer_vacation - employees_taking_winter_and_summer_vacation\nanswer = employees_taking_summer_vacation_but_not_winter_vacation\n\n", "completions": ["employees_taking_winter_vacation = 0.75\nemployees_taking_winter_and_summer_vacation = 0.4\nemployees_taking_neither_winter_nor_summer_vacation = 0.2\nemployees_taking_summer_vacation = employees_taking_winter_and_summer_vacation + employees_taking_neither_winter_nor_summer_vacation\nemployees_taking_summer_vacation_but_not_winter_vacation = employees_taking_summer_vacation - employees_taking_winter_and_summer_vacation\nanswer = employees_taking_summer_vacation_but_not_winter_vacation\n\n"]}
{"id": 111, "answer": "D", "completion": "width_top = 10\nwidth_bottom = 6\narea = 640\ndepth = Symbol('depth', positive=True)\nsolution = solve_it((width_top + width_bottom) * depth / 2 - area, depth)\nanswer = solution[depth]\n\n", "completions": ["width_top = 10\nwidth_bottom = 6\narea = 640\ndepth = Symbol('depth', positive=True)\nsolution = solve_it((width_top + width_bottom) * depth / 2 - area, depth)\nanswer = solution[depth]\n\n"]}
{"id": 112, "answer": "D", "completion": "num_matches_won = 20\nnum_matches_lost = Symbol('num_matches_lost', positive=True)\nsolution = solve_it(num_matches_lost / (num_matches_won + num_matches_lost) - 0.3, num_matches_lost)\nanswer = solution[num_matches_lost]\n\n", "completions": ["num_matches_won = 20\nnum_matches_lost = Symbol('num_matches_lost', positive=True)\nsolution = solve_it(num_matches_lost / (num_matches_won + num_matches_lost) - 0.3, num_matches_lost)\nanswer = solution[num_matches_lost]\n\n"]}
{"id": 113, "answer": "D", "completion": "radius = 10\nrevolutions_per_minute = 300\nrevolutions_per_second = revolutions_per_minute / 60\ndistance_traveled = revolutions_per_second * 2 * pi * radius\nanswer = distance_traveled * 30\n\n", "completions": ["radius = 10\nrevolutions_per_minute = 300\nrevolutions_per_second = revolutions_per_minute / 60\ndistance_traveled = revolutions_per_second * 2 * pi * radius\nanswer = distance_traveled * 30\n\n"]}
{"id": 114, "answer": "E", "completion": "n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(x - 20, n)\nanswer = solution[n]\n\n", "completions": ["n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(x - 20, n)\nanswer = solution[n]\n\n"]}
{"id": 115, "answer": "C", "completion": "height = 700\ntime_to_reach_max_height = 40\ntime_to_pass_point = 5\nspeed = height / (time_to_reach_max_height - time_to_pass_point)\nlength = speed * time_to_pass_point\nanswer = length\n\n", "completions": ["height = 700\ntime_to_reach_max_height = 40\ntime_to_pass_point = 5\nspeed = height / (time_to_reach_max_height - time_to_pass_point)\nlength = speed * time_to_pass_point\nanswer = length\n\n"]}
{"id": 116, "answer": "None", "completion": "A = 40000\nB = 60000\nC = 120000\ntotal_profit = 375000\nC_share = 150000\nmonths_after_B_joined = Symbol('months_after_B_joined', positive=True)\nsolution = solve_it(C_share - (C + B * (1 + months_after_B_joined / 12) + A * (1 + 2 / 12 + months_after_B_joined / 12)) * total_profit / (A + B + C), months_after_B_joined)\nanswer = solution[months_after_B_joined]\n\n", "completions": ["A = 40000\nB = 60000\nC = 120000\ntotal_profit = 375000\nC_share = 150000\nmonths_after_B_joined = Symbol('months_after_B_joined', positive=True)\nsolution = solve_it(C_share - (C + B * (1 + months_after_B_joined / 12) + A * (1 + 2 / 12 + months_after_B_joined / 12)) * total_profit / (A + B + C), months_after_B_joined)\nanswer = solution[months_after_B_joined]\n\n"]}
{"id": 117, "answer": "A", "completion": "radius = Symbol('radius', positive=True)\narea_of_square = 20 ** 2\narea_of_semi_circles = pi * radius ** 2\nsolution = solve_it(area_of_square - 2 * area_of_semi_circles, radius)\nanswer = area_of_square - 2 * area_of_semi_circles.subs(radius, solution[radius])\n\n", "completions": ["radius = Symbol('radius', positive=True)\narea_of_square = 20 ** 2\narea_of_semi_circles = pi * radius ** 2\nsolution = solve_it(area_of_square - 2 * area_of_semi_circles, radius)\nanswer = area_of_square - 2 * area_of_semi_circles.subs(radius, solution[radius])\n\n"]}
{"id": 118, "answer": "None", "completion": "M = Symbol('M', positive=True)\nN = Symbol('N', positive=True)\nsolution = solve_it((M + N) / 4, M)\nanswer = solution[M]\n\n", "completions": ["M = Symbol('M', positive=True)\nN = Symbol('N', positive=True)\nsolution = solve_it((M + N) / 4, M)\nanswer = solution[M]\n\n"]}
{"id": 119, "answer": "D", "completion": "men = Symbol('men', positive=True)\ndays = Symbol('days', positive=True)\nwork_done = 8 * 6\nsolution = solve_it(work_done / (men * days) - 1, men)\nanswer = solution[men]\n\n", "completions": ["men = Symbol('men', positive=True)\ndays = Symbol('days', positive=True)\nwork_done = 8 * 6\nsolution = solve_it(work_done / (men * days) - 1, men)\nanswer = solution[men]\n\n"]}
{"id": 120, "answer": "A", "completion": "num_boys = 64\nnum_girls = 40\nnum_members = num_boys + num_girls\nnum_new_members = num_members\nnum_boys_after_membership_drive = num_boys + num_new_members / 2\nnum_girls_after_membership_drive = num_girls + num_new_members / 2\nanswer = num_boys_after_membership_drive / num_girls_after_membership_drive\n\n", "completions": ["num_boys = 64\nnum_girls = 40\nnum_members = num_boys + num_girls\nnum_new_members = num_members\nnum_boys_after_membership_drive = num_boys + num_new_members / 2\nnum_girls_after_membership_drive = num_girls + num_new_members / 2\nanswer = num_boys_after_membership_drive / num_girls_after_membership_drive\n\n"]}
{"id": 121, "answer": "B", "completion": "speed = 12\ndistance = 48\nanswer = distance / speed * 60\n\n", "completions": ["speed = 12\ndistance = 48\nanswer = distance / speed * 60\n\n"]}
{"id": 122, "answer": "C", "completion": "distance = Symbol('distance', positive=True)\nspeed_to_B = 70\nspeed_from_B = 90\ntime_to_B = distance / speed_to_B\ntime_from_B = distance / speed_from_B\ntotal_time = time_to_B + time_from_B\nsolution = solve_it(total_time - 3 - distance / speed_to_B, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed_to_B = 70\nspeed_from_B = 90\ntime_to_B = distance / speed_to_B\ntime_from_B = distance / speed_from_B\ntotal_time = time_to_B + time_from_B\nsolution = solve_it(total_time - 3 - distance / speed_to_B, distance)\nanswer = solution[distance]\n\n"]}
{"id": 123, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 30 - number / 3, number)\nanswer = solution[number] / 2\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 30 - number / 3, number)\nanswer = solution[number] / 2\n\n"]}
{"id": 124, "answer": "B", "completion": "boat_speed = Symbol('boat_speed', positive=True)\nstream_speed = Symbol('stream_speed', positive=True)\nagainst_stream_speed = 2\nstill_water_speed = 4\nsolution = solve_it([boat_speed + stream_speed - still_water_speed, boat_speed - stream_speed - against_stream_speed], [boat_speed, stream_speed])\nanswer = solution[stream_speed]\n\n", "completions": ["boat_speed = Symbol('boat_speed', positive=True)\nstream_speed = Symbol('stream_speed', positive=True)\nagainst_stream_speed = 2\nstill_water_speed = 4\nsolution = solve_it([boat_speed + stream_speed - still_water_speed, boat_speed - stream_speed - against_stream_speed], [boat_speed, stream_speed])\nanswer = solution[stream_speed]\n\n"]}
{"id": 125, "answer": "A", "completion": "options = [368, 377, 288, 997, 112]\nfor option in options:\n    if sum(map(int, str(option))) == 17 and sum(map(lambda x: x ** 2, map(int, str(option)))) == 109 and int(str(option)[::-1]) == 495 - option:\n        answer = option\n        break\n\n", "completions": ["options = [368, 377, 288, 997, 112]\nfor option in options:\n    if sum(map(int, str(option))) == 17 and sum(map(lambda x: x ** 2, map(int, str(option)))) == 109 and int(str(option)[::-1]) == 495 - option:\n        answer = option\n        break\n\n"]}
{"id": 126, "answer": "B", "completion": "x_zinc = 6\nx_copper = 9\ny_zinc = 7\ny_copper = 11\nz_zinc = 40 * x_zinc / (40 + 60) + 60 * y_zinc / (40 + 60)\nz_copper = 40 * x_copper / (40 + 60) + 60 * y_copper / (40 + 60)\nanswer = (z_zinc, z_copper)\n\n", "completions": ["x_zinc = 6\nx_copper = 9\ny_zinc = 7\ny_copper = 11\nz_zinc = 40 * x_zinc / (40 + 60) + 60 * y_zinc / (40 + 60)\nz_copper = 40 * x_copper / (40 + 60) + 60 * y_copper / (40 + 60)\nanswer = (z_zinc, z_copper)\n\n"]}
{"id": 127, "answer": "D", "completion": "hoopsmot_contribution = 16000\nsmolapon_contribution = 4000\ntotal_contribution = hoopsmot_contribution + smolapon_contribution\ntotal_senators = 30\nhoopsmot_senators = hoopsmot_contribution / total_contribution * total_senators\nanswer = hoopsmot_senators\n\n", "completions": ["hoopsmot_contribution = 16000\nsmolapon_contribution = 4000\ntotal_contribution = hoopsmot_contribution + smolapon_contribution\ntotal_senators = 30\nhoopsmot_senators = hoopsmot_contribution / total_contribution * total_senators\nanswer = hoopsmot_senators\n\n"]}
{"id": 128, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x ** 2 - y ** 2 - 256000, x + y - 1000], [x, y])\nanswer = (solution[x], solution[y])\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x ** 2 - y ** 2 - 256000, x + y - 1000], [x, y])\nanswer = (solution[x], solution[y])\n\n"]}
{"id": 129, "answer": "D", "completion": "weight_on_earth = 211\nweight_on_venus = 182\nanswer = weight_on_venus / weight_on_earth\n\n", "completions": ["weight_on_earth = 211\nweight_on_venus = 182\nanswer = weight_on_venus / weight_on_earth\n\n"]}
{"id": 130, "answer": "A", "completion": "distance_at_5_kmph = 5 * 6\ndistance_at_4_kmph = 4 * 12\ntotal_distance = distance_at_5_kmph + distance_at_4_kmph\ntotal_time = 6 + 12\nanswer = total_distance / total_time\n\n", "completions": ["distance_at_5_kmph = 5 * 6\ndistance_at_4_kmph = 4 * 12\ntotal_distance = distance_at_5_kmph + distance_at_4_kmph\ntotal_time = 6 + 12\nanswer = total_distance / total_time\n\n"]}
{"id": 131, "answer": "C", "completion": "answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)\n\n", "completions": ["answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)\n\n"]}
{"id": 132, "answer": "B", "completion": "num_members = Symbol('num_members', positive=True)\ntotal_income = 9000\nmedian_income = 3000\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]\n\n", "completions": ["num_members = Symbol('num_members', positive=True)\ntotal_income = 9000\nmedian_income = 3000\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]\n\n"]}
{"id": 133, "answer": "E", "completion": "adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = 4 * adult_fare + 3 * child_fare\nanswer = total_fare\n\n", "completions": ["adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = 4 * adult_fare + 3 * child_fare\nanswer = total_fare\n\n"]}
{"id": 134, "answer": "C", "completion": "employees = Symbol('employees', positive=True)\ntotal_contribution = 6 * 100000\nextra_contribution = 60\ntotal_contribution_with_extra = 6.24 * 100000\nsolution = solve_it(total_contribution_with_extra - total_contribution - extra_contribution * employees, employees)\nanswer = solution[employees]\n\n", "completions": ["employees = Symbol('employees', positive=True)\ntotal_contribution = 6 * 100000\nextra_contribution = 60\ntotal_contribution_with_extra = 6.24 * 100000\nsolution = solve_it(total_contribution_with_extra - total_contribution - extra_contribution * employees, employees)\nanswer = solution[employees]\n\n"]}
{"id": 135, "answer": "A", "completion": "eligible_voters = 0.8 * 5000\nwinning_candidate_votes = 0.15 * eligible_voters\nanswer = winning_candidate_votes\n\n", "completions": ["eligible_voters = 0.8 * 5000\nwinning_candidate_votes = 0.15 * eligible_voters\nanswer = winning_candidate_votes\n\n"]}
{"id": 136, "answer": "A", "completion": "copper_coins = Symbol('copper_coins', positive=True)\nbrass_coins = Symbol('brass_coins', positive=True)\nsolution = solve_it(copper_coins * 20 + brass_coins * 25 - 340, copper_coins)\nanswer = solution[copper_coins]\n\n", "completions": ["copper_coins = Symbol('copper_coins', positive=True)\nbrass_coins = Symbol('brass_coins', positive=True)\nsolution = solve_it(copper_coins * 20 + brass_coins * 25 - 340, copper_coins)\nanswer = solution[copper_coins]\n\n"]}
{"id": 137, "answer": "E", "completion": "distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime_taken = 10\nsolution = solve_it(distance / ram_speed + distance / krishna_speed - time_taken, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime_taken = 10\nsolution = solve_it(distance / ram_speed + distance / krishna_speed - time_taken, distance)\nanswer = solution[distance]\n\n"]}
{"id": 138, "answer": "C", "completion": "speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_y] - solution[speed_x]\n\n", "completions": ["speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_y] - solution[speed_x]\n\n"]}
{"id": 139, "answer": "D", "completion": "distance = Symbol('distance', positive=True)\nrunning_speed = 10\nwalking_speed = 5\nsolution = solve_it(distance / running_speed + distance / walking_speed - 1, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nrunning_speed = 10\nwalking_speed = 5\nsolution = solve_it(distance / running_speed + distance / walking_speed - 1, distance)\nanswer = solution[distance]\n\n"]}
{"id": 140, "answer": "None", "completion": "num_yellow_balls = Symbol('num_yellow_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\ntotal_balls = 600\nnum_sold = 0.8 * total_balls\nsolution = solve_it([num_yellow_balls + num_white_balls - total_balls, num_yellow_balls - num_white_balls, num_yellow_balls + num_white_balls - num_sold], [num_yellow_balls, num_white_balls])\nanswer = solution[num_yellow_balls]\n\n", "completions": ["num_yellow_balls = Symbol('num_yellow_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\ntotal_balls = 600\nnum_sold = 0.8 * total_balls\nsolution = solve_it([num_yellow_balls + num_white_balls - total_balls, num_yellow_balls - num_white_balls, num_yellow_balls + num_white_balls - num_sold], [num_yellow_balls, num_white_balls])\nanswer = solution[num_yellow_balls]\n\n"]}
{"id": 141, "answer": "B", "completion": "flagstaff_height = 17.5\nflagstaff_shadow_length = 40.25\nbuilding_shadow_length = 28.75\nbuilding_height = flagstaff_height * building_shadow_length / flagstaff_shadow_length\nanswer = building_height\n\n", "completions": ["flagstaff_height = 17.5\nflagstaff_shadow_length = 40.25\nbuilding_shadow_length = 28.75\nbuilding_height = flagstaff_height * building_shadow_length / flagstaff_shadow_length\nanswer = building_height\n\n"]}
{"id": 142, "answer": "A", "completion": "time = Symbol('time', positive=True)\ndistance_between_cars = 15\ncar_1_speed = 55\ncar_2_speed = 52\nsolution = solve_it(time * (car_1_speed + car_2_speed) - distance_between_cars, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\ndistance_between_cars = 15\ncar_1_speed = 55\ncar_2_speed = 52\nsolution = solve_it(time * (car_1_speed + car_2_speed) - distance_between_cars, time)\nanswer = solution[time]\n\n"]}
{"id": 143, "answer": "B", "completion": "A = Symbol('A')\nB = Symbol('B')\nsolution = solve_it([A + B - 0.96, A - 0.6], [A, B])\nanswer = solution[B]\n\n", "completions": ["A = Symbol('A')\nB = Symbol('B')\nsolution = solve_it([A + B - 0.96, A - 0.6], [A, B])\nanswer = solution[B]\n\n"]}
{"id": 144, "answer": "D", "completion": "cube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\ncube_volume = cube_side ** 3\nsphere_volume = 4 / 3 * pi * sphere_radius ** 3\nsolution = solve_it(cube_volume / sphere_volume - 2 / pi, sphere_radius)\nanswer = solution[sphere_radius]\n\n", "completions": ["cube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\ncube_volume = cube_side ** 3\nsphere_volume = 4 / 3 * pi * sphere_radius ** 3\nsolution = solve_it(cube_volume / sphere_volume - 2 / pi, sphere_radius)\nanswer = solution[sphere_radius]\n\n"]}
{"id": 145, "answer": "A", "completion": "num_ties = 8 + 13 + 10 + 5 + 4\nanswer = num_ties - (8 * 7 + 13 * 12 + 10 * 9 + 5 * 4 + 4 * 3) / 2\n\n", "completions": ["num_ties = 8 + 13 + 10 + 5 + 4\nanswer = num_ties - (8 * 7 + 13 * 12 + 10 * 9 + 5 * 4 + 4 * 3) / 2\n\n"]}
{"id": 146, "answer": "B", "completion": "answer = 25 / 12 * 5\n\n", "completions": ["answer = 25 / 12 * 5\n\n"]}
{"id": 147, "answer": "A", "completion": "answer = log(4, 2)\n\n", "completions": ["answer = log(4, 2)\n\n"]}
{"id": 148, "answer": "A", "completion": "cost_price = 450\nselling_price = 90 * 7.5\ngain = selling_price - cost_price\nanswer = gain / cost_price\n\n", "completions": ["cost_price = 450\nselling_price = 90 * 7.5\ngain = selling_price - cost_price\nanswer = gain / cost_price\n\n"]}
{"id": 149, "answer": "A", "completion": "train_m_speed = Symbol('train_m_speed', positive=True)\ntrain_n_speed = Symbol('train_n_speed', positive=True)\ntrain_m_distance = Symbol('train_m_distance', positive=True)\ntrain_n_distance = Symbol('train_n_distance', positive=True)\ntrain_m_time = 4\ntrain_n_time = 3\nsolution = solve_it([train_m_speed * train_m_time - train_m_distance, train_n_speed * train_n_time - train_n_distance, train_m_distance - train_n_distance], [train_m_speed, train_n_speed, train_m_distance])\nanswer = solution[train_m_time] + solution[train_n_time]\n\n", "completions": ["train_m_speed = Symbol('train_m_speed', positive=True)\ntrain_n_speed = Symbol('train_n_speed', positive=True)\ntrain_m_distance = Symbol('train_m_distance', positive=True)\ntrain_n_distance = Symbol('train_n_distance', positive=True)\ntrain_m_time = 4\ntrain_n_time = 3\nsolution = solve_it([train_m_speed * train_m_time - train_m_distance, train_n_speed * train_n_time - train_n_distance, train_m_distance - train_n_distance], [train_m_speed, train_n_speed, train_m_distance])\nanswer = solution[train_m_time] + solution[train_n_time]\n\n"]}
{"id": 150, "answer": "A", "completion": "janice_speed = 10\njennie_speed = 20\ntotal_speed = janice_speed + jennie_speed\ntime = 1 / total_speed\nanswer = time\n\n", "completions": ["janice_speed = 10\njennie_speed = 20\ntotal_speed = janice_speed + jennie_speed\ntime = 1 / total_speed\nanswer = time\n\n"]}
{"id": 151, "answer": "E", "completion": "M = Symbol('M')\nmarks_secured = 504\nmarks_secured_after_conversion = 420\nsolution = solve_it(marks_secured / M - marks_secured_after_conversion / 800, M)\nanswer = solution[M]\n\n", "completions": ["M = Symbol('M')\nmarks_secured = 504\nmarks_secured_after_conversion = 420\nsolution = solve_it(marks_secured / M - marks_secured_after_conversion / 800, M)\nanswer = solution[M]\n\n"]}
{"id": 152, "answer": "E", "completion": "people_attending = 12\nbottles_per_person = 10 / 8\nanswer = people_attending * bottles_per_person\n\n", "completions": ["people_attending = 12\nbottles_per_person = 10 / 8\nanswer = people_attending * bottles_per_person\n\n"]}
{"id": 153, "answer": "D", "completion": "ant_height = Symbol('ant_height', positive=True)\nshadow_length = Symbol('shadow_length', positive=True)\nsolution = solve_it([4 * shadow_length - 10, 6 * shadow_length - ant_height], [ant_height, shadow_length])\nanswer = solution[ant_height]\n\n", "completions": ["ant_height = Symbol('ant_height', positive=True)\nshadow_length = Symbol('shadow_length', positive=True)\nsolution = solve_it([4 * shadow_length - 10, 6 * shadow_length - ant_height], [ant_height, shadow_length])\nanswer = solution[ant_height]\n\n"]}
{"id": 154, "answer": "C", "completion": "height = Symbol('height', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it(height / perimeter - 2 / 5, height)\nanswer = solution[height]\n\n", "completions": ["height = Symbol('height', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it(height / perimeter - 2 / 5, height)\nanswer = solution[height]\n\n"]}
{"id": 155, "answer": "B", "completion": "k = Symbol('k', positive=True)\nsum_of_k_consecutive_integers = k * (k + 1) / 2\nsolution = solve_it(sum_of_k_consecutive_integers - 51, k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k', positive=True)\nsum_of_k_consecutive_integers = k * (k + 1) / 2\nsolution = solve_it(sum_of_k_consecutive_integers - 51, k)\nanswer = solution[k]\n\n"]}
{"id": 156, "answer": "D", "completion": "num_students = Symbol('num_students', positive=True)\nnum_songs = 10\nnum_selections = 5\nsolution = solve_it(num_students * 2 - num_songs * num_selections, num_students)\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_songs = 10\nnum_selections = 5\nsolution = solve_it(num_students * 2 - num_songs * num_selections, num_students)\nanswer = solution[num_students]\n\n"]}
{"id": 157, "answer": "E", "completion": "m = Symbol('m')\nsolution = solve_it(m ** 2 + m + 22, m)\nanswer = solution[m]\n\n", "completions": ["m = Symbol('m')\nsolution = solve_it(m ** 2 + m + 22, m)\nanswer = solution[m]\n\n"]}
{"id": 158, "answer": "A", "completion": "answer = factorial(10) / factorial(3)\n\n", "completions": ["answer = factorial(10) / factorial(3)\n\n"]}
{"id": 159, "answer": "B", "completion": "original_price = Symbol('original_price', positive=True)\nnew_price = Symbol('new_price', positive=True)\nsolution = solve_it([original_price - new_price - 0.15 * original_price, 5 * new_price - 300], [original_price, new_price])\nanswer = solution[new_price]\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\nnew_price = Symbol('new_price', positive=True)\nsolution = solve_it([original_price - new_price - 0.15 * original_price, 5 * new_price - 300], [original_price, new_price])\nanswer = solution[new_price]\n\n"]}
{"id": 160, "answer": "A", "completion": "num_children = Symbol('num_children', positive=True)\nneha_position = 12\nradha_position = num_children - 6 + 1\nsolution = solve_it(radha_position - neha_position - 6, num_children)\nanswer = solution[num_children]\n\n", "completions": ["num_children = Symbol('num_children', positive=True)\nneha_position = 12\nradha_position = num_children - 6 + 1\nsolution = solve_it(radha_position - neha_position - 6, num_children)\nanswer = solution[num_children]\n\n"]}
{"id": 161, "answer": "A", "completion": "mixture = 10\nsand_in_mixture = 0.3 * mixture\nclay_in_mixture = 0.7 * mixture\nsand_to_be_added = sand_in_mixture - clay_in_mixture\nanswer = sand_to_be_added\n\n", "completions": ["mixture = 10\nsand_in_mixture = 0.3 * mixture\nclay_in_mixture = 0.7 * mixture\nsand_to_be_added = sand_in_mixture - clay_in_mixture\nanswer = sand_to_be_added\n\n"]}
{"id": 162, "answer": "A", "completion": "income = Symbol('income', positive=True)\nexpenditure = 0.7 * income\nnew_income = 1.2 * income\nnew_expenditure = new_income * 0.7\nanswer = new_expenditure / new_income\n\n", "completions": ["income = Symbol('income', positive=True)\nexpenditure = 0.7 * income\nnew_income = 1.2 * income\nnew_expenditure = new_income * 0.7\nanswer = new_expenditure / new_income\n\n"]}
{"id": 163, "answer": "D", "completion": "white_tulips = 28\nred_tulips = 98\nanswer = gcd(white_tulips, red_tulips)\n\n", "completions": ["white_tulips = 28\nred_tulips = 98\nanswer = gcd(white_tulips, red_tulips)\n\n"]}
{"id": 164, "answer": "A", "completion": "sharon_earning_rate = 1 / 5\nkaren_earning_rate = 1 / 4\ncake_cost = 1\nsolution = solve_it(sharon_earning_rate + karen_earning_rate - cake_cost, x)\nanswer = solution[x]\n\n", "completions": ["sharon_earning_rate = 1 / 5\nkaren_earning_rate = 1 / 4\ncake_cost = 1\nsolution = solve_it(sharon_earning_rate + karen_earning_rate - cake_cost, x)\nanswer = solution[x]\n\n"]}
{"id": 165, "answer": "A", "completion": "x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it(abs(x ** 3) - abs(y ** 2), x)\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it(abs(x ** 3) - abs(y ** 2), x)\nanswer = solution[x]\n\n"]}
{"id": 166, "answer": "C", "completion": "pages = 100\nprinter_a_speed = 1 / 2\nprinter_b_speed = 1 / 2\ntotal_speed = printer_a_speed + printer_b_speed\nanswer = pages / total_speed\n\n", "completions": ["pages = 100\nprinter_a_speed = 1 / 2\nprinter_b_speed = 1 / 2\ntotal_speed = printer_a_speed + printer_b_speed\nanswer = pages / total_speed\n\n"]}
{"id": 167, "answer": "A", "completion": "ant_a_speed = 9\nant_b_speed = 6\ndistance_between_farms = 75\ndistance_travelled_by_ant_a = distance_between_farms * ant_a_speed / (ant_a_speed + ant_b_speed)\nanswer = distance_travelled_by_ant_a\n\n", "completions": ["ant_a_speed = 9\nant_b_speed = 6\ndistance_between_farms = 75\ndistance_travelled_by_ant_a = distance_between_farms * ant_a_speed / (ant_a_speed + ant_b_speed)\nanswer = distance_travelled_by_ant_a\n\n"]}
{"id": 168, "answer": "D", "completion": "property_worth = 1023.65\nrecorded_property_worth = int(property_worth)\nanswer = property_worth - recorded_property_worth\n\n", "completions": ["property_worth = 1023.65\nrecorded_property_worth = int(property_worth)\nanswer = property_worth - recorded_property_worth\n\n"]}
{"id": 169, "answer": "B", "completion": "trouser_price = 70\nshirt_price = 30\ntotal_money = 810\ntrouser_count = Symbol('trouser_count', positive=True)\nshirt_count = Symbol('shirt_count', positive=True)\nsolution = solve_it([trouser_count * trouser_price + shirt_count * shirt_price - total_money, trouser_count / shirt_count - 9], [trouser_count, shirt_count])\nanswer = solution[trouser_count]\n\n", "completions": ["trouser_price = 70\nshirt_price = 30\ntotal_money = 810\ntrouser_count = Symbol('trouser_count', positive=True)\nshirt_count = Symbol('shirt_count', positive=True)\nsolution = solve_it([trouser_count * trouser_price + shirt_count * shirt_price - total_money, trouser_count / shirt_count - 9], [trouser_count, shirt_count])\nanswer = solution[trouser_count]\n\n"]}
{"id": 170, "answer": "E", "completion": "cover_price = Symbol('cover_price', positive=True)\nsubscription_price = 42\nsubscription_price_without_discount = 15 * cover_price\nsolution = solve_it(subscription_price_without_discount - subscription_price - 0.25 * subscription_price_without_discount, cover_price)\nanswer = solution[cover_price]\n\n", "completions": ["cover_price = Symbol('cover_price', positive=True)\nsubscription_price = 42\nsubscription_price_without_discount = 15 * cover_price\nsolution = solve_it(subscription_price_without_discount - subscription_price - 0.25 * subscription_price_without_discount, cover_price)\nanswer = solution[cover_price]\n\n"]}
{"id": 171, "answer": "E", "completion": "heads = Symbol('heads', positive=True)\ntails = Symbol('tails', positive=True)\nsolution = solve_it([2 * heads - 3 * tails, heads + tails - 20], [heads, tails])\nanswer = solution[heads]\n\n", "completions": ["heads = Symbol('heads', positive=True)\ntails = Symbol('tails', positive=True)\nsolution = solve_it([2 * heads - 3 * tails, heads + tails - 20], [heads, tails])\nanswer = solution[heads]\n\n"]}
{"id": 172, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nallen_speed = 54\nbob_speed = 78\nallen_distance = distance + distance\nbob_distance = distance + distance + 48\nsolution = solve_it(allen_distance / allen_speed - bob_distance / bob_speed, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nallen_speed = 54\nbob_speed = 78\nallen_distance = distance + distance\nbob_distance = distance + distance + 48\nsolution = solve_it(allen_distance / allen_speed - bob_distance / bob_speed, distance)\nanswer = solution[distance]\n\n"]}
{"id": 173, "answer": "C", "completion": "new_tire_cost = 180\nrepair_cost = 40\nnew_tire_cost_per_year = new_tire_cost / 4\nrepair_cost_per_year = repair_cost\nanswer = (new_tire_cost_per_year - repair_cost_per_year) / repair_cost_per_year\n\n", "completions": ["new_tire_cost = 180\nrepair_cost = 40\nnew_tire_cost_per_year = new_tire_cost / 4\nrepair_cost_per_year = repair_cost\nanswer = (new_tire_cost_per_year - repair_cost_per_year) / repair_cost_per_year\n\n"]}
{"id": 174, "answer": "C", "completion": "length = Symbol('length', positive=True)\nshort_length = length - 3\nlong_length = length + 3\nsolution = solve_it(short_length + long_length - 20, length)\nanswer = solution[length]\n\n", "completions": ["length = Symbol('length', positive=True)\nshort_length = length - 3\nlong_length = length + 3\nsolution = solve_it(short_length + long_length - 20, length)\nanswer = solution[length]\n\n"]}
{"id": 175, "answer": "B", "completion": "amount = 5000\ninterest_rate = 12\ninterest = amount * (1 + interest_rate / 200) ** 2 - amount\nanswer = interest\n\n", "completions": ["amount = 5000\ninterest_rate = 12\ninterest = amount * (1 + interest_rate / 200) ** 2 - amount\nanswer = interest\n\n"]}
{"id": 176, "answer": "A", "completion": "options = [9, 2, 0, 0, 9, 2, 0, 1, 9, 2, 0, 7, 9, 2, 2, 2]\nfor i in range(0, len(options), 4):\n    if options[i] * options[i + 1] == options[i + 2] * 10 + options[i + 3]:\n        answer = (options[i], options[i + 1], options[i + 2], options[i + 3])\n        break\n\n", "completions": ["options = [9, 2, 0, 0, 9, 2, 0, 1, 9, 2, 0, 7, 9, 2, 2, 2]\nfor i in range(0, len(options), 4):\n    if options[i] * options[i + 1] == options[i + 2] * 10 + options[i + 3]:\n        answer = (options[i], options[i + 1], options[i + 2], options[i + 3])\n        break\n\n"]}
{"id": 177, "answer": "D", "completion": "sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsachin_age_10_years_from_now = sachin_age + 10\nsolution = solve_it([sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, sachin_age_10_years_from_now - 40], [sachin_age, ajay_age])\nanswer = solution[ajay_age]\n\n", "completions": ["sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsachin_age_10_years_from_now = sachin_age + 10\nsolution = solve_it([sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, sachin_age_10_years_from_now - 40], [sachin_age, ajay_age])\nanswer = solution[ajay_age]\n\n"]}
{"id": 178, "answer": "B", "completion": "perimeter = 340\nwidth = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nsolution = solve_it(2 * (width + height) - perimeter, width)\nanswer = solution[width] * 10\n\n", "completions": ["perimeter = 340\nwidth = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nsolution = solve_it(2 * (width + height) - perimeter, width)\nanswer = solution[width] * 10\n\n"]}
{"id": 179, "answer": "B", "completion": "novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = Symbol('total_revenue', positive=True)\nsolution = solve_it([novel_revenue / total_revenue - 0.34, biography_revenue / total_revenue - (1 - 0.34) / 3], [novel_revenue, biography_revenue, total_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]\n\n", "completions": ["novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = Symbol('total_revenue', positive=True)\nsolution = solve_it([novel_revenue / total_revenue - 0.34, biography_revenue / total_revenue - (1 - 0.34) / 3], [novel_revenue, biography_revenue, total_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]\n\n"]}
{"id": 180, "answer": "D", "completion": "num_flowers = Symbol('num_flowers', positive=True)\nnum_flowers_bypassed = 0.0005 * num_flowers\nsolution = solve_it(num_flowers_bypassed - 8, num_flowers)\nanswer = solution[num_flowers]\n\n", "completions": ["num_flowers = Symbol('num_flowers', positive=True)\nnum_flowers_bypassed = 0.0005 * num_flowers\nsolution = solve_it(num_flowers_bypassed - 8, num_flowers)\nanswer = solution[num_flowers]\n\n"]}
{"id": 181, "answer": "A", "completion": "answer = binomial(5, 3) * binomial(4, 3)\n\n", "completions": ["answer = binomial(5, 3) * binomial(4, 3)\n\n"]}
{"id": 182, "answer": "A", "completion": "a = Symbol('a')\nb = Symbol('b')\nanswer = (a + b) * (a - b)\n\n", "completions": ["a = Symbol('a')\nb = Symbol('b')\nanswer = (a + b) * (a - b)\n\n"]}
{"id": 183, "answer": "D", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]\n\n"]}
{"id": 184, "answer": "D", "completion": "p = Symbol('p', positive=True)\nanswer = 4 * p * 1250\n\n", "completions": ["p = Symbol('p', positive=True)\nanswer = 4 * p * 1250\n\n"]}
{"id": 185, "answer": "D", "completion": "A_time = 40\nB_time = 45\nanswer = (A_time * B_time) / (A_time + B_time)\n\n", "completions": ["A_time = 40\nB_time = 45\nanswer = (A_time * B_time) / (A_time + B_time)\n\n"]}
{"id": 186, "answer": "B", "completion": "speed = 120\ntunnel_length = 1\ntime_to_enter_tunnel = 3\ntime_to_exit_tunnel = tunnel_length / speed\nanswer = time_to_enter_tunnel + time_to_exit_tunnel\n\n", "completions": ["speed = 120\ntunnel_length = 1\ntime_to_enter_tunnel = 3\ntime_to_exit_tunnel = tunnel_length / speed\nanswer = time_to_enter_tunnel + time_to_exit_tunnel\n\n"]}
{"id": 187, "answer": "A", "completion": "amount = 20000\ndiscount = 4\ndiscount_period = 30\ninterest_rate = Symbol('interest_rate', positive=True)\namount_with_discount = amount * (1 - discount / 100)\namount_with_interest = amount_with_discount * (1 + interest_rate / 100)\nsolution = solve_it(amount_with_interest - amount, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["amount = 20000\ndiscount = 4\ndiscount_period = 30\ninterest_rate = Symbol('interest_rate', positive=True)\namount_with_discount = amount * (1 - discount / 100)\namount_with_interest = amount_with_discount * (1 + interest_rate / 100)\nsolution = solve_it(amount_with_interest - amount, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 188, "answer": "D", "completion": "answer = factorial(10) / (factorial(5) * factorial(5))\n\n", "completions": ["answer = factorial(10) / (factorial(5) * factorial(5))\n\n"]}
{"id": 189, "answer": "D", "completion": "rice = 3\nwheat = 2 * rice / 3\ncorn = 5 * rice / 3\nanswer = corn\n\n", "completions": ["rice = 3\nwheat = 2 * rice / 3\ncorn = 5 * rice / 3\nanswer = corn\n\n"]}
{"id": 190, "answer": "D", "completion": "soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]\n\n", "completions": ["soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]\n\n"]}
{"id": 191, "answer": "D", "completion": "cost_per_pen = Symbol('cost_per_pen', positive=True)\nprofit_per_pen = 0.25 * cost_per_pen\ntotal_cost = cost_per_pen * (1 - 0.1) * 7200\ntotal_profit = profit_per_pen * (1 - 0.1) * 7200\nsolution = solve_it(total_cost + total_profit - 7200 * 10, cost_per_pen)\nanswer = solution[cost_per_pen]\n\n", "completions": ["cost_per_pen = Symbol('cost_per_pen', positive=True)\nprofit_per_pen = 0.25 * cost_per_pen\ntotal_cost = cost_per_pen * (1 - 0.1) * 7200\ntotal_profit = profit_per_pen * (1 - 0.1) * 7200\nsolution = solve_it(total_cost + total_profit - 7200 * 10, cost_per_pen)\nanswer = solution[cost_per_pen]\n\n"]}
{"id": 192, "answer": "C", "completion": "number = Symbol('number', positive=True)\nunit_digit = Symbol('unit_digit', positive=True)\nten_digit = Symbol('ten_digit', positive=True)\nsolution = solve_it([number - (unit_digit + ten_digit) - 18, unit_digit - 2 * ten_digit], [number, unit_digit, ten_digit])\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nunit_digit = Symbol('unit_digit', positive=True)\nten_digit = Symbol('ten_digit', positive=True)\nsolution = solve_it([number - (unit_digit + ten_digit) - 18, unit_digit - 2 * ten_digit], [number, unit_digit, ten_digit])\nanswer = solution[number]\n\n"]}
{"id": 193, "answer": "E", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(x) + 2 * floor(y)\nsolution = solve_it(L - R, [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(x) + 2 * floor(y)\nsolution = solve_it(L - R, [x, y])\nanswer = solution[x]\n\n"]}
{"id": 194, "answer": "E", "completion": "bell_1_interval = 36\nbell_2_interval = 40\nbell_3_interval = 48\nanswer = lcm(bell_1_interval, bell_2_interval, bell_3_interval)\n\n", "completions": ["bell_1_interval = 36\nbell_2_interval = 40\nbell_3_interval = 48\nanswer = lcm(bell_1_interval, bell_2_interval, bell_3_interval)\n\n"]}
{"id": 195, "answer": "A", "completion": "pole_height = 14\npole_shadow = 10\ntree_shadow = 15\ntree_height = pole_height * tree_shadow / pole_shadow\nanswer = tree_height\n\n", "completions": ["pole_height = 14\npole_shadow = 10\ntree_shadow = 15\ntree_height = pole_height * tree_shadow / pole_shadow\nanswer = tree_height\n\n"]}
{"id": 196, "answer": "C", "completion": "orange = 18\npineapple = 27\ngrape = 15\nmango = (orange + pineapple + grape) / 3\nanswer = mango\n\n", "completions": ["orange = 18\npineapple = 27\ngrape = 15\nmango = (orange + pineapple + grape) / 3\nanswer = mango\n\n"]}
{"id": 197, "answer": "A", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\narea = (a * y - b * y) / 2\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\narea = (a * y - b * y) / 2\n\n"]}
{"id": 198, "answer": "C", "completion": "distance = Symbol('distance', positive=True)\noriginal_speed = 60\noriginal_time = 20\nnew_time = 10\nnew_speed = distance / new_time\nsolution = solve_it(new_speed - original_speed - distance / original_time, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\noriginal_speed = 60\noriginal_time = 20\nnew_time = 10\nnew_speed = distance / new_time\nsolution = solve_it(new_speed - original_speed - distance / original_time, distance)\nanswer = solution[distance]\n\n"]}
{"id": 199, "answer": "A", "completion": "prob_alan_correct = 1 / 5\nprob_roger_correct = 2 / 3\nprob_peter_correct = 5 / 6\nprob_alan_correct_and_not_cheating = prob_alan_correct\nprob_roger_correct_and_not_cheating = 0\nprob_peter_correct_and_not_cheating = prob_peter_correct\nprob_correct_and_not_cheating = prob_alan_correct_and_not_cheating + prob_roger_correct_and_not_cheating + prob_peter_correct_and_not_cheating\nanswer = prob_correct_and_not_cheating\n\n", "completions": ["prob_alan_correct = 1 / 5\nprob_roger_correct = 2 / 3\nprob_peter_correct = 5 / 6\nprob_alan_correct_and_not_cheating = prob_alan_correct\nprob_roger_correct_and_not_cheating = 0\nprob_peter_correct_and_not_cheating = prob_peter_correct\nprob_correct_and_not_cheating = prob_alan_correct_and_not_cheating + prob_roger_correct_and_not_cheating + prob_peter_correct_and_not_cheating\nanswer = prob_correct_and_not_cheating\n\n"]}
{"id": 200, "answer": "B", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 201, "answer": "A", "completion": "num_files_infected_by_virus = Symbol('num_files_infected_by_virus', positive=True)\nnum_files_infected_by_worm = Symbol('num_files_infected_by_worm', positive=True)\nnum_files_infected_by_both = Symbol('num_files_infected_by_both', positive=True)\nnum_files_not_infected_by_virus = 0.5 * 250\nnum_files_not_infected_by_worm = 250 - num_files_infected_by_worm\nsolution = solve_it([num_files_infected_by_worm - 2.5 * num_files_infected_by_both, num_files_infected_by_virus + num_files_infected_by_worm + num_files_infected_by_both - 250, num_files_infected_by_virus - num_files_not_infected_by_virus], [num_files_infected_by_virus, num_files_infected_by_worm, num_files_infected_by_both])\nanswer = solution[num_files_not_infected_by_worm]\n\n", "completions": ["num_files_infected_by_virus = Symbol('num_files_infected_by_virus', positive=True)\nnum_files_infected_by_worm = Symbol('num_files_infected_by_worm', positive=True)\nnum_files_infected_by_both = Symbol('num_files_infected_by_both', positive=True)\nnum_files_not_infected_by_virus = 0.5 * 250\nnum_files_not_infected_by_worm = 250 - num_files_infected_by_worm\nsolution = solve_it([num_files_infected_by_worm - 2.5 * num_files_infected_by_both, num_files_infected_by_virus + num_files_infected_by_worm + num_files_infected_by_both - 250, num_files_infected_by_virus - num_files_not_infected_by_virus], [num_files_infected_by_virus, num_files_infected_by_worm, num_files_infected_by_both])\nanswer = solution[num_files_not_infected_by_worm]\n\n"]}
{"id": 202, "answer": "B", "completion": "mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\nmohan_age = 23\nsohan_age = 24\ninterest_rate = 4\nsolution = solve_it([mohan_share * (1 + interest_rate / 100) ** (26 - mohan_age) - sohan_share * (1 + interest_rate / 100) ** (26 - sohan_age), mohan_share + sohan_share - 5100], [mohan_share, sohan_share])\nanswer = solution[mohan_share]\n\n", "completions": ["mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\nmohan_age = 23\nsohan_age = 24\ninterest_rate = 4\nsolution = solve_it([mohan_share * (1 + interest_rate / 100) ** (26 - mohan_age) - sohan_share * (1 + interest_rate / 100) ** (26 - sohan_age), mohan_share + sohan_share - 5100], [mohan_share, sohan_share])\nanswer = solution[mohan_share]\n\n"]}
{"id": 203, "answer": "C", "completion": "answer = 0.6 * 0.3 * 1400\n\n", "completions": ["answer = 0.6 * 0.3 * 1400\n\n"]}
{"id": 204, "answer": "C", "completion": "w = Symbol('w', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\ntime_to_pass_y_gallons = y / (w / 25 * x)\nanswer = time_to_pass_y_gallons / 60\n\n", "completions": ["w = Symbol('w', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\ntime_to_pass_y_gallons = y / (w / 25 * x)\nanswer = time_to_pass_y_gallons / 60\n\n"]}
{"id": 205, "answer": "E", "completion": "aluminum_weight = Symbol('aluminum_weight', positive=True)\nsilver_weight = Symbol('silver_weight', positive=True)\naluminum_volume = Symbol('aluminum_volume', positive=True)\nsilver_volume = Symbol('silver_volume', positive=True)\ncoin_weight = 30\nsolution = solve_it([aluminum_weight + silver_weight - coin_weight, aluminum_volume - silver_volume, aluminum_weight - 2 * silver_weight], [aluminum_weight, silver_weight, aluminum_volume])\nanswer = solution[aluminum_weight] * (30 / 15) ** 2\n\n", "completions": ["aluminum_weight = Symbol('aluminum_weight', positive=True)\nsilver_weight = Symbol('silver_weight', positive=True)\naluminum_volume = Symbol('aluminum_volume', positive=True)\nsilver_volume = Symbol('silver_volume', positive=True)\ncoin_weight = 30\nsolution = solve_it([aluminum_weight + silver_weight - coin_weight, aluminum_volume - silver_volume, aluminum_weight - 2 * silver_weight], [aluminum_weight, silver_weight, aluminum_volume])\nanswer = solution[aluminum_weight] * (30 / 15) ** 2\n\n"]}
{"id": 206, "answer": "C", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(2 / 3 * number - 10 - 40 - 1 / 3 * number, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(2 / 3 * number - 10 - 40 - 1 / 3 * number, number)\nanswer = solution[number]\n\n"]}
{"id": 207, "answer": "B", "completion": "k = Symbol('k', positive=True)\nsolution = solve_it(k - (5 ** 2 - 4 * 1 * k), k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k', positive=True)\nsolution = solve_it(k - (5 ** 2 - 4 * 1 * k), k)\nanswer = solution[k]\n\n"]}
{"id": 208, "answer": "E", "completion": "answer = 900 + 5 * 12\n\n", "completions": ["answer = 900 + 5 * 12\n\n"]}
{"id": 209, "answer": "C", "completion": "distance = 100\nrest_time = 10 / 60\nrest_distance = 15\ntotal_time = distance / (rest_distance / (rest_distance / 10 + rest_time))\nanswer = total_time\n\n", "completions": ["distance = 100\nrest_time = 10 / 60\nrest_distance = 15\ntotal_time = distance / (rest_distance / (rest_distance / 10 + rest_time))\nanswer = total_time\n\n"]}
{"id": 210, "answer": "None", "completion": "train_speed = Symbol('train_speed', positive=True)\ncar_speed = Symbol('car_speed', positive=True)\ntrain_time = 17\ncar_time = train_time - 4\nsolution = solve_it([train_speed - car_speed, train_time - car_time], [train_speed, car_speed])\nanswer = solution[car_speed]\n\n", "completions": ["train_speed = Symbol('train_speed', positive=True)\ncar_speed = Symbol('car_speed', positive=True)\ntrain_time = 17\ncar_time = train_time - 4\nsolution = solve_it([train_speed - car_speed, train_time - car_time], [train_speed, car_speed])\nanswer = solution[car_speed]\n\n"]}
{"id": 211, "answer": "A", "completion": "food_left_at_noon = 1 / 3 ** 4\nanswer = food_left_at_noon * 100\n\n", "completions": ["food_left_at_noon = 1 / 3 ** 4\nanswer = food_left_at_noon * 100\n\n"]}
{"id": 212, "answer": "B", "completion": "num_people = Symbol('num_people', positive=True)\nnum_women = 0.6 * num_people\nnum_men = num_people - num_women\nnum_men_liking_red_cars = 0.75 * num_men\nnum_men_liking_green_cars = 10\nnum_men_liking_red_cars_more = num_men_liking_red_cars - num_men_liking_green_cars\nsolution = solve_it(num_men_liking_red_cars_more, num_people)\nanswer = solution[num_people]\n\n", "completions": ["num_people = Symbol('num_people', positive=True)\nnum_women = 0.6 * num_people\nnum_men = num_people - num_women\nnum_men_liking_red_cars = 0.75 * num_men\nnum_men_liking_green_cars = 10\nnum_men_liking_red_cars_more = num_men_liking_red_cars - num_men_liking_green_cars\nsolution = solve_it(num_men_liking_red_cars_more, num_people)\nanswer = solution[num_people]\n\n"]}
{"id": 213, "answer": "B", "completion": "num_steps = 10\nanswer = fibonacci(num_steps + 1)\n\n", "completions": ["num_steps = 10\nanswer = fibonacci(num_steps + 1)\n\n"]}
{"id": 214, "answer": "B", "completion": "orange_juice_percentage = Symbol('orange_juice_percentage', positive=True)\nwater_percentage = Symbol('water_percentage', positive=True)\norange_juice_percentage_after_mixing = 60\nsolution = solve_it(orange_juice_percentage + orange_juice_percentage_after_mixing - 100, orange_juice_percentage)\nanswer = solution[orange_juice_percentage]\n\n", "completions": ["orange_juice_percentage = Symbol('orange_juice_percentage', positive=True)\nwater_percentage = Symbol('water_percentage', positive=True)\norange_juice_percentage_after_mixing = 60\nsolution = solve_it(orange_juice_percentage + orange_juice_percentage_after_mixing - 100, orange_juice_percentage)\nanswer = solution[orange_juice_percentage]\n\n"]}
{"id": 215, "answer": "D", "completion": "answer = (9 ** 3 - 7) % 10\n\n", "completions": ["answer = (9 ** 3 - 7) % 10\n\n"]}
{"id": 216, "answer": "D", "completion": "answer = 2 / 5\n\n", "completions": ["answer = 2 / 5\n\n"]}
{"id": 217, "answer": "A", "completion": "N = Symbol('N')\nsolution = solve_it([2272 % N, 875 % N], N)\nanswer = sum(map(int, str(solution[N])))\n\n", "completions": ["N = Symbol('N')\nsolution = solve_it([2272 % N, 875 % N], N)\nanswer = sum(map(int, str(solution[N])))\n\n"]}
{"id": 218, "answer": "E", "completion": "passing_students = Symbol('passing_students', positive=True)\nfailing_students = Symbol('failing_students', positive=True)\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passing_students * passing_average + failing_students * failing_average - overall_average * (passing_students + failing_students), passing_students + failing_students - 100], [passing_students, failing_students])\nanswer = solution[passing_students]\n\n", "completions": ["passing_students = Symbol('passing_students', positive=True)\nfailing_students = Symbol('failing_students', positive=True)\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passing_students * passing_average + failing_students * failing_average - overall_average * (passing_students + failing_students), passing_students + failing_students - 100], [passing_students, failing_students])\nanswer = solution[passing_students]\n\n"]}
{"id": 219, "answer": "None", "completion": "wage_on_8th_day = Symbol('wage_on_8th_day', positive=True)\ntotal_wages = 90 * 15\nwages_in_first_7_days = 87 * 7\nwages_in_last_7_days = 92 * 7\nsolution = solve_it([total_wages - wages_in_first_7_days - wages_in_last_7_days - wage_on_8th_day, wages_in_first_7_days + wage_on_8th_day - wages_in_last_7_days], [wage_on_8th_day])\nanswer = solution[wage_on_8th_day]\n\n", "completions": ["wage_on_8th_day = Symbol('wage_on_8th_day', positive=True)\ntotal_wages = 90 * 15\nwages_in_first_7_days = 87 * 7\nwages_in_last_7_days = 92 * 7\nsolution = solve_it([total_wages - wages_in_first_7_days - wages_in_last_7_days - wage_on_8th_day, wages_in_first_7_days + wage_on_8th_day - wages_in_last_7_days], [wage_on_8th_day])\nanswer = solution[wage_on_8th_day]\n\n"]}
{"id": 220, "answer": "D", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * (x - 9) - 23 * (y - 9)], [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * (x - 9) - 23 * (y - 9)], [x, y])\nanswer = solution[x]\n\n"]}
{"id": 221, "answer": "D", "completion": "ajay_age = Symbol('ajay_age', positive=True)\nsolution = solve_it((ajay_age - 6) / 18 - (ajay_age - 2 * 5), ajay_age)\nanswer = solution[ajay_age]\n\n", "completions": ["ajay_age = Symbol('ajay_age', positive=True)\nsolution = solve_it((ajay_age - 6) / 18 - (ajay_age - 2 * 5), ajay_age)\nanswer = solution[ajay_age]\n\n"]}
{"id": 222, "answer": "D", "completion": "answer = 4 * 3 * 2 * 1\n\n", "completions": ["answer = 4 * 3 * 2 * 1\n\n"]}
{"id": 223, "answer": "E", "completion": "discount_1 = 0.2\ndiscount_2 = 0.2\ntotal_discount = discount_1 + discount_2 * (1 - discount_1)\nanswer = total_discount\n\n", "completions": ["discount_1 = 0.2\ndiscount_2 = 0.2\ntotal_discount = discount_1 + discount_2 * (1 - discount_1)\nanswer = total_discount\n\n"]}
{"id": 224, "answer": "E", "completion": "width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nunpainted_side = 9\npainted_sides = 37\nsolution = solve_it([width + height - unpainted_side, 2 * (width + height) - painted_sides], [width, height])\nanswer = solution[width] * solution[height]\n\n", "completions": ["width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\nunpainted_side = 9\npainted_sides = 37\nsolution = solve_it([width + height - unpainted_side, 2 * (width + height) - painted_sides], [width, height])\nanswer = solution[width] * solution[height]\n\n"]}
{"id": 225, "answer": "C", "completion": "answer = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1\n\n", "completions": ["answer = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1\n\n"]}
{"id": 226, "answer": "A", "completion": "weight_of_new_man = Symbol('weight_of_new_man', positive=True)\nweight_of_old_man = 53\ntotal_weight_of_old_crew = 10 * weight_of_old_man\ntotal_weight_of_new_crew = total_weight_of_old_crew + weight_of_new_man - weight_of_old_man\nsolution = solve_it(total_weight_of_new_crew / 10 - total_weight_of_old_crew / 10 - 1.8, weight_of_new_man)\nanswer = solution[weight_of_new_man]\n\n", "completions": ["weight_of_new_man = Symbol('weight_of_new_man', positive=True)\nweight_of_old_man = 53\ntotal_weight_of_old_crew = 10 * weight_of_old_man\ntotal_weight_of_new_crew = total_weight_of_old_crew + weight_of_new_man - weight_of_old_man\nsolution = solve_it(total_weight_of_new_crew / 10 - total_weight_of_old_crew / 10 - 1.8, weight_of_new_man)\nanswer = solution[weight_of_new_man]\n\n"]}
{"id": 227, "answer": "B", "completion": "n = Symbol('n', positive=True)\nanswer = solve_it(n * (n - 1) - 45, n)[n]\n\n", "completions": ["n = Symbol('n', positive=True)\nanswer = solve_it(n * (n - 1) - 45, n)[n]\n\n"]}
{"id": 228, "answer": "None", "completion": "Q = Symbol('Q', positive=True)\nfactors = Symbol('factors', positive=True)\nsolution = solve_it(factors - 5, Q)\nanswer = solution[Q]\n\n", "completions": ["Q = Symbol('Q', positive=True)\nfactors = Symbol('factors', positive=True)\nsolution = solve_it(factors - 5, Q)\nanswer = solution[Q]\n\n"]}
{"id": 229, "answer": "A", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]\n\n"]}
{"id": 230, "answer": "B", "completion": "num_dvds = Symbol('num_dvds', positive=True)\ncost_without_membership = 4 * num_dvds\ncost_with_membership = 2 * num_dvds + 7\nsolution = solve_it(cost_without_membership - cost_with_membership, num_dvds)\nanswer = solution[num_dvds]\n\n", "completions": ["num_dvds = Symbol('num_dvds', positive=True)\ncost_without_membership = 4 * num_dvds\ncost_with_membership = 2 * num_dvds + 7\nsolution = solve_it(cost_without_membership - cost_with_membership, num_dvds)\nanswer = solution[num_dvds]\n\n"]}
{"id": 231, "answer": "C", "completion": "weight_in_pounds = 7 + 4 / 16\nweight_in_ounces = weight_in_pounds * 16\nanswer = weight_in_ounces\n\n", "completions": ["weight_in_pounds = 7 + 4 / 16\nweight_in_ounces = weight_in_pounds * 16\nanswer = weight_in_ounces\n\n"]}
{"id": 232, "answer": "D", "completion": "jack_speed = 1 / 12\njill_speed = 0.05 * jack_speed\njill_time = 1 / jill_speed\nanswer = jill_time\n\n", "completions": ["jack_speed = 1 / 12\njill_speed = 0.05 * jack_speed\njill_time = 1 / jill_speed\nanswer = jill_time\n\n"]}
{"id": 233, "answer": "A", "completion": "amount = 5000\ninterest_rate = Symbol('interest_rate', positive=True)\ninterest = amount * 3 * interest_rate / 100\nsolution = solve_it(interest - 300, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["amount = 5000\ninterest_rate = Symbol('interest_rate', positive=True)\ninterest = amount * 3 * interest_rate / 100\nsolution = solve_it(interest - 300, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 234, "answer": "B", "completion": "discount = 0.2\nactual_price = 4578 / (1 - discount)\nanswer = actual_price\n\n", "completions": ["discount = 0.2\nactual_price = 4578 / (1 - discount)\nanswer = actual_price\n\n"]}
{"id": 235, "answer": "A", "completion": "A = Symbol('A')\nB = Symbol('B')\ncost_of_27_bottles = A / 100\ncost_of_B_bottles = cost_of_27_bottles * B / 27\nanswer = cost_of_B_bottles\n\n", "completions": ["A = Symbol('A')\nB = Symbol('B')\ncost_of_27_bottles = A / 100\ncost_of_B_bottles = cost_of_27_bottles * B / 27\nanswer = cost_of_B_bottles\n\n"]}
{"id": 236, "answer": "A", "completion": "from itertools import combinations\noptions = [50, 100, 200]\nanswer = 0\nfor option in combinations(options, 3):\n    if sum(option) > 400:\n        answer += 1\n\n", "completions": ["from itertools import combinations\noptions = [50, 100, 200]\nanswer = 0\nfor option in combinations(options, 3):\n    if sum(option) > 400:\n        answer += 1\n\n"]}
{"id": 237, "answer": "A", "completion": "num_men = 4\nnum_women = 4\nnum_presenters = 4\nanswer = factorial(num_men) * factorial(num_women) / factorial(num_men - num_presenters) / factorial(num_women - num_presenters)\n\n", "completions": ["num_men = 4\nnum_women = 4\nnum_presenters = 4\nanswer = factorial(num_men) * factorial(num_women) / factorial(num_men - num_presenters) / factorial(num_women - num_presenters)\n\n"]}
{"id": 238, "answer": "A", "completion": "num_boys = 100\nnum_girls = num_boys * 2 / 5\nanswer = num_girls\n\n", "completions": ["num_boys = 100\nnum_girls = num_boys * 2 / 5\nanswer = num_girls\n\n"]}
{"id": 239, "answer": "C", "completion": "# Answer: https://www.quora.com/What-is-the-probability-that-a-random-number-between-1-and-1000-is-relatively-prime-to-1000\nanswer = 2 / 5\n\n", "completions": ["# Answer: https://www.quora.com/What-is-the-probability-that-a-random-number-between-1-and-1000-is-relatively-prime-to-1000\nanswer = 2 / 5\n\n"]}
{"id": 240, "answer": "A", "completion": "amount = Symbol('amount', positive=True)\ninterest_rate = 8\ninterest = amount * interest_rate / 100\ninterest_after_6_months = interest / 2\ninterest_after_1_year = interest_after_6_months + interest_after_6_months\nsolution = solve_it(amount + interest_after_1_year - 54080, amount)\nanswer = solution[amount]\n\n", "completions": ["amount = Symbol('amount', positive=True)\ninterest_rate = 8\ninterest = amount * interest_rate / 100\ninterest_after_6_months = interest / 2\ninterest_after_1_year = interest_after_6_months + interest_after_6_months\nsolution = solve_it(amount + interest_after_1_year - 54080, amount)\nanswer = solution[amount]\n\n"]}
{"id": 241, "answer": "C", "completion": "father_age = Symbol('father_age', positive=True)\nsister_age = Symbol('sister_age', positive=True)\njoe_age = Symbol('joe_age', positive=True)\nsolution = solve_it([father_age + sister_age + joe_age - 100, sister_age + father_age - 2 * joe_age, sister_age + father_age - 2 * joe_age], [father_age, sister_age, joe_age])\nanswer = solution[father_age]\n\n", "completions": ["father_age = Symbol('father_age', positive=True)\nsister_age = Symbol('sister_age', positive=True)\njoe_age = Symbol('joe_age', positive=True)\nsolution = solve_it([father_age + sister_age + joe_age - 100, sister_age + father_age - 2 * joe_age, sister_age + father_age - 2 * joe_age], [father_age, sister_age, joe_age])\nanswer = solution[father_age]\n\n"]}
{"id": 242, "answer": "B", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number / 3 - 21, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number / 3 - 21, number)\nanswer = solution[number]\n\n"]}
{"id": 243, "answer": "E", "completion": "m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = m / x * 100\n\n", "completions": ["m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = m / x * 100\n\n"]}
{"id": 244, "answer": "C", "completion": "answer = 6 * 8\n\n", "completions": ["answer = 6 * 8\n\n"]}
{"id": 245, "answer": "B", "completion": "answer = binomial_probability(5, 0.9, 4)\n\n", "completions": ["answer = binomial_probability(5, 0.9, 4)\n\n"]}
{"id": 246, "answer": "C", "completion": "width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\narea = 240\nunfenced_side = 10\nsolution = solve_it([width * height - area, width - unfenced_side], [width, height])\nanswer = 2 * (solution[width] + solution[height])\n\n", "completions": ["width = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\narea = 240\nunfenced_side = 10\nsolution = solve_it([width * height - area, width - unfenced_side], [width, height])\nanswer = 2 * (solution[width] + solution[height])\n\n"]}
{"id": 247, "answer": "B", "completion": "num_vowels = 5\nnum_consonants = 20\nnum_codes = num_vowels * num_consonants * num_consonants\nanswer = num_codes\n\n", "completions": ["num_vowels = 5\nnum_consonants = 20\nnum_codes = num_vowels * num_consonants * num_consonants\nanswer = num_codes\n\n"]}
{"id": 248, "answer": "A", "completion": "x = Symbol('x', integer=True)\nsolution = solve_it(x * (x + 1) * (x + 2) - 727 - 728 - 729, x)\nanswer = solution[x] + 1 + 2\n\n", "completions": ["x = Symbol('x', integer=True)\nsolution = solve_it(x * (x + 1) * (x + 2) - 727 - 728 - 729, x)\nanswer = solution[x] + 1 + 2\n\n"]}
{"id": 249, "answer": "A", "completion": "width = 8\nheight = 6\ndepth = 2.5\ncapacity = width * height * depth\nanswer = capacity\n\n", "completions": ["width = 8\nheight = 6\ndepth = 2.5\ncapacity = width * height * depth\nanswer = capacity\n\n"]}
{"id": 250, "answer": "E", "completion": "population = 5265526\nadults = 4169516\nchildren = population - adults\nanswer = children\n\n", "completions": ["population = 5265526\nadults = 4169516\nchildren = population - adults\nanswer = children\n\n"]}
{"id": 251, "answer": "D", "completion": "distance = Symbol('distance', positive=True)\ntime_by_car = 9\nspeed_by_car = 20\nspeed_by_cycle = 6\ntime_by_cycle = distance / speed_by_cycle\nsolution = solve_it(time_by_cycle - time_by_car * speed_by_car / speed_by_cycle, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ntime_by_car = 9\nspeed_by_car = 20\nspeed_by_cycle = 6\ntime_by_cycle = distance / speed_by_cycle\nsolution = solve_it(time_by_cycle - time_by_car * speed_by_car / speed_by_cycle, distance)\nanswer = solution[distance]\n\n"]}
{"id": 252, "answer": "A", "completion": "P = Symbol('P', positive=True)\nQ = Symbol('Q', positive=True)\nsolution = solve_it(P + Q - 10, P - Q - 5)\nanswer = solution[P]\n\n", "completions": ["P = Symbol('P', positive=True)\nQ = Symbol('Q', positive=True)\nsolution = solve_it(P + Q - 10, P - Q - 5)\nanswer = solution[P]\n\n"]}
{"id": 253, "answer": "A", "completion": "profit_percentage = 20\nnum_bags = 500\nprofit_per_bag = 1.25 * profit_percentage / 100\ntotal_profit = num_bags * profit_per_bag\nanswer = total_profit\n\n", "completions": ["profit_percentage = 20\nnum_bags = 500\nprofit_per_bag = 1.25 * profit_percentage / 100\ntotal_profit = num_bags * profit_per_bag\nanswer = total_profit\n\n"]}
