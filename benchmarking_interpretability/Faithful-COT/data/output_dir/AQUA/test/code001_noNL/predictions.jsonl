{"id": 0, "answer": "B", "completion": "time = Symbol('time', positive=True)\nangle = 45 + (60 - 45) / 10\nheight = Symbol('height', positive=True)\nsolution = solve_it([height / time - angle, height - Symbol('tower_height', positive=True)], [time, height])\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nangle = 45 + (60 - 45) / 10\nheight = Symbol('height', positive=True)\nsolution = solve_it([height / time - angle, height - Symbol('tower_height', positive=True)], [time, height])\nanswer = solution[time]\n\n"]}
{"id": 1, "answer": "B", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount = Symbol('discount', positive=True)\ncoupon_discount = Symbol('coupon_discount', positive=True)\ntax = Symbol('tax', positive=True)\nsolution = solve_it([discounted_price - original_price * (1 - discount / 100), discounted_price - coupon_discount - original_price * (1 - tax / 100)], [original_price, discount])\nanswer = solution[original_price]\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount = Symbol('discount', positive=True)\ncoupon_discount = Symbol('coupon_discount', positive=True)\ntax = Symbol('tax', positive=True)\nsolution = solve_it([discounted_price - original_price * (1 - discount / 100), discounted_price - coupon_discount - original_price * (1 - tax / 100)], [original_price, discount])\nanswer = solution[original_price]\n\n"]}
{"id": 2, "answer": "A", "completion": "options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break\n\n", "completions": ["options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break\n\n"]}
{"id": 3, "answer": "C", "completion": "stock_a = Symbol('stock_a', positive=True)\nstock_b = Symbol('stock_b', positive=True)\nsolution = solve_it([stock_a + stock_b - 1, stock_a * stock_b - 0.56, stock_a * stock_b - 0.74], [stock_a, stock_b])\nanswer = solution[stock_a]\n\n", "completions": ["stock_a = Symbol('stock_a', positive=True)\nstock_b = Symbol('stock_b', positive=True)\nsolution = solve_it([stock_a + stock_b - 1, stock_a * stock_b - 0.56, stock_a * stock_b - 0.74], [stock_a, stock_b])\nanswer = solution[stock_a]\n\n"]}
{"id": 4, "answer": "A", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = selling_price - cost_price\npercentage_profit = profit / cost_price\nsolution = solve_it(percentage_profit - 20, cost_price)\nanswer = solution[cost_price]\n\n", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = selling_price - cost_price\npercentage_profit = profit / cost_price\nsolution = solve_it(percentage_profit - 20, cost_price)\nanswer = solution[cost_price]\n\n"]}
{"id": 5, "answer": "A", "completion": "total_marbles = Symbol('total_marbles', positive=True)\nblack_marbles_first_time = 20\nblack_marbles_second_time = 1\nwhite_marbles_second_time = total_marbles - black_marbles_second_time\nwhite_marbles_first_time = total_marbles - black_marbles_first_time\nsolution = solve_it([white_marbles_first_time + black_marbles_first_time - total_marbles, white_marbles_second_time + black_marbles_second_time - total_marbles], [total_marbles])\nanswer = solution[total_marbles]\n\n", "completions": ["total_marbles = Symbol('total_marbles', positive=True)\nblack_marbles_first_time = 20\nblack_marbles_second_time = 1\nwhite_marbles_second_time = total_marbles - black_marbles_second_time\nwhite_marbles_first_time = total_marbles - black_marbles_first_time\nsolution = solve_it([white_marbles_first_time + black_marbles_first_time - total_marbles, white_marbles_second_time + black_marbles_second_time - total_marbles], [total_marbles])\nanswer = solution[total_marbles]\n\n"]}
{"id": 6, "answer": "D", "completion": "letters = Symbol('letters', positive=True)\ndigits = Symbol('digits', positive=True)\nsolution = solve_it([letters + digits - 74453, letters - 2, digits - 2], [letters, digits])\nanswer = (solution[letters], solution[digits])\n\n", "completions": ["letters = Symbol('letters', positive=True)\ndigits = Symbol('digits', positive=True)\nsolution = solve_it([letters + digits - 74453, letters - 2, digits - 2], [letters, digits])\nanswer = (solution[letters], solution[digits])\n\n"]}
{"id": 7, "answer": "B", "completion": "train_speed = 100\ntrain_speed_after_rain = 75\ndistance = 100\nquarter_distance = distance / 4\ntime_to_reach_quarter_distance = quarter_distance / train_speed\ntime_to_reach_destination = 10\ntotal_time = time_to_reach_quarter_distance + time_to_reach_destination\nanswer = total_time\n\n", "completions": ["train_speed = 100\ntrain_speed_after_rain = 75\ndistance = 100\nquarter_distance = distance / 4\ntime_to_reach_quarter_distance = quarter_distance / train_speed\ntime_to_reach_destination = 10\ntotal_time = time_to_reach_quarter_distance + time_to_reach_destination\nanswer = total_time\n\n"]}
{"id": 8, "answer": "C", "completion": "num_students = 200\nattended_prom_night = Symbol('attended_prom_night', positive=True)\nattended_debate_session = Symbol('attended_debate_session', positive=True)\nsolution = solve_it([attended_prom_night + attended_debate_session - num_students, attended_prom_night - 0.45 * num_students, attended_debate_session - 0.35 * num_students], [attended_prom_night, attended_debate_session])\nanswer = solution[attended_prom_night]\n\n", "completions": ["num_students = 200\nattended_prom_night = Symbol('attended_prom_night', positive=True)\nattended_debate_session = Symbol('attended_debate_session', positive=True)\nsolution = solve_it([attended_prom_night + attended_debate_session - num_students, attended_prom_night - 0.45 * num_students, attended_debate_session - 0.35 * num_students], [attended_prom_night, attended_debate_session])\nanswer = solution[attended_prom_night]\n\n"]}
{"id": 9, "answer": "C", "completion": "commission = Symbol('commission', positive=True)\nsales_person_salary = Symbol('sales_person_salary', positive=True)\nsales_person_salary_with_commission = sales_person_salary + commission / 100 * sales_person_salary\nsales_person_salary_with_commission_1000 = sales_person_salary_with_commission - 1000\nsales_person_salary_with_commission_1000_250 = sales_person_salary_with_commission_1000 - 250\nsales_person_salary_with_commission_1000_250_15 = sales_person_salary_with_commission_1000_250 - 15\nsolution = solve_it(sales_person_salary_with_commission_1000_250_15, sales_person_salary)\nanswer = solution[sales_person_salary]\n\n", "completions": ["commission = Symbol('commission', positive=True)\nsales_person_salary = Symbol('sales_person_salary', positive=True)\nsales_person_salary_with_commission = sales_person_salary + commission / 100 * sales_person_salary\nsales_person_salary_with_commission_1000 = sales_person_salary_with_commission - 1000\nsales_person_salary_with_commission_1000_250 = sales_person_salary_with_commission_1000 - 250\nsales_person_salary_with_commission_1000_250_15 = sales_person_salary_with_commission_1000_250 - 15\nsolution = solve_it(sales_person_salary_with_commission_1000_250_15, sales_person_salary)\nanswer = solution[sales_person_salary]\n\n"]}
{"id": 10, "answer": "A", "completion": "production_cost = 110\nnum_components = 420\nyearly_profit = num_components * (production_cost * 12)\nselling_price = Symbol('selling_price', positive=True)\nsolution = solve_it(selling_price * num_components - yearly_profit - 640000, selling_price)\nanswer = solution[selling_price]\n\n", "completions": ["production_cost = 110\nnum_components = 420\nyearly_profit = num_components * (production_cost * 12)\nselling_price = Symbol('selling_price', positive=True)\nsolution = solve_it(selling_price * num_components - yearly_profit - 640000, selling_price)\nanswer = solution[selling_price]\n\n"]}
{"id": 11, "answer": "B", "completion": "defective_staplers = Symbol('defective_staplers', positive=True)\nnon_defective_staplers = Symbol('non_defective_staplers', positive=True)\nrejected_by_mistake = Symbol('rejected_by_mistake', positive=True)\nrejected_non_defective = Symbol('rejected_non_defective', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nsolution = solve_it([defective_staplers + non_defective_staplers - total_staplers, defective_staplers - 0.1 * total_staplers, non_defective_staplers - 0.98 * total_staplers, rejected_non_defective - 0.02 * non_defective_staplers, rejected_by_mistake - 0.72 * non_defective_staplers], [defective_staplers, non_defective_staplers, rejected_non_defective, rejected_by_mistake, total_staplers])\nanswer = solution[total_staplers]\n\n", "completions": ["defective_staplers = Symbol('defective_staplers', positive=True)\nnon_defective_staplers = Symbol('non_defective_staplers', positive=True)\nrejected_by_mistake = Symbol('rejected_by_mistake', positive=True)\nrejected_non_defective = Symbol('rejected_non_defective', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nsolution = solve_it([defective_staplers + non_defective_staplers - total_staplers, defective_staplers - 0.1 * total_staplers, non_defective_staplers - 0.98 * total_staplers, rejected_non_defective - 0.02 * non_defective_staplers, rejected_by_mistake - 0.72 * non_defective_staplers], [defective_staplers, non_defective_staplers, rejected_non_defective, rejected_by_mistake, total_staplers])\nanswer = solution[total_staplers]\n\n"]}
{"id": 12, "answer": "A", "completion": "machine_a_time = 6\nmachine_b_time = 9\ntotal_time = 10 * (machine_a_time + machine_b_time)\nanswer = total_time / (machine_a_time + machine_b_time)\n\n", "completions": ["machine_a_time = 6\nmachine_b_time = 9\ntotal_time = 10 * (machine_a_time + machine_b_time)\nanswer = total_time / (machine_a_time + machine_b_time)\n\n"]}
{"id": 13, "answer": "D", "completion": "answer = 45 + (-30)\n\n", "completions": ["answer = 45 + (-30)\n\n"]}
{"id": 14, "answer": "[invalid]", "completion": "letters = ['P', 'R', 'O', 'B', 'L', 'E', 'C']\nwords = []\nfor word in permutations(letters):\n    if len(word) == 7:\n        words.append(word)\nanswer = len(words)\n\n", "completions": ["letters = ['P', 'R', 'O', 'B', 'L', 'E', 'C']\nwords = []\nfor word in permutations(letters):\n    if len(word) == 7:\n        words.append(word)\nanswer = len(words)\n\n"]}
{"id": 15, "answer": "A", "completion": "P_A = 0.2\nP_B = 0.8\nP_A_B = P_A / P_B\nanswer = P_A_B\n\n", "completions": ["P_A = 0.2\nP_B = 0.8\nP_A_B = P_A / P_B\nanswer = P_A_B\n\n"]}
{"id": 16, "answer": "A", "completion": "steps_per_minute = Symbol('steps_per_minute', positive=True)\nsteps_per_10_minutes = 20\nsteps_per_20_minutes = 10\nsteps_per_minute_to_bottom = steps_per_10_minutes / 10\nsteps_per_minute_to_top = steps_per_20_minutes / 20\nsolution = solve_it([steps_per_minute_to_bottom - steps_per_minute_to_top - steps_per_minute, steps_per_minute_to_bottom - steps_per_minute], [steps_per_minute])\nanswer = solution[steps_per_minute]\n\n", "completions": ["steps_per_minute = Symbol('steps_per_minute', positive=True)\nsteps_per_10_minutes = 20\nsteps_per_20_minutes = 10\nsteps_per_minute_to_bottom = steps_per_10_minutes / 10\nsteps_per_minute_to_top = steps_per_20_minutes / 20\nsolution = solve_it([steps_per_minute_to_bottom - steps_per_minute_to_top - steps_per_minute, steps_per_minute_to_bottom - steps_per_minute], [steps_per_minute])\nanswer = solution[steps_per_minute]\n\n"]}
{"id": 17, "answer": "D", "completion": "average_number_of_microwaves_sold = Symbol('average_number_of_microwaves_sold', positive=True)\nmonths = 22\nmonths_this_year = 10\nmonths_last_year = months - months_this_year\naverage_number_of_microwaves_sold_last_year = 42\naverage_number_of_microwaves_sold_this_year = 20\nsolution = solve_it([average_number_of_microwaves_sold * months - average_number_of_microwaves_sold_last_year * months_last_year - average_number_of_microwaves_sold_this_year * months_this_year, average_number_of_microwaves_sold * months - average_number_of_microwaves_sold_last_year * months_last_year - average_number_of_microwaves_sold_this_year * months_this_year], [average_number_of_microwaves_sold])\nanswer = solution[average_number_of_microwaves_sold]\n\n", "completions": ["average_number_of_microwaves_sold = Symbol('average_number_of_microwaves_sold', positive=True)\nmonths = 22\nmonths_this_year = 10\nmonths_last_year = months - months_this_year\naverage_number_of_microwaves_sold_last_year = 42\naverage_number_of_microwaves_sold_this_year = 20\nsolution = solve_it([average_number_of_microwaves_sold * months - average_number_of_microwaves_sold_last_year * months_last_year - average_number_of_microwaves_sold_this_year * months_this_year, average_number_of_microwaves_sold * months - average_number_of_microwaves_sold_last_year * months_last_year - average_number_of_microwaves_sold_this_year * months_this_year], [average_number_of_microwaves_sold])\nanswer = solution[average_number_of_microwaves_sold]\n\n"]}
{"id": 18, "answer": "D", "completion": "x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z')\naverage_score = Symbol('average_score')\nhighest_score = Symbol('highest_score')\nlowest_score = Symbol('lowest_score')\nsolution = solve_it([average_score - (y + 2 * x) / z, average_score - y / z, (x * z - y) / (z - 2), (y * z - 2 * x) / (z - 2), (y * z - x) / (z + 2)], [x, y, z])\nanswer = (solution[x], solution[y], solution[z])\n\n", "completions": ["x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z')\naverage_score = Symbol('average_score')\nhighest_score = Symbol('highest_score')\nlowest_score = Symbol('lowest_score')\nsolution = solve_it([average_score - (y + 2 * x) / z, average_score - y / z, (x * z - y) / (z - 2), (y * z - 2 * x) / (z - 2), (y * z - x) / (z + 2)], [x, y, z])\nanswer = (solution[x], solution[y], solution[z])\n\n"]}
{"id": 19, "answer": "[invalid]", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nd = Symbol('d', positive=True)\ne = Symbol('e', positive=True)\nsolution = solve_it([a * b - c * d - e, a * b - c * d - e * 19 - 15 - 7, a * b - c * d - e * 19 - 15 - 7 - 13 * 13 + 156], [a, b, c, d, e])\nanswer = solution[a]\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nd = Symbol('d', positive=True)\ne = Symbol('e', positive=True)\nsolution = solve_it([a * b - c * d - e, a * b - c * d - e * 19 - 15 - 7, a * b - c * d - e * 19 - 15 - 7 - 13 * 13 + 156], [a, b, c, d, e])\nanswer = solution[a]\n\n"]}
{"id": 20, "answer": "A", "completion": "bags = Symbol('bags', positive=True)\nprofit = Symbol('profit', positive=True)\nselling_price = 100\nprofit_percentage = 0.25\nsolution = solve_it([bags * profit - 3000, profit - selling_price * profit_percentage], [bags, profit])\nanswer = solution[bags]\n\n", "completions": ["bags = Symbol('bags', positive=True)\nprofit = Symbol('profit', positive=True)\nselling_price = 100\nprofit_percentage = 0.25\nsolution = solve_it([bags * profit - 3000, profit - selling_price * profit_percentage], [bags, profit])\nanswer = solution[bags]\n\n"]}
{"id": 21, "answer": "B", "completion": "num_toys_made_by_alex = 7 * 35\nnum_toys_made_by_jacob = 9 * 35\nnum_toys_made_by_alex_and_jacob = num_toys_made_by_alex + num_toys_made_by_jacob\nnum_toys_made_by_jacob_alone = num_toys_made_by_alex_and_jacob - num_toys_made_by_alex\nsolution = solve_it(num_toys_made_by_jacob_alone - 18, Jacob)\nanswer = solution[Jacob]\n\n", "completions": ["num_toys_made_by_alex = 7 * 35\nnum_toys_made_by_jacob = 9 * 35\nnum_toys_made_by_alex_and_jacob = num_toys_made_by_alex + num_toys_made_by_jacob\nnum_toys_made_by_jacob_alone = num_toys_made_by_alex_and_jacob - num_toys_made_by_alex\nsolution = solve_it(num_toys_made_by_jacob_alone - 18, Jacob)\nanswer = solution[Jacob]\n\n"]}
{"id": 22, "answer": "C", "completion": "strong_tea_concentration = Symbol('strong_tea_concentration', positive=True)\nstrong_tea_volume = Symbol('strong_tea_volume', positive=True)\nmilk_concentration = Symbol('milk_concentration', positive=True)\nmilk_volume = Symbol('milk_volume', positive=True)\ntea_volume = Symbol('tea_volume', positive=True)\nsolution = solve_it([strong_tea_concentration * strong_tea_volume - tea_volume * 0.5,\n                     strong_tea_concentration * strong_tea_volume - milk_concentration * milk_volume * 2,\n                     strong_tea_concentration * strong_tea_volume - milk_concentration * milk_volume * 2 - milk_concentration * milk_volume * 0.1],\n                    [strong_tea_concentration, milk_concentration, strong_tea_volume, milk_volume])\nanswer = solution[strong_tea_concentration]\n\n", "completions": ["strong_tea_concentration = Symbol('strong_tea_concentration', positive=True)\nstrong_tea_volume = Symbol('strong_tea_volume', positive=True)\nmilk_concentration = Symbol('milk_concentration', positive=True)\nmilk_volume = Symbol('milk_volume', positive=True)\ntea_volume = Symbol('tea_volume', positive=True)\nsolution = solve_it([strong_tea_concentration * strong_tea_volume - tea_volume * 0.5,\n                     strong_tea_concentration * strong_tea_volume - milk_concentration * milk_volume * 2,\n                     strong_tea_concentration * strong_tea_volume - milk_concentration * milk_volume * 2 - milk_concentration * milk_volume * 0.1],\n                    [strong_tea_concentration, milk_concentration, strong_tea_volume, milk_volume])\nanswer = solution[strong_tea_concentration]\n\n"]}
{"id": 23, "answer": "B", "completion": "students_math = Symbol('students_math', positive=True)\nstudents_bio = Symbol('students_bio', positive=True)\nstudents_english = Symbol('students_english', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([students_math + students_bio + students_english - total_students, students_math * students_bio * students_english - total_students], [students_math, students_bio, students_english, total_students])\nanswer = solution[total_students]\n\n", "completions": ["students_math = Symbol('students_math', positive=True)\nstudents_bio = Symbol('students_bio', positive=True)\nstudents_english = Symbol('students_english', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([students_math + students_bio + students_english - total_students, students_math * students_bio * students_english - total_students], [students_math, students_bio, students_english, total_students])\nanswer = solution[total_students]\n\n"]}
{"id": 24, "answer": "B", "completion": "speed = Symbol('speed', positive=True)\nwind_speed = Symbol('wind_speed', positive=True)\ntime = 21 / 60\nsolution = solve_it([speed - (speed - wind_speed) * time, speed - 15], [speed, wind_speed])\nanswer = solution[speed]\n\n", "completions": ["speed = Symbol('speed', positive=True)\nwind_speed = Symbol('wind_speed', positive=True)\ntime = 21 / 60\nsolution = solve_it([speed - (speed - wind_speed) * time, speed - 15], [speed, wind_speed])\nanswer = solution[speed]\n\n"]}
{"id": 25, "answer": "A", "completion": "price = Symbol('price', positive=True)\ncost = Symbol('cost', positive=True)\ngross_profit = price - cost\ngross_profit_percent = gross_profit / price\nsolution = solve_it(gross_profit_percent - 0.4, price)\nanswer = solution[price]\n\n", "completions": ["price = Symbol('price', positive=True)\ncost = Symbol('cost', positive=True)\ngross_profit = price - cost\ngross_profit_percent = gross_profit / price\nsolution = solve_it(gross_profit_percent - 0.4, price)\nanswer = solution[price]\n\n"]}
{"id": 26, "answer": "None", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 500\namount_with_simple_interest = amount * (1 + 4 * interest_rate / 100)\nsolution = solve_it(amount_with_simple_interest - amount, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 500\namount_with_simple_interest = amount * (1 + 4 * interest_rate / 100)\nsolution = solve_it(amount_with_simple_interest - amount, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 27, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x * x - y, y - x ** 2], [x, y])\nanswer = (solution[x], solution[y])\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x * x - y, y - x ** 2], [x, y])\nanswer = (solution[x], solution[y])\n\n"]}
{"id": 28, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nforward_time = 6\nforward_speed = distance / forward_time\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it(distance - return_speed * return_time, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nforward_time = 6\nforward_speed = distance / forward_time\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it(distance - return_speed * return_time, distance)\nanswer = solution[distance]\n\n"]}
{"id": 29, "answer": "A", "completion": "age = Symbol('age', positive=True)\nage_of_brother = Symbol('age_of_brother', positive=True)\nsolution = solve_it(age - 2 * age_of_brother, age_of_brother)\nanswer = solution[age_of_brother]\n\n", "completions": ["age = Symbol('age', positive=True)\nage_of_brother = Symbol('age_of_brother', positive=True)\nsolution = solve_it(age - 2 * age_of_brother, age_of_brother)\nanswer = solution[age_of_brother]\n\n"]}
{"id": 30, "answer": "A", "completion": "wholesale_cost = Symbol('wholesale_cost', positive=True)\nretail_price = Symbol('retail_price', positive=True)\ndiscount = Symbol('discount', positive=True)\nsolution = solve_it([retail_price - wholesale_cost, discount - (1 - 0.6) * (1 - 0.2)], [wholesale_cost, discount])\nanswer = solution[discount]\n\n", "completions": ["wholesale_cost = Symbol('wholesale_cost', positive=True)\nretail_price = Symbol('retail_price', positive=True)\ndiscount = Symbol('discount', positive=True)\nsolution = solve_it([retail_price - wholesale_cost, discount - (1 - 0.6) * (1 - 0.2)], [wholesale_cost, discount])\nanswer = solution[discount]\n\n"]}
{"id": 31, "answer": "A", "completion": "length = Symbol('length', positive=True)\nscale = Symbol('scale', positive=True)\nsolution = solve_it([length / scale - 20, 4 * scale - 1], [length, scale])\nanswer = solution[length]\n\n", "completions": ["length = Symbol('length', positive=True)\nscale = Symbol('scale', positive=True)\nsolution = solve_it([length / scale - 20, 4 * scale - 1], [length, scale])\nanswer = solution[length]\n\n"]}
{"id": 32, "answer": "A", "completion": "area = Symbol('area', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it([area - 1584, perimeter - 48], [area, perimeter])\nanswer = solution[area]\n\n", "completions": ["area = Symbol('area', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it([area - 1584, perimeter - 48], [area, perimeter])\nanswer = solution[area]\n\n"]}
{"id": 33, "answer": "A", "completion": "from_place = Symbol('from_place', positive=True)\nto_place = Symbol('to_place', positive=True)\nnumber_of_ways = factorial(from_place + to_place) / (factorial(from_place) * factorial(to_place))\nanswer = number_of_ways\n\n", "completions": ["from_place = Symbol('from_place', positive=True)\nto_place = Symbol('to_place', positive=True)\nnumber_of_ways = factorial(from_place + to_place) / (factorial(from_place) * factorial(to_place))\nanswer = number_of_ways\n\n"]}
{"id": 34, "answer": "B", "completion": "radius = Symbol('radius', positive=True)\ndiameter = 2 * radius\nvolume = 3 * 4 * 15\nsolution = solve_it(volume - 4 / 3 * pi * radius ** 3, radius)\nanswer = diameter\n\n", "completions": ["radius = Symbol('radius', positive=True)\ndiameter = 2 * radius\nvolume = 3 * 4 * 15\nsolution = solve_it(volume - 4 / 3 * pi * radius ** 3, radius)\nanswer = diameter\n\n"]}
{"id": 35, "answer": "None", "completion": "distance = Symbol('distance', positive=True)\ndistance_from_home = distance\ndistance_traveled_towards_south = 3\ndistance_traveled_towards_east = 5\ndistance_traveled_towards_north = 3\ndistance_traveled_towards_west = 2\nsolution = solve_it([distance_from_home - distance_traveled_towards_south, distance_from_home + distance_traveled_towards_east, distance_from_home - distance_traveled_towards_north, distance_from_home + distance_traveled_towards_west], [distance])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ndistance_from_home = distance\ndistance_traveled_towards_south = 3\ndistance_traveled_towards_east = 5\ndistance_traveled_towards_north = 3\ndistance_traveled_towards_west = 2\nsolution = solve_it([distance_from_home - distance_traveled_towards_south, distance_from_home + distance_traveled_towards_east, distance_from_home - distance_traveled_towards_north, distance_from_home + distance_traveled_towards_west], [distance])\nanswer = solution[distance]\n\n"]}
{"id": 36, "answer": "B", "completion": "marked_price = Symbol('marked_price', positive=True)\ndiscount = Symbol('discount', positive=True)\nprofit = Symbol('profit', positive=True)\nsolution = solve_it([discount * marked_price - profit - 697.5, discount - 0.07], [marked_price, discount])\nanswer = solution[marked_price]\n\n", "completions": ["marked_price = Symbol('marked_price', positive=True)\ndiscount = Symbol('discount', positive=True)\nprofit = Symbol('profit', positive=True)\nsolution = solve_it([discount * marked_price - profit - 697.5, discount - 0.07], [marked_price, discount])\nanswer = solution[marked_price]\n\n"]}
{"id": 37, "answer": "C", "completion": "number = Symbol('number', positive=True)\nanswer = solve_it(number - 770 / 718, number)\n\n", "completions": ["number = Symbol('number', positive=True)\nanswer = solve_it(number - 770 / 718, number)\n\n"]}
{"id": 38, "answer": "D", "completion": "sales = Symbol('sales', positive=True)\nfixed_salary = 500\npercentage_of_sales = 0.05\nmonthly_salary = fixed_salary + sales * percentage_of_sales\nsolution = solve_it(monthly_salary - 1500, sales)\nanswer = solution[sales]\n\n", "completions": ["sales = Symbol('sales', positive=True)\nfixed_salary = 500\npercentage_of_sales = 0.05\nmonthly_salary = fixed_salary + sales * percentage_of_sales\nsolution = solve_it(monthly_salary - 1500, sales)\nanswer = solution[sales]\n\n"]}
{"id": 39, "answer": "None", "completion": "speed_1 = Symbol('speed_1', positive=True)\nspeed_2 = Symbol('speed_2', positive=True)\nspeed_3 = Symbol('speed_3', positive=True)\nspeed_4 = Symbol('speed_4', positive=True)\nsolution = solve_it([speed_1 + speed_2 + speed_3 + speed_4 - 800, speed_1 + speed_2 - 400, speed_1 + speed_3 - 600, speed_1 + speed_4 - 200], [speed_1, speed_2, speed_3, speed_4])\nanswer = solution[speed_1]\n\n", "completions": ["speed_1 = Symbol('speed_1', positive=True)\nspeed_2 = Symbol('speed_2', positive=True)\nspeed_3 = Symbol('speed_3', positive=True)\nspeed_4 = Symbol('speed_4', positive=True)\nsolution = solve_it([speed_1 + speed_2 + speed_3 + speed_4 - 800, speed_1 + speed_2 - 400, speed_1 + speed_3 - 600, speed_1 + speed_4 - 200], [speed_1, speed_2, speed_3, speed_4])\nanswer = solution[speed_1]\n\n"]}
{"id": 40, "answer": "A", "completion": "white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\nprice_white = 100\nprice_brown = 99\nsolution = solve_it([white_sharpeners * price_white - 18 * (price_white + 1), brown_sharpeners * price_brown - 18 * price_brown], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n", "completions": ["white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\nprice_white = 100\nprice_brown = 99\nsolution = solve_it([white_sharpeners * price_white - 18 * (price_white + 1), brown_sharpeners * price_brown - 18 * price_brown], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n"]}
{"id": 41, "answer": "A", "completion": "hose_A_time = 8\nhose_B_time = Symbol('hose_B_time', positive=True)\nhose_A_filled_pool = 2\nhose_A_and_B_filled_pool = 3\nsolution = solve_it(hose_A_time - hose_B_time - (hose_A_filled_pool + hose_A_and_B_filled_pool), hose_B_time)\nanswer = solution[hose_B_time]\n\n", "completions": ["hose_A_time = 8\nhose_B_time = Symbol('hose_B_time', positive=True)\nhose_A_filled_pool = 2\nhose_A_and_B_filled_pool = 3\nsolution = solve_it(hose_A_time - hose_B_time - (hose_A_filled_pool + hose_A_and_B_filled_pool), hose_B_time)\nanswer = solution[hose_B_time]\n\n"]}
{"id": 42, "answer": "C", "completion": "reduction = 120 - 96\nreduction_percent = reduction / 120 * 100\nanswer = reduction_percent\n\n", "completions": ["reduction = 120 - 96\nreduction_percent = reduction / 120 * 100\nanswer = reduction_percent\n\n"]}
{"id": 43, "answer": "None", "completion": "number = Symbol('number', positive=True)\nnumber_with_1_before = number * 3\nnumber_with_1_after = number * 3 + 1\nsolution = solve_it([number_with_1_before - number_with_1_after + 1, number_with_1_before - number_with_1_after + 3], [number])\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nnumber_with_1_before = number * 3\nnumber_with_1_after = number * 3 + 1\nsolution = solve_it([number_with_1_before - number_with_1_after + 1, number_with_1_before - number_with_1_after + 3], [number])\nanswer = solution[number]\n\n"]}
{"id": 44, "answer": "B", "completion": "members_of_chess_club = Symbol('members_of_chess_club', positive=True)\nmembers_of_swim_team = Symbol('members_of_swim_team', positive=True)\nmembers_of_both = Symbol('members_of_both', positive=True)\nmembers_of_swim_team_not_members_of_chess_club = Symbol('members_of_swim_team_not_members_of_chess_club', positive=True)\nsolution = solve_it([members_of_chess_club + members_of_swim_team - members_of_both, members_of_swim_team - members_of_swim_team_not_members_of_chess_club], [members_of_chess_club, members_of_swim_team])\nanswer = solution[members_of_swim_team]\n\n", "completions": ["members_of_chess_club = Symbol('members_of_chess_club', positive=True)\nmembers_of_swim_team = Symbol('members_of_swim_team', positive=True)\nmembers_of_both = Symbol('members_of_both', positive=True)\nmembers_of_swim_team_not_members_of_chess_club = Symbol('members_of_swim_team_not_members_of_chess_club', positive=True)\nsolution = solve_it([members_of_chess_club + members_of_swim_team - members_of_both, members_of_swim_team - members_of_swim_team_not_members_of_chess_club], [members_of_chess_club, members_of_swim_team])\nanswer = solution[members_of_swim_team]\n\n"]}
{"id": 45, "answer": "B", "completion": "population = Symbol('population', positive=True)\nannual_growth = 0.05\ncurrent_population = 78000\nnew_population = current_population * (1 + annual_growth) ** 2\nsolution = solve_it(new_population - population, population)\nanswer = solution[population]\n\n", "completions": ["population = Symbol('population', positive=True)\nannual_growth = 0.05\ncurrent_population = 78000\nnew_population = current_population * (1 + annual_growth) ** 2\nsolution = solve_it(new_population - population, population)\nanswer = solution[population]\n\n"]}
{"id": 46, "answer": "None", "completion": "distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime_1 = Symbol('time_1', positive=True)\ntime_2 = Symbol('time_2', positive=True)\nsolution = solve_it([time_1 * speed_1 - time_2 * speed_2 - distance, time_1 - time_2], [time_1, time_2])\nanswer = solution[time_1]\n\n", "completions": ["distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime_1 = Symbol('time_1', positive=True)\ntime_2 = Symbol('time_2', positive=True)\nsolution = solve_it([time_1 * speed_1 - time_2 * speed_2 - distance, time_1 - time_2], [time_1, time_2])\nanswer = solution[time_1]\n\n"]}
{"id": 47, "answer": "B", "completion": "salary = Symbol('salary', positive=True)\ncommission = Symbol('commission', positive=True)\nsale = Symbol('sale', positive=True)\nmonthly_income = salary + commission / 100 * sale\nsolution = solve_it(monthly_income - 6000, sale)\nanswer = solution[sale]\n\n", "completions": ["salary = Symbol('salary', positive=True)\ncommission = Symbol('commission', positive=True)\nsale = Symbol('sale', positive=True)\nmonthly_income = salary + commission / 100 * sale\nsolution = solve_it(monthly_income - 6000, sale)\nanswer = solution[sale]\n\n"]}
{"id": 48, "answer": "A", "completion": "interest_rate = Symbol('interest_rate', positive=True)\nborrowed_amount = 360\nmonthly_payment = 31.50\ntotal_payment = monthly_payment * 12\nsolution = solve_it([total_payment - borrowed_amount, interest_rate / 100 * borrowed_amount - total_payment], [interest_rate])\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\nborrowed_amount = 360\nmonthly_payment = 31.50\ntotal_payment = monthly_payment * 12\nsolution = solve_it([total_payment - borrowed_amount, interest_rate / 100 * borrowed_amount - total_payment], [interest_rate])\nanswer = solution[interest_rate]\n\n"]}
{"id": 49, "answer": "A", "completion": "price = Symbol('price', positive=True)\ndiscount = Symbol('discount', positive=True)\nsolution = solve_it(price * (1 - discount / 100) - 100, discount)\nanswer = solution[discount]\n\n", "completions": ["price = Symbol('price', positive=True)\ndiscount = Symbol('discount', positive=True)\nsolution = solve_it(price * (1 - discount / 100) - 100, discount)\nanswer = solution[discount]\n\n"]}
{"id": 50, "answer": "B", "completion": "num_25 = Symbol('num_25', positive=True)\nnum_50 = Symbol('num_50', positive=True)\nnum_1 = Symbol('num_1', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25 * 25 + num_50 * 50 + num_1 * 100 - total_amount, num_25 + num_50 + num_1 - 3], [num_25, num_50, num_1])\nanswer = (solution[num_25], solution[num_50], solution[num_1])\n\n", "completions": ["num_25 = Symbol('num_25', positive=True)\nnum_50 = Symbol('num_50', positive=True)\nnum_1 = Symbol('num_1', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25 * 25 + num_50 * 50 + num_1 * 100 - total_amount, num_25 + num_50 + num_1 - 3], [num_25, num_50, num_1])\nanswer = (solution[num_25], solution[num_50], solution[num_1])\n\n"]}
{"id": 51, "answer": "None", "completion": "income = Symbol('income', positive=True)\nmonthly_income = income / 12\nmonthly_savings = 0.125 * income\nmonthly_expenses = monthly_income - monthly_savings\nsolution = solve_it(monthly_expenses - 3500, income)\nanswer = solution[income]\n\n", "completions": ["income = Symbol('income', positive=True)\nmonthly_income = income / 12\nmonthly_savings = 0.125 * income\nmonthly_expenses = monthly_income - monthly_savings\nsolution = solve_it(monthly_expenses - 3500, income)\nanswer = solution[income]\n\n"]}
{"id": 52, "answer": "A", "completion": "toys = Symbol('toys', positive=True)\nboxes = Symbol('boxes', positive=True)\ntempos = Symbol('tempos', positive=True)\nsolution = solve_it([toys * boxes - 29400, boxes * tempos - 98], [toys, boxes, tempos])\nanswer = solution[boxes]\n\n", "completions": ["toys = Symbol('toys', positive=True)\nboxes = Symbol('boxes', positive=True)\ntempos = Symbol('tempos', positive=True)\nsolution = solve_it([toys * boxes - 29400, boxes * tempos - 98], [toys, boxes, tempos])\nanswer = solution[boxes]\n\n"]}
{"id": 53, "answer": "A", "completion": "from sympy import binomial\nanswer = binomial(10, 2)\n\n", "completions": ["from sympy import binomial\nanswer = binomial(10, 2)\n\n"]}
{"id": 54, "answer": "C", "completion": "days = Symbol('days', positive=True)\nbrown = 6\nblack = 8\nblue = 12\nsolution = solve_it([days - brown - black - blue, days - 8 - black - blue, days - 8 - black - 6 - blue], [days, black, blue])\nanswer = solution[days]\n\n", "completions": ["days = Symbol('days', positive=True)\nbrown = 6\nblack = 8\nblue = 12\nsolution = solve_it([days - brown - black - blue, days - 8 - black - blue, days - 8 - black - 6 - blue], [days, black, blue])\nanswer = solution[days]\n\n"]}
{"id": 55, "answer": "A", "completion": "time = Symbol('time', positive=True)\nA = 16\nB = 17\nsolution = solve_it(time * (A + B) - (A * B), time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nA = 16\nB = 17\nsolution = solve_it(time * (A + B) - (A * B), time)\nanswer = solution[time]\n\n"]}
{"id": 56, "answer": "C", "completion": "cube_size = Symbol('cube_size', positive=True)\nouter_surface = 6 * cube_size ** 2\ninner_surface = 4 * cube_size ** 2\nsolution = solve_it(outer_surface - inner_surface - 500, cube_size)\nanswer = solution[cube_size]\n\n", "completions": ["cube_size = Symbol('cube_size', positive=True)\nouter_surface = 6 * cube_size ** 2\ninner_surface = 4 * cube_size ** 2\nsolution = solve_it(outer_surface - inner_surface - 500, cube_size)\nanswer = solution[cube_size]\n\n"]}
{"id": 57, "answer": "A", "completion": "vanilla_chocolates = Symbol('vanilla_chocolates', positive=True)\ncocoa_chocolates = Symbol('cocoa_chocolates', positive=True)\nsquashed_chocolates = Symbol('squashed_chocolates', positive=True)\nsolution = solve_it([vanilla_chocolates + cocoa_chocolates - 100, vanilla_chocolates - 10 * cocoa_chocolates], [vanilla_chocolates, cocoa_chocolates])\nanswer = solution[vanilla_chocolates]\n\n", "completions": ["vanilla_chocolates = Symbol('vanilla_chocolates', positive=True)\ncocoa_chocolates = Symbol('cocoa_chocolates', positive=True)\nsquashed_chocolates = Symbol('squashed_chocolates', positive=True)\nsolution = solve_it([vanilla_chocolates + cocoa_chocolates - 100, vanilla_chocolates - 10 * cocoa_chocolates], [vanilla_chocolates, cocoa_chocolates])\nanswer = solution[vanilla_chocolates]\n\n"]}
{"id": 58, "answer": "C", "completion": "depth = 30\njump_up = 3\njump_down = 2\ndays = Symbol('days', positive=True)\nsolution = solve_it(depth - jump_up - jump_down * days, days)\nanswer = solution[days]\n\n", "completions": ["depth = 30\njump_up = 3\njump_down = 2\ndays = Symbol('days', positive=True)\nsolution = solve_it(depth - jump_up - jump_down * days, days)\nanswer = solution[days]\n\n"]}
{"id": 59, "answer": "B", "completion": "options = [47, 91, 41, 67, 44]\nfor option in options:\n    if is_perfect_square(option / 10):\n        answer = option\n        break\n\n", "completions": ["options = [47, 91, 41, 67, 44]\nfor option in options:\n    if is_perfect_square(option / 10):\n        answer = option\n        break\n\n"]}
{"id": 60, "answer": "B", "completion": "interested_in_football = Symbol('interested_in_football', positive=True)\ninterested_in_cricket = Symbol('interested_in_cricket', positive=True)\ninterested_in_basketball = Symbol('interested_in_basketball', positive=True)\nnot_interested_in_games = Symbol('not_interested_in_games', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([interested_in_football + interested_in_cricket + interested_in_basketball + not_interested_in_games - total_students,\n                     interested_in_football - 8 / 100,\n                     interested_in_cricket - 4 / 5,\n                     interested_in_basketball - 10 / 100,\n                     not_interested_in_games - 20 / 100],\n                    [interested_in_football, interested_in_cricket, interested_in_basketball, not_interested_in_games, total_students])\nanswer = solution[total_students]\n\n", "completions": ["interested_in_football = Symbol('interested_in_football', positive=True)\ninterested_in_cricket = Symbol('interested_in_cricket', positive=True)\ninterested_in_basketball = Symbol('interested_in_basketball', positive=True)\nnot_interested_in_games = Symbol('not_interested_in_games', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([interested_in_football + interested_in_cricket + interested_in_basketball + not_interested_in_games - total_students,\n                     interested_in_football - 8 / 100,\n                     interested_in_cricket - 4 / 5,\n                     interested_in_basketball - 10 / 100,\n                     not_interested_in_games - 20 / 100],\n                    [interested_in_football, interested_in_cricket, interested_in_basketball, not_interested_in_games, total_students])\nanswer = solution[total_students]\n\n"]}
{"id": 61, "answer": "B", "completion": "Q = Symbol('Q')\nR = Symbol('R')\nT = Symbol('T')\nage_Q = Symbol('age_Q', positive=True)\nage_R = Symbol('age_R', positive=True)\nage_T = Symbol('age_T', positive=True)\nsolution = solve_it([age_Q - age_R - age_T, age_Q + age_R - 50], [age_Q, age_R])\nanswer = solution[age_R]\n\n", "completions": ["Q = Symbol('Q')\nR = Symbol('R')\nT = Symbol('T')\nage_Q = Symbol('age_Q', positive=True)\nage_R = Symbol('age_R', positive=True)\nage_T = Symbol('age_T', positive=True)\nsolution = solve_it([age_Q - age_R - age_T, age_Q + age_R - 50], [age_Q, age_R])\nanswer = solution[age_R]\n\n"]}
{"id": 62, "answer": "B", "completion": "amount = 8.5\ncab_fare = 3.5 + 0.25 * 10\ndistance = Symbol('distance', positive=True)\nsolution = solve_it(amount - cab_fare - distance, distance)\nanswer = solution[distance]\n\n", "completions": ["amount = 8.5\ncab_fare = 3.5 + 0.25 * 10\ndistance = Symbol('distance', positive=True)\nsolution = solve_it(amount - cab_fare - distance, distance)\nanswer = solution[distance]\n\n"]}
{"id": 63, "answer": "B", "completion": "matches = Symbol('matches', positive=True)\naverage = Symbol('average', positive=True)\ninitial_average = 51\nfinal_average = average + (78 - 51)\nsolution = solve_it([final_average - 54, matches * average - (78 + 51)], [matches, average])\nanswer = solution[matches]\n\n", "completions": ["matches = Symbol('matches', positive=True)\naverage = Symbol('average', positive=True)\ninitial_average = 51\nfinal_average = average + (78 - 51)\nsolution = solve_it([final_average - 54, matches * average - (78 + 51)], [matches, average])\nanswer = solution[matches]\n\n"]}
{"id": 64, "answer": "A", "completion": "books = Symbol('books', positive=True)\nletters = Symbol('letters', positive=True)\nsolution = solve_it(books - 10, letters)\nanswer = solution[letters]\n\n", "completions": ["books = Symbol('books', positive=True)\nletters = Symbol('letters', positive=True)\nsolution = solve_it(books - 10, letters)\nanswer = solution[letters]\n\n"]}
{"id": 65, "answer": "C", "completion": "length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it([length + breadth - 4 * breadth, 2 * (length + breadth) - perimeter], [length, breadth])\nanswer = solution[perimeter]\n\n", "completions": ["length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\nperimeter = Symbol('perimeter', positive=True)\nsolution = solve_it([length + breadth - 4 * breadth, 2 * (length + breadth) - perimeter], [length, breadth])\nanswer = solution[perimeter]\n\n"]}
{"id": 66, "answer": "B", "completion": "vitamin_e = Symbol('vitamin_e', positive=True)\nvitamin_a = Symbol('vitamin_a', positive=True)\nmin_daily_requirement_of_vitamin_e = Symbol('min_daily_requirement_of_vitamin_e', positive=True)\nmin_daily_requirement_of_vitamin_a = Symbol('min_daily_requirement_of_vitamin_a', positive=True)\nsolution = solve_it([vitamin_e / 100 * 9 / min_daily_requirement_of_vitamin_e + vitamin_a / 100 * 8 / min_daily_requirement_of_vitamin_a - 1, vitamin_e / 100 * 9 / min_daily_requirement_of_vitamin_e + vitamin_a / 100 * 8 / min_daily_requirement_of_vitamin_a - 1], [vitamin_e, vitamin_a])\nanswer = solution[vitamin_e]\n\n", "completions": ["vitamin_e = Symbol('vitamin_e', positive=True)\nvitamin_a = Symbol('vitamin_a', positive=True)\nmin_daily_requirement_of_vitamin_e = Symbol('min_daily_requirement_of_vitamin_e', positive=True)\nmin_daily_requirement_of_vitamin_a = Symbol('min_daily_requirement_of_vitamin_a', positive=True)\nsolution = solve_it([vitamin_e / 100 * 9 / min_daily_requirement_of_vitamin_e + vitamin_a / 100 * 8 / min_daily_requirement_of_vitamin_a - 1, vitamin_e / 100 * 9 / min_daily_requirement_of_vitamin_e + vitamin_a / 100 * 8 / min_daily_requirement_of_vitamin_a - 1], [vitamin_e, vitamin_a])\nanswer = solution[vitamin_e]\n\n"]}
{"id": 67, "answer": "C", "completion": "helpers = Symbol('helpers', positive=True)\nlarge_cakes = Symbol('large_cakes', positive=True)\nsmall_cakes = Symbol('small_cakes', positive=True)\ntime = Symbol('time', positive=True)\nlarge_cakes_per_helper = 2\nsmall_cakes_per_helper = 35\nlarge_cakes_needed = 20\nsmall_cakes_needed = 700\nsolution = solve_it([helpers * (large_cakes + small_cakes) - large_cakes_needed - small_cakes_needed, time * (large_cakes + small_cakes) - large_cakes_needed * large_cakes_per_helper - small_cakes_needed * small_cakes_per_helper], [helpers, time])\nanswer = solution[helpers]\n\n", "completions": ["helpers = Symbol('helpers', positive=True)\nlarge_cakes = Symbol('large_cakes', positive=True)\nsmall_cakes = Symbol('small_cakes', positive=True)\ntime = Symbol('time', positive=True)\nlarge_cakes_per_helper = 2\nsmall_cakes_per_helper = 35\nlarge_cakes_needed = 20\nsmall_cakes_needed = 700\nsolution = solve_it([helpers * (large_cakes + small_cakes) - large_cakes_needed - small_cakes_needed, time * (large_cakes + small_cakes) - large_cakes_needed * large_cakes_per_helper - small_cakes_needed * small_cakes_per_helper], [helpers, time])\nanswer = solution[helpers]\n\n"]}
{"id": 68, "answer": "None", "completion": "R = Symbol('R')\nS = Symbol('S')\nT = Symbol('T')\nU = Symbol('U')\nRU = Symbol('RU')\nRS = Symbol('RS')\nRT = Symbol('RT')\nST = Symbol('ST')\nsolution = solve_it([RU + S - T, RS + RT - ST, RU - S, RU - T], [RU, RS, RT])\nanswer = solution[RU]\n\n", "completions": ["R = Symbol('R')\nS = Symbol('S')\nT = Symbol('T')\nU = Symbol('U')\nRU = Symbol('RU')\nRS = Symbol('RS')\nRT = Symbol('RT')\nST = Symbol('ST')\nsolution = solve_it([RU + S - T, RS + RT - ST, RU - S, RU - T], [RU, RS, RT])\nanswer = solution[RU]\n\n"]}
{"id": 69, "answer": "A", "completion": "pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nfalafel = Symbol('falafel', positive=True)\nsolution = solve_it([pita_breads * falafel - rolls * falafel, rolls * falafel - baguettes * falafel, baguettes * falafel - pita_breads * falafel], [pita_breads, rolls, baguettes])\nanswer = (solution[pita_breads], solution[rolls], solution[baguettes])\n\n", "completions": ["pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nfalafel = Symbol('falafel', positive=True)\nsolution = solve_it([pita_breads * falafel - rolls * falafel, rolls * falafel - baguettes * falafel, baguettes * falafel - pita_breads * falafel], [pita_breads, rolls, baguettes])\nanswer = (solution[pita_breads], solution[rolls], solution[baguettes])\n\n"]}
{"id": 70, "answer": "B", "completion": "discount = Symbol('discount', positive=True)\npercentage_increase = Symbol('percentage_increase', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\noriginal_price = Symbol('original_price', positive=True)\nsolution = solve_it([discounted_price - original_price * (1 - discount / 100), percentage_increase - (1 - discount / 100)], [discount, percentage_increase])\nanswer = solution[percentage_increase]\n\n", "completions": ["discount = Symbol('discount', positive=True)\npercentage_increase = Symbol('percentage_increase', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\noriginal_price = Symbol('original_price', positive=True)\nsolution = solve_it([discounted_price - original_price * (1 - discount / 100), percentage_increase - (1 - discount / 100)], [discount, percentage_increase])\nanswer = solution[percentage_increase]\n\n"]}
{"id": 71, "answer": "None", "completion": "train_fare = Symbol('train_fare', positive=True)\nbus_fare = Symbol('bus_fare', positive=True)\ntrain_fare_for_one_person = train_fare / 3\ntrain_fare_for_two_persons = train_fare_for_one_person * 2\ntrain_fare_for_six_persons = train_fare_for_one_person * 6\ntrain_fare_for_eight_persons = train_fare_for_one_person * 8\nbus_fare_for_two_persons = bus_fare / 2\nbus_fare_for_six_persons = bus_fare_for_two_persons * 3\nbus_fare_for_eight_persons = bus_fare_for_two_persons * 4\nsolution = solve_it([train_fare_for_six_persons + train_fare_for_eight_persons - 1512, train_fare_for_two_persons + train_fare_for_eight_persons - 1512], [train_fare, bus_fare])\nanswer = solution[train_fare]\n\n", "completions": ["train_fare = Symbol('train_fare', positive=True)\nbus_fare = Symbol('bus_fare', positive=True)\ntrain_fare_for_one_person = train_fare / 3\ntrain_fare_for_two_persons = train_fare_for_one_person * 2\ntrain_fare_for_six_persons = train_fare_for_one_person * 6\ntrain_fare_for_eight_persons = train_fare_for_one_person * 8\nbus_fare_for_two_persons = bus_fare / 2\nbus_fare_for_six_persons = bus_fare_for_two_persons * 3\nbus_fare_for_eight_persons = bus_fare_for_two_persons * 4\nsolution = solve_it([train_fare_for_six_persons + train_fare_for_eight_persons - 1512, train_fare_for_two_persons + train_fare_for_eight_persons - 1512], [train_fare, bus_fare])\nanswer = solution[train_fare]\n\n"]}
{"id": 72, "answer": "C", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\narea = 8 * 3\nperimeter = 2 * (length + width)\nsolution = solve_it(area - perimeter, [length, width])\nanswer = (solution[length], solution[width])\n\n", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\narea = 8 * 3\nperimeter = 2 * (length + width)\nsolution = solve_it(area - perimeter, [length, width])\nanswer = (solution[length], solution[width])\n\n"]}
{"id": 73, "answer": "A", "completion": "books = Symbol('books', positive=True)\nsubjects = Symbol('subjects', positive=True)\nsolution = solve_it([books * subjects - 5, 2 * (books + subjects) - 10], [books, subjects])\nanswer = solution[books]\n\n", "completions": ["books = Symbol('books', positive=True)\nsubjects = Symbol('subjects', positive=True)\nsolution = solve_it([books * subjects - 5, 2 * (books + subjects) - 10], [books, subjects])\nanswer = solution[books]\n\n"]}
{"id": 74, "answer": "C", "completion": "picket_width = Symbol('picket_width', positive=True)\npicket_space = Symbol('picket_space', positive=True)\nfence_length = Symbol('fence_length', positive=True)\nsolution = solve_it([picket_width * fence_length - 0.5, 2 * (picket_width + picket_space) * fence_length - 6], [picket_width, picket_space])\nanswer = solution[picket_width]\n\n", "completions": ["picket_width = Symbol('picket_width', positive=True)\npicket_space = Symbol('picket_space', positive=True)\nfence_length = Symbol('fence_length', positive=True)\nsolution = solve_it([picket_width * fence_length - 0.5, 2 * (picket_width + picket_space) * fence_length - 6], [picket_width, picket_space])\nanswer = solution[picket_width]\n\n"]}
{"id": 75, "answer": "A", "completion": "ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = Symbol('plane_speed', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([distance - 180, ship_speed - plane_speed / 10], [distance, ship_speed])\nanswer = solution[distance]\n\n", "completions": ["ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = Symbol('plane_speed', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([distance - 180, ship_speed - plane_speed / 10], [distance, ship_speed])\nanswer = solution[distance]\n\n"]}
{"id": 76, "answer": "B", "completion": "total_deer = Symbol('total_deer', positive=True)\ntagged_deer = 300\ntagged_deer_in_2002 = 20\ntagged_deer_in_2001 = tagged_deer_in_2002 / (tagged_deer / total_deer) * total_deer\ntotal_deer_in_2002 = 500\ntotal_deer_in_2001 = total_deer_in_2002 / (tagged_deer_in_2002 / tagged_deer_in_2001) * total_deer\nanswer = total_deer_in_2001\n\n", "completions": ["total_deer = Symbol('total_deer', positive=True)\ntagged_deer = 300\ntagged_deer_in_2002 = 20\ntagged_deer_in_2001 = tagged_deer_in_2002 / (tagged_deer / total_deer) * total_deer\ntotal_deer_in_2002 = 500\ntotal_deer_in_2001 = total_deer_in_2002 / (tagged_deer_in_2002 / tagged_deer_in_2001) * total_deer\nanswer = total_deer_in_2001\n\n"]}
{"id": 77, "answer": "B", "completion": "harbor_line_frequency = 10 / 60\nmain_line_frequency = 10 / 60\nharbor_line_start = 5.02\nmain_line_start = 5\nfirst_train_time = Symbol('first_train_time', positive=True)\nsolution = solve_it([first_train_time - harbor_line_start, first_train_time - main_line_start], [first_train_time])\nanswer = solution[first_train_time]\n\n", "completions": ["harbor_line_frequency = 10 / 60\nmain_line_frequency = 10 / 60\nharbor_line_start = 5.02\nmain_line_start = 5\nfirst_train_time = Symbol('first_train_time', positive=True)\nsolution = solve_it([first_train_time - harbor_line_start, first_train_time - main_line_start], [first_train_time])\nanswer = solution[first_train_time]\n\n"]}
{"id": 78, "answer": "B", "completion": "average_weight = 12.2\nnew_weight = Symbol('new_weight', positive=True)\ntotal_weight = average_weight * 10 + new_weight\nsolution = solve_it(total_weight - (average_weight * 10 + 2.6), new_weight)\nanswer = solution[new_weight]\n\n", "completions": ["average_weight = 12.2\nnew_weight = Symbol('new_weight', positive=True)\ntotal_weight = average_weight * 10 + new_weight\nsolution = solve_it(total_weight - (average_weight * 10 + 2.6), new_weight)\nanswer = solution[new_weight]\n\n"]}
{"id": 79, "answer": "E", "completion": "population_increase = Symbol('population_increase', positive=True)\npopulation_1 = Symbol('population_1', positive=True)\npopulation_2 = Symbol('population_2', positive=True)\nsolution = solve_it([population_2 - population_1 * (1 + population_increase / 100), population_2 - population_1 * 2], [population_increase, population_1])\nanswer = solution[population_increase]\n\n", "completions": ["population_increase = Symbol('population_increase', positive=True)\npopulation_1 = Symbol('population_1', positive=True)\npopulation_2 = Symbol('population_2', positive=True)\nsolution = solve_it([population_2 - population_1 * (1 + population_increase / 100), population_2 - population_1 * 2], [population_increase, population_1])\nanswer = solution[population_increase]\n\n"]}
{"id": 80, "answer": "B", "completion": "Arjun = Symbol('Arjun', positive=True)\nSajal = Symbol('Sajal', positive=True)\nArun = Symbol('Arun', positive=True)\nArjun_after_Arun = Arjun + Arun - 30\nSajal_after_Arun = Sajal + Arun - 30\nArjun_after_Sajal = Arjun + Sajal - 10\nSajal_after_Sajal = Sajal + Sajal - 10\nsolution = solve_it([Arjun_after_Arun - Arjun_after_Sajal, Sajal_after_Arun - Sajal_after_Sajal], [Arjun, Sajal])\nanswer = (solution[Arjun], solution[Sajal])\n\n", "completions": ["Arjun = Symbol('Arjun', positive=True)\nSajal = Symbol('Sajal', positive=True)\nArun = Symbol('Arun', positive=True)\nArjun_after_Arun = Arjun + Arun - 30\nSajal_after_Arun = Sajal + Arun - 30\nArjun_after_Sajal = Arjun + Sajal - 10\nSajal_after_Sajal = Sajal + Sajal - 10\nsolution = solve_it([Arjun_after_Arun - Arjun_after_Sajal, Sajal_after_Arun - Sajal_after_Sajal], [Arjun, Sajal])\nanswer = (solution[Arjun], solution[Sajal])\n\n"]}
{"id": 81, "answer": "B", "completion": "width = Symbol('width', positive=True)\nlength = Symbol('length', positive=True)\narea = 3000\nsolution = solve_it([width * length - area, 2 * (width + length) - 100], [width, length])\nanswer = (solution[width], solution[length])\n\n", "completions": ["width = Symbol('width', positive=True)\nlength = Symbol('length', positive=True)\narea = 3000\nsolution = solve_it([width * length - area, 2 * (width + length) - 100], [width, length])\nanswer = (solution[width], solution[length])\n\n"]}
{"id": 82, "answer": "C", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\ngcd = 11\nlcm = 7700\nsolution = solve_it([gcd * a * b - lcm, a - 350, b - 350], [a, b])\nanswer = (solution[a], solution[b])\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\ngcd = 11\nlcm = 7700\nsolution = solve_it([gcd * a * b - lcm, a - 350, b - 350], [a, b])\nanswer = (solution[a], solution[b])\n\n"]}
{"id": 83, "answer": "B", "completion": "side = Symbol('side', positive=True)\narea = 70\nperimeter = 2 * (side + side)\nsolution = solve_it([area - side * side, perimeter - 4 * side], [side])\nanswer = solution[side]\n\n", "completions": ["side = Symbol('side', positive=True)\narea = 70\nperimeter = 2 * (side + side)\nsolution = solve_it([area - side * side, perimeter - 4 * side], [side])\nanswer = solution[side]\n\n"]}
{"id": 84, "answer": "B", "completion": "length = Symbol('length', positive=True)\nratio = Rational(5, 3)\nsolution = solve_it(length * ratio - 30, length)\nanswer = solution[length]\n\n", "completions": ["length = Symbol('length', positive=True)\nratio = Rational(5, 3)\nsolution = solve_it(length * ratio - 30, length)\nanswer = solution[length]\n\n"]}
{"id": 85, "answer": "[invalid]", "completion": "M = Symbol('M')\nN = Symbol('N')\na = Symbol('a')\nb = Symbol('b')\nc = Symbol('c')\nsolution = solve_it([M - N + a * b * c - 990, M > 300], [M, N])\nanswer = solution[M]\n\n", "completions": ["M = Symbol('M')\nN = Symbol('N')\na = Symbol('a')\nb = Symbol('b')\nc = Symbol('c')\nsolution = solve_it([M - N + a * b * c - 990, M > 300], [M, N])\nanswer = solution[M]\n\n"]}
{"id": 86, "answer": "C", "completion": "num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = Symbol('num_students_taking_physics', positive=True)\nnum_students_taking_math = Symbol('num_students_taking_math', positive=True)\nnum_students_taking_physics_and_math = Symbol('num_students_taking_physics_and_math', positive=True)\nsolution = solve_it([num_students_taking_physics_and_math - num_students * 0.2, num_students_taking_physics_and_math - num_students * 0.28], [num_students, num_students_taking_physics, num_students_taking_math])\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = Symbol('num_students_taking_physics', positive=True)\nnum_students_taking_math = Symbol('num_students_taking_math', positive=True)\nnum_students_taking_physics_and_math = Symbol('num_students_taking_physics_and_math', positive=True)\nsolution = solve_it([num_students_taking_physics_and_math - num_students * 0.2, num_students_taking_physics_and_math - num_students * 0.28], [num_students, num_students_taking_physics, num_students_taking_math])\nanswer = solution[num_students]\n\n"]}
{"id": 87, "answer": "B", "completion": "Raj = Symbol('Raj')\nRahim = Symbol('Rahim')\nage_diff = 17 - (Raj / 3)\nsolution = solve_it(Rahim - age_diff - 17, Rahim)\nanswer = solution[Rahim]\n\n", "completions": ["Raj = Symbol('Raj')\nRahim = Symbol('Rahim')\nage_diff = 17 - (Raj / 3)\nsolution = solve_it(Rahim - age_diff - 17, Rahim)\nanswer = solution[Rahim]\n\n"]}
{"id": 88, "answer": "None", "completion": "time = Symbol('time', positive=True)\nfield_area = 100\ngrazing_rate = 10\ntime_to_graze = field_area / grazing_rate\nsolution = solve_it(time_to_graze - 14 * 24, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nfield_area = 100\ngrazing_rate = 10\ntime_to_graze = field_area / grazing_rate\nsolution = solve_it(time_to_graze - 14 * 24, time)\nanswer = solution[time]\n\n"]}
{"id": 89, "answer": "C", "completion": "selling_price = Symbol('selling_price', positive=True)\ncost_price = Symbol('cost_price', positive=True)\nprofit = Symbol('profit', positive=True)\nsolution = solve_it([selling_price - cost_price - profit, selling_price - 25.75], [selling_price, cost_price])\nanswer = solution[selling_price]\n\n", "completions": ["selling_price = Symbol('selling_price', positive=True)\ncost_price = Symbol('cost_price', positive=True)\nprofit = Symbol('profit', positive=True)\nsolution = solve_it([selling_price - cost_price - profit, selling_price - 25.75], [selling_price, cost_price])\nanswer = solution[selling_price]\n\n"]}
{"id": 90, "answer": "D", "completion": "susan = Symbol('susan')\ntim = Symbol('tim')\nzen = Symbol('zen')\nsolution = solve_it([susan + tim + zen - 3, susan - tim, tim - zen], [susan, tim, zen])\nanswer = solution[susan]\n\n", "completions": ["susan = Symbol('susan')\ntim = Symbol('tim')\nzen = Symbol('zen')\nsolution = solve_it([susan + tim + zen - 3, susan - tim, tim - zen], [susan, tim, zen])\nanswer = solution[susan]\n\n"]}
{"id": 91, "answer": "None", "completion": "fixed_part = 1800\nvariable_part = Symbol('variable_part', positive=True)\nconsumed_calls = 540\nconsumed_units = 500\nsolution = solve_it([fixed_part + variable_part - consumed_calls * 60, variable_part - consumed_units * 1.8], [variable_part])\nanswer = solution[variable_part]\n\n", "completions": ["fixed_part = 1800\nvariable_part = Symbol('variable_part', positive=True)\nconsumed_calls = 540\nconsumed_units = 500\nsolution = solve_it([fixed_part + variable_part - consumed_calls * 60, variable_part - consumed_units * 1.8], [variable_part])\nanswer = solution[variable_part]\n\n"]}
{"id": 92, "answer": "A", "completion": "ball_A_rotation_time = 26 / 60\nball_B_rotation_time = 35 / 60\nball_A_rotation_time_in_minutes = ball_A_rotation_time * 60\nball_B_rotation_time_in_minutes = ball_B_rotation_time * 60\ntotal_rotation_time = ball_A_rotation_time_in_minutes + ball_B_rotation_time_in_minutes\ntotal_rotation_time_in_minutes = total_rotation_time * 60\ntotal_rotation_time_in_hours = total_rotation_time_in_minutes / 60\nanswer = total_rotation_time_in_hours\n\n", "completions": ["ball_A_rotation_time = 26 / 60\nball_B_rotation_time = 35 / 60\nball_A_rotation_time_in_minutes = ball_A_rotation_time * 60\nball_B_rotation_time_in_minutes = ball_B_rotation_time * 60\ntotal_rotation_time = ball_A_rotation_time_in_minutes + ball_B_rotation_time_in_minutes\ntotal_rotation_time_in_minutes = total_rotation_time * 60\ntotal_rotation_time_in_hours = total_rotation_time_in_minutes / 60\nanswer = total_rotation_time_in_hours\n\n"]}
{"id": 93, "answer": "C", "completion": "hardcover = Symbol('hardcover', positive=True)\nfiction = Symbol('fiction', positive=True)\nsolution = solve_it([hardcover + fiction - 45, hardcover - 30, fiction - 20], [hardcover, fiction])\nanswer = solution[hardcover]\n\n", "completions": ["hardcover = Symbol('hardcover', positive=True)\nfiction = Symbol('fiction', positive=True)\nsolution = solve_it([hardcover + fiction - 45, hardcover - 30, fiction - 20], [hardcover, fiction])\nanswer = solution[hardcover]\n\n"]}
{"id": 94, "answer": "B", "completion": "cost = Symbol('cost', positive=True)\nsolution = solve_it(cost - 4, cost)\nanswer = solution[cost]\n\n", "completions": ["cost = Symbol('cost', positive=True)\nsolution = solve_it(cost - 4, cost)\nanswer = solution[cost]\n\n"]}
{"id": 95, "answer": "B", "completion": "num_friends = Symbol('num_friends', positive=True)\neatables = 96\ncost_per_person = eatables / num_friends\nsolution = solve_it(cost_per_person - 4, num_friends)\nanswer = solution[num_friends]\n\n", "completions": ["num_friends = Symbol('num_friends', positive=True)\neatables = 96\ncost_per_person = eatables / num_friends\nsolution = solve_it(cost_per_person - 4, num_friends)\nanswer = solution[num_friends]\n\n"]}
{"id": 96, "answer": "C", "completion": "length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\nsolution = solve_it([length - breadth, length ** 2 - breadth ** 2], [length, breadth])\nanswer = (solution[length], solution[breadth])\n\n", "completions": ["length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\nsolution = solve_it([length - breadth, length ** 2 - breadth ** 2], [length, breadth])\nanswer = (solution[length], solution[breadth])\n\n"]}
{"id": 97, "answer": "A", "completion": "daughters = Symbol('daughters', positive=True)\nnephews = Symbol('nephews', positive=True)\nsolution = solve_it(daughters - 4 * nephews, daughters)\nanswer = solution[daughters]\n\n", "completions": ["daughters = Symbol('daughters', positive=True)\nnephews = Symbol('nephews', positive=True)\nsolution = solve_it(daughters - 4 * nephews, daughters)\nanswer = solution[daughters]\n\n"]}
{"id": 98, "answer": "B", "completion": "weight = Symbol('weight', positive=True)\nweight_of_meenu = 29 + weight / 2\nweight_of_silu = 51\nsolution = solve_it(weight_of_meenu - weight_of_silu, weight)\nanswer = solution[weight]\n\n", "completions": ["weight = Symbol('weight', positive=True)\nweight_of_meenu = 29 + weight / 2\nweight_of_silu = 51\nsolution = solve_it(weight_of_meenu - weight_of_silu, weight)\nanswer = solution[weight]\n\n"]}
{"id": 99, "answer": "A", "completion": "time = Symbol('time', positive=True)\nnum_tablets = 5\ninterval = 15\nsolution = solve_it(time * num_tablets - interval * num_tablets, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nnum_tablets = 5\ninterval = 15\nsolution = solve_it(time * num_tablets - interval * num_tablets, time)\nanswer = solution[time]\n\n"]}
{"id": 100, "answer": "B", "completion": "red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = Symbol('green_sweets', positive=True)\nred_to_green_ratio = 3 / 4\ngreen_sweets_in_bag = 120\nsolution = solve_it([red_sweets + green_sweets - 120, red_sweets / green_sweets - red_to_green_ratio], [red_sweets, green_sweets])\nanswer = solution[red_sweets]\n\n", "completions": ["red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = Symbol('green_sweets', positive=True)\nred_to_green_ratio = 3 / 4\ngreen_sweets_in_bag = 120\nsolution = solve_it([red_sweets + green_sweets - 120, red_sweets / green_sweets - red_to_green_ratio], [red_sweets, green_sweets])\nanswer = solution[red_sweets]\n\n"]}
{"id": 101, "answer": "B", "completion": "ages = Symbol('ages', positive=True)\nage_of_youngest = 7\ndifference = 3 / 12\nsum_of_ages = 250\nsolution = solve_it(ages - (age_of_youngest + (ages - 1) * difference), ages)\nanswer = solution[ages]\n\n", "completions": ["ages = Symbol('ages', positive=True)\nage_of_youngest = 7\ndifference = 3 / 12\nsum_of_ages = 250\nsolution = solve_it(ages - (age_of_youngest + (ages - 1) * difference), ages)\nanswer = solution[ages]\n\n"]}
{"id": 102, "answer": "A", "completion": "M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)\n\n", "completions": ["M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)\n\n"]}
{"id": 103, "answer": "B", "completion": "selling_price = Symbol('selling_price', positive=True)\ncost = 1200\nmarkup = 0.2\nprofit = selling_price - cost\nsolution = solve_it(selling_price - (cost + markup * cost), selling_price)\nanswer = solution[selling_price]\n\n", "completions": ["selling_price = Symbol('selling_price', positive=True)\ncost = 1200\nmarkup = 0.2\nprofit = selling_price - cost\nsolution = solve_it(selling_price - (cost + markup * cost), selling_price)\nanswer = solution[selling_price]\n\n"]}
{"id": 104, "answer": "B", "completion": "train_a_speed = Symbol('train_a_speed', positive=True)\ntrain_b_speed = Symbol('train_b_speed', positive=True)\ntrain_a_start_time = Symbol('train_a_start_time', positive=True)\ntrain_b_start_time = Symbol('train_b_start_time', positive=True)\ntrain_a_end_time = Symbol('train_a_end_time', positive=True)\ntrain_b_end_time = Symbol('train_b_end_time', positive=True)\nsolution = solve_it([train_a_end_time - train_b_end_time - 1, train_a_speed - train_b_speed, train_a_start_time - train_b_start_time - 1], [train_a_speed, train_b_speed, train_a_start_time])\nanswer = solution[train_a_start_time]\n\n", "completions": ["train_a_speed = Symbol('train_a_speed', positive=True)\ntrain_b_speed = Symbol('train_b_speed', positive=True)\ntrain_a_start_time = Symbol('train_a_start_time', positive=True)\ntrain_b_start_time = Symbol('train_b_start_time', positive=True)\ntrain_a_end_time = Symbol('train_a_end_time', positive=True)\ntrain_b_end_time = Symbol('train_b_end_time', positive=True)\nsolution = solve_it([train_a_end_time - train_b_end_time - 1, train_a_speed - train_b_speed, train_a_start_time - train_b_start_time - 1], [train_a_speed, train_b_speed, train_a_start_time])\nanswer = solution[train_a_start_time]\n\n"]}
{"id": 105, "answer": "A", "completion": "money = Symbol('money', positive=True)\nmark_money = money / 2\njohn_money = money / 3\nsolution = solve_it(mark_money - 75, john_money - 75)\nanswer = solution[money]\n\n", "completions": ["money = Symbol('money', positive=True)\nmark_money = money / 2\njohn_money = money / 3\nsolution = solve_it(mark_money - 75, john_money - 75)\nanswer = solution[money]\n\n"]}
{"id": 106, "answer": "C", "completion": "days = Symbol('days', positive=True)\nlilies = Symbol('lilies', positive=True)\nlilies_on_day_0 = 64\nlilies_on_day_1 = 2 * lilies_on_day_0\nlilies_on_day_2 = 2 * lilies_on_day_1\nlilies_on_day_60 = 2 ** 60\nsolution = solve_it([lilies_on_day_60 - lilies, lilies_on_day_2 - lilies_on_day_0], [days, lilies])\nanswer = solution[days]\n\n", "completions": ["days = Symbol('days', positive=True)\nlilies = Symbol('lilies', positive=True)\nlilies_on_day_0 = 64\nlilies_on_day_1 = 2 * lilies_on_day_0\nlilies_on_day_2 = 2 * lilies_on_day_1\nlilies_on_day_60 = 2 ** 60\nsolution = solve_it([lilies_on_day_60 - lilies, lilies_on_day_2 - lilies_on_day_0], [days, lilies])\nanswer = solution[days]\n\n"]}
{"id": 107, "answer": "D", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_units = Symbol('work_units', positive=True)\nhours_per_day = Symbol('hours_per_day', positive=True)\ndays = Symbol('days', positive=True)\nsolution = solve_it([x * hours_per_day * days - work_units, y * hours_per_day * days - work_units], [x, y])\nanswer = (solution[x], solution[y])\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_units = Symbol('work_units', positive=True)\nhours_per_day = Symbol('hours_per_day', positive=True)\ndays = Symbol('days', positive=True)\nsolution = solve_it([x * hours_per_day * days - work_units, y * hours_per_day * days - work_units], [x, y])\nanswer = (solution[x], solution[y])\n\n"]}
{"id": 108, "answer": "D", "completion": "quadrilaterals = Symbol('quadrilaterals', positive=True)\nsolution = solve_it(quadrilaterals - 5 * (5 + 2), quadrilaterals)\nanswer = solution[quadrilaterals]\n\n", "completions": ["quadrilaterals = Symbol('quadrilaterals', positive=True)\nsolution = solve_it(quadrilaterals - 5 * (5 + 2), quadrilaterals)\nanswer = solution[quadrilaterals]\n\n"]}
{"id": 109, "answer": "C", "completion": "angle_a = Symbol('angle_a', positive=True)\nangle_b = Symbol('angle_b', positive=True)\nangle_c = Symbol('angle_c', positive=True)\nangle_d = Symbol('angle_d', positive=True)\nangle_e = Symbol('angle_e', positive=True)\nangle_f = Symbol('angle_f', positive=True)\nangle_g = Symbol('angle_g', positive=True)\nangle_h = Symbol('angle_h', positive=True)\nangle_i = Symbol('angle_i', positive=True)\nangle_j = Symbol('angle_j', positive=True)\nangle_k = Symbol('angle_k', positive=True)\nangle_l = Symbol('angle_l', positive=True)\nangle_m = Symbol('angle_m', positive=True)\nangle_n = Symbol('angle_n', positive=True)\nangle_o = Symbol('angle_o', positive=True)\nangle_p = Symbol('angle_p', positive=True)\nangle_q = Symbol('angle_q', positive=True)\nangle_r = Symbol('angle_r', positive=True)\nangle_s = Symbol('angle_s', positive=True)\nangle_t = Symbol('angle_t', positive=True)\nangle_u = Symbol('angle_u', positive=True)\nangle_v = Symbol('angle_v', positive=True)\nangle_w = Symbol('angle_w', positive=True)\nangle_x = Symbol('angle_x', positive=True)\nangle_y = Symbol('angle_y', positive=True)\nangle_z = Symbol('angle_z', positive=True)\nangle_ab = Symbol('angle_ab', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_da = Symbol('angle_da', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_ac = Symbol('angle_ac', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ac = Symbol('angle_ac', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd", "completions": ["angle_a = Symbol('angle_a', positive=True)\nangle_b = Symbol('angle_b', positive=True)\nangle_c = Symbol('angle_c', positive=True)\nangle_d = Symbol('angle_d', positive=True)\nangle_e = Symbol('angle_e', positive=True)\nangle_f = Symbol('angle_f', positive=True)\nangle_g = Symbol('angle_g', positive=True)\nangle_h = Symbol('angle_h', positive=True)\nangle_i = Symbol('angle_i', positive=True)\nangle_j = Symbol('angle_j', positive=True)\nangle_k = Symbol('angle_k', positive=True)\nangle_l = Symbol('angle_l', positive=True)\nangle_m = Symbol('angle_m', positive=True)\nangle_n = Symbol('angle_n', positive=True)\nangle_o = Symbol('angle_o', positive=True)\nangle_p = Symbol('angle_p', positive=True)\nangle_q = Symbol('angle_q', positive=True)\nangle_r = Symbol('angle_r', positive=True)\nangle_s = Symbol('angle_s', positive=True)\nangle_t = Symbol('angle_t', positive=True)\nangle_u = Symbol('angle_u', positive=True)\nangle_v = Symbol('angle_v', positive=True)\nangle_w = Symbol('angle_w', positive=True)\nangle_x = Symbol('angle_x', positive=True)\nangle_y = Symbol('angle_y', positive=True)\nangle_z = Symbol('angle_z', positive=True)\nangle_ab = Symbol('angle_ab', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_da = Symbol('angle_da', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_ac = Symbol('angle_ac', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ac = Symbol('angle_ac', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd', positive=True)\nangle_cd = Symbol('angle_cd', positive=True)\nangle_ad = Symbol('angle_ad', positive=True)\nangle_bc = Symbol('angle_bc', positive=True)\nangle_bd = Symbol('angle_bd"]}
{"id": 110, "answer": "B", "completion": "winter_vacation = Symbol('winter_vacation', positive=True)\nsummer_vacation = Symbol('summer_vacation', positive=True)\nneither_vacation = Symbol('neither_vacation', positive=True)\nsolution = solve_it([winter_vacation + summer_vacation + neither_vacation - 75, summer_vacation - 40, winter_vacation - 20], [winter_vacation, summer_vacation, neither_vacation])\nanswer = solution[summer_vacation]\n\n", "completions": ["winter_vacation = Symbol('winter_vacation', positive=True)\nsummer_vacation = Symbol('summer_vacation', positive=True)\nneither_vacation = Symbol('neither_vacation', positive=True)\nsolution = solve_it([winter_vacation + summer_vacation + neither_vacation - 75, summer_vacation - 40, winter_vacation - 20], [winter_vacation, summer_vacation, neither_vacation])\nanswer = solution[summer_vacation]\n\n"]}
{"id": 111, "answer": "A", "completion": "area = 640\ntop_width = 10\nbottom_width = 6\ndepth = (area * 2 - top_width * bottom_width) / (top_width + bottom_width)\nanswer = depth\n\n", "completions": ["area = 640\ntop_width = 10\nbottom_width = 6\ndepth = (area * 2 - top_width * bottom_width) / (top_width + bottom_width)\nanswer = depth\n\n"]}
{"id": 112, "answer": "A", "completion": "losses = Symbol('losses', positive=True)\nmatches_won = 20\nmatches_lost = Symbol('matches_lost', positive=True)\nsolution = solve_it(matches_won - losses - matches_lost, losses)\nanswer = solution[losses]\n\n", "completions": ["losses = Symbol('losses', positive=True)\nmatches_won = 20\nmatches_lost = Symbol('matches_lost', positive=True)\nsolution = solve_it(matches_won - losses - matches_lost, losses)\nanswer = solution[losses]\n\n"]}
{"id": 113, "answer": "D", "completion": "radius = 10\nangular_speed = 300 * 2 * pi / 60\ntime = 30\ndistance = radius * angular_speed * time\nanswer = distance\n\n", "completions": ["radius = 10\nangular_speed = 300 * 2 * pi / 60\ntime = 30\ndistance = radius * angular_speed * time\nanswer = distance\n\n"]}
{"id": 114, "answer": "B", "completion": "n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n * (n + 4)) + 16) / (n + 4 * sqrt(n + 4))\nsolution = solve_it(x - 20, x - 54, n)\nanswer = solution[n]\n\n", "completions": ["n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n * (n + 4)) + 16) / (n + 4 * sqrt(n + 4))\nsolution = solve_it(x - 20, x - 54, n)\nanswer = solution[n]\n\n"]}
{"id": 115, "answer": "C", "completion": "height = Symbol('height', positive=True)\ntime = Symbol('time', positive=True)\nspeed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([height - 700, time - 40, distance - 5 * time], [height, time, distance])\nanswer = solution[distance]\n\n", "completions": ["height = Symbol('height', positive=True)\ntime = Symbol('time', positive=True)\nspeed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([height - 700, time - 40, distance - 5 * time], [height, time, distance])\nanswer = solution[distance]\n\n"]}
{"id": 116, "answer": "B", "completion": "amount_A = 40000\namount_B = 60000\namount_C = 120000\nprofit = 375000\nprofit_C = profit - amount_A - amount_B\nprofit_B = profit - amount_A - amount_C\nprofit_A = profit - amount_B - amount_C\nmonths_B = solve_it(profit_B - profit_A - profit_C, months)\nanswer = months_B[months]\n\n", "completions": ["amount_A = 40000\namount_B = 60000\namount_C = 120000\nprofit = 375000\nprofit_C = profit - amount_A - amount_B\nprofit_B = profit - amount_A - amount_C\nprofit_A = profit - amount_B - amount_C\nmonths_B = solve_it(profit_B - profit_A - profit_C, months)\nanswer = months_B[months]\n\n"]}
{"id": 117, "answer": "A", "completion": "area = Symbol('area', positive=True)\nradius = Symbol('radius', positive=True)\nsolution = solve_it([area - pi * radius ** 2, 2 * radius - 20], [area, radius])\nanswer = solution[area]\n\n", "completions": ["area = Symbol('area', positive=True)\nradius = Symbol('radius', positive=True)\nsolution = solve_it([area - pi * radius ** 2, 2 * radius - 20], [area, radius])\nanswer = solution[area]\n\n"]}
{"id": 118, "answer": "C", "completion": "miles = Symbol('miles', positive=True)\nhours = Symbol('hours', positive=True)\nmiles_in_4_hours = 4 * miles\nmiles_in_same_hours = miles_in_4_hours + miles\naverage_speed = miles_in_same_hours / hours\nsolution = solve_it(average_speed - (miles + miles / 2), hours)\nanswer = solution[hours]\n\n", "completions": ["miles = Symbol('miles', positive=True)\nhours = Symbol('hours', positive=True)\nmiles_in_4_hours = 4 * miles\nmiles_in_same_hours = miles_in_4_hours + miles\naverage_speed = miles_in_same_hours / hours\nsolution = solve_it(average_speed - (miles + miles / 2), hours)\nanswer = solution[hours]\n\n"]}
{"id": 119, "answer": "A", "completion": "days = Symbol('days', positive=True)\nmen = Symbol('men', positive=True)\nwork = 8 * days\nwork_half_day = work / 2\nsolution = solve_it(work_half_day - men, men)\nanswer = solution[men]\n\n", "completions": ["days = Symbol('days', positive=True)\nmen = Symbol('men', positive=True)\nwork = 8 * days\nwork_half_day = work / 2\nsolution = solve_it(work_half_day - men, men)\nanswer = solution[men]\n\n"]}
{"id": 120, "answer": "A", "completion": "num_boys = 64\nnum_girls = 40\nnum_members = num_boys + num_girls\nnum_boys_joined = num_members / 2\nnum_girls_joined = num_members / 2\nratio = 4 / 3\nnum_boys_now = num_boys_joined / ratio\nnum_girls_now = num_girls_joined * ratio\nanswer = num_boys_now + num_girls_now\n\n", "completions": ["num_boys = 64\nnum_girls = 40\nnum_members = num_boys + num_girls\nnum_boys_joined = num_members / 2\nnum_girls_joined = num_members / 2\nratio = 4 / 3\nnum_boys_now = num_boys_joined / ratio\nnum_girls_now = num_girls_joined * ratio\nanswer = num_boys_now + num_girls_now\n\n"]}
{"id": 121, "answer": "A", "completion": "distance = 48\nspeed = 12\ntime = distance / speed\nanswer = time\n\n", "completions": ["distance = 48\nspeed = 12\ntime = distance / speed\nanswer = time\n\n"]}
{"id": 122, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([distance - 180, speed * time - 3 * 60 * 60], [distance, speed])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([distance - 180, speed * time - 3 * 60 * 60], [distance, speed])\nanswer = solution[distance]\n\n"]}
{"id": 123, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 30, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 30, number)\nanswer = solution[number]\n\n"]}
{"id": 124, "answer": "B", "completion": "man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nsolution = solve_it([man_speed + current_speed - 4, man_speed - 2], [man_speed, current_speed])\nanswer = solution[man_speed]\n\n", "completions": ["man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nsolution = solve_it([man_speed + current_speed - 4, man_speed - 2], [man_speed, current_speed])\nanswer = solution[man_speed]\n\n"]}
{"id": 125, "answer": "A", "completion": "number = Symbol('number', positive=True)\ndigits = [int(digit) for digit in str(number)]\nsum_of_digits = sum(digits)\nsum_of_squares = sum([digit ** 2 for digit in digits])\nsolution = solve_it(sum_of_digits - 17, sum_of_squares - 109, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\ndigits = [int(digit) for digit in str(number)]\nsum_of_digits = sum(digits)\nsum_of_squares = sum([digit ** 2 for digit in digits])\nsolution = solve_it(sum_of_digits - 17, sum_of_squares - 109, number)\nanswer = solution[number]\n\n"]}
{"id": 126, "answer": "B", "completion": "Z = Symbol('Z')\nX = Symbol('X')\nY = Symbol('Y')\nZ_weight = 40 * Z\nX_weight = 60 * X\nY_weight = 60 * Y\nZ_weight_X = 40 * X\nZ_weight_Y = 60 * Y\nsolution = solve_it([Z_weight_X + Z_weight_Y - Z_weight, X + Y - Z], [Z, X])\nanswer = (solution[Z], solution[X])\n\n", "completions": ["Z = Symbol('Z')\nX = Symbol('X')\nY = Symbol('Y')\nZ_weight = 40 * Z\nX_weight = 60 * X\nY_weight = 60 * Y\nZ_weight_X = 40 * X\nZ_weight_Y = 60 * Y\nsolution = solve_it([Z_weight_X + Z_weight_Y - Z_weight, X + Y - Z], [Z, X])\nanswer = (solution[Z], solution[X])\n\n"]}
{"id": 127, "answer": "A", "completion": "bribers = Symbol('bribers', positive=True)\nbribers_hoopsmot = Symbol('bribers_hoopsmot', positive=True)\nbribers_smolapon = Symbol('bribers_smolapon', positive=True)\nsenators = Symbol('senators', positive=True)\nsolution = solve_it([bribers * bribers_hoopsmot - 30, bribers * bribers_smolapon - senators], [bribers, bribers_hoopsmot])\nanswer = solution[bribers_hoopsmot]\n\n", "completions": ["bribers = Symbol('bribers', positive=True)\nbribers_hoopsmot = Symbol('bribers_hoopsmot', positive=True)\nbribers_smolapon = Symbol('bribers_smolapon', positive=True)\nsenators = Symbol('senators', positive=True)\nsolution = solve_it([bribers * bribers_hoopsmot - 30, bribers * bribers_smolapon - senators], [bribers, bribers_hoopsmot])\nanswer = solution[bribers_hoopsmot]\n\n"]}
{"id": 128, "answer": "B", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ndifference = num1 ** 2 - num2 ** 2\nsum_of_numbers = num1 + num2\nsolution = solve_it([difference - 256000, sum_of_numbers - 1000], [num1, num2])\nanswer = (solution[num1], solution[num2])\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ndifference = num1 ** 2 - num2 ** 2\nsum_of_numbers = num1 + num2\nsolution = solve_it([difference - 256000, sum_of_numbers - 1000], [num1, num2])\nanswer = (solution[num1], solution[num2])\n\n"]}
{"id": 129, "answer": "D", "completion": "weight = Symbol('weight', positive=True)\nearth_weight = 211\nvenus_weight = 182\nvenus_percentage = (venus_weight / earth_weight) * 100\nanswer = venus_percentage\n\n", "completions": ["weight = Symbol('weight', positive=True)\nearth_weight = 211\nvenus_weight = 182\nvenus_percentage = (venus_weight / earth_weight) * 100\nanswer = venus_percentage\n\n"]}
{"id": 130, "answer": "C", "completion": "time = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nsolution = solve_it([distance - 5 * time, distance - 12 * time], [time, distance])\nanswer = solution[time] * solution[distance] / 60\n\n", "completions": ["time = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nsolution = solve_it([distance - 5 * time, distance - 12 * time], [time, distance])\nanswer = solution[time] * solution[distance] / 60\n\n"]}
{"id": 131, "answer": "C", "completion": "numerator = (272 - 32) * (124 + 176)\ndenominator = 17 * 15 - 15\nanswer = numerator / denominator\n\n", "completions": ["numerator = (272 - 32) * (124 + 176)\ndenominator = 17 * 15 - 15\nanswer = numerator / denominator\n\n"]}
{"id": 132, "answer": "B", "completion": "total_income = Symbol('total_income', positive=True)\nmedian_income = Symbol('median_income', positive=True)\nsolution = solve_it(total_income - 9000, median_income - 3000)\nanswer = solution[median_income]\n\n", "completions": ["total_income = Symbol('total_income', positive=True)\nmedian_income = Symbol('median_income', positive=True)\nsolution = solve_it(total_income - 9000, median_income - 3000)\nanswer = solution[median_income]\n\n"]}
{"id": 133, "answer": "E", "completion": "fare_of_one_adult = 140\nfare_of_one_child = fare_of_one_adult / 2\ntotal_fare = 4 * fare_of_one_adult + 3 * fare_of_one_child\nanswer = total_fare\n\n", "completions": ["fare_of_one_adult = 140\nfare_of_one_child = fare_of_one_adult / 2\ntotal_fare = 4 * fare_of_one_adult + 3 * fare_of_one_child\nanswer = total_fare\n\n"]}
{"id": 134, "answer": "A", "completion": "num_employees = Symbol('num_employees', positive=True)\ntotal_contribution = 6\ncontribution_per_employee = total_contribution / num_employees\ncontribution_per_employee_with_extra = (total_contribution + 60) / num_employees\nsolution = solve_it(contribution_per_employee_with_extra - contribution_per_employee - 6, num_employees)\nanswer = solution[num_employees]\n\n", "completions": ["num_employees = Symbol('num_employees', positive=True)\ntotal_contribution = 6\ncontribution_per_employee = total_contribution / num_employees\ncontribution_per_employee_with_extra = (total_contribution + 60) / num_employees\nsolution = solve_it(contribution_per_employee_with_extra - contribution_per_employee - 6, num_employees)\nanswer = solution[num_employees]\n\n"]}
{"id": 135, "answer": "B", "completion": "eligible_voters = 5000\neligible_voters_not_voting = 0.2 * eligible_voters\neligible_voters_voting = eligible_voters - eligible_voters_not_voting\nvotes_for_candidate = eligible_voters_voting * 0.15\ntotal_votes = eligible_voters_voting + votes_for_candidate\nanswer = total_votes\n\n", "completions": ["eligible_voters = 5000\neligible_voters_not_voting = 0.2 * eligible_voters\neligible_voters_voting = eligible_voters - eligible_voters_not_voting\nvotes_for_candidate = eligible_voters_voting * 0.15\ntotal_votes = eligible_voters_voting + votes_for_candidate\nanswer = total_votes\n\n"]}
{"id": 136, "answer": "C", "completion": "coins = [Symbol('copper_coin_' + str(i), positive=True) for i in range(5)]\namount = 3.4\ndiver_payment = 0.2 * sum(coins)\nsolution = solve_it(amount - diver_payment, coins)\nanswer = sum(solution)\n\n", "completions": ["coins = [Symbol('copper_coin_' + str(i), positive=True) for i in range(5)]\namount = 3.4\ndiver_payment = 0.2 * sum(coins)\nsolution = solve_it(amount - diver_payment, coins)\nanswer = sum(solution)\n\n"]}
{"id": 137, "answer": "None", "completion": "distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nram_speed = 20\nkrishna_speed = 40\nram_position = distance / 2 + time * ram_speed\nkrishna_position = distance / 2 + time * krishna_speed\nsolution = solve_it([ram_position - krishna_position - 10, ram_position - krishna_position + 10], [distance, time])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nram_speed = 20\nkrishna_speed = 40\nram_position = distance / 2 + time * ram_speed\nkrishna_position = distance / 2 + time * krishna_speed\nsolution = solve_it([ram_position - krishna_position - 10, ram_position - krishna_position + 10], [distance, time])\nanswer = solution[distance]\n\n"]}
{"id": 138, "answer": "None", "completion": "car_speed = Symbol('car_speed', positive=True)\ndistance = 320\ntime = 8\nsolution = solve_it(car_speed * distance - time * car_speed, car_speed)\nanswer = solution[car_speed]\n\n", "completions": ["car_speed = Symbol('car_speed', positive=True)\ndistance = 320\ntime = 8\nsolution = solve_it(car_speed * distance - time * car_speed, car_speed)\nanswer = solution[car_speed]\n\n"]}
{"id": 139, "answer": "A", "completion": "distance_from_home_to_school = 10\ndistance_from_school_to_home = 5\ndistance_from_home_to_school_in_miles = distance_from_home_to_school / 60\ndistance_from_school_to_home_in_miles = distance_from_school_to_home / 60\ntotal_distance = distance_from_home_to_school_in_miles + distance_from_school_to_home_in_miles\nanswer = total_distance\n\n", "completions": ["distance_from_home_to_school = 10\ndistance_from_school_to_home = 5\ndistance_from_home_to_school_in_miles = distance_from_home_to_school / 60\ndistance_from_school_to_home_in_miles = distance_from_school_to_home / 60\ntotal_distance = distance_from_home_to_school_in_miles + distance_from_school_to_home_in_miles\nanswer = total_distance\n\n"]}
{"id": 140, "answer": "B", "completion": "num_balls = Symbol('num_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\nnum_yellow_balls = Symbol('num_yellow_balls', positive=True)\nsolution = solve_it([num_balls - num_white_balls - num_yellow_balls, num_white_balls - 80], [num_balls, num_white_balls])\nanswer = solution[num_yellow_balls]\n\n", "completions": ["num_balls = Symbol('num_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\nnum_yellow_balls = Symbol('num_yellow_balls', positive=True)\nsolution = solve_it([num_balls - num_white_balls - num_yellow_balls, num_white_balls - 80], [num_balls, num_white_balls])\nanswer = solution[num_yellow_balls]\n\n"]}
{"id": 141, "answer": "C", "completion": "height = Symbol('height', positive=True)\nshadow_length = Symbol('shadow_length', positive=True)\nflagstaff_height = 17.5\nflagstaff_shadow_length = 40.25\nbuilding_height = solve_it(shadow_length - 28.75, height)[height]\nanswer = solve_it(building_height - flagstaff_height, height)[height]\n\n", "completions": ["height = Symbol('height', positive=True)\nshadow_length = Symbol('shadow_length', positive=True)\nflagstaff_height = 17.5\nflagstaff_shadow_length = 40.25\nbuilding_height = solve_it(shadow_length - 28.75, height)[height]\nanswer = solve_it(building_height - flagstaff_height, height)[height]\n\n"]}
{"id": 142, "answer": "B", "completion": "first_car_speed = 55\nsecond_car_speed = 52\nfirst_car_distance = 15\nsecond_car_distance = 15\nsolution = solve_it(first_car_speed * first_car_distance - second_car_speed * second_car_distance, t)\nanswer = solution[t]\n\n", "completions": ["first_car_speed = 55\nsecond_car_speed = 52\nfirst_car_distance = 15\nsecond_car_distance = 15\nsolution = solve_it(first_car_speed * first_car_distance - second_car_speed * second_car_distance, t)\nanswer = solution[t]\n\n"]}
{"id": 143, "answer": "B", "completion": "prob_A = 0.6\nprob_A_and_B = 0.96\nprob_B = 1 - prob_A_and_B / prob_A\nanswer = prob_B\n\n", "completions": ["prob_A = 0.6\nprob_A_and_B = 0.96\nprob_B = 1 - prob_A_and_B / prob_A\nanswer = prob_B\n\n"]}
{"id": 144, "answer": "B", "completion": "cube_volume = Symbol('cube_volume', positive=True)\nsphere_volume = Symbol('sphere_volume', positive=True)\ncube_dimensions = Symbol('cube_dimensions', positive=True)\nsphere_dimensions = Symbol('sphere_dimensions', positive=True)\nsolution = solve_it([cube_volume / sphere_volume - cube_dimensions / sphere_dimensions, cube_volume / sphere_volume - 2 / 3], [cube_volume, sphere_volume])\nanswer = (solution[cube_volume], solution[sphere_volume])\n\n", "completions": ["cube_volume = Symbol('cube_volume', positive=True)\nsphere_volume = Symbol('sphere_volume', positive=True)\ncube_dimensions = Symbol('cube_dimensions', positive=True)\nsphere_dimensions = Symbol('sphere_dimensions', positive=True)\nsolution = solve_it([cube_volume / sphere_volume - cube_dimensions / sphere_dimensions, cube_volume / sphere_volume - 2 / 3], [cube_volume, sphere_volume])\nanswer = (solution[cube_volume], solution[sphere_volume])\n\n"]}
{"id": 145, "answer": "A", "completion": "red_ties = 8\nviolet_ties = 13\nblue_ties = 10\npink_ties = 5\ngreen_ties = 4\nties_of_same_colour = 2\ntotal_ties = red_ties + violet_ties + blue_ties + pink_ties + green_ties\nanswer = total_ties - (red_ties + violet_ties + blue_ties + pink_ties + green_ties) % (ties_of_same_colour * 5)\n\n", "completions": ["red_ties = 8\nviolet_ties = 13\nblue_ties = 10\npink_ties = 5\ngreen_ties = 4\nties_of_same_colour = 2\ntotal_ties = red_ties + violet_ties + blue_ties + pink_ties + green_ties\nanswer = total_ties - (red_ties + violet_ties + blue_ties + pink_ties + green_ties) % (ties_of_same_colour * 5)\n\n"]}
{"id": 146, "answer": "B", "completion": "answer = 25 / 12 * 5\n\n", "completions": ["answer = 25 / 12 * 5\n\n"]}
{"id": 147, "answer": "A", "completion": "log_value = Symbol('log_value', positive=True)\nbase = 2\nsolution = solve_it(log_value - log(4, base), log_value)\nanswer = solution[log_value]\n\n", "completions": ["log_value = Symbol('log_value', positive=True)\nbase = 2\nsolution = solve_it(log_value - log(4, base), log_value)\nanswer = solution[log_value]\n\n"]}
{"id": 148, "answer": "D", "completion": "amount_purchased = 90 * 450\namount_sold = 90 * 750\npercentage_gain = (amount_sold - amount_purchased) / amount_purchased * 100\nanswer = percentage_gain\n\n", "completions": ["amount_purchased = 90 * 450\namount_sold = 90 * 750\npercentage_gain = (amount_sold - amount_purchased) / amount_purchased * 100\nanswer = percentage_gain\n\n"]}
{"id": 149, "answer": "B", "completion": "train_M_time = Symbol('train_M_time', positive=True)\ntrain_N_time = Symbol('train_N_time', positive=True)\nsolution = solve_it([train_M_time - 9, train_N_time - 5], [train_M_time, train_N_time])\nanswer = solution[train_M_time]\n\n", "completions": ["train_M_time = Symbol('train_M_time', positive=True)\ntrain_N_time = Symbol('train_N_time', positive=True)\nsolution = solve_it([train_M_time - 9, train_N_time - 5], [train_M_time, train_N_time])\nanswer = solution[train_M_time]\n\n"]}
{"id": 150, "answer": "[invalid]", "completion": "distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nj_speed = 20\nj_time = distance / j_speed\nj_time_in_minutes = j_time * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_", "completions": ["distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nj_speed = 20\nj_time = distance / j_speed\nj_time_in_minutes = j_time * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_time_in_minutes / 60\nj_time_in_days = j_time_in_hours / 24\nj_time_in_years = j_time_in_days / 365\nj_time_in_minutes = j_time_in_years * 365 * 24 * 60\nj_time_in_hours = j_"]}
{"id": 151, "answer": "None", "completion": "M = Symbol('M', positive=True)\nmax_marks = M\ncandidate_marks = 504\nmax_marks_converted = 800\ncandidate_marks_converted = 420\nsolution = solve_it(candidate_marks_converted - candidate_marks, max_marks)\nanswer = solution[max_marks]\n\n", "completions": ["M = Symbol('M', positive=True)\nmax_marks = M\ncandidate_marks = 504\nmax_marks_converted = 800\ncandidate_marks_converted = 420\nsolution = solve_it(candidate_marks_converted - candidate_marks, max_marks)\nanswer = solution[max_marks]\n\n"]}
{"id": 152, "answer": "C", "completion": "bottles_needed = Symbol('bottles_needed', positive=True)\npeople_attending = Symbol('people_attending', positive=True)\nsolution = solve_it(bottles_needed - 10 * people_attending / 8, bottles_needed)\nanswer = solution[bottles_needed]\n\n", "completions": ["bottles_needed = Symbol('bottles_needed', positive=True)\npeople_attending = Symbol('people_attending', positive=True)\nsolution = solve_it(bottles_needed - 10 * people_attending / 8, bottles_needed)\nanswer = solution[bottles_needed]\n\n"]}
{"id": 153, "answer": "A", "completion": "shadow_length = Symbol('shadow_length', positive=True)\ntaller_ant_height = Symbol('taller_ant_height', positive=True)\nshorter_ant_height = Symbol('shorter_ant_height', positive=True)\nsolution = solve_it([shadow_length - 10, taller_ant_height - shorter_ant_height - 4], [shadow_length, taller_ant_height])\nanswer = solution[shadow_length]\n\n", "completions": ["shadow_length = Symbol('shadow_length', positive=True)\ntaller_ant_height = Symbol('taller_ant_height', positive=True)\nshorter_ant_height = Symbol('shorter_ant_height', positive=True)\nsolution = solve_it([shadow_length - 10, taller_ant_height - shorter_ant_height - 4], [shadow_length, taller_ant_height])\nanswer = solution[shadow_length]\n\n"]}
{"id": 154, "answer": "B", "completion": "height = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nwall_paper_cost = 260\nwall_paper_width = 50\nwall_paper_area = 15\ndoor_and_window_area = wall_paper_area - wall_paper_area\ntotal_area = 2 * height * semi_perimeter + door_and_window_area\nsolution = solve_it(total_area - wall_paper_cost, height)\nanswer = solution[height]\n\n", "completions": ["height = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nwall_paper_cost = 260\nwall_paper_width = 50\nwall_paper_area = 15\ndoor_and_window_area = wall_paper_area - wall_paper_area\ntotal_area = 2 * height * semi_perimeter + door_and_window_area\nsolution = solve_it(total_area - wall_paper_cost, height)\nanswer = solution[height]\n\n"]}
{"id": 155, "answer": "A", "completion": "k = Symbol('k', positive=True)\nsum_of_k_consecutive_integers = k * (k + 1) / 2\nsolution = solve_it(sum_of_k_consecutive_integers - 51, k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k', positive=True)\nsum_of_k_consecutive_integers = k * (k + 1) / 2\nsolution = solve_it(sum_of_k_consecutive_integers - 51, k)\nanswer = solution[k]\n\n"]}
{"id": 156, "answer": "B", "completion": "num_songs = 10\nnum_times_each_song_selected = 5\nnum_students = num_songs * num_times_each_song_selected\nanswer = num_students\n\n", "completions": ["num_songs = 10\nnum_times_each_song_selected = 5\nnum_students = num_songs * num_times_each_song_selected\nanswer = num_students\n\n"]}
{"id": 157, "answer": "E", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nsolution = solve_it([a * x ** 2 + b * x + c - 1.5, a * x ** 2 + b * x + c - 22], [a, b])\nanswer = solution[b]\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nsolution = solve_it([a * x ** 2 + b * x + c - 1.5, a * x ** 2 + b * x + c - 22], [a, b])\nanswer = solution[b]\n\n"]}
{"id": 158, "answer": "A", "completion": "speakers = 10\npm_speakers = 2\nmp_speakers = 3\nmla_speakers = 5\npm_speakers_left = speakers - pm_speakers\nmp_speakers_left = speakers - mp_speakers\nmla_speakers_left = speakers - mla_speakers\npm_speakers_left_mp_speakers_left = pm_speakers_left * mp_speakers_left\nmp_speakers_left_mla_speakers_left = mp_speakers_left * mla_speakers_left\nmla_speakers_left_pm_speakers_left = mla_speakers_left * pm_speakers_left\nanswer = factorial(speakers) / (factorial(pm_speakers) * factorial(mp_speakers) * factorial(mla_speakers) * factorial(pm_speakers_left) * factorial(mp_speakers_left) * factorial(mla_speakers_left) * factorial(pm_speakers_left_mp_speakers_left) * factorial(mp_speakers_left_mla_speakers_left) * factorial(mla_speakers_left_pm_speakers_left))\n\n", "completions": ["speakers = 10\npm_speakers = 2\nmp_speakers = 3\nmla_speakers = 5\npm_speakers_left = speakers - pm_speakers\nmp_speakers_left = speakers - mp_speakers\nmla_speakers_left = speakers - mla_speakers\npm_speakers_left_mp_speakers_left = pm_speakers_left * mp_speakers_left\nmp_speakers_left_mla_speakers_left = mp_speakers_left * mla_speakers_left\nmla_speakers_left_pm_speakers_left = mla_speakers_left * pm_speakers_left\nanswer = factorial(speakers) / (factorial(pm_speakers) * factorial(mp_speakers) * factorial(mla_speakers) * factorial(pm_speakers_left) * factorial(mp_speakers_left) * factorial(mla_speakers_left) * factorial(pm_speakers_left_mp_speakers_left) * factorial(mp_speakers_left_mla_speakers_left) * factorial(mla_speakers_left_pm_speakers_left))\n\n"]}
{"id": 159, "answer": "B", "completion": "price = Symbol('price', positive=True)\ndiscount = 0.15\nnew_price = price * (1 - discount)\nsolution = solve_it(new_price - 300 / 5, price)\nanswer = solution[price]\n\n", "completions": ["price = Symbol('price', positive=True)\ndiscount = 0.15\nnew_price = price * (1 - discount)\nsolution = solve_it(new_price - 300 / 5, price)\nanswer = solution[price]\n\n"]}
{"id": 160, "answer": "B", "completion": "children = Symbol('children', positive=True)\nneha = 12\nradha = 6\nsolution = solve_it([children - neha - radha, children - neha + radha, children + neha - radha, children + neha + radha], [children])\nanswer = solution[children]\n\n", "completions": ["children = Symbol('children', positive=True)\nneha = 12\nradha = 6\nsolution = solve_it([children - neha - radha, children - neha + radha, children + neha - radha, children + neha + radha], [children])\nanswer = solution[children]\n\n"]}
{"id": 161, "answer": "A", "completion": "sand = Symbol('sand', positive=True)\nclay = Symbol('clay', positive=True)\nmix = 10\nmix_sand = 30\nmix_clay = 70\nsolution = solve_it([sand + clay - mix, sand - mix_sand, clay - mix_clay], [sand, clay])\nanswer = solution[sand]\n\n", "completions": ["sand = Symbol('sand', positive=True)\nclay = Symbol('clay', positive=True)\nmix = 10\nmix_sand = 30\nmix_clay = 70\nsolution = solve_it([sand + clay - mix, sand - mix_sand, clay - mix_clay], [sand, clay])\nanswer = solution[sand]\n\n"]}
{"id": 162, "answer": "None", "completion": "income = Symbol('income', positive=True)\nexpenditure = Symbol('expenditure', positive=True)\npercentage = Symbol('percentage', positive=True)\nsolution = solve_it([expenditure - 0.7 * income, 0.2 * income - expenditure], [income, expenditure])\nanswer = solution[expenditure]\n\n", "completions": ["income = Symbol('income', positive=True)\nexpenditure = Symbol('expenditure', positive=True)\npercentage = Symbol('percentage', positive=True)\nsolution = solve_it([expenditure - 0.7 * income, 0.2 * income - expenditure], [income, expenditure])\nanswer = solution[expenditure]\n\n"]}
{"id": 163, "answer": "C", "completion": "red_tulips = Symbol('red_tulips', positive=True)\nwhite_tulips = Symbol('white_tulips', positive=True)\nsolution = solve_it([red_tulips + white_tulips - 28, red_tulips * white_tulips - 98], [red_tulips, white_tulips])\nanswer = solution[red_tulips]\n\n", "completions": ["red_tulips = Symbol('red_tulips', positive=True)\nwhite_tulips = Symbol('white_tulips', positive=True)\nsolution = solve_it([red_tulips + white_tulips - 28, red_tulips * white_tulips - 98], [red_tulips, white_tulips])\nanswer = solution[red_tulips]\n\n"]}
{"id": 164, "answer": "A", "completion": "Sharon = Symbol('Sharon', positive=True)\nKaren = Symbol('Karen', positive=True)\nSharon_tips = Symbol('Sharon_tips', positive=True)\nKaren_tips = Symbol('Karen_tips', positive=True)\nSharon_tips_per_hour = Symbol('Sharon_tips_per_hour', positive=True)\nKaren_tips_per_hour = Symbol('Karen_tips_per_hour', positive=True)\nSharon_tips_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren", "completions": ["Sharon = Symbol('Sharon', positive=True)\nKaren = Symbol('Karen', positive=True)\nSharon_tips = Symbol('Sharon_tips', positive=True)\nKaren_tips = Symbol('Karen_tips', positive=True)\nSharon_tips_per_hour = Symbol('Sharon_tips_per_hour', positive=True)\nKaren_tips_per_hour = Symbol('Karen_tips_per_hour', positive=True)\nSharon_tips_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Karen_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nSharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour = Symbol('Sharon_tips_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour_per_hour', positive=True)\nKaren"]}
{"id": 165, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x ** 3, y ** 2], [x, y])\nx_value = solution[x]\ny_value = solution[y]\nanswer = 'B)'\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x ** 3, y ** 2], [x, y])\nx_value = solution[x]\ny_value = solution[y]\nanswer = 'B)'\n\n"]}
{"id": 166, "answer": "C", "completion": "printer_a_speed = Symbol('printer_a_speed', positive=True)\nprinter_b_speed = Symbol('printer_b_speed', positive=True)\npages = 100\nsolution = solve_it([printer_a_speed + printer_b_speed - pages / 2, printer_a_speed - pages / 2], [printer_a_speed, printer_b_speed])\nanswer = solution[printer_a_speed]\n\n", "completions": ["printer_a_speed = Symbol('printer_a_speed', positive=True)\nprinter_b_speed = Symbol('printer_b_speed', positive=True)\npages = 100\nsolution = solve_it([printer_a_speed + printer_b_speed - pages / 2, printer_a_speed - pages / 2], [printer_a_speed, printer_b_speed])\nanswer = solution[printer_a_speed]\n\n"]}
{"id": 167, "answer": "B", "completion": "ant_a_speed = 9 / 60\nant_b_speed = 6 / 60\ndistance = 75\ntime = Symbol('time', positive=True)\nsolution = solve_it(ant_a_speed * time - ant_b_speed * time - distance, time)\nanswer = solution[time]\n\n", "completions": ["ant_a_speed = 9 / 60\nant_b_speed = 6 / 60\ndistance = 75\ntime = Symbol('time', positive=True)\nsolution = solve_it(ant_a_speed * time - ant_b_speed * time - distance, time)\nanswer = solution[time]\n\n"]}
{"id": 168, "answer": "E", "completion": "property_worth = Symbol('property_worth', positive=True)\nrecorded_property_worth = Symbol('recorded_property_worth', positive=True)\nsolution = solve_it([recorded_property_worth - property_worth, recorded_property_worth - property_worth // 100 * 100], [property_worth, recorded_property_worth])\nanswer = solution[property_worth]\n\n", "completions": ["property_worth = Symbol('property_worth', positive=True)\nrecorded_property_worth = Symbol('recorded_property_worth', positive=True)\nsolution = solve_it([recorded_property_worth - property_worth, recorded_property_worth - property_worth // 100 * 100], [property_worth, recorded_property_worth])\nanswer = solution[property_worth]\n\n"]}
{"id": 169, "answer": "B", "completion": "shirt = Symbol('shirt', positive=True)\ntrouser = Symbol('trouser', positive=True)\nshirt_price = 30\ntrouser_price = 70\nsolution = solve_it([shirt * shirt_price - 810, trouser * trouser_price - 810], [shirt, trouser])\nanswer = (solution[shirt], solution[trouser])\n\n", "completions": ["shirt = Symbol('shirt', positive=True)\ntrouser = Symbol('trouser', positive=True)\nshirt_price = 30\ntrouser_price = 70\nsolution = solve_it([shirt * shirt_price - 810, trouser * trouser_price - 810], [shirt, trouser])\nanswer = (solution[shirt], solution[trouser])\n\n"]}
{"id": 170, "answer": "A", "completion": "cover_price = Symbol('cover_price', positive=True)\nsubscription_price = 42\nsaving = 0.25\nsolution = solve_it(subscription_price - saving * cover_price, cover_price)\nanswer = solution[cover_price]\n\n", "completions": ["cover_price = Symbol('cover_price', positive=True)\nsubscription_price = 42\nsaving = 0.25\nsolution = solve_it(subscription_price - saving * cover_price, cover_price)\nanswer = solution[cover_price]\n\n"]}
{"id": 171, "answer": "A", "completion": "number_of_heads = Symbol('number_of_heads', positive=True)\nnumber_of_tails = 20 - number_of_heads\nsolution = solve_it(number_of_heads - 10, number_of_heads)\nanswer = solution[number_of_heads]\n\n", "completions": ["number_of_heads = Symbol('number_of_heads', positive=True)\nnumber_of_tails = 20 - number_of_heads\nsolution = solve_it(number_of_heads - 10, number_of_heads)\nanswer = solution[number_of_heads]\n\n"]}
{"id": 172, "answer": "B", "completion": "X = Symbol('X')\nY = Symbol('Y')\nAllen_speed = 54\nBob_speed = 78\nAllen_distance = 54 * 2 * (X - Y) / (X - Y)\nBob_distance = 78 * 2 * (X - Y) / (Y - X)\nsolution = solve_it(Allen_distance - Bob_distance - 48, X - Y)\nanswer = solution[X - Y]\n\n", "completions": ["X = Symbol('X')\nY = Symbol('Y')\nAllen_speed = 54\nBob_speed = 78\nAllen_distance = 54 * 2 * (X - Y) / (X - Y)\nBob_distance = 78 * 2 * (X - Y) / (Y - X)\nsolution = solve_it(Allen_distance - Bob_distance - 48, X - Y)\nanswer = solution[X - Y]\n\n"]}
{"id": 173, "answer": "D", "completion": "cost_of_new_tires = 180\ncost_of_repair = 40\ncost_of_new_tires_per_year = cost_of_new_tires * 4\ncost_of_repair_per_year = cost_of_repair * 4\ncost_of_new_tires_per_year_percent_increase = (cost_of_new_tires_per_year - cost_of_repair_per_year) / cost_of_repair_per_year * 100\nanswer = cost_of_new_tires_per_year_percent_increase\n\n", "completions": ["cost_of_new_tires = 180\ncost_of_repair = 40\ncost_of_new_tires_per_year = cost_of_new_tires * 4\ncost_of_repair_per_year = cost_of_repair * 4\ncost_of_new_tires_per_year_percent_increase = (cost_of_new_tires_per_year - cost_of_repair_per_year) / cost_of_repair_per_year * 100\nanswer = cost_of_new_tires_per_year_percent_increase\n\n"]}
{"id": 174, "answer": "B", "completion": "length_1 = Symbol('length_1', positive=True)\nlength_2 = Symbol('length_2', positive=True)\nsolution = solve_it([length_1 + length_2 - 20, length_1 - length_2 - 3], [length_1, length_2])\nanswer = solution[length_1]\n\n", "completions": ["length_1 = Symbol('length_1', positive=True)\nlength_2 = Symbol('length_2', positive=True)\nsolution = solve_it([length_1 + length_2 - 20, length_1 - length_2 - 3], [length_1, length_2])\nanswer = solution[length_1]\n\n"]}
{"id": 175, "answer": "C", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\ninterest = amount * (1 + interest_rate / 2) ** 2\nanswer = interest\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\ninterest = amount * (1 + interest_rate / 2) ** 2\nanswer = interest\n\n"]}
{"id": 176, "answer": "A", "completion": "answer = '9 2 0 0'\n\n", "completions": ["answer = '9 2 0 0'\n\n"]}
{"id": 177, "answer": "B", "completion": "sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_back = sachin_age - 2\nsachin_age_10_years_later = sachin_age + 10\najay_age_10_years_back = solve_it(sachin_age_10_years_back - ajay_age, ajay_age)[ajay_age]\najay_age_10_years_later = solve_it(sachin_age_10_years_later - ajay_age, ajay_age)[ajay_age]\nanswer = ajay_age_10_years_later - ajay_age_10_years_back\n\n", "completions": ["sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_back = sachin_age - 2\nsachin_age_10_years_later = sachin_age + 10\najay_age_10_years_back = solve_it(sachin_age_10_years_back - ajay_age, ajay_age)[ajay_age]\najay_age_10_years_later = solve_it(sachin_age_10_years_later - ajay_age, ajay_age)[ajay_age]\nanswer = ajay_age_10_years_later - ajay_age_10_years_back\n\n"]}
{"id": 178, "answer": "A", "completion": "perimeter = 340\ncost_per_square_meter = 10\ncost = perimeter * cost_per_square_meter\nanswer = cost\n\n", "completions": ["perimeter = 340\ncost_per_square_meter = 10\ncost = perimeter * cost_per_square_meter\nanswer = cost\n\n"]}
{"id": 179, "answer": "B", "completion": "novels_percent = Symbol('novels_percent', positive=True)\nbiographies_percent = Symbol('biographies_percent', positive=True)\nsolution = solve_it([novels_percent - 34, biographies_percent - 1/3], [novels_percent, biographies_percent])\nanswer = solution[novels_percent]\n\n", "completions": ["novels_percent = Symbol('novels_percent', positive=True)\nbiographies_percent = Symbol('biographies_percent', positive=True)\nsolution = solve_it([novels_percent - 34, biographies_percent - 1/3], [novels_percent, biographies_percent])\nanswer = solution[novels_percent]\n\n"]}
{"id": 180, "answer": "C", "completion": "percentage = 0.05\ntotal_flowers = 8\nflowers_bypassed = percentage * total_flowers\nflowers_visited = total_flowers - flowers_bypassed\nanswer = flowers_visited\n\n", "completions": ["percentage = 0.05\ntotal_flowers = 8\nflowers_bypassed = percentage * total_flowers\nflowers_visited = total_flowers - flowers_bypassed\nanswer = flowers_visited\n\n"]}
{"id": 181, "answer": "A", "completion": "from math import factorial\nlunches = Symbol('lunches', positive=True)\ndinners = Symbol('dinners', positive=True)\noptions = factorial(3) * factorial(3)\nsolution = solve_it([lunches + dinners - 3, lunches - 3, dinners - 3], [lunches, dinners])\nanswer = solution[lunches] * solution[dinners]\n\n", "completions": ["from math import factorial\nlunches = Symbol('lunches', positive=True)\ndinners = Symbol('dinners', positive=True)\noptions = factorial(3) * factorial(3)\nsolution = solve_it([lunches + dinners - 3, lunches - 3, dinners - 3], [lunches, dinners])\nanswer = solution[lunches] * solution[dinners]\n\n"]}
{"id": 182, "answer": "B", "completion": "a2 - b2/(a + b)2 (?)=(a - b)2\n# Answer option: ['A)(a + b)(a - b)', 'B)(a - b)2', 'C)(a + b)2', 'D)a3 + b3', 'E)None of these']\n\n", "completions": ["a2 - b2/(a + b)2 (?)=(a - b)2\n# Answer option: ['A)(a + b)(a - b)', 'B)(a - b)2', 'C)(a + b)2', 'D)a3 + b3', 'E)None of these']\n\n"]}
{"id": 183, "answer": "[invalid]", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 36, number - 86)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 36, number - 86)\nanswer = solution[number]\n\n"]}
{"id": 184, "answer": "B", "completion": "pallets_per_crate = 1250\npallets_per_shipment = 4 * pallets_per_crate\nphones_per_shipment = pallets_per_shipment * pallets_per_crate\nanswer = phones_per_shipment\n\n", "completions": ["pallets_per_crate = 1250\npallets_per_shipment = 4 * pallets_per_crate\nphones_per_shipment = pallets_per_shipment * pallets_per_crate\nanswer = phones_per_shipment\n\n"]}
{"id": 185, "answer": "B", "completion": "A = Symbol('A')\nB = Symbol('B')\ntime_A = 40 / 60\ntime_B = 45 / 60\ntime_together = A + B\nsolution = solve_it(time_together - time_A - time_B, A)\nanswer = solution[A]\n\n", "completions": ["A = Symbol('A')\nB = Symbol('B')\ntime_A = 40 / 60\ntime_B = 45 / 60\ntime_together = A + B\nsolution = solve_it(time_together - time_A - time_B, A)\nanswer = solution[A]\n\n"]}
{"id": 186, "answer": "B", "completion": "time = Symbol('time', positive=True)\ndistance = 1\nspeed = 120 / 60\nsolution = solve_it(time - distance / speed, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\ndistance = 1\nspeed = 120 / 60\nsolution = solve_it(time - distance / speed, time)\nanswer = solution[time]\n\n"]}
{"id": 187, "answer": "A", "completion": "amount = 20000\ndiscount = 0.04\ndiscount_duration = 30\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(amount * (1 + interest_rate / 100) ** discount_duration - amount * (1 - discount / 100), interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["amount = 20000\ndiscount = 0.04\ndiscount_duration = 30\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(amount * (1 + interest_rate / 100) ** discount_duration - amount * (1 - discount / 100), interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 188, "answer": "C", "completion": "group_1 = Symbol('group_1', positive=True)\ngroup_2 = Symbol('group_2', positive=True)\nsolution = solve_it([group_1 * group_2 - 10, group_1 + group_2 - 5], [group_1, group_2])\nanswer = solution[group_1]\n\n", "completions": ["group_1 = Symbol('group_1', positive=True)\ngroup_2 = Symbol('group_2', positive=True)\nsolution = solve_it([group_1 * group_2 - 10, group_1 + group_2 - 5], [group_1, group_2])\nanswer = solution[group_1]\n\n"]}
{"id": 189, "answer": "D", "completion": "rice = Symbol('rice', positive=True)\nwheat = Symbol('wheat', positive=True)\ncorn = Symbol('corn', positive=True)\nsolution = solve_it([3 * rice - 3, 2 * (rice + wheat) - 5, 3 * (rice + wheat + corn) - 15], [rice, wheat, corn])\nanswer = solution[corn]\n\n", "completions": ["rice = Symbol('rice', positive=True)\nwheat = Symbol('wheat', positive=True)\ncorn = Symbol('corn', positive=True)\nsolution = solve_it([3 * rice - 3, 2 * (rice + wheat) - 5, 3 * (rice + wheat + corn) - 15], [rice, wheat, corn])\nanswer = solution[corn]\n\n"]}
{"id": 190, "answer": "C", "completion": "soda = Symbol('soda', positive=True)\nenergy_bar = Symbol('energy_bar', positive=True)\ncost = 150\ncost_with_six_sodas_and_seven_bars = cost + (6 * soda + 7 * energy_bar)\nsolution = solve_it(cost_with_six_sodas_and_seven_bars - 600, [soda, energy_bar])\nanswer = solution[soda]\n\n", "completions": ["soda = Symbol('soda', positive=True)\nenergy_bar = Symbol('energy_bar', positive=True)\ncost = 150\ncost_with_six_sodas_and_seven_bars = cost + (6 * soda + 7 * energy_bar)\nsolution = solve_it(cost_with_six_sodas_and_seven_bars - 600, [soda, energy_bar])\nanswer = solution[soda]\n\n"]}
{"id": 191, "answer": "None", "completion": "produced_cost = Symbol('produced_cost', positive=True)\nrejected_percentage = 0.1\nrejected_cost = produced_cost * rejected_percentage\nwholesaler_price = 10\nwholesaler_profit = 0.25\nwholesaler_cost = wholesaler_price - wholesaler_profit\nsolution = solve_it(wholesaler_cost - rejected_cost - 7200, produced_cost)\nanswer = solution[produced_cost]\n\n", "completions": ["produced_cost = Symbol('produced_cost', positive=True)\nrejected_percentage = 0.1\nrejected_cost = produced_cost * rejected_percentage\nwholesaler_price = 10\nwholesaler_profit = 0.25\nwholesaler_cost = wholesaler_price - wholesaler_profit\nsolution = solve_it(wholesaler_cost - rejected_cost - 7200, produced_cost)\nanswer = solution[produced_cost]\n\n"]}
{"id": 192, "answer": "A", "completion": "num = Symbol('num', positive=True)\ndigit_1 = Symbol('digit_1', positive=True)\ndigit_2 = Symbol('digit_2', positive=True)\nsolution = solve_it([num - digit_1 * 10 - digit_2, digit_1 - 2 * digit_2], [num, digit_1, digit_2])\nanswer = solution[num]\n\n", "completions": ["num = Symbol('num', positive=True)\ndigit_1 = Symbol('digit_1', positive=True)\ndigit_2 = Symbol('digit_2', positive=True)\nsolution = solve_it([num - digit_1 * 10 - digit_2, digit_1 - 2 * digit_2], [num, digit_1, digit_2])\nanswer = solution[num]\n\n"]}
{"id": 193, "answer": "C", "completion": "L = Symbol('L')\nR = Symbol('R')\nsolution = solve_it(L - R, L)\nanswer = solution[L]\n\n", "completions": ["L = Symbol('L')\nR = Symbol('R')\nsolution = solve_it(L - R, L)\nanswer = solution[L]\n\n"]}
{"id": 194, "answer": "B", "completion": "bell_1_ringing_time = Symbol('bell_1_ringing_time', positive=True)\nbell_2_ringing_time = Symbol('bell_2_ringing_time', positive=True)\nbell_3_ringing_time = Symbol('bell_3_ringing_time', positive=True)\nbell_1_ringing_time_after_6_minutes = bell_1_ringing_time + 36\nbell_2_ringing_time_after_6_minutes = bell_2_ringing_time + 40\nbell_3_ringing_time_after_6_minutes = bell_3_ringing_time + 48\nsolution = solve_it([bell_1_ringing_time_after_6_minutes - bell_2_ringing_time_after_6_minutes, bell_1_ringing_time_after_6_minutes - bell_3_ringing_time_after_6_minutes], [bell_1_ringing_time, bell_2_ringing_time])\nanswer = (solution[bell_1_ringing_time], solution[bell_2_ringing_time])\n\n", "completions": ["bell_1_ringing_time = Symbol('bell_1_ringing_time', positive=True)\nbell_2_ringing_time = Symbol('bell_2_ringing_time', positive=True)\nbell_3_ringing_time = Symbol('bell_3_ringing_time', positive=True)\nbell_1_ringing_time_after_6_minutes = bell_1_ringing_time + 36\nbell_2_ringing_time_after_6_minutes = bell_2_ringing_time + 40\nbell_3_ringing_time_after_6_minutes = bell_3_ringing_time + 48\nsolution = solve_it([bell_1_ringing_time_after_6_minutes - bell_2_ringing_time_after_6_minutes, bell_1_ringing_time_after_6_minutes - bell_3_ringing_time_after_6_minutes], [bell_1_ringing_time, bell_2_ringing_time])\nanswer = (solution[bell_1_ringing_time], solution[bell_2_ringing_time])\n\n"]}
{"id": 195, "answer": "B", "completion": "pole_height = 14\nshadow_length = 10\ntree_height = Symbol('tree_height', positive=True)\nsolution = solve_it(tree_height * tree_height - pole_height * pole_height - shadow_length * shadow_length, tree_height)\nanswer = solution[tree_height]\n\n", "completions": ["pole_height = 14\nshadow_length = 10\ntree_height = Symbol('tree_height', positive=True)\nsolution = solve_it(tree_height * tree_height - pole_height * pole_height - shadow_length * shadow_length, tree_height)\nanswer = solution[tree_height]\n\n"]}
{"id": 196, "answer": "C", "completion": "orange_price = 18\npineapple_price = 27\ngrape_price = 15\nmango_price = (orange_price + pineapple_price + grape_price) / 3\nanswer = mango_price\n\n", "completions": ["orange_price = 18\npineapple_price = 27\ngrape_price = 15\nmango_price = (orange_price + pineapple_price + grape_price) / 3\nanswer = mango_price\n\n"]}
{"id": 197, "answer": "A", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\narea = (a * y - b * y) / 2\nsolution = solve_it(area - (a * x - b * x) / 2, y)\nanswer = solution[y]\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\narea = (a * y - b * y) / 2\nsolution = solve_it(area - (a * x - b * x) / 2, y)\nanswer = solution[y]\n\n"]}
{"id": 198, "answer": "A", "completion": "speed = Symbol('speed', positive=True)\ntime = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([speed * time - distance, time / 2 - 20], [speed, time])\nanswer = solution[speed]\n\n", "completions": ["speed = Symbol('speed', positive=True)\ntime = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nsolution = solve_it([speed * time - distance, time / 2 - 20], [speed, time])\nanswer = solution[speed]\n\n"]}
{"id": 199, "answer": "A", "completion": "probability_alan = 1 / 5\nprobability_roger = 2 / 3\nprobability_peter = 5 / 6\nprobability_alan_roger = probability_alan * probability_roger\nprobability_alan_peter = probability_alan * probability_peter\nprobability_roger_peter = probability_roger * probability_peter\nprobability_alan_roger_peter = probability_alan_roger * probability_peter\nanswer = 1 - probability_alan_roger_peter\n\n", "completions": ["probability_alan = 1 / 5\nprobability_roger = 2 / 3\nprobability_peter = 5 / 6\nprobability_alan_roger = probability_alan * probability_roger\nprobability_alan_peter = probability_alan * probability_peter\nprobability_roger_peter = probability_roger * probability_peter\nprobability_alan_roger_peter = probability_alan_roger * probability_peter\nanswer = 1 - probability_alan_roger_peter\n\n"]}
{"id": 200, "answer": "B", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 201, "answer": "B", "completion": "infected_by_virus = Symbol('infected_by_virus', positive=True)\ninfected_by_worm = Symbol('infected_by_worm', positive=True)\ninfected_by_virus_and_worm = Symbol('infected_by_virus_and_worm', positive=True)\ninfected_by_virus_only = Symbol('infected_by_virus_only', positive=True)\ninfected_by_worm_only = Symbol('infected_by_worm_only', positive=True)\nsolution = solve_it([infected_by_virus_only - infected_by_virus / 2, infected_by_worm_only - infected_by_virus_and_worm * 2.5], [infected_by_virus_only, infected_by_worm_only])\nanswer = solution[infected_by_worm_only]\n\n", "completions": ["infected_by_virus = Symbol('infected_by_virus', positive=True)\ninfected_by_worm = Symbol('infected_by_worm', positive=True)\ninfected_by_virus_and_worm = Symbol('infected_by_virus_and_worm', positive=True)\ninfected_by_virus_only = Symbol('infected_by_virus_only', positive=True)\ninfected_by_worm_only = Symbol('infected_by_worm_only', positive=True)\nsolution = solve_it([infected_by_virus_only - infected_by_virus / 2, infected_by_worm_only - infected_by_virus_and_worm * 2.5], [infected_by_virus_only, infected_by_worm_only])\nanswer = solution[infected_by_worm_only]\n\n"]}
{"id": 202, "answer": "A", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5100\nmohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\nmohan_age = Symbol('mohan_age', positive=True)\nsohan_age = Symbol('sohan_age', positive=True)\nsolution = solve_it([mohan_share + sohan_share - amount, mohan_share * (1 + interest_rate / 100) ** (mohan_age - 23) - sohan_share * (1 + interest_rate / 100) ** (sohan_age - 23)], [mohan_share, sohan_share])\nanswer = solution[mohan_share]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5100\nmohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\nmohan_age = Symbol('mohan_age', positive=True)\nsohan_age = Symbol('sohan_age', positive=True)\nsolution = solve_it([mohan_share + sohan_share - amount, mohan_share * (1 + interest_rate / 100) ** (mohan_age - 23) - sohan_share * (1 + interest_rate / 100) ** (sohan_age - 23)], [mohan_share, sohan_share])\nanswer = solution[mohan_share]\n\n"]}
{"id": 203, "answer": "A", "completion": "percentage = Symbol('percentage', positive=True)\namount = Symbol('amount', positive=True)\nsolution = solve_it(percentage * amount / 100 - 0.6 * 0.3 * 1400, amount)\nanswer = solution[amount]\n\n", "completions": ["percentage = Symbol('percentage', positive=True)\namount = Symbol('amount', positive=True)\nsolution = solve_it(percentage * amount / 100 - 0.6 * 0.3 * 1400, amount)\nanswer = solution[amount]\n\n"]}
{"id": 204, "answer": "A", "completion": "rate = Symbol('rate', positive=True)\namount = Symbol('amount', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([rate * time - amount, rate - (25 / 1200)], [rate, amount])\nanswer = solution[rate]\n\n", "completions": ["rate = Symbol('rate', positive=True)\namount = Symbol('amount', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([rate * time - amount, rate - (25 / 1200)], [rate, amount])\nanswer = solution[rate]\n\n"]}
{"id": 205, "answer": "A", "completion": "weight = Symbol('weight', positive=True)\ndiameter = Symbol('diameter', positive=True)\nthickness = Symbol('thickness', positive=True)\nvolume_aluminum = Symbol('volume_aluminum', positive=True)\nvolume_silver = Symbol('volume_silver', positive=True)\nsolution = solve_it([weight - 30, diameter - 2 * thickness, volume_aluminum - volume_silver / 2], [weight, diameter, volume_aluminum])\nanswer = solution[weight]\n\n", "completions": ["weight = Symbol('weight', positive=True)\ndiameter = Symbol('diameter', positive=True)\nthickness = Symbol('thickness', positive=True)\nvolume_aluminum = Symbol('volume_aluminum', positive=True)\nvolume_silver = Symbol('volume_silver', positive=True)\nsolution = solve_it([weight - 30, diameter - 2 * thickness, volume_aluminum - volume_silver / 2], [weight, diameter, volume_aluminum])\nanswer = solution[weight]\n\n"]}
{"id": 206, "answer": "None", "completion": "num = Symbol('num', positive=True)\nsolution = solve_it(num - (2 / 3 * num - 40 - 1 / 3 * num), num)\nanswer = solution[num]\n\n", "completions": ["num = Symbol('num', positive=True)\nsolution = solve_it(num - (2 / 3 * num - 40 - 1 / 3 * num), num)\nanswer = solution[num]\n\n"]}
{"id": 207, "answer": "[invalid]", "completion": "k = Symbol('k', positive=True)\nsolution = solve_it(x ** 2 - 5 * x + k, k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k', positive=True)\nsolution = solve_it(x ** 2 - 5 * x + k, k)\nanswer = solution[k]\n\n"]}
{"id": 208, "answer": "E", "completion": "answer = 900 + 5 * 12\n\n", "completions": ["answer = 900 + 5 * 12\n\n"]}
{"id": 209, "answer": "B", "completion": "distance = 100\nspeed = 10\nrest_time = 10 / 60\ntime_taken = distance / speed\ntime_taken_with_rest = time_taken * (1 + rest_time)\nanswer = time_taken_with_rest / (1 + rest_time)\n\n", "completions": ["distance = 100\nspeed = 10\nrest_time = 10 / 60\ntime_taken = distance / speed\ntime_taken_with_rest = time_taken * (1 + rest_time)\nanswer = time_taken_with_rest / (1 + rest_time)\n\n"]}
{"id": 210, "answer": "A", "completion": "train_time = 17\ntrain_time_to_city = train_time\ntrain_time_back_to_home = train_time_to_city + 4\ncar_time_to_city = train_time_to_city * 2\ncar_time_back_to_home = train_time_back_to_home * 2\ntotal_time = car_time_to_city + car_time_back_to_home\nanswer = total_time\n\n", "completions": ["train_time = 17\ntrain_time_to_city = train_time\ntrain_time_back_to_home = train_time_to_city + 4\ncar_time_to_city = train_time_to_city * 2\ncar_time_back_to_home = train_time_back_to_home * 2\ntotal_time = car_time_to_city + car_time_back_to_home\nanswer = total_time\n\n"]}
{"id": 211, "answer": "B", "completion": "start_time = 8\nend_time = 12\nconsumption_rate = 1 / 3\ninitial_food = Symbol('initial_food', positive=True)\nfinal_food = Symbol('final_food', positive=True)\nconsumed_food = Symbol('consumed_food', positive=True)\nsolution = solve_it([initial_food - final_food - consumed_food, consumed_food * (end_time - start_time) - initial_food], [initial_food, final_food])\nanswer = solution[initial_food]\n\n", "completions": ["start_time = 8\nend_time = 12\nconsumption_rate = 1 / 3\ninitial_food = Symbol('initial_food', positive=True)\nfinal_food = Symbol('final_food', positive=True)\nconsumed_food = Symbol('consumed_food', positive=True)\nsolution = solve_it([initial_food - final_food - consumed_food, consumed_food * (end_time - start_time) - initial_food], [initial_food, final_food])\nanswer = solution[initial_food]\n\n"]}
{"id": 212, "answer": "C", "completion": "num_women = Symbol('num_women', positive=True)\nnum_men = Symbol('num_men', positive=True)\nnum_women_prefer_red = Symbol('num_women_prefer_red', positive=True)\nnum_women_prefer_green = Symbol('num_women_prefer_green', positive=True)\nnum_men_prefer_red = Symbol('num_men_prefer_red', positive=True)\nnum_men_prefer_green = Symbol('num_men_prefer_green', positive=True)\nsolution = solve_it([num_women_prefer_red + num_women_prefer_green - num_women, num_men_prefer_red + num_men_prefer_green - num_men, num_men_prefer_green - 10], [num_women_prefer_red, num_women_prefer_green, num_men_prefer_red, num_men_prefer_green])\nanswer = solution[num_women_prefer_red]\n\n", "completions": ["num_women = Symbol('num_women', positive=True)\nnum_men = Symbol('num_men', positive=True)\nnum_women_prefer_red = Symbol('num_women_prefer_red', positive=True)\nnum_women_prefer_green = Symbol('num_women_prefer_green', positive=True)\nnum_men_prefer_red = Symbol('num_men_prefer_red', positive=True)\nnum_men_prefer_green = Symbol('num_men_prefer_green', positive=True)\nsolution = solve_it([num_women_prefer_red + num_women_prefer_green - num_women, num_men_prefer_red + num_men_prefer_green - num_men, num_men_prefer_green - 10], [num_women_prefer_red, num_women_prefer_green, num_men_prefer_red, num_men_prefer_green])\nanswer = solution[num_women_prefer_red]\n\n"]}
{"id": 213, "answer": "B", "completion": "num_ways = 0\nfor i in range(0, 10 + 1):\n    for j in range(0, 10 + 1):\n        if i + j == 10:\n            num_ways += 1\nanswer = num_ways\n\n", "completions": ["num_ways = 0\nfor i in range(0, 10 + 1):\n    for j in range(0, 10 + 1):\n        if i + j == 10:\n            num_ways += 1\nanswer = num_ways\n\n"]}
{"id": 214, "answer": "B", "completion": "soft_drink_percentage = Symbol('soft_drink_percentage', positive=True)\njuice_percentage = Symbol('juice_percentage', positive=True)\njuice_in_soft_drink = soft_drink_percentage * 0.4\njuice_in_juice = juice_percentage * 0.6\nsolution = solve_it(juice_in_soft_drink - juice_in_juice, juice_percentage)\nanswer = solution[juice_percentage]\n\n", "completions": ["soft_drink_percentage = Symbol('soft_drink_percentage', positive=True)\njuice_percentage = Symbol('juice_percentage', positive=True)\njuice_in_soft_drink = soft_drink_percentage * 0.4\njuice_in_juice = juice_percentage * 0.6\nsolution = solve_it(juice_in_soft_drink - juice_in_juice, juice_percentage)\nanswer = solution[juice_percentage]\n\n"]}
{"id": 215, "answer": "A", "completion": "base = Symbol('base', positive=True)\nexponent = Symbol('exponent', positive=True)\nnumber = base ** exponent\nsolution = solve_it(number - 9 ** 3 - 7, exponent)\nanswer = solution[exponent]\n\n", "completions": ["base = Symbol('base', positive=True)\nexponent = Symbol('exponent', positive=True)\nnumber = base ** exponent\nsolution = solve_it(number - 9 ** 3 - 7, exponent)\nanswer = solution[exponent]\n\n"]}
{"id": 216, "answer": "A", "completion": "num_horses = 5\nnum_selected_horses = 2\nnum_winning_horses = 1\nprobability = num_winning_horses / num_selected_horses\nanswer = probability\n\n", "completions": ["num_horses = 5\nnum_selected_horses = 2\nnum_winning_horses = 1\nprobability = num_winning_horses / num_selected_horses\nanswer = probability\n\n"]}
{"id": 217, "answer": "A", "completion": "remainder = Symbol('remainder', positive=True)\nn = Symbol('n', positive=True)\nsolution = solve_it([n % 100 - remainder, n % 1000 - remainder, n % 10000 - remainder], [n, remainder])\nanswer = solution[n]\n\n", "completions": ["remainder = Symbol('remainder', positive=True)\nn = Symbol('n', positive=True)\nsolution = solve_it([n % 100 - remainder, n % 1000 - remainder, n % 10000 - remainder], [n, remainder])\nanswer = solution[n]\n\n"]}
{"id": 218, "answer": "A", "completion": "passed = Symbol('passed', positive=True)\nfailed = Symbol('failed', positive=True)\ntotal = Symbol('total', positive=True)\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passed / total * 100 - 66, failed / total * 100 - 44], [passed, failed])\nanswer = solution[passed]\n\n", "completions": ["passed = Symbol('passed', positive=True)\nfailed = Symbol('failed', positive=True)\ntotal = Symbol('total', positive=True)\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passed / total * 100 - 66, failed / total * 100 - 44], [passed, failed])\nanswer = solution[passed]\n\n"]}
{"id": 219, "answer": "C", "completion": "wage = Symbol('wage', positive=True)\naverage_wage = 90\naverage_wage_first_7_days = 87\naverage_wage_last_7_days = 92\nsolution = solve_it([average_wage_first_7_days * 7 + average_wage_last_7_days * 7 - wage * 15, average_wage_first_7_days * 7 - wage * 7, average_wage_last_7_days * 7 - wage * 7], [wage])\nanswer = solution[wage]\n\n", "completions": ["wage = Symbol('wage', positive=True)\naverage_wage = 90\naverage_wage_first_7_days = 87\naverage_wage_last_7_days = 92\nsolution = solve_it([average_wage_first_7_days * 7 + average_wage_last_7_days * 7 - wage * 15, average_wage_first_7_days * 7 - wage * 7, average_wage_last_7_days * 7 - wage * 7], [wage])\nanswer = solution[wage]\n\n"]}
{"id": 220, "answer": "B", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\nratio = num1 / num2\nsolution = solve_it([ratio - 3 / 5, num1 - 9, num2 - 12], [num1, num2])\nanswer = solution[num1]\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\nratio = num1 / num2\nsolution = solve_it([ratio - 3 / 5, num1 - 9, num2 - 12], [num1, num2])\nanswer = solution[num1]\n\n"]}
{"id": 221, "answer": "B", "completion": "Ajay = Symbol('Ajay', positive=True)\nRahul = Symbol('Rahul', positive=True)\nDenis = Symbol('Denis', positive=True)\nage = Symbol('age', positive=True)\nsolution = solve_it([age - Ajay - 6, age % 18 - Rahul, age - 2 - 5 - Denis], [age, Ajay, Rahul])\nanswer = solution[age]\n\n", "completions": ["Ajay = Symbol('Ajay', positive=True)\nRahul = Symbol('Rahul', positive=True)\nDenis = Symbol('Denis', positive=True)\nage = Symbol('age', positive=True)\nsolution = solve_it([age - Ajay - 6, age % 18 - Rahul, age - 2 - 5 - Denis], [age, Ajay, Rahul])\nanswer = solution[age]\n\n"]}
{"id": 222, "answer": "B", "completion": "books = 4\ntime = Symbol('time', positive=True)\nbooks_in_combination = factorial(books)\ntime_for_one_book = 1 / books_in_combination\nanswer = solve_it(time_for_one_book - 22, time)\n\n", "completions": ["books = 4\ntime = Symbol('time', positive=True)\nbooks_in_combination = factorial(books)\ntime_for_one_book = 1 / books_in_combination\nanswer = solve_it(time_for_one_book - 22, time)\n\n"]}
{"id": 223, "answer": "C", "completion": "discount = Symbol('discount', positive=True)\ndiscount_1 = Symbol('discount_1', positive=True)\ndiscount_2 = Symbol('discount_2', positive=True)\ndiscount_3 = Symbol('discount_3', positive=True)\ndiscount_4 = Symbol('discount_4', positive=True)\ndiscount_5 = Symbol('discount_5', positive=True)\ndiscount_6 = Symbol('discount_6', positive=True)\ndiscount_7 = Symbol('discount_7', positive=True)\ndiscount_8 = Symbol('discount_8', positive=True)\ndiscount_9 = Symbol('discount_9', positive=True)\ndiscount_10 = Symbol('discount_10', positive=True)\ndiscount_11 = Symbol('discount_11', positive=True)\ndiscount_12 = Symbol('discount_12', positive=True)\ndiscount_13 = Symbol('discount_13', positive=True)\ndiscount_14 = Symbol('discount_14', positive=True)\ndiscount_15 = Symbol('discount_15', positive=True)\ndiscount_16 = Symbol('discount_16', positive=True)\ndiscount_17 = Symbol('discount_17', positive=True)\ndiscount_18 = Symbol('discount_18', positive=True)\ndiscount_19 = Symbol('discount_19', positive=True)\ndiscount_20 = Symbol('discount_20', positive=True)\ndiscount_21 = Symbol('discount_21', positive=True)\ndiscount_22 = Symbol('discount_22', positive=True)\ndiscount_23 = Symbol('discount_23', positive=True)\ndiscount_24 = Symbol('discount_24', positive=True)\ndiscount_25 = Symbol('discount_25', positive=True)\ndiscount_26 = Symbol('discount_26', positive=True)\ndiscount_27 = Symbol('discount_27', positive=True)\ndiscount_28 = Symbol('discount_28', positive=True)\ndiscount_29 = Symbol('discount_29', positive=True)\ndiscount_30 = Symbol('discount_30', positive=True)\ndiscount_31 = Symbol('discount_31', positive=True)\ndiscount_32 = Symbol('discount_32', positive=True)\ndiscount_33 = Symbol('discount_33', positive=True)\ndiscount_34 = Symbol('discount_34', positive=True)\ndiscount_35 = Symbol('discount_35', positive=True)\ndiscount_36 = Symbol('discount_36', positive=True)\ndiscount_37 = Symbol('discount_37', positive=True)\ndiscount_38 = Symbol('discount_38', positive=True)\ndiscount_39 = Symbol('discount_39', positive=True)\ndiscount_40 = Symbol('discount_40', positive=True)\ndiscount_41 = Symbol('discount_41', positive=True)\ndiscount_42 = Symbol('discount_42', positive=True)\ndiscount_43 = Symbol('discount_43', positive=True)\ndiscount_44 = Symbol('discount_44', positive=True)\ndiscount_45 = Symbol('discount_45', positive=True)\ndiscount_46 = Symbol('discount_46', positive=True)\ndiscount_47 = Symbol('discount_47', positive=True)\ndiscount_48 = Symbol('discount_48', positive=True)\ndiscount_49 = Symbol('discount_49', positive=True)\ndiscount_50 = Symbol('discount_50', positive=True)\ndiscount_51 = Symbol('discount_51', positive=True)\ndiscount_52 = Symbol('discount_52', positive=True)\ndiscount_53 = Symbol('discount_53', positive=True)\ndiscount_54 = Symbol('discount_54', positive=True)\ndiscount_55 = Symbol('discount_55', positive=True)\ndiscount_56 = Symbol('discount_56', positive=True)\ndiscount_57 = Symbol('discount_57', positive=True)\ndiscount_58 = Symbol('discount_58', positive=True)\n", "completions": ["discount = Symbol('discount', positive=True)\ndiscount_1 = Symbol('discount_1', positive=True)\ndiscount_2 = Symbol('discount_2', positive=True)\ndiscount_3 = Symbol('discount_3', positive=True)\ndiscount_4 = Symbol('discount_4', positive=True)\ndiscount_5 = Symbol('discount_5', positive=True)\ndiscount_6 = Symbol('discount_6', positive=True)\ndiscount_7 = Symbol('discount_7', positive=True)\ndiscount_8 = Symbol('discount_8', positive=True)\ndiscount_9 = Symbol('discount_9', positive=True)\ndiscount_10 = Symbol('discount_10', positive=True)\ndiscount_11 = Symbol('discount_11', positive=True)\ndiscount_12 = Symbol('discount_12', positive=True)\ndiscount_13 = Symbol('discount_13', positive=True)\ndiscount_14 = Symbol('discount_14', positive=True)\ndiscount_15 = Symbol('discount_15', positive=True)\ndiscount_16 = Symbol('discount_16', positive=True)\ndiscount_17 = Symbol('discount_17', positive=True)\ndiscount_18 = Symbol('discount_18', positive=True)\ndiscount_19 = Symbol('discount_19', positive=True)\ndiscount_20 = Symbol('discount_20', positive=True)\ndiscount_21 = Symbol('discount_21', positive=True)\ndiscount_22 = Symbol('discount_22', positive=True)\ndiscount_23 = Symbol('discount_23', positive=True)\ndiscount_24 = Symbol('discount_24', positive=True)\ndiscount_25 = Symbol('discount_25', positive=True)\ndiscount_26 = Symbol('discount_26', positive=True)\ndiscount_27 = Symbol('discount_27', positive=True)\ndiscount_28 = Symbol('discount_28', positive=True)\ndiscount_29 = Symbol('discount_29', positive=True)\ndiscount_30 = Symbol('discount_30', positive=True)\ndiscount_31 = Symbol('discount_31', positive=True)\ndiscount_32 = Symbol('discount_32', positive=True)\ndiscount_33 = Symbol('discount_33', positive=True)\ndiscount_34 = Symbol('discount_34', positive=True)\ndiscount_35 = Symbol('discount_35', positive=True)\ndiscount_36 = Symbol('discount_36', positive=True)\ndiscount_37 = Symbol('discount_37', positive=True)\ndiscount_38 = Symbol('discount_38', positive=True)\ndiscount_39 = Symbol('discount_39', positive=True)\ndiscount_40 = Symbol('discount_40', positive=True)\ndiscount_41 = Symbol('discount_41', positive=True)\ndiscount_42 = Symbol('discount_42', positive=True)\ndiscount_43 = Symbol('discount_43', positive=True)\ndiscount_44 = Symbol('discount_44', positive=True)\ndiscount_45 = Symbol('discount_45', positive=True)\ndiscount_46 = Symbol('discount_46', positive=True)\ndiscount_47 = Symbol('discount_47', positive=True)\ndiscount_48 = Symbol('discount_48', positive=True)\ndiscount_49 = Symbol('discount_49', positive=True)\ndiscount_50 = Symbol('discount_50', positive=True)\ndiscount_51 = Symbol('discount_51', positive=True)\ndiscount_52 = Symbol('discount_52', positive=True)\ndiscount_53 = Symbol('discount_53', positive=True)\ndiscount_54 = Symbol('discount_54', positive=True)\ndiscount_55 = Symbol('discount_55', positive=True)\ndiscount_56 = Symbol('discount_56', positive=True)\ndiscount_57 = Symbol('discount_57', positive=True)\ndiscount_58 = Symbol('discount_58', positive=True)\n"]}
{"id": 224, "answer": "B", "completion": "area = Symbol('area', positive=True)\nlength = Symbol('length', positive=True)\nsolution = solve_it([area - 9 * length, 3 * area - 37 * length], [area, length])\nanswer = solution[area]\n\n", "completions": ["area = Symbol('area', positive=True)\nlength = Symbol('length', positive=True)\nsolution = solve_it([area - 9 * length, 3 * area - 37 * length], [area, length])\nanswer = solution[area]\n\n"]}
{"id": 225, "answer": "E", "completion": "num_friends = 10\nnum_choices = factorial(num_friends)\nanswer = num_choices\n\n", "completions": ["num_friends = 10\nnum_choices = factorial(num_friends)\nanswer = num_choices\n\n"]}
{"id": 226, "answer": "A", "completion": "weight = Symbol('weight', positive=True)\naverage_weight = 10 * weight\nweight_of_53kg_man = 53\nweight_of_new_man = average_weight + 1.8 - weight_of_53kg_man\nsolution = solve_it(weight_of_new_man - 71, weight)\nanswer = solution[weight]\n\n", "completions": ["weight = Symbol('weight', positive=True)\naverage_weight = 10 * weight\nweight_of_53kg_man = 53\nweight_of_new_man = average_weight + 1.8 - weight_of_53kg_man\nsolution = solve_it(weight_of_new_man - 71, weight)\nanswer = solution[weight]\n\n"]}
{"id": 227, "answer": "B", "completion": "n = Symbol('n', positive=True)\nways_to_select_2_balls = binomial(n, 2)\nways_to_select_2_balls_without_3 = binomial(n, 2) - 1\nsolution = solve_it(ways_to_select_2_balls - ways_to_select_2_balls_without_3 - 45, n)\nanswer = solution[n]\n\n", "completions": ["n = Symbol('n', positive=True)\nways_to_select_2_balls = binomial(n, 2)\nways_to_select_2_balls_without_3 = binomial(n, 2) - 1\nsolution = solve_it(ways_to_select_2_balls - ways_to_select_2_balls_without_3 - 45, n)\nanswer = solution[n]\n\n"]}
{"id": 228, "answer": "E", "completion": "Q = Symbol('Q', positive=True)\nprime_number = Symbol('prime_number', positive=True)\nsolution = solve_it(Q - prime_number ** 4, Q)\nanswer = solution[Q]\n\n", "completions": ["Q = Symbol('Q', positive=True)\nprime_number = Symbol('prime_number', positive=True)\nsolution = solve_it(Q - prime_number ** 4, Q)\nanswer = solution[Q]\n\n"]}
{"id": 229, "answer": "A", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it(6 * x - y - 24, x)\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it(6 * x - y - 24, x)\nanswer = solution[x]\n\n"]}
{"id": 230, "answer": "B", "completion": "dvd_cost = Symbol('dvd_cost', positive=True)\nmembership_cost = Symbol('membership_cost', positive=True)\nsolution = solve_it([dvd_cost - 2, membership_cost - 7], [dvd_cost, membership_cost])\nanswer = solution[dvd_cost]\n\n", "completions": ["dvd_cost = Symbol('dvd_cost', positive=True)\nmembership_cost = Symbol('membership_cost', positive=True)\nsolution = solve_it([dvd_cost - 2, membership_cost - 7], [dvd_cost, membership_cost])\nanswer = solution[dvd_cost]\n\n"]}
{"id": 231, "answer": "C", "completion": "weight = Symbol('weight', positive=True)\npounds = 7\nounces = 4\nsolution = solve_it(weight - (pounds * 16 + ounces), weight)\nanswer = solution[weight]\n\n", "completions": ["weight = Symbol('weight', positive=True)\npounds = 7\nounces = 4\nsolution = solve_it(weight - (pounds * 16 + ounces), weight)\nanswer = solution[weight]\n\n"]}
{"id": 232, "answer": "A", "completion": "hours = Symbol('hours', positive=True)\njack_work = 12\njill_work = jack_work * 0.05\njack_work_done = jack_work * 2 / 3\njill_work_done = jill_work * 2 / 3\nsolution = solve_it(hours * (jack_work_done + jill_work_done) - (jack_work_done + jill_work_done), hours)\nanswer = solution[hours]\n\n", "completions": ["hours = Symbol('hours', positive=True)\njack_work = 12\njill_work = jack_work * 0.05\njack_work_done = jack_work * 2 / 3\njill_work_done = jill_work * 2 / 3\nsolution = solve_it(hours * (jack_work_done + jill_work_done) - (jack_work_done + jill_work_done), hours)\nanswer = solution[hours]\n\n"]}
{"id": 233, "answer": "A", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 3 * interest_rate / 100)\namount_with_interest = amount + 300\nsolution = solve_it(amount_with_interest - amount_with_simple_interest, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 3 * interest_rate / 100)\namount_with_interest = amount + 300\nsolution = solve_it(amount_with_interest - amount_with_simple_interest, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 234, "answer": "B", "completion": "discount = Symbol('discount', positive=True)\nprice = Symbol('price', positive=True)\ndiscounted_price = price * (1 - discount / 100)\nsolution = solve_it(discounted_price - 4578, price)\nanswer = solution[price]\n\n", "completions": ["discount = Symbol('discount', positive=True)\nprice = Symbol('price', positive=True)\ndiscounted_price = price * (1 - discount / 100)\nsolution = solve_it(discounted_price - 4578, price)\nanswer = solution[price]\n\n"]}
{"id": 235, "answer": "B", "completion": "A = Symbol('A', positive=True)\nB = Symbol('B', positive=True)\ncost = A * 27\nsolution = solve_it(cost - B, A)\nanswer = solution[A]\n\n", "completions": ["A = Symbol('A', positive=True)\nB = Symbol('B', positive=True)\ncost = A * 27\nsolution = solve_it(cost - B, A)\nanswer = solution[A]\n\n"]}
{"id": 236, "answer": "A", "completion": "candy_bars = [50, 100, 200, 400, 500]\ntotal_cost = Symbol('total_cost', positive=True)\ntotal_candy_bars = Symbol('total_candy_bars', positive=True)\nsolution = solve_it([total_candy_bars - 3, total_cost - 4 * 100], [total_candy_bars, total_cost])\nanswer = solution[total_candy_bars]\n\n", "completions": ["candy_bars = [50, 100, 200, 400, 500]\ntotal_cost = Symbol('total_cost', positive=True)\ntotal_candy_bars = Symbol('total_candy_bars', positive=True)\nsolution = solve_it([total_candy_bars - 3, total_cost - 4 * 100], [total_candy_bars, total_cost])\nanswer = solution[total_candy_bars]\n\n"]}
{"id": 237, "answer": "D", "completion": "men = 4\nwomen = 4\npresenters = 4\nanswer = factorial(men + women) / (factorial(presenters) * factorial(men + women - presenters))\n\n", "completions": ["men = 4\nwomen = 4\npresenters = 4\nanswer = factorial(men + women) / (factorial(presenters) * factorial(men + women - presenters))\n\n"]}
{"id": 238, "answer": "B", "completion": "num_girls = Symbol('num_girls', positive=True)\nnum_boys = Symbol('num_boys', positive=True)\nnum_children = num_girls + num_boys\nnum_girls_2_5th = num_children * 2 / 5\nsolution = solve_it(num_girls_2_5th - 100, num_girls)\nanswer = solution[num_girls]\n\n", "completions": ["num_girls = Symbol('num_girls', positive=True)\nnum_boys = Symbol('num_boys', positive=True)\nnum_children = num_girls + num_boys\nnum_girls_2_5th = num_children * 2 / 5\nsolution = solve_it(num_girls_2_5th - 100, num_girls)\nanswer = solution[num_girls]\n\n"]}
{"id": 239, "answer": "A", "completion": "probability = 1\nfor i in range(1, 1001):\n    if i % 2 == 0 or i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\n        probability -= 1 / 1000\n    else:\n        probability += 1 / 1000\nanswer = probability\n\n", "completions": ["probability = 1\nfor i in range(1, 1001):\n    if i % 2 == 0 or i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\n        probability -= 1 / 1000\n    else:\n        probability += 1 / 1000\nanswer = probability\n\n"]}
{"id": 240, "answer": "A", "completion": "principal = Symbol('principal', positive=True)\ninterest_rate = Symbol('interest_rate', positive=True)\namount_with_compound_interest = principal * (1 + interest_rate / 2) ** 2\namount_with_simple_interest = principal * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 54080, principal)\nanswer = solution[principal]\n\n", "completions": ["principal = Symbol('principal', positive=True)\ninterest_rate = Symbol('interest_rate', positive=True)\namount_with_compound_interest = principal * (1 + interest_rate / 2) ** 2\namount_with_simple_interest = principal * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 54080, principal)\nanswer = solution[principal]\n\n"]}
{"id": 241, "answer": "C", "completion": "father_age = Symbol('father_age', positive=True)\njoe_age = Symbol('joe_age', positive=True)\njoe_sister_age = Symbol('joe_sister_age', positive=True)\nsolution = solve_it([joe_age + joe_sister_age - 100, joe_age + father_age - 100, joe_sister_age + father_age - 100], [father_age, joe_sister_age, joe_age])\nanswer = solution[father_age]\n\n", "completions": ["father_age = Symbol('father_age', positive=True)\njoe_age = Symbol('joe_age', positive=True)\njoe_sister_age = Symbol('joe_sister_age', positive=True)\nsolution = solve_it([joe_age + joe_sister_age - 100, joe_age + father_age - 100, joe_sister_age + father_age - 100], [father_age, joe_sister_age, joe_age])\nanswer = solution[father_age]\n\n"]}
{"id": 242, "answer": "C", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number * 3 / 4 - 21, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number * 3 / 4 - 21, number)\nanswer = solution[number]\n\n"]}
{"id": 243, "answer": "A", "completion": "m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y\npercentage = x / y * 100\nanswer = percentage\n\n", "completions": ["m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y\npercentage = x / y * 100\nanswer = percentage\n\n"]}
{"id": 244, "answer": "A", "completion": "breakfast = Symbol('breakfast', positive=True)\ndinner = Symbol('dinner', positive=True)\nsolution = solve_it([breakfast + dinner - 6, 2 * (breakfast + dinner) - 8], [breakfast, dinner])\nanswer = solution[breakfast]\n\n", "completions": ["breakfast = Symbol('breakfast', positive=True)\ndinner = Symbol('dinner', positive=True)\nsolution = solve_it([breakfast + dinner - 6, 2 * (breakfast + dinner) - 8], [breakfast, dinner])\nanswer = solution[breakfast]\n\n"]}
{"id": 245, "answer": "A", "completion": "n = 5\np = 0.9\nq = 1 - p\nlikelihood = n * p * (1 - p) ** (n - 1)\nanswer = likelihood\n\n", "completions": ["n = 5\np = 0.9\nq = 1 - p\nlikelihood = n * p * (1 - p) ** (n - 1)\nanswer = likelihood\n\n"]}
{"id": 246, "answer": "C", "completion": "area = 240\nfence_length = Symbol('fence_length', positive=True)\nsolution = solve_it(area - fence_length * 3 - 10, fence_length)\nanswer = solution[fence_length]\n\n", "completions": ["area = 240\nfence_length = Symbol('fence_length', positive=True)\nsolution = solve_it(area - fence_length * 3 - 10, fence_length)\nanswer = solution[fence_length]\n\n"]}
{"id": 247, "answer": "D", "completion": "vowels = ['a', 'e', 'i', 'o', 'u']\nconsonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\nnum_vowels = 5\nnum_consonants = 20\nnum_possible_codes = 0\nfor first_letter in consonants:\n    for second_letter in consonants:\n        for third_letter in consonants:\n            for middle_letter in vowels:\n                if first_letter != third_letter and first_letter != middle_letter and third_letter != middle_letter:\n                    num_possible_codes += 1\nanswer = num_possible_codes\n\n", "completions": ["vowels = ['a', 'e', 'i', 'o', 'u']\nconsonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\nnum_vowels = 5\nnum_consonants = 20\nnum_possible_codes = 0\nfor first_letter in consonants:\n    for second_letter in consonants:\n        for third_letter in consonants:\n            for middle_letter in vowels:\n                if first_letter != third_letter and first_letter != middle_letter and third_letter != middle_letter:\n                    num_possible_codes += 1\nanswer = num_possible_codes\n\n"]}
{"id": 248, "answer": "A", "completion": "for i in range(1, 1000):\n    for j in range(i + 1, 1000):\n        for k in range(j + 1, 1000):\n            if i * j * k == 727 * 728 * 729:\n                answer = i + j + k\n                break\n\n", "completions": ["for i in range(1, 1000):\n    for j in range(i + 1, 1000):\n        for k in range(j + 1, 1000):\n            if i * j * k == 727 * 728 * 729:\n                answer = i + j + k\n                break\n\n"]}
{"id": 249, "answer": "B", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\narea = 2 * (length * width + width * height + height * length)\nvolume = length * width * height\nsolution = solve_it(area - 120, [length, width, height])\nanswer = solution[volume]\n\n", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nheight = Symbol('height', positive=True)\narea = 2 * (length * width + width * height + height * length)\nvolume = length * width * height\nsolution = solve_it(area - 120, [length, width, height])\nanswer = solution[volume]\n\n"]}
{"id": 250, "answer": "A", "completion": "population = 5265526\nadults = 4169516\nchildren = population - adults\nanswer = children\n\n", "completions": ["population = 5265526\nadults = 4169516\nchildren = population - adults\nanswer = children\n\n"]}
{"id": 251, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ndriving_time = 9 * 60\ndriving_speed = 20\ncycling_speed = 6\ncycling_time = distance / cycling_speed\nsolution = solve_it(driving_time - cycling_time, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ndriving_time = 9 * 60\ndriving_speed = 20\ncycling_speed = 6\ncycling_time = distance / cycling_speed\nsolution = solve_it(driving_time - cycling_time, distance)\nanswer = solution[distance]\n\n"]}
{"id": 252, "answer": "B", "completion": "jar_full = Symbol('jar_full', positive=True)\njar_half = Symbol('jar_half', positive=True)\ntime_to_finish_jar = Symbol('time_to_finish_jar', positive=True)\ntime_to_finish_half_jar = Symbol('time_to_finish_half_jar', positive=True)\nsolution = solve_it([jar_full - jar_half, time_to_finish_jar - time_to_finish_half_jar], [jar_full, time_to_finish_jar])\nanswer = solution[time_to_finish_jar]\n\n", "completions": ["jar_full = Symbol('jar_full', positive=True)\njar_half = Symbol('jar_half', positive=True)\ntime_to_finish_jar = Symbol('time_to_finish_jar', positive=True)\ntime_to_finish_half_jar = Symbol('time_to_finish_half_jar', positive=True)\nsolution = solve_it([jar_full - jar_half, time_to_finish_jar - time_to_finish_half_jar], [jar_full, time_to_finish_jar])\nanswer = solution[time_to_finish_jar]\n\n"]}
{"id": 253, "answer": "B", "completion": "profit_rate = Symbol('profit_rate', positive=True)\ncost_per_bag = 1.25\nnum_bags = 500\nprofit = profit_rate * num_bags * cost_per_bag\nsolution = solve_it(profit - 125, profit_rate)\nanswer = solution[profit_rate]\n\n", "completions": ["profit_rate = Symbol('profit_rate', positive=True)\ncost_per_bag = 1.25\nnum_bags = 500\nprofit = profit_rate * num_bags * cost_per_bag\nsolution = solve_it(profit - 125, profit_rate)\nanswer = solution[profit_rate]\n\n"]}
