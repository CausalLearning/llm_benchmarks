{"id": 0, "answer": "A", "completion": "time = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nsolution = solve_it([distance - speed * time, 45 + time * (60 - 45) / 10 - 60], [distance, time])\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\ndistance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\nsolution = solve_it([distance - speed * time, 45 + time * (60 - 45) / 10 - 60], [distance, time])\nanswer = solution[time]\n\n"]}
{"id": 1, "answer": "E", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\nprice_after_coupon = discounted_price - 20\nsolution = solve_it(price_after_coupon - 0.5 * original_price - 1.9, original_price)\nanswer = solution[original_price]\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\nprice_after_coupon = discounted_price - 20\nsolution = solve_it(price_after_coupon - 0.5 * original_price - 1.9, original_price)\nanswer = solution[original_price]\n\n"]}
{"id": 2, "answer": "A", "completion": "options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break", "completions": ["options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break"]}
{"id": 3, "answer": "A", "completion": "probability_of_stock_a_increasing = 0.56\nprobability_of_stock_b_increasing = 0.74\nprobability_of_neither_stock_increasing = 1 - probability_of_stock_a_increasing - probability_of_stock_b_increasing\nanswer = probability_of_neither_stock_increasing\n\n", "completions": ["probability_of_stock_a_increasing = 0.56\nprobability_of_stock_b_increasing = 0.74\nprobability_of_neither_stock_increasing = 1 - probability_of_stock_a_increasing - probability_of_stock_b_increasing\nanswer = probability_of_neither_stock_increasing\n\n"]}
{"id": 4, "answer": "B", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = 0.2\nsolution = solve_it(selling_price - cost_price - cost_price * profit, cost_price)\nanswer = solution[cost_price]\n\n", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit = 0.2\nsolution = solve_it(selling_price - cost_price - cost_price * profit, cost_price)\nanswer = solution[cost_price]\n\n"]}
{"id": 5, "answer": "A", "completion": "Q = Symbol('Q')\npercentage_black_marbles = 1 / 20\npercentage_black_marbles_in_bag = (1 + 20 * percentage_black_marbles) / Q\nsolution = solve_it(percentage_black_marbles_in_bag - percentage_black_marbles, Q)\nanswer = solution[Q]\n\n", "completions": ["Q = Symbol('Q')\npercentage_black_marbles = 1 / 20\npercentage_black_marbles_in_bag = (1 + 20 * percentage_black_marbles) / Q\nsolution = solve_it(percentage_black_marbles_in_bag - percentage_black_marbles, Q)\nanswer = solution[Q]\n\n"]}
{"id": 6, "answer": "D", "completion": "num_letters = 2\nnum_numbers = 2\nnum_distinct_letters = 26\nnum_distinct_numbers = 10\nanswer = num_distinct_letters ** num_letters * num_distinct_numbers ** num_numbers\n\n", "completions": ["num_letters = 2\nnum_numbers = 2\nnum_distinct_letters = 26\nnum_distinct_numbers = 10\nanswer = num_distinct_letters ** num_letters * num_distinct_numbers ** num_numbers\n\n"]}
{"id": 7, "answer": "C", "completion": "speed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([speed * time - distance, speed * time - 100 * time, speed * time - 75 * time], [speed, distance, time])\nanswer = solution[time]\n\n", "completions": ["speed = Symbol('speed', positive=True)\ndistance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nsolution = solve_it([speed * time - distance, speed * time - 100 * time, speed * time - 75 * time], [speed, distance, time])\nanswer = solution[time]\n\n"]}
{"id": 8, "answer": "B", "completion": "num_students = 200\nattended_prom_night = 0.45 * num_students\ntook_part_in_debating_session = 0.35 * num_students\nattended_prom_night_or_took_part_in_debating_session = attended_prom_night + took_part_in_debating_session - attended_prom_night * took_part_in_debating_session\nstudents_neither_attended_prom_night_nor_took_part_in_debating_session = num_students - attended_prom_night_or_took_part_in_debating_session\nanswer = students_neither_attended_prom_night_nor_took_part_in_debating_session\n\n", "completions": ["num_students = 200\nattended_prom_night = 0.45 * num_students\ntook_part_in_debating_session = 0.35 * num_students\nattended_prom_night_or_took_part_in_debating_session = attended_prom_night + took_part_in_debating_session - attended_prom_night * took_part_in_debating_session\nstudents_neither_attended_prom_night_nor_took_part_in_debating_session = num_students - attended_prom_night_or_took_part_in_debating_session\nanswer = students_neither_attended_prom_night_nor_took_part_in_debating_session\n\n"]}
{"id": 9, "answer": "D", "completion": "sales_needed = Symbol('sales_needed', positive=True)\nsalary = 1000\ncommission = 0.1\nsolution = solve_it(sales_needed * 250 * commission - salary, sales_needed)\nanswer = solution[sales_needed]\n\n", "completions": ["sales_needed = Symbol('sales_needed', positive=True)\nsalary = 1000\ncommission = 0.1\nsolution = solve_it(sales_needed * 250 * commission - salary, sales_needed)\nanswer = solution[sales_needed]\n\n"]}
{"id": 10, "answer": "E", "completion": "production_cost = 110\nmonthly_production = 420\nmonthly_revenue = Symbol('monthly_revenue', positive=True)\nyearly_profit = 12 * monthly_revenue - 12 * monthly_production * production_cost\nsolution = solve_it(yearly_profit - 626400, monthly_revenue)\nanswer = solution[monthly_revenue]\n\n", "completions": ["production_cost = 110\nmonthly_production = 420\nmonthly_revenue = Symbol('monthly_revenue', positive=True)\nyearly_profit = 12 * monthly_revenue - 12 * monthly_production * production_cost\nsolution = solve_it(yearly_profit - 626400, monthly_revenue)\nanswer = solution[monthly_revenue]\n\n"]}
{"id": 11, "answer": "A", "completion": "defective_staplers = Symbol('defective_staplers', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nrejected_staplers = 72\ndefective_percentage = 0.1\nrejected_percentage = 0.02\nsolution = solve_it([defective_staplers + total_staplers * rejected_percentage - rejected_staplers, total_staplers * defective_percentage - defective_staplers], [defective_staplers, total_staplers])\nanswer = solution[total_staplers]\n\n", "completions": ["defective_staplers = Symbol('defective_staplers', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nrejected_staplers = 72\ndefective_percentage = 0.1\nrejected_percentage = 0.02\nsolution = solve_it([defective_staplers + total_staplers * rejected_percentage - rejected_staplers, total_staplers * defective_percentage - defective_staplers], [defective_staplers, total_staplers])\nanswer = solution[total_staplers]\n\n"]}
{"id": 12, "answer": "C", "completion": "machine_a_rate = 1 / 6\nmachine_b_rate = 1 / 9\ntime = Symbol('time', positive=True)\nsolution = solve_it(machine_a_rate * time + machine_b_rate * time - 10, time)\nanswer = solution[time]\n\n", "completions": ["machine_a_rate = 1 / 6\nmachine_b_rate = 1 / 9\ntime = Symbol('time', positive=True)\nsolution = solve_it(machine_a_rate * time + machine_b_rate * time - 10, time)\nanswer = solution[time]\n\n"]}
{"id": 13, "answer": "D", "completion": "answer = 45 - 30\n\n", "completions": ["answer = 45 - 30\n\n"]}
{"id": 14, "answer": "A", "completion": "num_letters = 7\nnum_words = factorial(num_letters)\nnum_words_with_repeated_letters = factorial(num_letters + 1)\nnum_words_without_repeated_letters = num_words / num_words_with_repeated_letters\nanswer = num_words_without_repeated_letters\n\n", "completions": ["num_letters = 7\nnum_words = factorial(num_letters)\nnum_words_with_repeated_letters = factorial(num_letters + 1)\nnum_words_without_repeated_letters = num_words / num_words_with_repeated_letters\nanswer = num_words_without_repeated_letters\n\n"]}
{"id": 15, "answer": "A", "completion": "P_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A / P_B\nanswer = P_A_given_B\n\n", "completions": ["P_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A / P_B\nanswer = P_A_given_B\n\n"]}
{"id": 16, "answer": "E", "completion": "elevator_speed = Symbol('elevator_speed', positive=True)\nsteps_taken = Symbol('steps_taken', positive=True)\ntime_taken = Symbol('time_taken', positive=True)\nsolution = solve_it([steps_taken / elevator_speed - 10, steps_taken / elevator_speed - 20], [steps_taken, elevator_speed])\nanswer = solution[elevator_speed]\n\n", "completions": ["elevator_speed = Symbol('elevator_speed', positive=True)\nsteps_taken = Symbol('steps_taken', positive=True)\ntime_taken = Symbol('time_taken', positive=True)\nsolution = solve_it([steps_taken / elevator_speed - 10, steps_taken / elevator_speed - 20], [steps_taken, elevator_speed])\nanswer = solution[elevator_speed]\n\n"]}
{"id": 17, "answer": "B", "completion": "total_sales = 42 * 10 + 20 * 12\nanswer = total_sales / 22\n\n", "completions": ["total_sales = 42 * 10 + 20 * 12\nanswer = total_sales / 22\n\n"]}
{"id": 18, "answer": "C", "completion": "num_students = Symbol('num_students', positive=True)\naverage_score = Symbol('average_score', positive=True)\nhighest_score = Symbol('highest_score', positive=True)\nlowest_score = Symbol('lowest_score', positive=True)\nsolution = solve_it([num_students * average_score - highest_score - lowest_score, highest_score - lowest_score - 2 * average_score], [average_score, highest_score, lowest_score])\nanswer = (num_students * solution[average_score] - solution[highest_score] - solution[lowest_score]) / (num_students - 2)", "completions": ["num_students = Symbol('num_students', positive=True)\naverage_score = Symbol('average_score', positive=True)\nhighest_score = Symbol('highest_score', positive=True)\nlowest_score = Symbol('lowest_score', positive=True)\nsolution = solve_it([num_students * average_score - highest_score - lowest_score, highest_score - lowest_score - 2 * average_score], [average_score, highest_score, lowest_score])\nanswer = (num_students * solution[average_score] - solution[highest_score] - solution[lowest_score]) / (num_students - 2)"]}
{"id": 19, "answer": "C", "completion": "x = Symbol('x')\nsolution = solve_it(5 + x * 19 - 15 - 7 - 6 * (13 * 13 - 156), x)\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x')\nsolution = solve_it(5 + x * 19 - 15 - 7 - 6 * (13 * 13 - 156), x)\nanswer = solution[x]\n\n"]}
{"id": 20, "answer": "A", "completion": "num_bags = Symbol('num_bags', positive=True)\nprofit = 3000\nselling_price = 100\nsolution = solve_it(num_bags * selling_price * 0.25 - profit, num_bags)\nanswer = solution[num_bags]\n\n", "completions": ["num_bags = Symbol('num_bags', positive=True)\nprofit = 3000\nselling_price = 100\nsolution = solve_it(num_bags * selling_price * 0.25 - profit, num_bags)\nanswer = solution[num_bags]\n\n"]}
{"id": 21, "answer": "B", "completion": "Alex_hours = Symbol('Alex_hours', positive=True)\nJacob_hours = Symbol('Jacob_hours', positive=True)\nAlex_toys = 35\nJacob_toys = 35\nAlex_toys_per_hour = 1 / 7\nJacob_toys_per_hour = 1 / 9\nsolution = solve_it([Alex_hours * Alex_toys_per_hour + Jacob_hours * Jacob_toys_per_hour - Alex_toys, Alex_hours + Jacob_hours - 35], [Alex_hours, Jacob_hours])\nanswer = solution[Jacob_hours]\n\n", "completions": ["Alex_hours = Symbol('Alex_hours', positive=True)\nJacob_hours = Symbol('Jacob_hours', positive=True)\nAlex_toys = 35\nJacob_toys = 35\nAlex_toys_per_hour = 1 / 7\nJacob_toys_per_hour = 1 / 9\nsolution = solve_it([Alex_hours * Alex_toys_per_hour + Jacob_hours * Jacob_toys_per_hour - Alex_toys, Alex_hours + Jacob_hours - 35], [Alex_hours, Jacob_hours])\nanswer = solution[Jacob_hours]\n\n"]}
{"id": 22, "answer": "C", "completion": "concentration = Symbol('concentration', positive=True)\nsolution = solve_it([0.5 * concentration - 0.15 * 0.5 * concentration - 0.1 * 0.85 * concentration, 0.85 * concentration - 0.15 * 0.5 * concentration - 0.1 * 0.85 * concentration], [concentration])\nanswer = solution[concentration]\n\n", "completions": ["concentration = Symbol('concentration', positive=True)\nsolution = solve_it([0.5 * concentration - 0.15 * 0.5 * concentration - 0.1 * 0.85 * concentration, 0.85 * concentration - 0.15 * 0.5 * concentration - 0.1 * 0.85 * concentration], [concentration])\nanswer = solution[concentration]\n\n"]}
{"id": 23, "answer": "[invalid]", "completion": "num_students = Symbol('num_students', positive=True)\nnum_students_studying_math = num_students / 16\nnum_students_studying_bio = num_students / 10\nnum_students_studying_english = num_students / 8\nsolution = solve_it([num_students_studying_math, num_students_studying_bio, num_students_studying_english], num_students)\nnum_students_max = max(solution[num_students])\nnum_students_min = min(solution[num_students])\nanswer = num_students_max - num_students_min\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_students_studying_math = num_students / 16\nnum_students_studying_bio = num_students / 10\nnum_students_studying_english = num_students / 8\nsolution = solve_it([num_students_studying_math, num_students_studying_bio, num_students_studying_english], num_students)\nnum_students_max = max(solution[num_students])\nnum_students_min = min(solution[num_students])\nanswer = num_students_max - num_students_min\n\n"]}
{"id": 24, "answer": "D", "completion": "average_speed = 15\nreduced_speed = average_speed - 4\ntime = 21 / 60\ndistance = reduced_speed * time\nanswer = round(distance, 2)\n\n", "completions": ["average_speed = 15\nreduced_speed = average_speed - 4\ntime = 21 / 60\ndistance = reduced_speed * time\nanswer = round(distance, 2)\n\n"]}
{"id": 25, "answer": "B", "completion": "cost = Symbol('cost', positive=True)\nprofit = 20\npercentage_profit = 40\nsolution = solve_it(cost * (1 + percentage_profit / 100) - cost - profit, cost)\nanswer = solution[cost]\n\n", "completions": ["cost = Symbol('cost', positive=True)\nprofit = 20\npercentage_profit = 40\nsolution = solve_it(cost * (1 + percentage_profit / 100) - cost - profit, cost)\nanswer = solution[cost]\n\n"]}
{"id": 26, "answer": "C", "completion": "amount_borrowed = 500\ninterest_rate = 6\namount_to_pay = amount_borrowed * (1 + 4 * interest_rate / 100)\nanswer = amount_to_pay\n\n", "completions": ["amount_borrowed = 500\ninterest_rate = 6\namount_to_pay = amount_borrowed * (1 + 4 * interest_rate / 100)\nanswer = amount_to_pay\n\n"]}
{"id": 27, "answer": "A", "completion": "options = [(99, 10), (85, 9), (50, 7), (1, 1), (1, 0)]\nfor option in options:\n    if option[0] >= 0 and option[0] <= 100 and option[1] <= math.sqrt(option[0]):\n        answer = option\n        break\n\n", "completions": ["options = [(99, 10), (85, 9), (50, 7), (1, 1), (1, 0)]\nfor option in options:\n    if option[0] >= 0 and option[0] <= 100 and option[1] <= math.sqrt(option[0]):\n        answer = option\n        break\n\n"]}
{"id": 28, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nforward_speed = distance / 6\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it([forward_speed * 6 - distance, return_speed * return_time - distance], [distance, forward_speed])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nforward_speed = distance / 6\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it([forward_speed * 6 - distance, return_speed * return_time - distance], [distance, forward_speed])\nanswer = solution[distance]\n\n"]}
{"id": 29, "answer": "A", "completion": "age = Symbol('age', positive=True)\nsolution = solve_it(age / 2 - 2, age)\nanswer = solution[age]\n\n", "completions": ["age = Symbol('age', positive=True)\nsolution = solve_it(age / 2 - 2, age)\nanswer = solution[age]\n\n"]}
{"id": 30, "answer": "A", "completion": "wholesale_cost = Symbol('wholesale_cost', positive=True)\noriginal_retail_price = wholesale_cost * 1.6\nactual_retail_price = wholesale_cost * 1.2\nanswer = (actual_retail_price - wholesale_cost) / wholesale_cost\n\n", "completions": ["wholesale_cost = Symbol('wholesale_cost', positive=True)\noriginal_retail_price = wholesale_cost * 1.6\nactual_retail_price = wholesale_cost * 1.2\nanswer = (actual_retail_price - wholesale_cost) / wholesale_cost\n\n"]}
{"id": 31, "answer": "A", "completion": "distance = 20 * 10 / 4\nanswer = distance\n\n", "completions": ["distance = 20 * 10 / 4\nanswer = distance\n\n"]}
{"id": 32, "answer": "B", "completion": "perimeter_1 = 48\nperimeter_2 = 66\narea = Symbol('area', positive=True)\nsolution = solve_it([2 * area - perimeter_1, 2 * area - perimeter_2], [area])\nanswer = solution[area]\n\n", "completions": ["perimeter_1 = 48\nperimeter_2 = 66\narea = Symbol('area', positive=True)\nsolution = solve_it([2 * area - perimeter_1, 2 * area - perimeter_2], [area])\nanswer = solution[area]\n\n"]}
{"id": 33, "answer": "B", "completion": "ways_to_travel_from_M_to_N = 3\nways_to_travel_from_N_to_O = 4\nways_to_travel_from_O_to_P = 1\nways_to_travel_from_P_to_Q = 3\nanswer = ways_to_travel_from_M_to_N * ways_to_travel_from_N_to_O * ways_to_travel_from_O_to_P * ways_to_travel_from_P_to_Q\n\n", "completions": ["ways_to_travel_from_M_to_N = 3\nways_to_travel_from_N_to_O = 4\nways_to_travel_from_O_to_P = 1\nways_to_travel_from_P_to_Q = 3\nanswer = ways_to_travel_from_M_to_N * ways_to_travel_from_N_to_O * ways_to_travel_from_O_to_P * ways_to_travel_from_P_to_Q\n\n"]}
{"id": 34, "answer": "C", "completion": "width = 3\nheight = 4\ndepth = 15\ndiameter = 2 * (width ** 2 + height ** 2 + depth ** 2) ** 0.5\nanswer = diameter\n\n", "completions": ["width = 3\nheight = 4\ndepth = 15\ndiameter = 2 * (width ** 2 + height ** 2 + depth ** 2) ** 0.5\nanswer = diameter\n\n"]}
{"id": 35, "answer": "A", "completion": "distance_from_home = Symbol('distance_from_home', positive=True)\ndistance_traveled = 3 + 5 + 3 + 2\nsolution = solve_it(distance_traveled ** 2 - distance_from_home ** 2, distance_from_home)\nanswer = solution[distance_from_home]\n\n", "completions": ["distance_from_home = Symbol('distance_from_home', positive=True)\ndistance_traveled = 3 + 5 + 3 + 2\nsolution = solve_it(distance_traveled ** 2 - distance_from_home ** 2, distance_from_home)\nanswer = solution[distance_from_home]\n\n"]}
{"id": 36, "answer": "A", "completion": "price = Symbol('price', positive=True)\ndiscount_5 = 0.05 * price\ndiscount_7 = 0.07 * price\nsolution = solve_it(discount_5 - discount_7 - 15, price)\nanswer = solution[price]\n\n", "completions": ["price = Symbol('price', positive=True)\ndiscount_5 = 0.05 * price\ndiscount_7 = 0.07 * price\nsolution = solve_it(discount_5 - discount_7 - 15, price)\nanswer = solution[price]\n\n"]}
{"id": 37, "answer": "A", "completion": "number = Symbol('number', positive=True)\nactual_answer = 7 / 8 * number\nwrong_answer = 7 / 18 * number\nsolution = solve_it(actual_answer - wrong_answer - 770, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nactual_answer = 7 / 8 * number\nwrong_answer = 7 / 18 * number\nsolution = solve_it(actual_answer - wrong_answer - 770, number)\nanswer = solution[number]\n\n"]}
{"id": 38, "answer": "D", "completion": "sales = Symbol('sales', positive=True)\nsalary = 500 + 0.05 * sales\nsolution = solve_it(salary - 1500, sales)\nanswer = solution[sales]\n\n", "completions": ["sales = Symbol('sales', positive=True)\nsalary = 500 + 0.05 * sales\nsolution = solve_it(salary - 1500, sales)\nanswer = solution[sales]\n\n"]}
{"id": 39, "answer": "A", "completion": "side_1_distance = 200\nside_2_distance = 400\nside_3_distance = 600\nside_4_distance = 800\nside_1_time = side_1_distance / 200\nside_2_time = side_2_distance / 400\nside_3_time = side_3_distance / 600\nside_4_time = side_4_distance / 800\ntotal_time = side_1_time + side_2_time + side_3_time + side_4_time\ntotal_distance = side_1_distance + side_2_distance + side_3_distance + side_4_distance\nanswer = total_distance / total_time\n\n", "completions": ["side_1_distance = 200\nside_2_distance = 400\nside_3_distance = 600\nside_4_distance = 800\nside_1_time = side_1_distance / 200\nside_2_time = side_2_distance / 400\nside_3_time = side_3_distance / 600\nside_4_time = side_4_distance / 800\ntotal_time = side_1_time + side_2_time + side_3_time + side_4_time\ntotal_distance = side_1_distance + side_2_distance + side_3_distance + side_4_distance\nanswer = total_distance / total_time\n\n"]}
{"id": 40, "answer": "B", "completion": "white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners * (1 + white_sharpeners) - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n", "completions": ["white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners * (1 + white_sharpeners) - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])\n\n"]}
{"id": 41, "answer": "D", "completion": "rate_of_hose_A = Symbol('rate_of_hose_A', positive=True)\nrate_of_hose_B = Symbol('rate_of_hose_B', positive=True)\ntime_for_hose_A = 8\ntime_for_hose_A_and_B = 3\ntime_for_hose_A_alone = 2\nsolution = solve_it([rate_of_hose_A * time_for_hose_A - rate_of_hose_A * time_for_hose_A_alone - rate_of_hose_B * time_for_hose_A_and_B], [rate_of_hose_A])\nanswer = solution[rate_of_hose_A]\n\n", "completions": ["rate_of_hose_A = Symbol('rate_of_hose_A', positive=True)\nrate_of_hose_B = Symbol('rate_of_hose_B', positive=True)\ntime_for_hose_A = 8\ntime_for_hose_A_and_B = 3\ntime_for_hose_A_alone = 2\nsolution = solve_it([rate_of_hose_A * time_for_hose_A - rate_of_hose_A * time_for_hose_A_alone - rate_of_hose_B * time_for_hose_A_and_B], [rate_of_hose_A])\nanswer = solution[rate_of_hose_A]\n\n"]}
{"id": 42, "answer": "C", "completion": "original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent\n\n", "completions": ["original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent\n\n"]}
{"id": 43, "answer": "A", "completion": "number = Symbol('number', positive=True)\nnumber_with_1_before = number / 3\nnumber_with_1_after = number * 3\nsolution = solve_it(number_with_1_after - number_with_1_before - 1, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nnumber_with_1_before = number / 3\nnumber_with_1_after = number * 3\nsolution = solve_it(number_with_1_after - number_with_1_before - 1, number)\nanswer = solution[number]\n\n"]}
{"id": 44, "answer": "B", "completion": "num_students = 100\nstudents_in_chess_club = 0.24 * num_students\nstudents_in_swim_team = 0.2 * num_students + students_in_chess_club\nanswer = students_in_swim_team / num_students\n\n", "completions": ["num_students = 100\nstudents_in_chess_club = 0.24 * num_students\nstudents_in_swim_team = 0.2 * num_students + students_in_chess_club\nanswer = students_in_swim_team / num_students\n\n"]}
{"id": 45, "answer": "B", "completion": "population = 78000\nannual_growth_rate = 0.05\npopulation_in_2_years = population * (1 + annual_growth_rate) ** 2\nanswer = population_in_2_years\n\n", "completions": ["population = 78000\nannual_growth_rate = 0.05\npopulation_in_2_years = population * (1 + annual_growth_rate) ** 2\nanswer = population_in_2_years\n\n"]}
{"id": 46, "answer": "E", "completion": "distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = Symbol('time', positive=True)\nsolution = solve_it(distance - speed_1 * time - speed_2 * time, time)\nanswer = solution[time]\n\n", "completions": ["distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = Symbol('time', positive=True)\nsolution = solve_it(distance - speed_1 * time - speed_2 * time, time)\nanswer = solution[time]\n\n"]}
{"id": 47, "answer": "B", "completion": "salary = 1500\ncommission = 0.15\nmonthly_income = 6000\nsolution = solve_it(salary + commission * x - monthly_income, x)\nanswer = solution[x]\n\n", "completions": ["salary = 1500\ncommission = 0.15\nmonthly_income = 6000\nsolution = solve_it(salary + commission * x - monthly_income, x)\nanswer = solution[x]\n\n"]}
{"id": 48, "answer": "C", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 360\nmonthly_installment = 31.50\nsolution = solve_it(amount * interest_rate / 100 / 12 - monthly_installment, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 360\nmonthly_installment = 31.50\nsolution = solve_it(amount * interest_rate / 100 / 12 - monthly_installment, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 49, "answer": "A", "completion": "price = Symbol('price', positive=True)\nreduced_price = price * 0.7\nincrease_percentage = 100 - reduced_price / price * 100\nanswer = increase_percentage\n\n", "completions": ["price = Symbol('price', positive=True)\nreduced_price = price * 0.7\nincrease_percentage = 100 - reduced_price / price * 100\nanswer = increase_percentage\n\n"]}
{"id": 50, "answer": "A", "completion": "total_money = 700\nnum_coins = Symbol('num_coins', positive=True)\ntotal_value = num_coins * 25 + num_coins * 50 + num_coins\nsolution = solve_it(total_value - total_money, num_coins)\nanswer = solution[num_coins]\n\n", "completions": ["total_money = 700\nnum_coins = Symbol('num_coins', positive=True)\ntotal_value = num_coins * 25 + num_coins * 50 + num_coins\nsolution = solve_it(total_value - total_money, num_coins)\nanswer = solution[num_coins]\n\n"]}
{"id": 51, "answer": "D", "completion": "monthly_expenses = 3500\nmonthly_savings = 0.125 * monthly_expenses\nmonthly_income = monthly_expenses + monthly_savings\nanswer = monthly_income\n\n", "completions": ["monthly_expenses = 3500\nmonthly_savings = 0.125 * monthly_expenses\nmonthly_income = monthly_expenses + monthly_savings\nanswer = monthly_income\n\n"]}
{"id": 52, "answer": "B", "completion": "toys_in_one_box = 5 * 12\ntoys_in_one_tempo = 98 * toys_in_one_box\ntoys_in_one_round = 29400\nanswer = toys_in_one_round / toys_in_one_tempo\n\n", "completions": ["toys_in_one_box = 5 * 12\ntoys_in_one_tempo = 98 * toys_in_one_box\ntoys_in_one_round = 29400\nanswer = toys_in_one_round / toys_in_one_tempo\n\n"]}
{"id": 53, "answer": "A", "completion": "num_oranges = 10\nnum_ways = factorial(num_oranges) / (factorial(2) * factorial(num_oranges - 2))\nanswer = num_ways\n\n", "completions": ["num_oranges = 10\nnum_ways = factorial(num_oranges) / (factorial(2) * factorial(num_oranges - 2))\nanswer = num_ways\n\n"]}
{"id": 54, "answer": "D", "completion": "days = Symbol('days', positive=True)\nsolution = solve_it([1 / 6 + 1 / 8 - 1 / days, 1 / 8 + 1 / 12 - 1 / days, 1 / 12 - 1 / days], [days])\nanswer = solution[days]\n\n", "completions": ["days = Symbol('days', positive=True)\nsolution = solve_it([1 / 6 + 1 / 8 - 1 / days, 1 / 8 + 1 / 12 - 1 / days, 1 / 12 - 1 / days], [days])\nanswer = solution[days]\n\n"]}
{"id": 55, "answer": "A", "completion": "train_a_interval = 16\ntrain_b_interval = 17\nlcm = train_a_interval * train_b_interval / gcd(train_a_interval, train_b_interval)\nanswer = lcm\n\n", "completions": ["train_a_interval = 16\ntrain_b_interval = 17\nlcm = train_a_interval * train_b_interval / gcd(train_a_interval, train_b_interval)\nanswer = lcm\n\n"]}
{"id": 56, "answer": "A", "completion": "num_faces = 6 * (5 ** 2)\nnum_faces_painted = 2 * (5 ** 2) + 4 * 5\nnum_faces_unpainted = num_faces - num_faces_painted\nanswer = num_faces_unpainted\n\n", "completions": ["num_faces = 6 * (5 ** 2)\nnum_faces_painted = 2 * (5 ** 2) + 4 * 5\nnum_faces_unpainted = num_faces - num_faces_painted\nanswer = num_faces_unpainted\n\n"]}
{"id": 57, "answer": "D", "completion": "total_chocolates = 100\ncocoa_chocolates = 10\nvanilla_chocolates = total_chocolates - cocoa_chocolates\nsquashed_chocolates = 0.9 * vanilla_chocolates\nvanilla_chocolates_not_squashed = vanilla_chocolates - squashed_chocolates\nanswer = vanilla_chocolates_not_squashed / total_chocolates\n\n", "completions": ["total_chocolates = 100\ncocoa_chocolates = 10\nvanilla_chocolates = total_chocolates - cocoa_chocolates\nsquashed_chocolates = 0.9 * vanilla_chocolates\nvanilla_chocolates_not_squashed = vanilla_chocolates - squashed_chocolates\nanswer = vanilla_chocolates_not_squashed / total_chocolates\n\n"]}
{"id": 58, "answer": "A", "completion": "depth = 30\ndistance_jumped = 3\ndistance_fallen = 2\ndays = Symbol('days', positive=True)\ndistance_travelled = days * (distance_jumped - distance_fallen)\nsolution = solve_it(distance_travelled - depth, days)\nanswer = solution[days]\n\n", "completions": ["depth = 30\ndistance_jumped = 3\ndistance_fallen = 2\ndays = Symbol('days', positive=True)\ndistance_travelled = days * (distance_jumped - distance_fallen)\nsolution = solve_it(distance_travelled - depth, days)\nanswer = solution[days]\n\n"]}
{"id": 59, "answer": "A", "completion": "options = [47, 91, 41, 67, 44]\nfor option in options:\n    if (option + 1 + option + 3 + option + 5 + option + 7 + option + 9) % 10 == 0:\n        answer = option\n        break\n\n", "completions": ["options = [47, 91, 41, 67, 44]\nfor option in options:\n    if (option + 1 + option + 3 + option + 5 + option + 7 + option + 9) % 10 == 0:\n        answer = option\n        break\n\n"]}
{"id": 60, "answer": "A", "completion": "num_students = Symbol('num_students', positive=True)\nnum_students_interested_in_football = 0.08 * num_students\nnum_students_interested_in_cricket = 0.8 * num_students\nnum_students_interested_in_basketball = 0.1 * num_students\nnum_students_not_interested_in_any_games = 20\nsolution = solve_it([num_students_interested_in_football, num_students_interested_in_cricket, num_students_interested_in_basketball, num_students_not_interested_in_any_games], num_students)\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_students_interested_in_football = 0.08 * num_students\nnum_students_interested_in_cricket = 0.8 * num_students\nnum_students_interested_in_basketball = 0.1 * num_students\nnum_students_not_interested_in_any_games = 20\nsolution = solve_it([num_students_interested_in_football, num_students_interested_in_cricket, num_students_interested_in_basketball, num_students_not_interested_in_any_games], num_students)\nanswer = solution[num_students]\n\n"]}
{"id": 61, "answer": "D", "completion": "age_of_R = Symbol('age_of_R', positive=True)\nage_of_Q = Symbol('age_of_Q', positive=True)\nage_of_T = Symbol('age_of_T', positive=True)\nsolution = solve_it([age_of_R + age_of_T - 50, age_of_R - age_of_Q - (age_of_Q - age_of_T)], [age_of_R, age_of_Q, age_of_T])\nanswer = solution[age_of_R] - solution[age_of_Q]", "completions": ["age_of_R = Symbol('age_of_R', positive=True)\nage_of_Q = Symbol('age_of_Q', positive=True)\nage_of_T = Symbol('age_of_T', positive=True)\nsolution = solve_it([age_of_R + age_of_T - 50, age_of_R - age_of_Q - (age_of_Q - age_of_T)], [age_of_R, age_of_Q, age_of_T])\nanswer = solution[age_of_R] - solution[age_of_Q]"]}
{"id": 62, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ncost = 3.5 + 0.1 * distance\nsolution = solve_it(cost - 8.5, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ncost = 3.5 + 0.1 * distance\nsolution = solve_it(cost - 8.5, distance)\nanswer = solution[distance]\n\n"]}
{"id": 63, "answer": "C", "completion": "matches = Symbol('matches', positive=True)\nruns = Symbol('runs', positive=True)\naverage = Symbol('average', positive=True)\nsolution = solve_it([average * matches - runs, average * (matches + 1) - (runs + 78)], [average, matches])\nanswer = solution[matches]\n\n", "completions": ["matches = Symbol('matches', positive=True)\nruns = Symbol('runs', positive=True)\naverage = Symbol('average', positive=True)\nsolution = solve_it([average * matches - runs, average * (matches + 1) - (runs + 78)], [average, matches])\nanswer = solution[matches]\n\n"]}
{"id": 64, "answer": "C", "completion": "num_books = 10\nnum_codes = Symbol('num_codes', positive=True)\nsolution = solve_it(num_codes ** 2 - num_codes - 2 * num_books, num_codes)\nanswer = solution[num_codes]\n\n", "completions": ["num_books = 10\nnum_codes = Symbol('num_codes', positive=True)\nsolution = solve_it(num_codes ** 2 - num_codes - 2 * num_books, num_codes)\nanswer = solution[num_codes]\n\n"]}
{"id": 65, "answer": "C", "completion": "length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])\n\n", "completions": ["length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])\n\n"]}
{"id": 66, "answer": "B", "completion": "vitamin_e_percent = 9\nvitamin_a_percent = 8\nvitamin_e_minimum = Symbol('vitamin_e_minimum', positive=True)\nvitamin_a_minimum = Symbol('vitamin_a_minimum', positive=True)\ngrams_of_health_food = Symbol('grams_of_health_food', positive=True)\nsolution = solve_it([grams_of_health_food * vitamin_e_percent / 100 - vitamin_e_minimum, grams_of_health_food * vitamin_a_percent / 100 - vitamin_a_minimum], [grams_of_health_food, vitamin_e_minimum, vitamin_a_minimum])\nanswer = solution[grams_of_health_food]\n\n", "completions": ["vitamin_e_percent = 9\nvitamin_a_percent = 8\nvitamin_e_minimum = Symbol('vitamin_e_minimum', positive=True)\nvitamin_a_minimum = Symbol('vitamin_a_minimum', positive=True)\ngrams_of_health_food = Symbol('grams_of_health_food', positive=True)\nsolution = solve_it([grams_of_health_food * vitamin_e_percent / 100 - vitamin_e_minimum, grams_of_health_food * vitamin_a_percent / 100 - vitamin_a_minimum], [grams_of_health_food, vitamin_e_minimum, vitamin_a_minimum])\nanswer = solution[grams_of_health_food]\n\n"]}
{"id": 67, "answer": "A", "completion": "num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hour = 2\nsmall_cakes_per_hour = 35\nlarge_cakes_needed = 20\nsmall_cakes_needed = 700\nhours_available = 3\nsolution = solve_it([num_helpers * large_cakes_per_hour - large_cakes_needed, num_helpers * small_cakes_per_hour - small_cakes_needed, num_helpers * hours_available - large_cakes_needed - small_cakes_needed], [num_helpers])\nanswer = solution[num_helpers]\n\n", "completions": ["num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hour = 2\nsmall_cakes_per_hour = 35\nlarge_cakes_needed = 20\nsmall_cakes_needed = 700\nhours_available = 3\nsolution = solve_it([num_helpers * large_cakes_per_hour - large_cakes_needed, num_helpers * small_cakes_per_hour - small_cakes_needed, num_helpers * hours_available - large_cakes_needed - small_cakes_needed], [num_helpers])\nanswer = solution[num_helpers]\n\n"]}
{"id": 68, "answer": "B", "completion": "RU = Symbol('RU', positive=True)\nRS = 5\nRT = 17\nST = 22\nsolution = solve_it([RU + RT - RS - ST, RU + RT - 2 * ST], RU)\nanswer = solution[RU]\n\n", "completions": ["RU = Symbol('RU', positive=True)\nRS = 5\nRT = 17\nST = 22\nsolution = solve_it([RU + RT - RS - ST, RU + RT - 2 * ST], RU)\nanswer = solution[RU]\n\n"]}
{"id": 69, "answer": "A", "completion": "pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nfalafel_in_pita_breads = Symbol('falafel_in_pita_breads', positive=True)\nfalafel_in_rolls = Symbol('falafel_in_rolls', positive=True)\nfalafel_in_baguettes = Symbol('falafel_in_baguettes', positive=True)\nsolution = solve_it([pita_breads * falafel_in_pita_breads - 2 * rolls * falafel_in_rolls, 3 * rolls * falafel_in_rolls - 5 * baguettes * falafel_in_baguettes], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]\n\n", "completions": ["pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nfalafel_in_pita_breads = Symbol('falafel_in_pita_breads', positive=True)\nfalafel_in_rolls = Symbol('falafel_in_rolls', positive=True)\nfalafel_in_baguettes = Symbol('falafel_in_baguettes', positive=True)\nsolution = solve_it([pita_breads * falafel_in_pita_breads - 2 * rolls * falafel_in_rolls, 3 * rolls * falafel_in_rolls - 5 * baguettes * falafel_in_baguettes], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]\n\n"]}
{"id": 70, "answer": "A", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount_percentage = 20\nsolution = solve_it([original_price - discounted_price - 0.2 * original_price, original_price - 1.2 * discounted_price], [original_price, discounted_price])\nanswer = solution[original_price]\n\n", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount_percentage = 20\nsolution = solve_it([original_price - discounted_price - 0.2 * original_price, original_price - 1.2 * discounted_price], [original_price, discounted_price])\nanswer = solution[original_price]\n\n"]}
{"id": 71, "answer": "A", "completion": "bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\nbus_fare_for_2_people = 4 / 3 * train_fare\nbus_fare_for_6_people = 6 * bus_fare_for_2_people\ntrain_fare_for_8_people = 8 * train_fare\nsolution = solve_it([bus_fare_for_6_people + train_fare_for_8_people - 1512, bus_fare_for_2_people - train_fare], [bus_fare, train_fare])\nanswer = solution[train_fare]\n\n", "completions": ["bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\nbus_fare_for_2_people = 4 / 3 * train_fare\nbus_fare_for_6_people = 6 * bus_fare_for_2_people\ntrain_fare_for_8_people = 8 * train_fare\nsolution = solve_it([bus_fare_for_6_people + train_fare_for_8_people - 1512, bus_fare_for_2_people - train_fare], [bus_fare, train_fare])\nanswer = solution[train_fare]\n\n"]}
{"id": 72, "answer": "B", "completion": "width = 3\nheight = 8\nperimeter = 2 * (width + height)\nanswer = perimeter\n\n", "completions": ["width = 3\nheight = 8\nperimeter = 2 * (width + height)\nanswer = perimeter\n\n"]}
{"id": 73, "answer": "B", "completion": "num_books = 6\nnum_ways = factorial(num_books)\nanswer = num_ways\n\n", "completions": ["num_books = 6\nnum_ways = factorial(num_books)\nanswer = num_ways\n\n"]}
{"id": 74, "answer": "B", "completion": "pickets = Symbol('pickets', positive=True)\npicket_width = 1 / 2\nspace_between_pickets = 6\ntotal_length = pickets * picket_width + (pickets - 1) * space_between_pickets\nanswer = total_length / 12\n\n", "completions": ["pickets = Symbol('pickets', positive=True)\npicket_width = 1 / 2\nspace_between_pickets = 6\ntotal_length = pickets * picket_width + (pickets - 1) * space_between_pickets\nanswer = total_length / 12\n\n"]}
{"id": 75, "answer": "A", "completion": "ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = 10 * ship_speed\ndistance_traveled_by_ship = 180\ntime_traveled_by_ship = distance_traveled_by_ship / ship_speed\ndistance_traveled_by_plane = plane_speed * time_traveled_by_ship\nanswer = distance_traveled_by_plane\n\n", "completions": ["ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = 10 * ship_speed\ndistance_traveled_by_ship = 180\ntime_traveled_by_ship = distance_traveled_by_ship / ship_speed\ndistance_traveled_by_plane = plane_speed * time_traveled_by_ship\nanswer = distance_traveled_by_plane\n\n"]}
{"id": 76, "answer": "E", "completion": "total_deer_population = Symbol('total_deer_population', positive=True)\ntagged_deer_population = 300\ncaught_deer_population = 500\ncaught_tagged_deer_population = 20\nsolution = solve_it(caught_tagged_deer_population / caught_deer_population - tagged_deer_population / total_deer_population, total_deer_population)\nanswer = solution[total_deer_population]\n\n", "completions": ["total_deer_population = Symbol('total_deer_population', positive=True)\ntagged_deer_population = 300\ncaught_deer_population = 500\ncaught_tagged_deer_population = 20\nsolution = solve_it(caught_tagged_deer_population / caught_deer_population - tagged_deer_population / total_deer_population, total_deer_population)\nanswer = solution[total_deer_population]\n\n"]}
{"id": 77, "answer": "A", "completion": "probability = 1 / 2\n\n", "completions": ["probability = 1 / 2\n\n"]}
{"id": 78, "answer": "A", "completion": "num_vehicles = 10\naverage_weight = 12.2\nincrease_in_average_weight = 2.6\nweight_of_heavy_duty_truck = num_vehicles * (average_weight + increase_in_average_weight) - num_vehicles * average_weight\nanswer = weight_of_heavy_duty_truck\n\n", "completions": ["num_vehicles = 10\naverage_weight = 12.2\nincrease_in_average_weight = 2.6\nweight_of_heavy_duty_truck = num_vehicles * (average_weight + increase_in_average_weight) - num_vehicles * average_weight\nanswer = weight_of_heavy_duty_truck\n\n"]}
{"id": 79, "answer": "B", "completion": "percent_increase = Symbol('percent_increase', positive=True)\nsolution = solve_it(1.1 * (1 + percent_increase / 100) - 2, percent_increase)\nanswer = solution[percent_increase]\n\n", "completions": ["percent_increase = Symbol('percent_increase', positive=True)\nsolution = solve_it(1.1 * (1 + percent_increase / 100) - 2, percent_increase)\nanswer = solution[percent_increase]\n\n"]}
{"id": 80, "answer": "A", "completion": "arjun_money = Symbol('arjun_money', positive=True)\nsajal_money = Symbol('sajal_money', positive=True)\nsolution = solve_it([arjun_money - 30 + sajal_money - 2 * arjun_money, sajal_money - 10 + 3 * arjun_money - sajal_money], [arjun_money, sajal_money])\nanswer = (solution[arjun_money], solution[sajal_money])\n\n", "completions": ["arjun_money = Symbol('arjun_money', positive=True)\nsajal_money = Symbol('sajal_money', positive=True)\nsolution = solve_it([arjun_money - 30 + sajal_money - 2 * arjun_money, sajal_money - 10 + 3 * arjun_money - sajal_money], [arjun_money, sajal_money])\nanswer = (solution[arjun_money], solution[sajal_money])\n\n"]}
{"id": 81, "answer": "A", "completion": "width = 100\narea = 3000\nlength = Symbol('length', positive=True)\nsolution = solve_it([width * length - area], [length])\nanswer = solution[length]\n\n", "completions": ["width = 100\narea = 3000\nlength = Symbol('length', positive=True)\nsolution = solve_it([width * length - area], [length])\nanswer = solution[length]\n\n"]}
{"id": 82, "answer": "A", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ngcf = 11\nlcm = 7700\nsolution = solve_it([num1 * num2 / gcf - lcm, num1 - 350], [num1, num2])\nanswer = solution[num2]\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ngcf = 11\nlcm = 7700\nsolution = solve_it([num1 * num2 / gcf - lcm, num1 - 350], [num1, num2])\nanswer = solution[num2]\n\n"]}
{"id": 83, "answer": "B", "completion": "side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 2 * area, side)\nanswer = 4 * solution[side]\n\n", "completions": ["side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 2 * area, side)\nanswer = 4 * solution[side]\n\n"]}
{"id": 84, "answer": "A", "completion": "original_length = 30\nreduced_length = 30 * 3 / 5\nanswer = reduced_length\n\n", "completions": ["original_length = 30\nreduced_length = 30 * 3 / 5\nanswer = reduced_length\n\n"]}
{"id": 85, "answer": "E", "completion": "c = Symbol('c', positive=True)\na = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nM = a * b * c\nN = c * b * a\nsolution = solve_it([M - N + 396 * c - 990, M - 300], [a, b, c])\nanswer = len(solution[a])\n\n", "completions": ["c = Symbol('c', positive=True)\na = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nM = a * b * c\nN = c * b * a\nsolution = solve_it([M - N + 396 * c - 990, M - 300], [a, b, c])\nanswer = len(solution[a])\n\n"]}
{"id": 86, "answer": "C", "completion": "num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = 0.2 * num_students\nnum_students_taking_math = 0.28 * num_students\nsolution = solve_it(num_students_taking_physics + num_students_taking_math - 501, num_students)\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_students_taking_physics = 0.2 * num_students\nnum_students_taking_math = 0.28 * num_students\nsolution = solve_it(num_students_taking_physics + num_students_taking_math - 501, num_students)\nanswer = solution[num_students]\n\n"]}
{"id": 87, "answer": "B", "completion": "age_of_raj_5_years_back = Symbol('age_of_raj_5_years_back', positive=True)\nage_of_rahim_5_years_back = 3 * age_of_raj_5_years_back\nage_of_raj_now = 17\nage_of_rahim_now = age_of_rahim_5_years_back + 5\nsolution = solve_it(age_of_rahim_now - age_of_raj_now, age_of_raj_5_years_back)\nanswer = solution[age_of_raj_5_years_back]\n\n", "completions": ["age_of_raj_5_years_back = Symbol('age_of_raj_5_years_back', positive=True)\nage_of_rahim_5_years_back = 3 * age_of_raj_5_years_back\nage_of_raj_now = 17\nage_of_rahim_now = age_of_rahim_5_years_back + 5\nsolution = solve_it(age_of_rahim_now - age_of_raj_now, age_of_raj_5_years_back)\nanswer = solution[age_of_raj_5_years_back]\n\n"]}
{"id": 88, "answer": "A", "completion": "field_area = Symbol('field_area', positive=True)\ncow_speed = Symbol('cow_speed', positive=True)\nfield_area = 10 * 14\ncow_speed = 10\nduration = field_area / cow_speed\nanswer = duration\n\n", "completions": ["field_area = Symbol('field_area', positive=True)\ncow_speed = Symbol('cow_speed', positive=True)\nfield_area = 10 * 14\ncow_speed = 10\nduration = field_area / cow_speed\nanswer = duration\n\n"]}
{"id": 89, "answer": "A", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = 27.5\nprofit = selling_price - cost_price\npercentage_profit = profit / cost_price * 100\npercentage_loss = -percentage_profit\nsolution = solve_it(percentage_profit - 10, cost_price)\nanswer = solution[cost_price]\n\n", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = 27.5\nprofit = selling_price - cost_price\npercentage_profit = profit / cost_price * 100\npercentage_loss = -percentage_profit\nsolution = solve_it(percentage_profit - 10, cost_price)\nanswer = solution[cost_price]\n\n"]}
{"id": 90, "answer": "B", "completion": "answer = 3\n\n", "completions": ["answer = 3\n\n"]}
{"id": 91, "answer": "A", "completion": "num_calls = Symbol('num_calls', positive=True)\nbill = Symbol('bill', positive=True)\nsolution = solve_it([bill - 540 * 30 - 1800, bill - 620 * 30 - 2040, bill - 500 * 30 - 1950], [bill])\nanswer = solution[bill]\n\n", "completions": ["num_calls = Symbol('num_calls', positive=True)\nbill = Symbol('bill', positive=True)\nsolution = solve_it([bill - 540 * 30 - 1800, bill - 620 * 30 - 2040, bill - 500 * 30 - 1950], [bill])\nanswer = solution[bill]\n\n"]}
{"id": 92, "answer": "A", "completion": "time = Symbol('time', positive=True)\nrotations_of_a = 2\nrotations_of_b = 5\ntime_for_a = 26\ntime_for_b = 35\nsolution = solve_it([rotations_of_a / time_for_a - rotations_of_b / time_for_b, rotations_of_a / time_for_a - 1], time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nrotations_of_a = 2\nrotations_of_b = 5\ntime_for_a = 26\ntime_for_b = 35\nsolution = solve_it([rotations_of_a / time_for_a - rotations_of_b / time_for_b, rotations_of_a / time_for_a - 1], time)\nanswer = solution[time]\n\n"]}
{"id": 93, "answer": "D", "completion": "hardcover_books = 30\nfiction_books = 20\nanswer = min(hardcover_books, fiction_books)", "completions": ["hardcover_books = 30\nfiction_books = 20\nanswer = min(hardcover_books, fiction_books)"]}
{"id": 94, "answer": "B", "completion": "num_sunday_papers = Symbol('num_sunday_papers', positive=True)\nnum_other_papers = Symbol('num_other_papers', positive=True)\ncost_sunday_papers = 4 * num_sunday_papers\ncost_other_papers = 1 * num_other_papers\nsolution = solve_it([cost_sunday_papers + cost_other_papers - 210, num_sunday_papers - 2 * num_other_papers], [num_sunday_papers, num_other_papers])\nanswer = solution[num_other_papers]", "completions": ["num_sunday_papers = Symbol('num_sunday_papers', positive=True)\nnum_other_papers = Symbol('num_other_papers', positive=True)\ncost_sunday_papers = 4 * num_sunday_papers\ncost_other_papers = 1 * num_other_papers\nsolution = solve_it([cost_sunday_papers + cost_other_papers - 210, num_sunday_papers - 2 * num_other_papers], [num_sunday_papers, num_other_papers])\nanswer = solution[num_other_papers]"]}
{"id": 95, "answer": "A", "completion": "num_people = Symbol('num_people', positive=True)\ncost_per_person = 96 / num_people\ncost_after_dropout = cost_per_person + 4\nsolution = solve_it(cost_after_dropout * num_people - 96, num_people)\nanswer = solution[num_people]\n\n", "completions": ["num_people = Symbol('num_people', positive=True)\ncost_per_person = 96 / num_people\ncost_after_dropout = cost_per_person + 4\nsolution = solve_it(cost_after_dropout * num_people - 96, num_people)\nanswer = solution[num_people]\n\n"]}
{"id": 96, "answer": "C", "completion": "side = Symbol('side', positive=True)\nlength = 27\nbreadth = 17\nsolution = solve_it([side ** 2 - length * breadth], [side])\nanswer = solution[side]\n\n", "completions": ["side = Symbol('side', positive=True)\nlength = 27\nbreadth = 17\nsolution = solve_it([side ** 2 - length * breadth], [side])\nanswer = solution[side]\n\n"]}
{"id": 97, "answer": "C", "completion": "amount = 8600\nnum_sons = 5\nnum_daughters = 4\nnum_nephews = 2\namount_per_son = amount / num_sons\namount_per_daughter = amount / num_daughters\namount_per_nephew = amount / num_nephews\nanswer = amount_per_daughter\n\n", "completions": ["amount = 8600\nnum_sons = 5\nnum_daughters = 4\nnum_nephews = 2\namount_per_son = amount / num_sons\namount_per_daughter = amount / num_daughters\namount_per_nephew = amount / num_nephews\nanswer = amount_per_daughter\n\n"]}
{"id": 98, "answer": "D", "completion": "weight = Symbol('weight', positive=True)\nsolution = solve_it(weight / 2 + 29 - 51, weight)\nanswer = solution[weight]\n\n", "completions": ["weight = Symbol('weight', positive=True)\nsolution = solve_it(weight / 2 + 29 - 51, weight)\nanswer = solution[weight]\n\n"]}
{"id": 99, "answer": "B", "completion": "tablets = 5\ntime_between_tablets = 15\nanswer = tablets * time_between_tablets\n\n", "completions": ["tablets = 5\ntime_between_tablets = 15\nanswer = tablets * time_between_tablets\n\n"]}
{"id": 100, "answer": "A", "completion": "red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = 120\nratio = 3 / 4\nsolution = solve_it(red_sweets / green_sweets - ratio, red_sweets)\nanswer = solution[red_sweets]\n\n", "completions": ["red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = 120\nratio = 3 / 4\nsolution = solve_it(red_sweets / green_sweets - ratio, red_sweets)\nanswer = solution[red_sweets]\n\n"]}
{"id": 101, "answer": "D", "completion": "num_members = Symbol('num_members', positive=True)\nage_of_first_member = 7\nage_of_last_member = age_of_first_member + (num_members - 1) * 3\nsolution = solve_it(age_of_first_member + age_of_last_member - 250, num_members)\nanswer = solution[num_members]\n\n", "completions": ["num_members = Symbol('num_members', positive=True)\nage_of_first_member = 7\nage_of_last_member = age_of_first_member + (num_members - 1) * 3\nsolution = solve_it(age_of_first_member + age_of_last_member - 250, num_members)\nanswer = solution[num_members]\n\n"]}
{"id": 102, "answer": "D", "completion": "M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)", "completions": ["M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)"]}
{"id": 103, "answer": "E", "completion": "cost_price = 1200\nselling_price = Symbol('selling_price', positive=True)\ndiscount = 0.2 * selling_price\nprofit = 0.2 * selling_price\nsolution = solve_it(selling_price - cost_price - profit - discount, selling_price)\nanswer = solution[selling_price]\n\n", "completions": ["cost_price = 1200\nselling_price = Symbol('selling_price', positive=True)\ndiscount = 0.2 * selling_price\nprofit = 0.2 * selling_price\nsolution = solve_it(selling_price - cost_price - profit - discount, selling_price)\nanswer = solution[selling_price]\n\n"]}
{"id": 104, "answer": "E", "completion": "distance = Symbol('distance', positive=True)\nspeed_of_train_a = 40\nspeed_of_train_b = 72\ntime_of_train_a = 11\ntime_of_train_b = 14\ntime_of_meeting = time_of_train_b - time_of_train_a\nsolution = solve_it(speed_of_train_a * time_of_meeting - speed_of_train_b * time_of_meeting - distance, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed_of_train_a = 40\nspeed_of_train_b = 72\ntime_of_train_a = 11\ntime_of_train_b = 14\ntime_of_meeting = time_of_train_b - time_of_train_a\nsolution = solve_it(speed_of_train_a * time_of_meeting - speed_of_train_b * time_of_meeting - distance, distance)\nanswer = solution[distance]\n\n"]}
{"id": 105, "answer": "B", "completion": "money = Symbol('money', positive=True)\nsolution = solve_it([0.5 * money - 75, 1 / 3 * money - 75], [money])\nanswer = solution[money]\n\n", "completions": ["money = Symbol('money', positive=True)\nsolution = solve_it([0.5 * money - 75, 1 / 3 * money - 75], [money])\nanswer = solution[money]\n\n"]}
{"id": 106, "answer": "C", "completion": "num_lilies = Symbol('num_lilies', positive=True)\nnum_days = Symbol('num_days', positive=True)\nsolution = solve_it(num_lilies - 2 ** num_days, num_days)\nanswer = solution[num_days]\n\n", "completions": ["num_lilies = Symbol('num_lilies', positive=True)\nnum_days = Symbol('num_days', positive=True)\nsolution = solve_it(num_lilies - 2 ** num_days, num_days)\nanswer = solution[num_days]\n\n"]}
{"id": 107, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done_by_x_men = x ** 2\nwork_done_by_y_men = y ** 3\nanswer = work_done_by_y_men / work_done_by_x_men\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done_by_x_men = x ** 2\nwork_done_by_y_men = y ** 3\nanswer = work_done_by_y_men / work_done_by_x_men\n\n"]}
{"id": 108, "answer": "E", "completion": "answer = 5 * 4\n\n", "completions": ["answer = 5 * 4\n\n"]}
{"id": 109, "answer": "E", "completion": "angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AB + angle_BD\nanswer = angle_AD\n\n", "completions": ["angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AB + angle_BD\nanswer = angle_AD\n\n"]}
{"id": 110, "answer": "A", "completion": "employees_taking_winter_vacation = 0.75\nemployees_taking_winter_and_summer_vacation = 0.4\nemployees_taking_neither_winter_nor_summer_vacation = 0.2\nemployees_taking_summer_vacation = 1 - employees_taking_neither_winter_nor_summer_vacation - employees_taking_winter_and_summer_vacation\nemployees_taking_summer_vacation_but_not_winter_vacation = employees_taking_summer_vacation - employees_taking_winter_and_summer_vacation\nanswer = employees_taking_summer_vacation_but_not_winter_vacation\n\n", "completions": ["employees_taking_winter_vacation = 0.75\nemployees_taking_winter_and_summer_vacation = 0.4\nemployees_taking_neither_winter_nor_summer_vacation = 0.2\nemployees_taking_summer_vacation = 1 - employees_taking_neither_winter_nor_summer_vacation - employees_taking_winter_and_summer_vacation\nemployees_taking_summer_vacation_but_not_winter_vacation = employees_taking_summer_vacation - employees_taking_winter_and_summer_vacation\nanswer = employees_taking_summer_vacation_but_not_winter_vacation\n\n"]}
{"id": 111, "answer": "A", "completion": "depth = Symbol('depth', positive=True)\ntop_width = 10\nbottom_width = 6\narea = 640\nsolution = solve_it([top_width * depth + bottom_width * depth - 2 * area, top_width - bottom_width - 2 * depth], [depth, top_width])\nanswer = solution[depth]\n\n", "completions": ["depth = Symbol('depth', positive=True)\ntop_width = 10\nbottom_width = 6\narea = 640\nsolution = solve_it([top_width * depth + bottom_width * depth - 2 * area, top_width - bottom_width - 2 * depth], [depth, top_width])\nanswer = solution[depth]\n\n"]}
{"id": 112, "answer": "B", "completion": "num_matches = Symbol('num_matches', positive=True)\nnum_matches_won = 20\nnum_matches_lost = num_matches - num_matches_won\npercentage_matches_lost = 30\nsolution = solve_it(num_matches_lost - num_matches_lost * percentage_matches_lost / 100, num_matches_lost)\nanswer = solution[num_matches_lost]\n\n", "completions": ["num_matches = Symbol('num_matches', positive=True)\nnum_matches_won = 20\nnum_matches_lost = num_matches - num_matches_won\npercentage_matches_lost = 30\nsolution = solve_it(num_matches_lost - num_matches_lost * percentage_matches_lost / 100, num_matches_lost)\nanswer = solution[num_matches_lost]\n\n"]}
{"id": 113, "answer": "D", "completion": "distance = Symbol('distance', positive=True)\nrevolutions_per_minute = 300\nseconds = 30\nrevolutions = revolutions_per_minute * seconds / 60\ndistance_traveled = 2 * pi * 10 * revolutions\nanswer = distance_traveled\n\n", "completions": ["distance = Symbol('distance', positive=True)\nrevolutions_per_minute = 300\nseconds = 30\nrevolutions = revolutions_per_minute * seconds / 60\ndistance_traveled = 2 * pi * 10 * revolutions\nanswer = distance_traveled\n\n"]}
{"id": 114, "answer": "E", "completion": "n = Symbol('n')\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(x - 20, n)\nanswer = solution[n]\n\n", "completions": ["n = Symbol('n')\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(x - 20, n)\nanswer = solution[n]\n\n"]}
{"id": 115, "answer": "None", "completion": "height = Symbol('height', positive=True)\ntime = Symbol('time', positive=True)\nmax_height = 700\nmax_time = 40\npassing_time = 5\nsolution = solve_it([height / time - max_height / max_time, height / time - passing_time], [height, time])\nanswer = solution[height]\n\n", "completions": ["height = Symbol('height', positive=True)\ntime = Symbol('time', positive=True)\nmax_height = 700\nmax_time = 40\npassing_time = 5\nsolution = solve_it([height / time - max_height / max_time, height / time - passing_time], [height, time])\nanswer = solution[height]\n\n"]}
{"id": 116, "answer": "B", "completion": "time_after_b_joined = Symbol('time_after_b_joined', positive=True)\ntime_after_c_joined = Symbol('time_after_c_joined', positive=True)\ntotal_profit = 375000\nc_share = 150000\nsolution = solve_it([time_after_b_joined * (time_after_b_joined + 1) / 2 - 2 * time_after_b_joined - time_after_c_joined * (time_after_c_joined + 1) / 2 + 2 * time_after_c_joined - total_profit, time_after_c_joined * (time_after_c_joined + 1) / 2 - 2 * time_after_c_joined - c_share], [time_after_b_joined, time_after_c_joined])\nanswer = solution[time_after_c_joined]\n\n", "completions": ["time_after_b_joined = Symbol('time_after_b_joined', positive=True)\ntime_after_c_joined = Symbol('time_after_c_joined', positive=True)\ntotal_profit = 375000\nc_share = 150000\nsolution = solve_it([time_after_b_joined * (time_after_b_joined + 1) / 2 - 2 * time_after_b_joined - time_after_c_joined * (time_after_c_joined + 1) / 2 + 2 * time_after_c_joined - total_profit, time_after_c_joined * (time_after_c_joined + 1) / 2 - 2 * time_after_c_joined - c_share], [time_after_b_joined, time_after_c_joined])\nanswer = solution[time_after_c_joined]\n\n"]}
{"id": 117, "answer": "B", "completion": "radius = 10\narea_of_semi_circle = pi * radius ** 2 / 2\narea_of_square = 20 ** 2\nanswer = area_of_square - 2 * area_of_semi_circle\n\n", "completions": ["radius = 10\narea_of_semi_circle = pi * radius ** 2 / 2\narea_of_square = 20 ** 2\nanswer = area_of_square - 2 * area_of_semi_circle\n\n"]}
{"id": 118, "answer": "C", "completion": "M = Symbol('M')\nN = Symbol('N')\ntime = 4\naverage_speed = M + N / time\nanswer = average_speed\n\n", "completions": ["M = Symbol('M')\nN = Symbol('N')\ntime = 4\naverage_speed = M + N / time\nanswer = average_speed\n\n"]}
{"id": 119, "answer": "D", "completion": "men = Symbol('men', positive=True)\ndays = Symbol('days', positive=True)\nwork_done = 8 * 6\nsolution = solve_it(work_done / (men * days) - 1, men)\nanswer = solution[men]\n\n", "completions": ["men = Symbol('men', positive=True)\ndays = Symbol('days', positive=True)\nwork_done = 8 * 6\nsolution = solve_it(work_done / (men * days) - 1, men)\nanswer = solution[men]\n\n"]}
{"id": 120, "answer": "E", "completion": "num_boys = 64\nnum_girls = 40\nnum_new_members = num_boys\nnum_members = num_boys + num_girls + num_new_members\nanswer = num_members\n\n", "completions": ["num_boys = 64\nnum_girls = 40\nnum_new_members = num_boys\nnum_members = num_boys + num_girls + num_new_members\nanswer = num_members\n\n"]}
{"id": 121, "answer": "B", "completion": "distance = 48\nspeed = 12\ntime = distance / speed\nanswer = time * 60\n\n", "completions": ["distance = 48\nspeed = 12\ntime = distance / speed\nanswer = time * 60\n\n"]}
{"id": 122, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ntime_to_travel_distance = distance / 70\ntime_to_travel_back = distance / 90\ntotal_time = time_to_travel_distance + time_to_travel_back\ntime_left = total_time - 3\nsolution = solve_it(time_left - time_to_travel_back, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ntime_to_travel_distance = distance / 70\ntime_to_travel_back = distance / 90\ntotal_time = time_to_travel_distance + time_to_travel_back\ntime_left = total_time - 3\nsolution = solve_it(time_left - time_to_travel_back, distance)\nanswer = solution[distance]\n\n"]}
{"id": 123, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number / 3 - 30, number)\nnumber = solution[number]\nanswer = number / 2\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number / 3 - 30, number)\nnumber = solution[number]\nanswer = number / 2\n\n"]}
{"id": 124, "answer": "B", "completion": "man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nstill_water_speed = 4\nagainst_current_speed = 2\nsolution = solve_it([man_speed + current_speed - still_water_speed, man_speed - current_speed - against_current_speed], [man_speed, current_speed])\nanswer = solution[man_speed]\n\n", "completions": ["man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nstill_water_speed = 4\nagainst_current_speed = 2\nsolution = solve_it([man_speed + current_speed - still_water_speed, man_speed - current_speed - against_current_speed], [man_speed, current_speed])\nanswer = solution[man_speed]\n\n"]}
{"id": 125, "answer": "E", "completion": "number = Symbol('number', positive=True)\ndigits = [int(digit) for digit in str(number)]\nsolution = solve_it([sum(digits) - 17, sum(digit ** 2 for digit in digits) - 109, number - 495 - int(''.join(str(digit) for digit in reversed(digits)))], [number] + digits)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\ndigits = [int(digit) for digit in str(number)]\nsolution = solve_it([sum(digits) - 17, sum(digit ** 2 for digit in digits) - 109, number - 495 - int(''.join(str(digit) for digit in reversed(digits)))], [number] + digits)\nanswer = solution[number]\n\n"]}
{"id": 126, "answer": "C", "completion": "zinc_in_x = 6\ncopper_in_x = 9\nzinc_in_y = 7\ncopper_in_y = 11\nzinc_in_z = zinc_in_x * 40 + zinc_in_y * 60\ncopper_in_z = copper_in_x * 40 + copper_in_y * 60\nanswer = (zinc_in_z, copper_in_z)\n\n", "completions": ["zinc_in_x = 6\ncopper_in_x = 9\nzinc_in_y = 7\ncopper_in_y = 11\nzinc_in_z = zinc_in_x * 40 + zinc_in_y * 60\ncopper_in_z = copper_in_x * 40 + copper_in_y * 60\nanswer = (zinc_in_z, copper_in_z)\n\n"]}
{"id": 127, "answer": "A", "completion": "senators = Symbol('senators', positive=True)\nhoopsmot_contribution = 16000\nsmolapon_contribution = 4000\nsolution = solve_it(hoopsmot_contribution / senators + smolapon_contribution / senators - 30, senators)\nanswer = solution[senators]\n\n", "completions": ["senators = Symbol('senators', positive=True)\nhoopsmot_contribution = 16000\nsmolapon_contribution = 4000\nsolution = solve_it(hoopsmot_contribution / senators + smolapon_contribution / senators - 30, senators)\nanswer = solution[senators]\n\n"]}
{"id": 128, "answer": "B", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ndifference = num1 ** 2 - num2 ** 2\nsum = num1 + num2\nsolution = solve_it([difference - 256000, sum - 1000], [num1, num2])\nanswer = (solution[num1], solution[num2])\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\ndifference = num1 ** 2 - num2 ** 2\nsum = num1 + num2\nsolution = solve_it([difference - 256000, sum - 1000], [num1, num2])\nanswer = (solution[num1], solution[num2])\n\n"]}
{"id": 129, "answer": "D", "completion": "earth_weight = 211\nvenus_weight = 182\nanswer = venus_weight / earth_weight\n\n", "completions": ["earth_weight = 211\nvenus_weight = 182\nanswer = venus_weight / earth_weight\n\n"]}
{"id": 130, "answer": "A", "completion": "distance_1 = 5 * 6\ndistance_2 = 4 * 12\ntime_1 = 6\ntime_2 = 12\naverage_speed = (distance_1 + distance_2) / (time_1 + time_2)\nanswer = average_speed\n\n", "completions": ["distance_1 = 5 * 6\ndistance_2 = 4 * 12\ntime_1 = 6\ntime_2 = 12\naverage_speed = (distance_1 + distance_2) / (time_1 + time_2)\nanswer = average_speed\n\n"]}
{"id": 131, "answer": "C", "completion": "answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)\n\n", "completions": ["answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)\n\n"]}
{"id": 132, "answer": "B", "completion": "num_members = Symbol('num_members', positive=True)\ntotal_income = 9000\nmedian_income = 3000\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]\n\n", "completions": ["num_members = Symbol('num_members', positive=True)\ntotal_income = 9000\nmedian_income = 3000\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]\n\n"]}
{"id": 133, "answer": "E", "completion": "adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = 4 * adult_fare + 3 * child_fare\nanswer = total_fare\n\n", "completions": ["adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = 4 * adult_fare + 3 * child_fare\nanswer = total_fare\n\n"]}
{"id": 134, "answer": "A", "completion": "employees = Symbol('employees', positive=True)\ncontribution = Symbol('contribution', positive=True)\ncontribution_without_extra = 6\ncontribution_with_extra = 6.24\nsolution = solve_it([employees * contribution - contribution_without_extra, employees * contribution - contribution_with_extra], [employees, contribution])\nanswer = solution[employees]\n\n", "completions": ["employees = Symbol('employees', positive=True)\ncontribution = Symbol('contribution', positive=True)\ncontribution_without_extra = 6\ncontribution_with_extra = 6.24\nsolution = solve_it([employees * contribution - contribution_without_extra, employees * contribution - contribution_with_extra], [employees, contribution])\nanswer = solution[employees]\n\n"]}
{"id": 135, "answer": "A", "completion": "num_voters = 5000\nnum_not_eligible = 0.2 * num_voters\nnum_eligible = num_voters - num_not_eligible\nnum_candidates = 2\nnum_votes_for_winner = 0.15 * num_eligible\nnum_votes_for_loser = num_eligible - num_votes_for_winner\nanswer = num_votes_for_winner\n\n", "completions": ["num_voters = 5000\nnum_not_eligible = 0.2 * num_voters\nnum_eligible = num_voters - num_not_eligible\nnum_candidates = 2\nnum_votes_for_winner = 0.15 * num_eligible\nnum_votes_for_loser = num_eligible - num_votes_for_winner\nanswer = num_votes_for_winner\n\n"]}
{"id": 136, "answer": "A", "completion": "copper_coins = Symbol('copper_coins', positive=True)\nbrass_coins = Symbol('brass_coins', positive=True)\ntotal_coins = copper_coins + brass_coins\ntotal_money = 20 * copper_coins + 25 * brass_coins\nsolution = solve_it(total_money - 340, copper_coins)\nanswer = solution[copper_coins]\n\n", "completions": ["copper_coins = Symbol('copper_coins', positive=True)\nbrass_coins = Symbol('brass_coins', positive=True)\ntotal_coins = copper_coins + brass_coins\ntotal_money = 20 * copper_coins + 25 * brass_coins\nsolution = solve_it(total_money - 340, copper_coins)\nanswer = solution[copper_coins]\n\n"]}
{"id": 137, "answer": "E", "completion": "distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime = 10\nsolution = solve_it(ram_speed * time - krishna_speed * time - distance, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime = 10\nsolution = solve_it(ram_speed * time - krishna_speed * time - distance, distance)\nanswer = solution[distance]\n\n"]}
{"id": 138, "answer": "A", "completion": "speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_x] - solution[speed_y]\n\n", "completions": ["speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_x] - solution[speed_y]\n\n"]}
{"id": 139, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ntime = 1\nspeed_running = 10\nspeed_walking = 5\nsolution = solve_it([time * speed_running - distance, time * speed_walking - distance], [distance, time])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ntime = 1\nspeed_running = 10\nspeed_walking = 5\nsolution = solve_it([time * speed_running - distance, time * speed_walking - distance], [distance, time])\nanswer = solution[distance]\n\n"]}
{"id": 140, "answer": "D", "completion": "yellow_balls = Symbol('yellow_balls', positive=True)\nwhite_balls = Symbol('white_balls', positive=True)\ntotal_balls = 600\npercent_sold = 0.8\nyellow_sold = 0.5 * percent_sold * total_balls\nwhite_sold = 0.5 * percent_sold * total_balls\nsolution = solve_it([yellow_balls + white_balls - total_balls, yellow_sold - yellow_balls, white_sold - white_balls], [yellow_balls, white_balls])\nanswer = solution[yellow_balls]\n\n", "completions": ["yellow_balls = Symbol('yellow_balls', positive=True)\nwhite_balls = Symbol('white_balls', positive=True)\ntotal_balls = 600\npercent_sold = 0.8\nyellow_sold = 0.5 * percent_sold * total_balls\nwhite_sold = 0.5 * percent_sold * total_balls\nsolution = solve_it([yellow_balls + white_balls - total_balls, yellow_sold - yellow_balls, white_sold - white_balls], [yellow_balls, white_balls])\nanswer = solution[yellow_balls]\n\n"]}
{"id": 141, "answer": "B", "completion": "flagstaff_height = 17.5\nflagstaff_shadow = 40.25\nbuilding_height = Symbol('building_height', positive=True)\nbuilding_shadow = 28.75\nsolution = solve_it(flagstaff_height / flagstaff_shadow - building_height / building_shadow, building_height)\nanswer = solution[building_height]\n\n", "completions": ["flagstaff_height = 17.5\nflagstaff_shadow = 40.25\nbuilding_height = Symbol('building_height', positive=True)\nbuilding_shadow = 28.75\nsolution = solve_it(flagstaff_height / flagstaff_shadow - building_height / building_shadow, building_height)\nanswer = solution[building_height]\n\n"]}
{"id": 142, "answer": "B", "completion": "time = Symbol('time', positive=True)\ndistance = 15\nspeed_1 = 55\nspeed_2 = 52\nsolution = solve_it(time * speed_1 - time * speed_2 - distance, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\ndistance = 15\nspeed_1 = 55\nspeed_2 = 52\nsolution = solve_it(time * speed_1 - time * speed_2 - distance, time)\nanswer = solution[time]\n\n"]}
{"id": 143, "answer": "A", "completion": "probability_of_B = Symbol('probability_of_B', positive=True)\nprobability_of_A = 0.6\nprobability_of_A_or_B = 0.96\nsolution = solve_it(probability_of_A + probability_of_B - probability_of_A_or_B, probability_of_B)\nanswer = solution[probability_of_B]\n\n", "completions": ["probability_of_B = Symbol('probability_of_B', positive=True)\nprobability_of_A = 0.6\nprobability_of_A_or_B = 0.96\nsolution = solve_it(probability_of_A + probability_of_B - probability_of_A_or_B, probability_of_B)\nanswer = solution[probability_of_B]\n\n"]}
{"id": 144, "answer": "A", "completion": "cube_volume = Symbol('cube_volume', positive=True)\nsphere_volume = Symbol('sphere_volume', positive=True)\ncube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\nsolution = solve_it([cube_volume - cube_side ** 3, sphere_volume - 4 / 3 * pi * sphere_radius ** 3], [cube_side, sphere_radius])\nanswer = solution[cube_side] / solution[sphere_radius]", "completions": ["cube_volume = Symbol('cube_volume', positive=True)\nsphere_volume = Symbol('sphere_volume', positive=True)\ncube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\nsolution = solve_it([cube_volume - cube_side ** 3, sphere_volume - 4 / 3 * pi * sphere_radius ** 3], [cube_side, sphere_radius])\nanswer = solution[cube_side] / solution[sphere_radius]"]}
{"id": 145, "answer": "A", "completion": "num_red = 8\nnum_violet = 13\nnum_blue = 10\nnum_pink = 5\nnum_green = 4\nanswer = 2\n\n", "completions": ["num_red = 8\nnum_violet = 13\nnum_blue = 10\nnum_pink = 5\nnum_green = 4\nanswer = 2\n\n"]}
{"id": 146, "answer": "A", "completion": "answer = 25 / 12 * 5\n\n", "completions": ["answer = 25 / 12 * 5\n\n"]}
{"id": 147, "answer": "A", "completion": "answer = math.log2(4)\n\n", "completions": ["answer = math.log2(4)\n\n"]}
{"id": 148, "answer": "A", "completion": "cost_price = 450\nselling_price = 90 * 7.5\npercentage_gain = (selling_price - cost_price) / cost_price\nanswer = percentage_gain\n\n", "completions": ["cost_price = 450\nselling_price = 90 * 7.5\npercentage_gain = (selling_price - cost_price) / cost_price\nanswer = percentage_gain\n\n"]}
{"id": 149, "answer": "B", "completion": "train_M_speed = Symbol('train_M_speed', positive=True)\ntrain_N_speed = Symbol('train_N_speed', positive=True)\ntime_M_takes_to_reach_B = 4\ntime_N_takes_to_reach_A = 3.5\ntime_M_takes_to_reach_N = time_M_takes_to_reach_B + time_N_takes_to_reach_A\ntime_N_takes_to_reach_M = time_N_takes_to_reach_A + time_M_takes_to_reach_B\nsolution = solve_it([train_M_speed * time_M_takes_to_reach_N - train_N_speed * time_N_takes_to_reach_M], [train_M_speed, train_N_speed])\nanswer = solution[train_M_speed]\n\n", "completions": ["train_M_speed = Symbol('train_M_speed', positive=True)\ntrain_N_speed = Symbol('train_N_speed', positive=True)\ntime_M_takes_to_reach_B = 4\ntime_N_takes_to_reach_A = 3.5\ntime_M_takes_to_reach_N = time_M_takes_to_reach_B + time_N_takes_to_reach_A\ntime_N_takes_to_reach_M = time_N_takes_to_reach_A + time_M_takes_to_reach_B\nsolution = solve_it([train_M_speed * time_M_takes_to_reach_N - train_N_speed * time_N_takes_to_reach_M], [train_M_speed, train_N_speed])\nanswer = solution[train_M_speed]\n\n"]}
{"id": 150, "answer": "A", "completion": "time = Symbol('time', positive=True)\nsolution = solve_it(10 * time + 20 * time - 1, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\nsolution = solve_it(10 * time + 20 * time - 1, time)\nanswer = solution[time]\n\n"]}
{"id": 151, "answer": "E", "completion": "M = Symbol('M')\noriginal_marks = 504\nconverted_marks = 420\nsolution = solve_it(original_marks / M * 800 - converted_marks, M)\nanswer = solution[M]\n\n", "completions": ["M = Symbol('M')\noriginal_marks = 504\nconverted_marks = 420\nsolution = solve_it(original_marks / M * 800 - converted_marks, M)\nanswer = solution[M]\n\n"]}
{"id": 152, "answer": "B", "completion": "num_people = Symbol('num_people', positive=True)\nnum_bottles = Symbol('num_bottles', positive=True)\nsolution = solve_it(num_bottles / num_people - 10 / 8, num_bottles)\nanswer = solution[num_bottles]\n\n", "completions": ["num_people = Symbol('num_people', positive=True)\nnum_bottles = Symbol('num_bottles', positive=True)\nsolution = solve_it(num_bottles / num_people - 10 / 8, num_bottles)\nanswer = solution[num_bottles]\n\n"]}
{"id": 153, "answer": "D", "completion": "height = 6\nshadow_length = 10\nratio = shadow_length / height\nanswer = ratio * height\n\n", "completions": ["height = 6\nshadow_length = 10\nratio = shadow_length / height\nanswer = ratio * height\n\n"]}
{"id": 154, "answer": "A", "completion": "height = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nsolution = solve_it(height / semi_perimeter - 2 / 5, height)\nheight = solution[height]\nwidth = semi_perimeter - height\narea = height * width\npaper_width = 50\npaper_cost = 2\ndoor_window_area = 15\nnum_paper_rolls = (area - door_window_area) / (paper_width * 100)\nanswer = num_paper_rolls * paper_cost - 260\n\n", "completions": ["height = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nsolution = solve_it(height / semi_perimeter - 2 / 5, height)\nheight = solution[height]\nwidth = semi_perimeter - height\narea = height * width\npaper_width = 50\npaper_cost = 2\ndoor_window_area = 15\nnum_paper_rolls = (area - door_window_area) / (paper_width * 100)\nanswer = num_paper_rolls * paper_cost - 260\n\n"]}
{"id": 155, "answer": "B", "completion": "k = Symbol('k', positive=True)\nsum_of_k_integers = 51\nleast_integer = -50\nsolution = solve_it(k * (k + 1) / 2 - sum_of_k_integers, k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k', positive=True)\nsum_of_k_integers = 51\nleast_integer = -50\nsolution = solve_it(k * (k + 1) / 2 - sum_of_k_integers, k)\nanswer = solution[k]\n\n"]}
{"id": 156, "answer": "B", "completion": "num_students = Symbol('num_students', positive=True)\nnum_songs = 10\nnum_selections = 5\nsolution = solve_it(num_students * num_songs * (num_songs - 1) / 2 - num_selections * (num_selections - 1) / 2, num_students)\nanswer = solution[num_students]\n\n", "completions": ["num_students = Symbol('num_students', positive=True)\nnum_songs = 10\nnum_selections = 5\nsolution = solve_it(num_students * num_songs * (num_songs - 1) / 2 - num_selections * (num_selections - 1) / 2, num_students)\nanswer = solution[num_students]\n\n"]}
{"id": 157, "answer": "Cannot be determined", "completion": "m = Symbol('m')\nsolution = solve_it([m + 1.5 ** 2 + 22, 1.5 * m + 22], [m])\nanswer = solution[m]\n\n", "completions": ["m = Symbol('m')\nsolution = solve_it([m + 1.5 ** 2 + 22, 1.5 * m + 22], [m])\nanswer = solution[m]\n\n"]}
{"id": 158, "answer": "A", "completion": "num_speakers = 10\nnum_ways = factorial(num_speakers) / factorial(3)\nanswer = num_ways\n\n", "completions": ["num_speakers = 10\nnum_ways = factorial(num_speakers) / factorial(3)\nanswer = num_ways\n\n"]}
{"id": 159, "answer": "C", "completion": "article_price = Symbol('article_price', positive=True)\narticles_bought = 5\ntotal_price = 300\nprice_after_decrease = article_price * (1 - 0.15)\nsolution = solve_it(articles_bought * price_after_decrease - total_price, article_price)\nanswer = solution[article_price]\n\n", "completions": ["article_price = Symbol('article_price', positive=True)\narticles_bought = 5\ntotal_price = 300\nprice_after_decrease = article_price * (1 - 0.15)\nsolution = solve_it(articles_bought * price_after_decrease - total_price, article_price)\nanswer = solution[article_price]\n\n"]}
{"id": 160, "answer": "A", "completion": "num_children = Symbol('num_children', positive=True)\nneha_position = 12\nradha_position = num_children - 6\nsolution = solve_it(radha_position - neha_position - 2 - 2, num_children)\nanswer = solution[num_children]\n\n", "completions": ["num_children = Symbol('num_children', positive=True)\nneha_position = 12\nradha_position = num_children - 6\nsolution = solve_it(radha_position - neha_position - 2 - 2, num_children)\nanswer = solution[num_children]\n\n"]}
{"id": 161, "answer": "D", "completion": "mixture = 10\nsand = 0.3 * mixture\nclay = 0.7 * mixture\npure_sand = clay\npure_clay = sand\nanswer = pure_sand - sand\n\n", "completions": ["mixture = 10\nsand = 0.3 * mixture\nclay = 0.7 * mixture\npure_sand = clay\npure_clay = sand\nanswer = pure_sand - sand\n\n"]}
{"id": 162, "answer": "D", "completion": "expenditure = Symbol('expenditure', positive=True)\nincome = Symbol('income', positive=True)\nsolution = solve_it(expenditure - 0.7 * income, income)\nanswer = solution[income]\n\n", "completions": ["expenditure = Symbol('expenditure', positive=True)\nincome = Symbol('income', positive=True)\nsolution = solve_it(expenditure - 0.7 * income, income)\nanswer = solution[income]\n\n"]}
{"id": 163, "answer": "D", "completion": "num_white_tulips = 28\nnum_red_tulips = 98\nnum_bouquets = num_white_tulips // 2\nif num_bouquets > num_red_tulips // 2:\n    num_bouquets = num_red_tulips // 2\nanswer = num_bouquets\n\n", "completions": ["num_white_tulips = 28\nnum_red_tulips = 98\nnum_bouquets = num_white_tulips // 2\nif num_bouquets > num_red_tulips // 2:\n    num_bouquets = num_red_tulips // 2\nanswer = num_bouquets\n\n"]}
{"id": 164, "answer": "B", "completion": "sharon_earnings = Symbol('sharon_earnings', positive=True)\nkaren_earnings = Symbol('karen_earnings', positive=True)\ncake_cost = Symbol('cake_cost', positive=True)\nsharon_hours = 5\nkaren_hours = 4\nsolution = solve_it([sharon_earnings / sharon_hours - karen_earnings / karen_hours, sharon_earnings + karen_earnings - cake_cost], [sharon_earnings, karen_earnings])\nanswer = solution[sharon_earnings] / sharon_hours\n\n", "completions": ["sharon_earnings = Symbol('sharon_earnings', positive=True)\nkaren_earnings = Symbol('karen_earnings', positive=True)\ncake_cost = Symbol('cake_cost', positive=True)\nsharon_hours = 5\nkaren_hours = 4\nsolution = solve_it([sharon_earnings / sharon_hours - karen_earnings / karen_hours, sharon_earnings + karen_earnings - cake_cost], [sharon_earnings, karen_earnings])\nanswer = solution[sharon_earnings] / sharon_hours\n\n"]}
{"id": 165, "answer": "A", "completion": "x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it([x ** 3 - y ** 2, x ** 3 + y ** 2], [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it([x ** 3 - y ** 2, x ** 3 + y ** 2], [x, y])\nanswer = solution[x]\n\n"]}
{"id": 166, "answer": "C", "completion": "time_for_one_page = 1 / (1 / 2 + 1 / 2)\ntime_for_100_pages = time_for_one_page * 100\nanswer = time_for_100_pages\n\n", "completions": ["time_for_one_page = 1 / (1 / 2 + 1 / 2)\ntime_for_100_pages = time_for_one_page * 100\nanswer = time_for_100_pages\n\n"]}
{"id": 167, "answer": "D", "completion": "distance = Symbol('distance', positive=True)\nspeed_of_a = 9\nspeed_of_b = 6\ntime = distance / (speed_of_a + speed_of_b)\nsolution = solve_it(speed_of_a * time - 75, distance)\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed_of_a = 9\nspeed_of_b = 6\ntime = distance / (speed_of_a + speed_of_b)\nsolution = solve_it(speed_of_a * time - 75, distance)\nanswer = solution[distance]\n\n"]}
{"id": 168, "answer": "A", "completion": "property_worth = 1023.65\nrecorded_property_worth = math.floor(property_worth / 100) * 100\nanswer = recorded_property_worth - property_worth\n\n", "completions": ["property_worth = 1023.65\nrecorded_property_worth = math.floor(property_worth / 100) * 100\nanswer = recorded_property_worth - property_worth\n\n"]}
{"id": 169, "answer": "C", "completion": "trouser_price = 70\nshirt_price = 30\nmoney_spent = 810\ntrouser_count = Symbol('trouser_count', positive=True)\nshirt_count = Symbol('shirt_count', positive=True)\nsolution = solve_it([trouser_count * trouser_price + shirt_count * shirt_price - money_spent, trouser_count - shirt_count], [trouser_count, shirt_count])\nanswer = solution[trouser_count]\n\n", "completions": ["trouser_price = 70\nshirt_price = 30\nmoney_spent = 810\ntrouser_count = Symbol('trouser_count', positive=True)\nshirt_count = Symbol('shirt_count', positive=True)\nsolution = solve_it([trouser_count * trouser_price + shirt_count * shirt_price - money_spent, trouser_count - shirt_count], [trouser_count, shirt_count])\nanswer = solution[trouser_count]\n\n"]}
{"id": 170, "answer": "A", "completion": "subscription_cost = 42\nnum_issues = 15\ncover_price = subscription_cost / num_issues\ndiscount = 0.25\ncover_price_after_discount = cover_price * (1 - discount)\nsolution = solve_it(subscription_cost - num_issues * cover_price_after_discount, cover_price)\nanswer = solution[cover_price]\n\n", "completions": ["subscription_cost = 42\nnum_issues = 15\ncover_price = subscription_cost / num_issues\ndiscount = 0.25\ncover_price_after_discount = cover_price * (1 - discount)\nsolution = solve_it(subscription_cost - num_issues * cover_price_after_discount, cover_price)\nanswer = solution[cover_price]\n\n"]}
{"id": 171, "answer": "A", "completion": "num_heads = Symbol('num_heads', positive=True)\nnum_tails = 20 - num_heads\nsolution = solve_it([num_heads * 2 - num_tails * 3], [num_heads])\nanswer = solution[num_heads]", "completions": ["num_heads = Symbol('num_heads', positive=True)\nnum_tails = 20 - num_heads\nsolution = solve_it([num_heads * 2 - num_tails * 3], [num_heads])\nanswer = solution[num_heads]"]}
{"id": 172, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nspeed_of_allen = 54\nspeed_of_bob = 78\nsolution = solve_it([speed_of_allen * time - distance, speed_of_bob * time - distance - 48], [time, distance])\nanswer = solution[distance]\n\n", "completions": ["distance = Symbol('distance', positive=True)\ntime = Symbol('time', positive=True)\nspeed_of_allen = 54\nspeed_of_bob = 78\nsolution = solve_it([speed_of_allen * time - distance, speed_of_bob * time - distance - 48], [time, distance])\nanswer = solution[distance]\n\n"]}
{"id": 173, "answer": "A", "completion": "cost_of_new_tires = 180\ncost_of_repairing_tires = 40\ncost_per_year_of_new_tires = cost_of_new_tires / 4\ncost_per_year_of_repairing_tires = cost_of_repairing_tires / 5\nanswer = (cost_per_year_of_new_tires - cost_per_year_of_repairing_tires) / cost_per_year_of_repairing_tires\n\n", "completions": ["cost_of_new_tires = 180\ncost_of_repairing_tires = 40\ncost_per_year_of_new_tires = cost_of_new_tires / 4\ncost_per_year_of_repairing_tires = cost_of_repairing_tires / 5\nanswer = (cost_per_year_of_new_tires - cost_per_year_of_repairing_tires) / cost_per_year_of_repairing_tires\n\n"]}
{"id": 174, "answer": "B", "completion": "length = Symbol('length', positive=True)\ndifference = 3\nsolution = solve_it(2 * length - 20 - difference, length)\nanswer = solution[length]\n\n", "completions": ["length = Symbol('length', positive=True)\ndifference = 3\nsolution = solve_it(2 * length - 20 - difference, length)\nanswer = solution[length]\n\n"]}
{"id": 175, "answer": "A", "completion": "amount = 5000\ninterest_rate = 12\ncompounding_periods = 2\naccrued_interest = amount * ((1 + interest_rate / 100 / compounding_periods) ** (compounding_periods * 1) - 1)\nanswer = accrued_interest\n\n", "completions": ["amount = 5000\ninterest_rate = 12\ncompounding_periods = 2\naccrued_interest = amount * ((1 + interest_rate / 100 / compounding_periods) ** (compounding_periods * 1) - 1)\nanswer = accrued_interest\n\n"]}
{"id": 176, "answer": "[invalid]", "completion": "options = [9, 2, 0, 9, 2, 0, 1, 2, 2]\nfor i in range(0, len(options), 3):\n    print(options[i], options[i + 1], options[i + 2])", "completions": ["options = [9, 2, 0, 9, 2, 0, 1, 2, 2]\nfor i in range(0, len(options), 3):\n    print(options[i], options[i + 1], options[i + 2])"]}
{"id": 177, "answer": "D", "completion": "sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsachin_age_in_10_years = sachin_age + 10\nsolution = solve_it([sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, sachin_age_in_10_years - 40], [sachin_age, ajay_age])\nanswer = solution[ajay_age]\n\n", "completions": ["sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsachin_age_in_10_years = sachin_age + 10\nsolution = solve_it([sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, sachin_age_in_10_years - 40], [sachin_age, ajay_age])\nanswer = solution[ajay_age]\n\n"]}
{"id": 178, "answer": "A", "completion": "perimeter = 340\ncost_per_square_metre = 10\nanswer = perimeter * cost_per_square_metre\n\n", "completions": ["perimeter = 340\ncost_per_square_metre = 10\nanswer = perimeter * cost_per_square_metre\n\n"]}
{"id": 179, "answer": "D", "completion": "novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = 100\nnovel_percentage = 34\nbiography_percentage = 1 / 3\nsolution = solve_it([novel_revenue + biography_revenue - total_revenue, novel_revenue / biography_revenue - novel_percentage / biography_percentage], [novel_revenue, biography_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]", "completions": ["novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = 100\nnovel_percentage = 34\nbiography_percentage = 1 / 3\nsolution = solve_it([novel_revenue + biography_revenue - total_revenue, novel_revenue / biography_revenue - novel_percentage / biography_percentage], [novel_revenue, biography_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]"]}
{"id": 180, "answer": "A", "completion": "num_flowers = Symbol('num_flowers', positive=True)\npercentage_bypassed = 0.05\nnum_bypassed = num_flowers * percentage_bypassed\nsolution = solve_it(num_bypassed - 8, num_flowers)\nanswer = solution[num_flowers]\n\n", "completions": ["num_flowers = Symbol('num_flowers', positive=True)\npercentage_bypassed = 0.05\nnum_bypassed = num_flowers * percentage_bypassed\nsolution = solve_it(num_bypassed - 8, num_flowers)\nanswer = solution[num_flowers]\n\n"]}
{"id": 181, "answer": "A", "completion": "lunches = 3\ndinners = 3\nweekdays = 5\nweekends = 2\noptions = 5 * combinations(weekdays, lunches) * combinations(weekdays - 1, dinners)\nanswer = options\n\n", "completions": ["lunches = 3\ndinners = 3\nweekdays = 5\nweekends = 2\noptions = 5 * combinations(weekdays, lunches) * combinations(weekdays - 1, dinners)\nanswer = options\n\n"]}
{"id": 182, "answer": "E", "completion": "a = Symbol('a')\nb = Symbol('b')\nsolution = solve_it(a ** 2 - b ** 2 / (a + b) ** 2 - (a - b) ** 2, a)\nanswer = solution[a]\n\n", "completions": ["a = Symbol('a')\nb = Symbol('b')\nsolution = solve_it(a ** 2 - b ** 2 / (a + b) ** 2 - (a - b) ** 2, a)\nanswer = solution[a]\n\n"]}
{"id": 183, "answer": "D", "completion": "number = Symbol('number')\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number')\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]\n\n"]}
{"id": 184, "answer": "D", "completion": "pallets = Symbol('pallets', positive=True)\nphones_per_pallet = 1250\nphones_per_crate = pallets * phones_per_pallet\nanswer = 4 * phones_per_crate\n\n", "completions": ["pallets = Symbol('pallets', positive=True)\nphones_per_pallet = 1250\nphones_per_crate = pallets * phones_per_pallet\nanswer = 4 * phones_per_crate\n\n"]}
{"id": 185, "answer": "D", "completion": "time_taken_by_A = 40\ntime_taken_by_B = 45\ntime_taken_by_A_and_B = 1 / (1 / time_taken_by_A + 1 / time_taken_by_B)\nanswer = time_taken_by_A_and_B\n\n", "completions": ["time_taken_by_A = 40\ntime_taken_by_B = 45\ntime_taken_by_A_and_B = 1 / (1 / time_taken_by_A + 1 / time_taken_by_B)\nanswer = time_taken_by_A_and_B\n\n"]}
{"id": 186, "answer": "C", "completion": "time_to_enter_tunnel = 3\ndistance_traveled_in_time_to_enter_tunnel = 120 * time_to_enter_tunnel\ntime_to_exit_tunnel = distance_traveled_in_time_to_enter_tunnel / 120\nanswer = time_to_enter_tunnel + time_to_exit_tunnel\n\n", "completions": ["time_to_enter_tunnel = 3\ndistance_traveled_in_time_to_enter_tunnel = 120 * time_to_enter_tunnel\ntime_to_exit_tunnel = distance_traveled_in_time_to_enter_tunnel / 120\nanswer = time_to_enter_tunnel + time_to_exit_tunnel\n\n"]}
{"id": 187, "answer": "E", "completion": "invoice_amount = 20000\ndiscount_rate = 4 / 30\npayment_rate = n / 100\ninterest_rate = Symbol('interest_rate', positive=True)\namount_after_discount = invoice_amount * (1 - discount_rate)\namount_after_payment = amount_after_discount * (1 - payment_rate)\namount_after_interest = amount_after_payment * (1 + interest_rate / 100)\nsolution = solve_it(amount_after_interest - invoice_amount, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["invoice_amount = 20000\ndiscount_rate = 4 / 30\npayment_rate = n / 100\ninterest_rate = Symbol('interest_rate', positive=True)\namount_after_discount = invoice_amount * (1 - discount_rate)\namount_after_payment = amount_after_discount * (1 - payment_rate)\namount_after_interest = amount_after_payment * (1 + interest_rate / 100)\nsolution = solve_it(amount_after_interest - invoice_amount, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 188, "answer": "D", "completion": "answer = factorial(10) / (factorial(5) * factorial(5))\n\n", "completions": ["answer = factorial(10) / (factorial(5) * factorial(5))\n\n"]}
{"id": 189, "answer": "B", "completion": "rice = 2\nwheat = 3\ncorn = 5\ntotal = rice + wheat + corn\nrice_in_bag = 3\ncorn_in_bag = (corn / total) * rice_in_bag\nanswer = corn_in_bag\n\n", "completions": ["rice = 2\nwheat = 3\ncorn = 5\ntotal = rice + wheat + corn\nrice_in_bag = 3\ncorn_in_bag = (corn / total) * rice_in_bag\nanswer = corn_in_bag\n\n"]}
{"id": 190, "answer": "D", "completion": "soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]", "completions": ["soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]"]}
{"id": 191, "answer": "A", "completion": "cost_of_pen = Symbol('cost_of_pen', positive=True)\nnumber_of_pens = 7200\nnumber_of_defective_pens = 0.1 * number_of_pens\nnumber_of_pens_sold = number_of_pens - number_of_defective_pens\nrevenue = number_of_pens_sold * 10\nprofit = 0.25 * revenue\nsolution = solve_it(revenue - profit - cost_of_pen * number_of_pens, cost_of_pen)\nanswer = solution[cost_of_pen]\n\n", "completions": ["cost_of_pen = Symbol('cost_of_pen', positive=True)\nnumber_of_pens = 7200\nnumber_of_defective_pens = 0.1 * number_of_pens\nnumber_of_pens_sold = number_of_pens - number_of_defective_pens\nrevenue = number_of_pens_sold * 10\nprofit = 0.25 * revenue\nsolution = solve_it(revenue - profit - cost_of_pen * number_of_pens, cost_of_pen)\nanswer = solution[cost_of_pen]\n\n"]}
{"id": 192, "answer": "B", "completion": "unit_digit = Symbol('unit_digit', positive=True)\nten_digit = Symbol('ten_digit', positive=True)\nnumber = 10 * ten_digit + unit_digit\nsolution = solve_it([number - (ten_digit + unit_digit) - 18, unit_digit - 2 * ten_digit], [unit_digit, ten_digit])\nanswer = 10 * solution[ten_digit] + solution[unit_digit]\n\n", "completions": ["unit_digit = Symbol('unit_digit', positive=True)\nten_digit = Symbol('ten_digit', positive=True)\nnumber = 10 * ten_digit + unit_digit\nsolution = solve_it([number - (ten_digit + unit_digit) - 18, unit_digit - 2 * ten_digit], [unit_digit, ten_digit])\nanswer = 10 * solution[ten_digit] + solution[unit_digit]\n\n"]}
{"id": 193, "answer": "B", "completion": "x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(2 * x) + 2 * floor(2 * y)\nsolution = solve_it(L - R, [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(2 * x) + 2 * floor(2 * y)\nsolution = solve_it(L - R, [x, y])\nanswer = solution[x]\n\n"]}
{"id": 194, "answer": "D", "completion": "bell_1 = 36\nbell_2 = 40\nbell_3 = 48\nlcm = bell_1 * bell_2 * bell_3 / gcd(bell_1, gcd(bell_2, bell_3))\nanswer = lcm / 60\n\n", "completions": ["bell_1 = 36\nbell_2 = 40\nbell_3 = 48\nlcm = bell_1 * bell_2 * bell_3 / gcd(bell_1, gcd(bell_2, bell_3))\nanswer = lcm / 60\n\n"]}
{"id": 195, "answer": "A", "completion": "height_of_tree = Symbol('height_of_tree', positive=True)\nheight_of_pole = 14\nshadow_of_pole = 10\nshadow_of_tree = 15\nsolution = solve_it(height_of_tree / height_of_pole - shadow_of_tree / shadow_of_pole, height_of_tree)\nanswer = solution[height_of_tree]\n\n", "completions": ["height_of_tree = Symbol('height_of_tree', positive=True)\nheight_of_pole = 14\nshadow_of_pole = 10\nshadow_of_tree = 15\nsolution = solve_it(height_of_tree / height_of_pole - shadow_of_tree / shadow_of_pole, height_of_tree)\nanswer = solution[height_of_tree]\n\n"]}
{"id": 196, "answer": "[invalid]", "completion": "orange_cost = 18\npineapple_cost = 27\ngrape_cost = 15\nmango_cost = (orange_cost + pineapple_cost + grape_cost) / 3\n\n", "completions": ["orange_cost = 18\npineapple_cost = 27\ngrape_cost = 15\nmango_cost = (orange_cost + pineapple_cost + grape_cost) / 3\n\n"]}
{"id": 197, "answer": "C", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\nsolution = solve_it([a * y - b * y, a * b - a * y, x - b], [a, b, x])\nanswer = (solution[a], solution[b], solution[x])\n\n", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\nsolution = solve_it([a * y - b * y, a * b - a * y, x - b], [a, b, x])\nanswer = (solution[a], solution[b], solution[x])\n\n"]}
{"id": 198, "answer": "C", "completion": "distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\ntime = 20\ntime_reduced = 10\nsolution = solve_it([distance / speed - time, distance / speed - time_reduced], [distance, speed])\nanswer = solution[speed]\n\n", "completions": ["distance = Symbol('distance', positive=True)\nspeed = Symbol('speed', positive=True)\ntime = 20\ntime_reduced = 10\nsolution = solve_it([distance / speed - time, distance / speed - time_reduced], [distance, speed])\nanswer = solution[speed]\n\n"]}
{"id": 199, "answer": "C", "completion": "prob_alan_correct = 1 / 5\nprob_roger_correct = 2 / 3\nprob_peter_correct = 5 / 6\nprob_alan_or_roger_or_peter_correct = 1 - (1 - prob_alan_correct) * (1 - prob_roger_correct) * (1 - prob_peter_correct)\nprob_alan_or_roger_or_peter_incorrect = 1 - prob_alan_or_roger_or_peter_correct\nprob_alan_or_roger_incorrect = 1 - prob_alan_correct - prob_roger_correct + prob_alan_or_roger_or_peter_incorrect\nprob_alan_incorrect = 1 - prob_alan_correct\nanswer = prob_alan_incorrect + prob_alan_or_roger_incorrect\n\n", "completions": ["prob_alan_correct = 1 / 5\nprob_roger_correct = 2 / 3\nprob_peter_correct = 5 / 6\nprob_alan_or_roger_or_peter_correct = 1 - (1 - prob_alan_correct) * (1 - prob_roger_correct) * (1 - prob_peter_correct)\nprob_alan_or_roger_or_peter_incorrect = 1 - prob_alan_or_roger_or_peter_correct\nprob_alan_or_roger_incorrect = 1 - prob_alan_correct - prob_roger_correct + prob_alan_or_roger_or_peter_incorrect\nprob_alan_incorrect = 1 - prob_alan_correct\nanswer = prob_alan_incorrect + prob_alan_or_roger_incorrect\n\n"]}
{"id": 200, "answer": "B", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 201, "answer": "A", "completion": "num_files = 250\nnum_files_infected_by_virus = 0.5 * num_files\nnum_files_infected_by_worm = 2.5 * num_files_infected_by_virus\nnum_files_not_infected_by_worm = num_files - num_files_infected_by_worm\nanswer = num_files_not_infected_by_worm\n\n", "completions": ["num_files = 250\nnum_files_infected_by_virus = 0.5 * num_files\nnum_files_infected_by_worm = 2.5 * num_files_infected_by_virus\nnum_files_not_infected_by_worm = num_files - num_files_infected_by_worm\nanswer = num_files_not_infected_by_worm\n\n"]}
{"id": 202, "answer": "B", "completion": "mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = 5100 - mohan_share\nmohan_amount = mohan_share * (1 + 4 / 100) ** 3\nsohan_amount = sohan_share * (1 + 4 / 100) ** 3\nsolution = solve_it(mohan_amount - sohan_amount, mohan_share)\nanswer = solution[mohan_share]\n\n", "completions": ["mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = 5100 - mohan_share\nmohan_amount = mohan_share * (1 + 4 / 100) ** 3\nsohan_amount = sohan_share * (1 + 4 / 100) ** 3\nsolution = solve_it(mohan_amount - sohan_amount, mohan_share)\nanswer = solution[mohan_share]\n\n"]}
{"id": 203, "answer": "C", "completion": "answer = 0.6 * 0.3 * 1400\n\n", "completions": ["answer = 0.6 * 0.3 * 1400\n\n"]}
{"id": 204, "answer": "B", "completion": "time = Symbol('time', positive=True)\ngallons = Symbol('gallons', positive=True)\nrate = Symbol('rate', positive=True)\nsolution = solve_it(gallons / rate - time, time)\nanswer = solution[time]\n\n", "completions": ["time = Symbol('time', positive=True)\ngallons = Symbol('gallons', positive=True)\nrate = Symbol('rate', positive=True)\nsolution = solve_it(gallons / rate - time, time)\nanswer = solution[time]\n\n"]}
{"id": 205, "answer": "A", "completion": "weight_of_coin = 30\nweight_of_aluminum = Symbol('weight_of_aluminum', positive=True)\nweight_of_silver = Symbol('weight_of_silver', positive=True)\nvolume_of_aluminum = weight_of_aluminum / 2.7\nvolume_of_silver = weight_of_silver / 10.5\nsolution = solve_it([volume_of_aluminum - volume_of_silver, weight_of_coin - weight_of_aluminum - weight_of_silver], [weight_of_aluminum, weight_of_silver])\nweight_of_aluminum = solution[weight_of_aluminum]\nweight_of_silver = solution[weight_of_silver]\nweight_of_pure_aluminum = weight_of_aluminum / 2\nanswer = weight_of_pure_aluminum\n\n", "completions": ["weight_of_coin = 30\nweight_of_aluminum = Symbol('weight_of_aluminum', positive=True)\nweight_of_silver = Symbol('weight_of_silver', positive=True)\nvolume_of_aluminum = weight_of_aluminum / 2.7\nvolume_of_silver = weight_of_silver / 10.5\nsolution = solve_it([volume_of_aluminum - volume_of_silver, weight_of_coin - weight_of_aluminum - weight_of_silver], [weight_of_aluminum, weight_of_silver])\nweight_of_aluminum = solution[weight_of_aluminum]\nweight_of_silver = solution[weight_of_silver]\nweight_of_pure_aluminum = weight_of_aluminum / 2\nanswer = weight_of_pure_aluminum\n\n"]}
{"id": 206, "answer": "A", "completion": "number = Symbol('number', positive=True)\nresult = 2 / 3 * number - 10\nnumber = 40 + 1 / 3 * number\nsolution = solve_it(result - number, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nresult = 2 / 3 * number - 10\nnumber = 40 + 1 / 3 * number\nsolution = solve_it(result - number, number)\nanswer = solution[number]\n\n"]}
{"id": 207, "answer": "C", "completion": "k = Symbol('k')\nsolution = solve_it(k - 4, k)\nanswer = solution[k]\n\n", "completions": ["k = Symbol('k')\nsolution = solve_it(k - 4, k)\nanswer = solution[k]\n\n"]}
{"id": 208, "answer": "E", "completion": "answer = 900 + 5 * 12\n\n", "completions": ["answer = 900 + 5 * 12\n\n"]}
{"id": 209, "answer": "B", "completion": "distance = 100\nspeed = 10\ntime_taken = Symbol('time_taken', positive=True)\ntime_taken_in_hours = time_taken / 60\ndistance_covered = time_taken_in_hours * speed\nrest_time = 10 / 60\nrest_time_in_hours = rest_time / time_taken_in_hours\nsolution = solve_it(distance_covered - distance - rest_time_in_hours, time_taken_in_hours)\nanswer = solution[time_taken_in_hours]\n\n", "completions": ["distance = 100\nspeed = 10\ntime_taken = Symbol('time_taken', positive=True)\ntime_taken_in_hours = time_taken / 60\ndistance_covered = time_taken_in_hours * speed\nrest_time = 10 / 60\nrest_time_in_hours = rest_time / time_taken_in_hours\nsolution = solve_it(distance_covered - distance - rest_time_in_hours, time_taken_in_hours)\nanswer = solution[time_taken_in_hours]\n\n"]}
{"id": 210, "answer": "B", "completion": "time_by_train = Symbol('time_by_train', positive=True)\ntime_by_car = Symbol('time_by_car', positive=True)\ntime_by_train_in_both_ways = 17 + time_by_train\ntime_by_car_in_both_ways = time_by_car + time_by_car\nsolution = solve_it(time_by_train_in_both_ways - time_by_car_in_both_ways - 4, time_by_car)\nanswer = solution[time_by_car]\n\n", "completions": ["time_by_train = Symbol('time_by_train', positive=True)\ntime_by_car = Symbol('time_by_car', positive=True)\ntime_by_train_in_both_ways = 17 + time_by_train\ntime_by_car_in_both_ways = time_by_car + time_by_car\nsolution = solve_it(time_by_train_in_both_ways - time_by_car_in_both_ways - 4, time_by_car)\nanswer = solution[time_by_car]\n\n"]}
{"id": 211, "answer": "A", "completion": "food_in_bowl = 1\nfood_in_bowl_at_noon = food_in_bowl / 3 ** 4\nanswer = food_in_bowl_at_noon * 100\n\n", "completions": ["food_in_bowl = 1\nfood_in_bowl_at_noon = food_in_bowl / 3 ** 4\nanswer = food_in_bowl_at_noon * 100\n\n"]}
{"id": 212, "answer": "A", "completion": "num_people = Symbol('num_people', positive=True)\nnum_women = 0.6 * num_people\nnum_men = num_people - num_women\nnum_men_preferring_red = 0.25 * num_men\nnum_men_preferring_green = num_men - num_men_preferring_red\nnum_people_preferring_green = num_women + num_men_preferring_green\nsolution = solve_it(num_people_preferring_green - 10, num_people)\nanswer = solution[num_people]\n\n", "completions": ["num_people = Symbol('num_people', positive=True)\nnum_women = 0.6 * num_people\nnum_men = num_people - num_women\nnum_men_preferring_red = 0.25 * num_men\nnum_men_preferring_green = num_men - num_men_preferring_red\nnum_people_preferring_green = num_women + num_men_preferring_green\nsolution = solve_it(num_people_preferring_green - 10, num_people)\nanswer = solution[num_people]\n\n"]}
{"id": 213, "answer": "D", "completion": "num_steps = 10\nnum_ways = 1\nfor i in range(1, num_steps + 1):\n    num_ways *= 2\nanswer = num_ways\n\n", "completions": ["num_steps = 10\nnum_ways = 1\nfor i in range(1, num_steps + 1):\n    num_ways *= 2\nanswer = num_ways\n\n"]}
{"id": 214, "answer": "A", "completion": "orange_juice_percentage = 0.6\nwater_percentage = 0.4\nadditional_orange_juice_percentage = 0.6 - 0.4\nadditional_orange_juice_gallons = additional_orange_juice_percentage / orange_juice_percentage\nanswer = additional_orange_juice_gallons\n\n", "completions": ["orange_juice_percentage = 0.6\nwater_percentage = 0.4\nadditional_orange_juice_percentage = 0.6 - 0.4\nadditional_orange_juice_gallons = additional_orange_juice_percentage / orange_juice_percentage\nanswer = additional_orange_juice_gallons\n\n"]}
{"id": 215, "answer": "D", "completion": "answer = 9 ** 3 - 7\n\n", "completions": ["answer = 9 ** 3 - 7\n\n"]}
{"id": 216, "answer": "A", "completion": "num_horses = 5\nnum_winning_horses = 1\nnum_combinations = num_horses * (num_horses - 1)\nnum_winning_combinations = num_winning_horses * (num_winning_horses - 1)\nanswer = num_winning_combinations / num_combinations\n\n", "completions": ["num_horses = 5\nnum_winning_horses = 1\nnum_combinations = num_horses * (num_horses - 1)\nnum_winning_combinations = num_winning_horses * (num_winning_horses - 1)\nanswer = num_winning_combinations / num_combinations\n\n"]}
{"id": 217, "answer": "A", "completion": "N = Symbol('N')\nremainder = 2272 % N\nremainder_2 = 875 % N\nsolution = solve_it(remainder - remainder_2, N)\nanswer = sum(int(digit) for digit in str(solution[N]))\n\n", "completions": ["N = Symbol('N')\nremainder = 2272 % N\nremainder_2 = 875 % N\nsolution = solve_it(remainder - remainder_2, N)\nanswer = sum(int(digit) for digit in str(solution[N]))\n\n"]}
{"id": 218, "answer": "C", "completion": "num_passing_students = Symbol('num_passing_students', positive=True)\nnum_failing_students = Symbol('num_failing_students', positive=True)\naverage_passing_score = 83\naverage_failing_score = 55\noverall_average = 76\nsolution = solve_it([num_passing_students * average_passing_score + num_failing_students * average_failing_score - overall_average * (num_passing_students + num_failing_students), num_passing_students - num_failing_students], [num_passing_students, num_failing_students])\nanswer = solution[num_passing_students] / (num_passing_students + num_failing_students)", "completions": ["num_passing_students = Symbol('num_passing_students', positive=True)\nnum_failing_students = Symbol('num_failing_students', positive=True)\naverage_passing_score = 83\naverage_failing_score = 55\noverall_average = 76\nsolution = solve_it([num_passing_students * average_passing_score + num_failing_students * average_failing_score - overall_average * (num_passing_students + num_failing_students), num_passing_students - num_failing_students], [num_passing_students, num_failing_students])\nanswer = solution[num_passing_students] / (num_passing_students + num_failing_students)"]}
{"id": 219, "answer": "C", "completion": "wages = Symbol('wages', positive=True)\nfirst_7_days_avg = 87\nlast_7_days_avg = 92\ntotal_avg = 90\ntotal_wages = 15 * wages\nfirst_7_days_wages = 7 * wages\nlast_7_days_wages = 7 * wages\nsolution = solve_it([total_wages - first_7_days_wages - last_7_days_wages, first_7_days_wages / 7 - first_7_days_avg, last_7_days_wages / 7 - last_7_days_avg, total_wages / 15 - total_avg], [wages])\nanswer = solution[wages]", "completions": ["wages = Symbol('wages', positive=True)\nfirst_7_days_avg = 87\nlast_7_days_avg = 92\ntotal_avg = 90\ntotal_wages = 15 * wages\nfirst_7_days_wages = 7 * wages\nlast_7_days_wages = 7 * wages\nsolution = solve_it([total_wages - first_7_days_wages - last_7_days_wages, first_7_days_wages / 7 - first_7_days_avg, last_7_days_wages / 7 - last_7_days_avg, total_wages / 15 - total_avg], [wages])\nanswer = solution[wages]"]}
{"id": 220, "answer": "A", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * x - 23 * y], [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * x - 23 * y], [x, y])\nanswer = solution[x]\n\n"]}
{"id": 221, "answer": "D", "completion": "age_of_ajay = Symbol('age_of_ajay', positive=True)\nage_of_rahul = Symbol('age_of_rahul', positive=True)\nage_of_denis = 5\nsolution = solve_it([age_of_ajay - 6 - age_of_rahul * 18, age_of_rahul - age_of_denis - 2], [age_of_ajay, age_of_rahul])\nanswer = solution[age_of_ajay]\n\n", "completions": ["age_of_ajay = Symbol('age_of_ajay', positive=True)\nage_of_rahul = Symbol('age_of_rahul', positive=True)\nage_of_denis = 5\nsolution = solve_it([age_of_ajay - 6 - age_of_rahul * 18, age_of_rahul - age_of_denis - 2], [age_of_ajay, age_of_rahul])\nanswer = solution[age_of_ajay]\n\n"]}
{"id": 222, "answer": "D", "completion": "answer = factorial(4)\n\n", "completions": ["answer = factorial(4)\n\n"]}
{"id": 223, "answer": "C", "completion": "discount_percentage = Symbol('discount_percentage', positive=True)\noriginal_price = 100\ndiscounted_price = original_price * (1 - 0.2)\nfinal_price = discounted_price * (1 - 0.2)\nsolution = solve_it(final_price - original_price, discount_percentage)\nanswer = solution[discount_percentage]\n\n", "completions": ["discount_percentage = Symbol('discount_percentage', positive=True)\noriginal_price = 100\ndiscounted_price = original_price * (1 - 0.2)\nfinal_price = discounted_price * (1 - 0.2)\nsolution = solve_it(final_price - original_price, discount_percentage)\nanswer = solution[discount_percentage]\n\n"]}
{"id": 224, "answer": "E", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nunpainted_side = 9\npainted_sides = 37 - unpainted_side\nsolution = solve_it([length * width - unpainted_side * width - unpainted_side * length + painted_sides], [length, width])\nanswer = solution[length] * solution[width]\n\n", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nunpainted_side = 9\npainted_sides = 37 - unpainted_side\nsolution = solve_it([length * width - unpainted_side * width - unpainted_side * length + painted_sides], [length, width])\nanswer = solution[length] * solution[width]\n\n"]}
{"id": 225, "answer": "E", "completion": "num_people = 10\nnum_choices = factorial(num_people) / factorial(num_people - 10)\nanswer = num_choices\n\n", "completions": ["num_people = 10\nnum_choices = factorial(num_people) / factorial(num_people - 10)\nanswer = num_choices\n\n"]}
{"id": 226, "answer": "B", "completion": "average_weight = Symbol('average_weight', positive=True)\nweight_of_one_oarsman = average_weight * 10\nweight_of_new_man = Symbol('weight_of_new_man', positive=True)\nweight_of_one_oarsman_after_replacement = weight_of_one_oarsman + weight_of_new_man - 53\nsolution = solve_it(weight_of_one_oarsman_after_replacement - average_weight * 9 - 1.8, weight_of_new_man)\nanswer = solution[weight_of_new_man]\n\n", "completions": ["average_weight = Symbol('average_weight', positive=True)\nweight_of_one_oarsman = average_weight * 10\nweight_of_new_man = Symbol('weight_of_new_man', positive=True)\nweight_of_one_oarsman_after_replacement = weight_of_one_oarsman + weight_of_new_man - 53\nsolution = solve_it(weight_of_one_oarsman_after_replacement - average_weight * 9 - 1.8, weight_of_new_man)\nanswer = solution[weight_of_new_man]\n\n"]}
{"id": 227, "answer": "B", "completion": "n = Symbol('n')\nsolution = solve_it(n * (n - 1) - 45, n)\nanswer = solution[n]\n\n", "completions": ["n = Symbol('n')\nsolution = solve_it(n * (n - 1) - 45, n)\nanswer = solution[n]\n\n"]}
{"id": 228, "answer": "D", "completion": "Q = Symbol('Q', positive=True)\nfactors = [Q / i for i in range(1, Q + 1) if Q % i == 0]\nnum_factors = len(factors)\nif num_factors == 5:\n    if Q ** 0.5 in factors:\n        answer = 'A'\n    elif Q ** 0.25 in factors:\n        answer = 'B'\n    elif Q ** 0.5 in factors and Q ** 0.25 in factors:\n        answer = 'C'\n    else:\n        answer = 'E'\nelse:\n    answer = 'D'\n\n", "completions": ["Q = Symbol('Q', positive=True)\nfactors = [Q / i for i in range(1, Q + 1) if Q % i == 0]\nnum_factors = len(factors)\nif num_factors == 5:\n    if Q ** 0.5 in factors:\n        answer = 'A'\n    elif Q ** 0.25 in factors:\n        answer = 'B'\n    elif Q ** 0.5 in factors and Q ** 0.25 in factors:\n        answer = 'C'\n    else:\n        answer = 'E'\nelse:\n    answer = 'D'\n\n"]}
{"id": 229, "answer": "A", "completion": "x = Symbol('x')\ny = Symbol('y')\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]\n\n", "completions": ["x = Symbol('x')\ny = Symbol('y')\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]\n\n"]}
{"id": 230, "answer": "A", "completion": "monthly_membership_cost = 7\nmovie_cost_without_membership = 4\nmovie_cost_with_membership = 2\nminimum_movies_to_rent = monthly_membership_cost / (movie_cost_with_membership - movie_cost_without_membership)\nanswer = minimum_movies_to_rent\n\n", "completions": ["monthly_membership_cost = 7\nmovie_cost_without_membership = 4\nmovie_cost_with_membership = 2\nminimum_movies_to_rent = monthly_membership_cost / (movie_cost_with_membership - movie_cost_without_membership)\nanswer = minimum_movies_to_rent\n\n"]}
{"id": 231, "answer": "C", "completion": "weight_in_pounds = 7\nweight_in_ounces = 4\nweight_in_total_ounces = weight_in_pounds * 16 + weight_in_ounces\nanswer = weight_in_total_ounces\n\n", "completions": ["weight_in_pounds = 7\nweight_in_ounces = 4\nweight_in_total_ounces = weight_in_pounds * 16 + weight_in_ounces\nanswer = weight_in_total_ounces\n\n"]}
{"id": 232, "answer": "B", "completion": "jack_speed = Symbol('jack_speed', positive=True)\njill_speed = Symbol('jill_speed', positive=True)\njack_time = 12\njack_work = 2 / 3\njill_work = 1 / 3\nsolution = solve_it([jack_speed * jack_time - jack_work, jill_speed * jill_time - jill_work], [jack_speed, jill_time])\nanswer = solution[jill_time]\n\n", "completions": ["jack_speed = Symbol('jack_speed', positive=True)\njill_speed = Symbol('jill_speed', positive=True)\njack_time = 12\njack_work = 2 / 3\njill_work = 1 / 3\nsolution = solve_it([jack_speed * jack_time - jack_work, jill_speed * jill_time - jill_work], [jack_speed, jill_time])\nanswer = solution[jill_time]\n\n"]}
{"id": 233, "answer": "A", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 3 * interest_rate / 100)\nsolution = solve_it(amount_with_simple_interest - amount - 300, interest_rate)\nanswer = solution[interest_rate]\n\n", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 3 * interest_rate / 100)\nsolution = solve_it(amount_with_simple_interest - amount - 300, interest_rate)\nanswer = solution[interest_rate]\n\n"]}
{"id": 234, "answer": "B", "completion": "discount = 0.2\nselling_price = 4578 / (1 - discount)\nanswer = selling_price\n\n", "completions": ["discount = 0.2\nselling_price = 4578 / (1 - discount)\nanswer = selling_price\n\n"]}
{"id": 235, "answer": "A", "completion": "A = Symbol('A')\nB = Symbol('B')\ncost_of_27_bottles = A / 100\ncost_of_B_bottles = B / 100\nsolution = solve_it(cost_of_27_bottles - cost_of_B_bottles, A)\nanswer = solution[A]\n\n", "completions": ["A = Symbol('A')\nB = Symbol('B')\ncost_of_27_bottles = A / 100\ncost_of_B_bottles = B / 100\nsolution = solve_it(cost_of_27_bottles - cost_of_B_bottles, A)\nanswer = solution[A]\n\n"]}
{"id": 236, "answer": "B", "completion": "# Answer option: ['A)8', 'B)28', 'C)46', 'D)66', 'E)70']\n\n", "completions": ["# Answer option: ['A)8', 'B)28', 'C)46', 'D)66', 'E)70']\n\n"]}
{"id": 237, "answer": "D", "completion": "num_men = 4\nnum_women = 4\nnum_presenters = 4\nnum_groups = factorial(num_men + num_women) / (factorial(num_men) * factorial(num_women)) - 2\nanswer = num_groups * factorial(num_presenters)\n\n", "completions": ["num_men = 4\nnum_women = 4\nnum_presenters = 4\nnum_groups = factorial(num_men + num_women) / (factorial(num_men) * factorial(num_women)) - 2\nanswer = num_groups * factorial(num_presenters)\n\n"]}
{"id": 238, "answer": "A", "completion": "num_girls = Symbol('num_girls', positive=True)\nnum_boys = 100\ntotal_children = num_girls + num_boys\nsolution = solve_it(2 / 5 * total_children - num_girls, num_girls)\nanswer = solution[num_girls]\n\n", "completions": ["num_girls = Symbol('num_girls', positive=True)\nnum_boys = 100\ntotal_children = num_girls + num_boys\nsolution = solve_it(2 / 5 * total_children - num_girls, num_girls)\nanswer = solution[num_girls]\n\n"]}
{"id": 239, "answer": "A", "completion": "# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n", "completions": ["# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n# Answer option: ['A)5/7', 'B)3/5', 'C)4/7', 'D)2/5', 'E)2/7']\n"]}
{"id": 240, "answer": "B", "completion": "amount = 54080\ninterest_rate = 8\nnum_compounding_periods = 2\nnum_years = 1\noriginal_amount = amount / ((1 + interest_rate / (100 * num_compounding_periods)) ** (num_compounding_periods * num_years))\nanswer = original_amount\n\n", "completions": ["amount = 54080\ninterest_rate = 8\nnum_compounding_periods = 2\nnum_years = 1\noriginal_amount = amount / ((1 + interest_rate / (100 * num_compounding_periods)) ** (num_compounding_periods * num_years))\nanswer = original_amount\n\n"]}
{"id": 241, "answer": "D", "completion": "joes_age = Symbol('joes_age', positive=True)\njoes_sisters_age = Symbol('joes_sisters_age', positive=True)\njoes_fathers_age = Symbol('joes_fathers_age', positive=True)\nsolution = solve_it([joes_age + joes_sisters_age + joes_fathers_age - 100, joes_sisters_age - 2 * joes_age, joes_fathers_age - 2 * joes_sisters_age], [joes_age, joes_sisters_age, joes_fathers_age])\nanswer = solution[joes_fathers_age]\n\n", "completions": ["joes_age = Symbol('joes_age', positive=True)\njoes_sisters_age = Symbol('joes_sisters_age', positive=True)\njoes_fathers_age = Symbol('joes_fathers_age', positive=True)\nsolution = solve_it([joes_age + joes_sisters_age + joes_fathers_age - 100, joes_sisters_age - 2 * joes_age, joes_fathers_age - 2 * joes_sisters_age], [joes_age, joes_sisters_age, joes_fathers_age])\nanswer = solution[joes_fathers_age]\n\n"]}
{"id": 242, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number / 4 - 21, number)\nanswer = solution[number]\n\n", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number / 4 - 21, number)\nanswer = solution[number]\n\n"]}
{"id": 243, "answer": "D", "completion": "m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = m / x\n\n", "completions": ["m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = m / x\n\n"]}
{"id": 244, "answer": "C", "completion": "breakfast_options = 6\ndinner_options = 8\nanswer = breakfast_options * dinner_options\n\n", "completions": ["breakfast_options = 6\ndinner_options = 8\nanswer = breakfast_options * dinner_options\n\n"]}
{"id": 245, "answer": "D", "completion": "answer = binomial(5, 4) * 0.9 ** 4 * 0.1\n\n", "completions": ["answer = binomial(5, 4) * 0.9 ** 4 * 0.1\n\n"]}
{"id": 246, "answer": "B", "completion": "fence_length = Symbol('fence_length', positive=True)\nunfenced_side = 10\narea = 240\nsolution = solve_it([2 * fence_length + unfenced_side - area], [fence_length])\nanswer = solution[fence_length]\n\n", "completions": ["fence_length = Symbol('fence_length', positive=True)\nunfenced_side = 10\narea = 240\nsolution = solve_it([2 * fence_length + unfenced_side - area], [fence_length])\nanswer = solution[fence_length]\n\n"]}
{"id": 247, "answer": "E", "completion": "vowels = 5\nconsonants = 20\ncodes = vowels * consonants * (consonants - 1)\nanswer = codes\n\n", "completions": ["vowels = 5\nconsonants = 20\ncodes = vowels * consonants * (consonants - 1)\nanswer = codes\n\n"]}
{"id": 248, "answer": "A", "completion": "num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\nnum3 = Symbol('num3', positive=True)\nsolution = solve_it([num1 * num2 * num3 - (727 + 728 + 729), num1 + num2 + num3 - 37], [num1, num2, num3])\nanswer = (solution[num1], solution[num2], solution[num3])\n\n", "completions": ["num1 = Symbol('num1', positive=True)\nnum2 = Symbol('num2', positive=True)\nnum3 = Symbol('num3', positive=True)\nsolution = solve_it([num1 * num2 * num3 - (727 + 728 + 729), num1 + num2 + num3 - 37], [num1, num2, num3])\nanswer = (solution[num1], solution[num2], solution[num3])\n\n"]}
{"id": 249, "answer": "D", "completion": "volume = 8 * 6 * 2.5\nanswer = volume * 1000\n\n", "completions": ["volume = 8 * 6 * 2.5\nanswer = volume * 1000\n\n"]}
{"id": 250, "answer": "A", "completion": "num_adults = 4169516\nnum_children = 5265526 - num_adults\nanswer = num_children\n\n", "completions": ["num_adults = 4169516\nnum_children = 5265526 - num_adults\nanswer = num_children\n\n"]}
{"id": 251, "answer": "A", "completion": "time_to_drive = 9\ndistance = 20 * time_to_drive\ntime_to_cycle = distance / 6\nanswer = time_to_cycle\n\n", "completions": ["time_to_drive = 9\ndistance = 20 * time_to_drive\ntime_to_cycle = distance / 6\nanswer = time_to_cycle\n\n"]}
{"id": 252, "answer": "A", "completion": "P = Symbol('P')\nQ = Symbol('Q')\ntime_taken_by_P = 10\ntime_taken_by_Q = 5\nsolution = solve_it([P - time_taken_by_P, Q - time_taken_by_Q / 2], [P, Q])\nanswer = solution[P]\n\n", "completions": ["P = Symbol('P')\nQ = Symbol('Q')\ntime_taken_by_P = 10\ntime_taken_by_Q = 5\nsolution = solve_it([P - time_taken_by_P, Q - time_taken_by_Q / 2], [P, Q])\nanswer = solution[P]\n\n"]}
{"id": 253, "answer": "A", "completion": "profit = 0.2\nnum_bags = 500\ntotal_profit = profit * num_bags\nanswer = total_profit\n\n", "completions": ["profit = 0.2\nnum_bags = 500\ntotal_profit = profit * num_bags\nanswer = total_profit\n\n"]}
