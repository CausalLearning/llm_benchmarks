{"id": 0, "answer": "E", "completion": "time = Symbol('time', positive=True)\nangle_change = 60 - 45\ndistance_travelled = time * uniform_speed\nangle_change_per_unit_distance = angle_change / distance_travelled\nsolution = solve_it(angle_change_per_unit_distance - 10 / 60, time)\nanswer = solution[time]", "completions": ["time = Symbol('time', positive=True)\nangle_change = 60 - 45\ndistance_travelled = time * uniform_speed\nangle_change_per_unit_distance = angle_change / distance_travelled\nsolution = solve_it(angle_change_per_unit_distance - 10 / 60, time)\nanswer = solution[time]"]}
{"id": 1, "answer": "E", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\ncoupon_discount = 20\nfinal_price = discounted_price - coupon_discount\nsolution = solve_it(final_price - (original_price / 2) - 1.90, original_price)\nanswer = solution[original_price]", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = original_price * 0.78\ncoupon_discount = 20\nfinal_price = discounted_price - coupon_discount\nsolution = solve_it(final_price - (original_price / 2) - 1.90, original_price)\nanswer = solution[original_price]"]}
{"id": 2, "answer": "A", "completion": "options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break", "completions": ["options = [36, 15, 17, 5, 7]\nfor option in options:\n    if option % 9 == 0 and option % 12 == 0:\n        answer = option\n        break"]}
{"id": 3, "answer": "B", "completion": "prob_A = 0.56\nprob_B = 0.74\nanswer = 1 - (prob_A + prob_B)", "completions": ["prob_A = 0.56\nprob_B = 0.74\nanswer = 1 - (prob_A + prob_B)"]}
{"id": 4, "answer": "B", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit_percentage = 20\nsolution = solve_it(selling_price - cost_price - (cost_price * profit_percentage / 100), cost_price)\nanswer = solution[cost_price]", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = 360\nprofit_percentage = 20\nsolution = solve_it(selling_price - cost_price - (cost_price * profit_percentage / 100), cost_price)\nanswer = solution[cost_price]"]}
{"id": 5, "answer": "A", "completion": "total_marbles = Symbol('total_marbles', positive=True)\nblack_marbles = Symbol('black_marbles', positive=True)\npercentage_black_marbles = 1 / 20\nsolution = solve_it(percentage_black_marbles - black_marbles / total_marbles, total_marbles)\nanswer = solution[total_marbles]", "completions": ["total_marbles = Symbol('total_marbles', positive=True)\nblack_marbles = Symbol('black_marbles', positive=True)\npercentage_black_marbles = 1 / 20\nsolution = solve_it(percentage_black_marbles - black_marbles / total_marbles, total_marbles)\nanswer = solution[total_marbles]"]}
{"id": 6, "answer": "B", "completion": "distinct_letters = 26 * 25\ndistinct_numbers = 10 * 9\nanswer = distinct_letters * distinct_numbers", "completions": ["distinct_letters = 26 * 25\ndistinct_numbers = 10 * 9\nanswer = distinct_letters * distinct_numbers"]}
{"id": 7, "answer": "D", "completion": "original_speed = 100\nreduced_speed = 75\noriginal_time = 10\ndistance_covered_at_original_speed = original_speed * original_time\ndistance_remaining = distance_covered_at_original_speed / 4\ntime_taken_at_reduced_speed = distance_remaining / reduced_speed\nanswer = original_time + time_taken_at_reduced_speed", "completions": ["original_speed = 100\nreduced_speed = 75\noriginal_time = 10\ndistance_covered_at_original_speed = original_speed * original_time\ndistance_remaining = distance_covered_at_original_speed / 4\ntime_taken_at_reduced_speed = distance_remaining / reduced_speed\nanswer = original_time + time_taken_at_reduced_speed"]}
{"id": 8, "answer": "B", "completion": "num_students = 200\nnum_attended_prom = 0.45 * num_students\nnum_took_part_debate = 0.35 * num_students\nnum_neither_attended_prom_nor_debate = num_students - num_attended_prom - num_took_part_debate\nanswer = num_neither_attended_prom_nor_debate", "completions": ["num_students = 200\nnum_attended_prom = 0.45 * num_students\nnum_took_part_debate = 0.35 * num_students\nnum_neither_attended_prom_nor_debate = num_students - num_attended_prom - num_took_part_debate\nanswer = num_neither_attended_prom_nor_debate"]}
{"id": 9, "answer": "D", "completion": "commission = 0.1\nsalary = 1000\nsales_required = Symbol('sales_required', positive=True)\nsolution = solve_it(salary - commission * 250 * sales_required, sales_required)\nanswer = solution[sales_required]", "completions": ["commission = 0.1\nsalary = 1000\nsales_required = Symbol('sales_required', positive=True)\nsolution = solve_it(salary - commission * 250 * sales_required, sales_required)\nanswer = solution[sales_required]"]}
{"id": 10, "answer": "B", "completion": "production_cost = 110\nmonthly_production = 420\nyearly_profit = 626400\nmonthly_sales = (yearly_profit + 12 * production_cost * monthly_production) / (12 * monthly_production)\nanswer = monthly_sales", "completions": ["production_cost = 110\nmonthly_production = 420\nyearly_profit = 626400\nmonthly_sales = (yearly_profit + 12 * production_cost * monthly_production) / (12 * monthly_production)\nanswer = monthly_sales"]}
{"id": 11, "answer": "B", "completion": "defective_staplers = Symbol('defective_staplers', positive=True)\nnon_defective_staplers = Symbol('non_defective_staplers', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nsolution = solve_it([defective_staplers / total_staplers - 0.1, non_defective_staplers / total_staplers - 0.98, non_defective_staplers - 72], [defective_staplers, non_defective_staplers, total_staplers])\nanswer = solution[total_staplers]", "completions": ["defective_staplers = Symbol('defective_staplers', positive=True)\nnon_defective_staplers = Symbol('non_defective_staplers', positive=True)\ntotal_staplers = Symbol('total_staplers', positive=True)\nsolution = solve_it([defective_staplers / total_staplers - 0.1, non_defective_staplers / total_staplers - 0.98, non_defective_staplers - 72], [defective_staplers, non_defective_staplers, total_staplers])\nanswer = solution[total_staplers]"]}
{"id": 12, "answer": "E", "completion": "machine_a_rate = 6\nmachine_b_rate = 9\ntotal_rate = machine_a_rate * machine_b_rate\nnum_yoyos = 10\nanswer = num_yoyos * total_rate", "completions": ["machine_a_rate = 6\nmachine_b_rate = 9\ntotal_rate = machine_a_rate * machine_b_rate\nnum_yoyos = 10\nanswer = num_yoyos * total_rate"]}
{"id": 13, "answer": "D", "completion": "answer = 45 - 30", "completions": ["answer = 45 - 30"]}
{"id": 14, "answer": "C", "completion": "answer = 7!", "completions": ["answer = 7!"]}
{"id": 15, "answer": "A", "completion": "A = Symbol('A')\nB = Symbol('B')\nP_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A * P_B / P_B\nanswer = P_A_given_B", "completions": ["A = Symbol('A')\nB = Symbol('B')\nP_A = 0.2\nP_B = 0.8\nP_A_given_B = P_A * P_B / P_B\nanswer = P_A_given_B"]}
{"id": 16, "answer": "E", "completion": "speed = Symbol('speed', positive=True)\ntime_for_20_steps = 10\ntime_for_10_steps = 20\nsolution = solve_it(speed * time_for_20_steps - 20, speed * time_for_10_steps - 10, speed)\nanswer = solution[speed]", "completions": ["speed = Symbol('speed', positive=True)\ntime_for_20_steps = 10\ntime_for_10_steps = 20\nsolution = solve_it(speed * time_for_20_steps - 20, speed * time_for_10_steps - 10, speed)\nanswer = solution[speed]"]}
{"id": 17, "answer": "B", "completion": "total_months = 22\ntotal_microwave_ovens = 42 * 10 + 20 * 12\nanswer = total_microwave_ovens / total_months", "completions": ["total_months = 22\ntotal_microwave_ovens = 42 * 10 + 20 * 12\nanswer = total_microwave_ovens / total_months"]}
{"id": 18, "answer": "D", "completion": "x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z', positive=True)\naverage_score = (z * y - 2 * x) / (z - 2)\nanswer = average_score", "completions": ["x = Symbol('x')\ny = Symbol('y')\nz = Symbol('z', positive=True)\naverage_score = (z * y - 2 * x) / (z - 2)\nanswer = average_score"]}
{"id": 19, "answer": "C", "completion": "x = Symbol('x')\nsolution = solve_it(5 + x * 19 - 15 - 7 - (13 * 13 - 156) * 6, x)\nanswer = solution[x]", "completions": ["x = Symbol('x')\nsolution = solve_it(5 + x * 19 - 15 - 7 - (13 * 13 - 156) * 6, x)\nanswer = solution[x]"]}
{"id": 20, "answer": "D", "completion": "selling_price = 100\nprofit = 3000\nprofit_percentage = 25\nnum_bags = profit / (selling_price * profit_percentage / 100)\nanswer = num_bags", "completions": ["selling_price = 100\nprofit = 3000\nprofit_percentage = 25\nnum_bags = profit / (selling_price * profit_percentage / 100)\nanswer = num_bags"]}
{"id": 21, "answer": "E", "completion": "alex_time = 7\njacob_time = 9\ntotal_time = 35\nalex_toys = total_time * alex_time / (alex_time + jacob_time)\njacob_toys = total_time - alex_toys\nanswer = jacob_toys", "completions": ["alex_time = 7\njacob_time = 9\ntotal_time = 35\nalex_toys = total_time * alex_time / (alex_time + jacob_time)\njacob_toys = total_time - alex_toys\nanswer = jacob_toys"]}
{"id": 22, "answer": "A", "completion": "tea_concentration = Symbol('tea_concentration', positive=True)\nmilk_concentration = 1 - tea_concentration\nfinal_tea_concentration = tea_concentration * (1 - 0.15) * (1 - 0.1)\nsolution = solve_it(final_tea_concentration - 0.5, tea_concentration)\nanswer = solution[tea_concentration]", "completions": ["tea_concentration = Symbol('tea_concentration', positive=True)\nmilk_concentration = 1 - tea_concentration\nfinal_tea_concentration = tea_concentration * (1 - 0.15) * (1 - 0.1)\nsolution = solve_it(final_tea_concentration - 0.5, tea_concentration)\nanswer = solution[tea_concentration]"]}
{"id": 23, "answer": "C", "completion": "math_students = Symbol('math_students', positive=True)\nbio_students = Symbol('bio_students', positive=True)\nenglish_students = Symbol('english_students', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([math_students - total_students / 16, bio_students - total_students / 10, english_students - total_students / 8, total_students - 10000], [math_students, bio_students, english_students, total_students])\nmax_students = solution[total_students]\nmin_students = max_students - 8890\nanswer = max_students - min_students", "completions": ["math_students = Symbol('math_students', positive=True)\nbio_students = Symbol('bio_students', positive=True)\nenglish_students = Symbol('english_students', positive=True)\ntotal_students = Symbol('total_students', positive=True)\nsolution = solve_it([math_students - total_students / 16, bio_students - total_students / 10, english_students - total_students / 8, total_students - 10000], [math_students, bio_students, english_students, total_students])\nmax_students = solution[total_students]\nmin_students = max_students - 8890\nanswer = max_students - min_students"]}
{"id": 24, "answer": "D", "completion": "speed = 15 - 4\ndistance = speed * (21 / 60)\nanswer = round(distance, 2)", "completions": ["speed = 15 - 4\ndistance = speed * (21 / 60)\nanswer = round(distance, 2)"]}
{"id": 25, "answer": "B", "completion": "cost = Symbol('cost', positive=True)\ngross_profit = 20\npercent_above_cost = 40\nsolution = solve_it(cost * (1 + percent_above_cost / 100) - cost - gross_profit, cost)\nanswer = solution[cost]", "completions": ["cost = Symbol('cost', positive=True)\ngross_profit = 20\npercent_above_cost = 40\nsolution = solve_it(cost * (1 + percent_above_cost / 100) - cost - gross_profit, cost)\nanswer = solution[cost]"]}
{"id": 26, "answer": "C", "completion": "amount = 500\ninterest_rate = 6\ntime = 4\nanswer = amount + (amount * interest_rate * time / 100)", "completions": ["amount = 500\ninterest_rate = 6\ntime = 4\nanswer = amount + (amount * interest_rate * time / 100)"]}
{"id": 27, "answer": "E", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x >= 0, x <= 100, y <= sqrt(x)], [x, y])\n\nif (99, 10) not in solution.values():\n    answer = (99, 10)\nelif (85, 9) not in solution.values():\n    answer = (85, 9)\nelif (50, 7) not in solution.values():\n    answer = (50, 7)\nelif (1, 1) not in solution.values():\n    answer = (1, 1)\nelif (1, 0) not in solution.values():\n    answer = (1, 0)", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x >= 0, x <= 100, y <= sqrt(x)], [x, y])\n\nif (99, 10) not in solution.values():\n    answer = (99, 10)\nelif (85, 9) not in solution.values():\n    answer = (85, 9)\nelif (50, 7) not in solution.values():\n    answer = (50, 7)\nelif (1, 1) not in solution.values():\n    answer = (1, 1)\nelif (1, 0) not in solution.values():\n    answer = (1, 0)"]}
{"id": 28, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nforward_speed = distance / 6\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it(distance / return_speed - return_time, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nforward_speed = distance / 6\nreturn_speed = forward_speed + 12\nreturn_time = 4\nsolution = solve_it(distance / return_speed - return_time, distance)\nanswer = solution[distance]"]}
{"id": 29, "answer": "B", "completion": "my_age = Symbol('my_age', positive=True)\nbrother_age = Symbol('brother_age', positive=True)\nsolution = solve_it(brother_age - my_age / 2 - 58, [my_age, brother_age])\nanswer = solution[brother_age]", "completions": ["my_age = Symbol('my_age', positive=True)\nbrother_age = Symbol('brother_age', positive=True)\nsolution = solve_it(brother_age - my_age / 2 - 58, [my_age, brother_age])\nanswer = solution[brother_age]"]}
{"id": 30, "answer": "B", "completion": "wholesale_cost = Symbol('wholesale_cost', positive=True)\noriginal_retail_price = 1.6 * wholesale_cost\nactual_retail_price = 0.8 * original_retail_price\npercent_more = (actual_retail_price - wholesale_cost) / wholesale_cost * 100\nanswer = percent_more", "completions": ["wholesale_cost = Symbol('wholesale_cost', positive=True)\noriginal_retail_price = 1.6 * wholesale_cost\nactual_retail_price = 0.8 * original_retail_price\npercent_more = (actual_retail_price - wholesale_cost) / wholesale_cost * 100\nanswer = percent_more"]}
{"id": 31, "answer": "A", "completion": "map_distance = 20\nactual_distance = 10\nanswer = map_distance * actual_distance / 0.25", "completions": ["map_distance = 20\nactual_distance = 10\nanswer = map_distance * actual_distance / 0.25"]}
{"id": 32, "answer": "B", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nperimeter_1 = 48\nperimeter_2 = 66\nsolution = solve_it([2 * (length + width) - perimeter_1, 2 * (length + width) - perimeter_2], [length, width])\nanswer = solution[length] * solution[width]", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nperimeter_1 = 48\nperimeter_2 = 66\nsolution = solve_it([2 * (length + width) - perimeter_1, 2 * (length + width) - perimeter_2], [length, width])\nanswer = solution[length] * solution[width]"]}
{"id": 33, "answer": "B", "completion": "answer = 3 * 4 * 1 * 3", "completions": ["answer = 3 * 4 * 1 * 3"]}
{"id": 34, "answer": "B", "completion": "radius = Symbol('radius', positive=True)\nlength = 3\nwidth = 4\nheight = 15\nsolution = solve_it(radius ** 2 - (length ** 2 + width ** 2 + height ** 2) / 4, radius)\nanswer = 2 * solution[radius]", "completions": ["radius = Symbol('radius', positive=True)\nlength = 3\nwidth = 4\nheight = 15\nsolution = solve_it(radius ** 2 - (length ** 2 + width ** 2 + height ** 2) / 4, radius)\nanswer = 2 * solution[radius]"]}
{"id": 35, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nsolution = solve_it(distance - 3 - 5 - 3 + 2, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nsolution = solve_it(distance - 3 - 5 - 3 + 2, distance)\nanswer = solution[distance]"]}
{"id": 36, "answer": "B", "completion": "price = Symbol('price', positive=True)\ndiscount_5 = 0.05 * price\ndiscount_7 = 0.07 * price\nsolution = solve_it(discount_5 - (discount_7 + 15), price)\nanswer = solution[price]", "completions": ["price = Symbol('price', positive=True)\ndiscount_5 = 0.05 * price\ndiscount_7 = 0.07 * price\nsolution = solve_it(discount_5 - (discount_7 + 15), price)\nanswer = solution[price]"]}
{"id": 37, "answer": "A", "completion": "number = Symbol('number', positive=True)\nactual_value = 7 / 8 * number\nincorrect_value = 7 / 18 * number\nsolution = solve_it(actual_value - incorrect_value - 770, number)\nanswer = solution[number]", "completions": ["number = Symbol('number', positive=True)\nactual_value = 7 / 8 * number\nincorrect_value = 7 / 18 * number\nsolution = solve_it(actual_value - incorrect_value - 770, number)\nanswer = solution[number]"]}
{"id": 38, "answer": "D", "completion": "fixed_salary = 500\npercentage_of_sales = 0.05\ntotal_salary = 1500\nsales = Symbol('sales', positive=True)\nsolution = solve_it(fixed_salary + percentage_of_sales * sales - total_salary, sales)\nanswer = solution[sales]", "completions": ["fixed_salary = 500\npercentage_of_sales = 0.05\ntotal_salary = 1500\nsales = Symbol('sales', positive=True)\nsolution = solve_it(fixed_salary + percentage_of_sales * sales - total_salary, sales)\nanswer = solution[sales]"]}
{"id": 39, "answer": "B", "completion": "speed_1 = 200\nspeed_2 = 400\nspeed_3 = 600\nspeed_4 = 800\ntotal_distance = 4 * (speed_1 + speed_2 + speed_3 + speed_4)\naverage_speed = total_distance / 4\nanswer = average_speed", "completions": ["speed_1 = 200\nspeed_2 = 400\nspeed_3 = 600\nspeed_4 = 800\ntotal_distance = 4 * (speed_1 + speed_2 + speed_3 + speed_4)\naverage_speed = total_distance / 4\nanswer = average_speed"]}
{"id": 40, "answer": "A", "completion": "white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\ncost_per_white = 1\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners * (cost_per_white + 1) + brown_sharpeners - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])", "completions": ["white_sharpeners = Symbol('white_sharpeners', positive=True)\nbrown_sharpeners = Symbol('brown_sharpeners', positive=True)\ntotal_sharpeners = 18\ntotal_cost = 100\ncost_per_white = 1\nsolution = solve_it([white_sharpeners + brown_sharpeners - total_sharpeners, white_sharpeners * (cost_per_white + 1) + brown_sharpeners - total_cost], [white_sharpeners, brown_sharpeners])\nanswer = (solution[white_sharpeners], solution[brown_sharpeners])"]}
{"id": 41, "answer": "B", "completion": "rate_A = Symbol('rate_A', positive=True)\nrate_B = Symbol('rate_B', positive=True)\ntime_A = 8\ntime_AB = 3\nsolution = solve_it([rate_A * 2 + rate_B * 3 - rate_A * time_A, rate_A + rate_B - rate_A * time_AB], [rate_A, rate_B])\nanswer = time_A / solution[rate_B]", "completions": ["rate_A = Symbol('rate_A', positive=True)\nrate_B = Symbol('rate_B', positive=True)\ntime_A = 8\ntime_AB = 3\nsolution = solve_it([rate_A * 2 + rate_B * 3 - rate_A * time_A, rate_A + rate_B - rate_A * time_AB], [rate_A, rate_B])\nanswer = time_A / solution[rate_B]"]}
{"id": 42, "answer": "C", "completion": "original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent", "completions": ["original_value = 120\nreduced_value = 96\nreduction_percent = (original_value - reduced_value) / original_value * 100\nanswer = reduction_percent"]}
{"id": 43, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number * 10 + 1 - 3 * (1 * 10**4 + number), number)\nanswer = solution[number]", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number * 10 + 1 - 3 * (1 * 10**4 + number), number)\nanswer = solution[number]"]}
{"id": 44, "answer": "A", "completion": "total_students = 100\nchess_club_members = 24\nswim_team_members = 20\nnon_chess_club_members = swim_team_members - chess_club_members\nanswer = (swim_team_members + non_chess_club_members) / total_students * 100", "completions": ["total_students = 100\nchess_club_members = 24\nswim_team_members = 20\nnon_chess_club_members = swim_team_members - chess_club_members\nanswer = (swim_team_members + non_chess_club_members) / total_students * 100"]}
{"id": 45, "answer": "B", "completion": "population = 78000\nannual_increase = 0.05\nanswer = population * (1 + annual_increase) ** 2", "completions": ["population = 78000\nannual_increase = 0.05\nanswer = population * (1 + annual_increase) ** 2"]}
{"id": 46, "answer": "E", "completion": "distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = distance / (speed_1 + speed_2)\nanswer = time", "completions": ["distance = 50\nspeed_1 = 12\nspeed_2 = 13\ntime = distance / (speed_1 + speed_2)\nanswer = time"]}
{"id": 47, "answer": "A", "completion": "salary = 1500\ncommission = 0.15\nincome = 6000\nsolution = solve_it(salary + commission * x - income, x)\nanswer = solution[x]", "completions": ["salary = 1500\ncommission = 0.15\nincome = 6000\nsolution = solve_it(salary + commission * x - income, x)\nanswer = solution[x]"]}
{"id": 48, "answer": "D", "completion": "principal = 360\nmonthly_payment = 31.50\ninterest_rate = Symbol('interest_rate', positive=True)\ntotal_payment = 12 * monthly_payment\nsolution = solve_it(total_payment - principal - interest_rate * principal / 100, interest_rate)\nanswer = solution[interest_rate]", "completions": ["principal = 360\nmonthly_payment = 31.50\ninterest_rate = Symbol('interest_rate', positive=True)\ntotal_payment = 12 * monthly_payment\nsolution = solve_it(total_payment - principal - interest_rate * principal / 100, interest_rate)\nanswer = solution[interest_rate]"]}
{"id": 49, "answer": "B", "completion": "original_price = 100\nreduced_price = original_price * 0.7\nincrease_percentage = (original_price - reduced_price) / reduced_price * 100\nanswer = increase_percentage", "completions": ["original_price = 100\nreduced_price = original_price * 0.7\nincrease_percentage = (original_price - reduced_price) / reduced_price * 100\nanswer = increase_percentage"]}
{"id": 50, "answer": "C", "completion": "num_25_paise = Symbol('num_25_paise', positive=True)\nnum_50_paise = Symbol('num_50_paise', positive=True)\nnum_1_rupee = Symbol('num_1_rupee', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25_paise * 0.25 + num_50_paise * 0.50 + num_1_rupee - total_amount], [num_25_paise, num_50_paise, num_1_rupee])\nanswer = (solution[num_25_paise], solution[num_50_paise], solution[num_1_rupee])", "completions": ["num_25_paise = Symbol('num_25_paise', positive=True)\nnum_50_paise = Symbol('num_50_paise', positive=True)\nnum_1_rupee = Symbol('num_1_rupee', positive=True)\ntotal_amount = 700\nsolution = solve_it([num_25_paise * 0.25 + num_50_paise * 0.50 + num_1_rupee - total_amount], [num_25_paise, num_50_paise, num_1_rupee])\nanswer = (solution[num_25_paise], solution[num_50_paise], solution[num_1_rupee])"]}
{"id": 51, "answer": "C", "completion": "income = Symbol('income', positive=True)\nexpenditure = 3500\nsavings = 0.125 * income\nsolution = solve_it(income - expenditure - savings, income)\nanswer = solution[income]", "completions": ["income = Symbol('income', positive=True)\nexpenditure = 3500\nsavings = 0.125 * income\nsolution = solve_it(income - expenditure - savings, income)\nanswer = solution[income]"]}
{"id": 52, "answer": "B", "completion": "toys_per_box = 5 * 12\ntoys_per_tempo = 98 * toys_per_box\nnum_tempos = 29400 / toys_per_tempo\nanswer = round(num_tempos)", "completions": ["toys_per_box = 5 * 12\ntoys_per_tempo = 98 * toys_per_box\nnum_tempos = 29400 / toys_per_tempo\nanswer = round(num_tempos)"]}
{"id": 53, "answer": "B", "completion": "answer = nCr(10, 2)", "completions": ["answer = nCr(10, 2)"]}
{"id": 54, "answer": "E", "completion": "brown_time = 6\nblack_time = 8\nblue_time = 12\ntotal_time = brown_time + black_time + blue_time\ntime_after_brown_leaves = total_time - brown_time\nanswer = time_after_brown_leaves - black_time", "completions": ["brown_time = 6\nblack_time = 8\nblue_time = 12\ntotal_time = brown_time + black_time + blue_time\ntime_after_brown_leaves = total_time - brown_time\nanswer = time_after_brown_leaves - black_time"]}
{"id": 55, "answer": "A", "completion": "train_A_frequency = 16\ntrain_B_frequency = 17\nanswer = lcm(train_A_frequency, train_B_frequency)", "completions": ["train_A_frequency = 16\ntrain_B_frequency = 17\nanswer = lcm(train_A_frequency, train_B_frequency)"]}
{"id": 56, "answer": "B", "completion": "num_faces = 6 * (5 - 2) ** 2\nnum_faces_painted = 6 * (5 - 1) ** 2\nanswer = num_faces - num_faces_painted", "completions": ["num_faces = 6 * (5 - 2) ** 2\nnum_faces_painted = 6 * (5 - 1) ** 2\nanswer = num_faces - num_faces_painted"]}
{"id": 57, "answer": "A", "completion": "total_chocolates = 100\ncocoa_flavored = 10\nvanilla_flavored = total_chocolates - cocoa_flavored\nsquashed = 0.9 * vanilla_flavored\nnot_squashed = vanilla_flavored - squashed\nanswer = not_squashed / total_chocolates", "completions": ["total_chocolates = 100\ncocoa_flavored = 10\nvanilla_flavored = total_chocolates - cocoa_flavored\nsquashed = 0.9 * vanilla_flavored\nnot_squashed = vanilla_flavored - squashed\nanswer = not_squashed / total_chocolates"]}
{"id": 58, "answer": "D", "completion": "depth = 30\njump = 3\nfall = 2\ndays = 0\nwhile depth > 0:\n    depth -= jump\n    days += 1\n    if depth > 0:\n        depth += fall\nanswer = days", "completions": ["depth = 30\njump = 3\nfall = 2\ndays = 0\nwhile depth > 0:\n    depth -= jump\n    days += 1\n    if depth > 0:\n        depth += fall\nanswer = days"]}
{"id": 59, "answer": "A", "completion": "numbers = [Symbol('n1'), Symbol('n2'), Symbol('n3'), Symbol('n4'), Symbol('n5')]\nsolution = solve_it(sum(numbers) % 10 == 0, numbers)\nanswer = [solution[n1], solution[n2], solution[n3], solution[n4], solution[n5]]", "completions": ["numbers = [Symbol('n1'), Symbol('n2'), Symbol('n3'), Symbol('n4'), Symbol('n5')]\nsolution = solve_it(sum(numbers) % 10 == 0, numbers)\nanswer = [solution[n1], solution[n2], solution[n3], solution[n4], solution[n5]]"]}
{"id": 60, "answer": "E", "completion": "total_students = Symbol('total_students', positive=True)\nfootball_students = 0.08 * total_students\ncricket_students = 0.8 * total_students\nbasketball_students = 0.1 * total_students\nsolution = solve_it(football_students + cricket_students + basketball_students + 20 - total_students, total_students)\nanswer = solution[total_students]", "completions": ["total_students = Symbol('total_students', positive=True)\nfootball_students = 0.08 * total_students\ncricket_students = 0.8 * total_students\nbasketball_students = 0.1 * total_students\nsolution = solve_it(football_students + cricket_students + basketball_students + 20 - total_students, total_students)\nanswer = solution[total_students]"]}
{"id": 61, "answer": "D", "completion": "R = Symbol('R', positive=True)\nQ = Symbol('Q', positive=True)\nT = Symbol('T', positive=True)\nsolution = solve_it([Q - R - (R - T), R + T - 50], [R, Q, T])\nanswer = solution[Q] - solution[R]", "completions": ["R = Symbol('R', positive=True)\nQ = Symbol('Q', positive=True)\nT = Symbol('T', positive=True)\nsolution = solve_it([Q - R - (R - T), R + T - 50], [R, Q, T])\nanswer = solution[Q] - solution[R]"]}
{"id": 62, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\ncost = 3.50 + 0.10 * distance\nsolution = solve_it(cost - 8.50, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\ncost = 3.50 + 0.10 * distance\nsolution = solve_it(cost - 8.50, distance)\nanswer = solution[distance]"]}
{"id": 63, "answer": "B", "completion": "batting_average = Symbol('batting_average', positive=True)\nruns_scored = Symbol('runs_scored', positive=True)\nmatches_played = Symbol('matches_played', positive=True)\nsolution = solve_it((runs_scored + 51 * matches_played) / (matches_played + 1) - 54, matches_played)\nanswer = solution[matches_played]", "completions": ["batting_average = Symbol('batting_average', positive=True)\nruns_scored = Symbol('runs_scored', positive=True)\nmatches_played = Symbol('matches_played', positive=True)\nsolution = solve_it((runs_scored + 51 * matches_played) / (matches_played + 1) - 54, matches_played)\nanswer = solution[matches_played]"]}
{"id": 64, "answer": "C", "completion": "answer = 5", "completions": ["answer = 5"]}
{"id": 65, "answer": "C", "completion": "length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])", "completions": ["length = Symbol('length', positive=True)\nbreadth = Symbol('breadth', positive=True)\narea = 150\nsolution = solve_it([length * breadth - area, length - 4 * breadth - 1], [length, breadth])\nanswer = 2 * (solution[length] + solution[breadth])"]}
{"id": 66, "answer": "A", "completion": "grams = Symbol('grams', positive=True)\nvitamin_e_req = 0.09 * grams\nvitamin_a_req = 0.08 * grams\nsolution = solve_it(vitamin_e_req + vitamin_a_req - 1, grams)\nanswer = solution[grams]", "completions": ["grams = Symbol('grams', positive=True)\nvitamin_e_req = 0.09 * grams\nvitamin_a_req = 0.08 * grams\nsolution = solve_it(vitamin_e_req + vitamin_a_req - 1, grams)\nanswer = solution[grams]"]}
{"id": 67, "answer": "B", "completion": "num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hr = 2 * num_helpers\nsmall_cakes_per_hr = 35 * num_helpers\ntotal_time = 3\ntotal_large_cakes = 20\ntotal_small_cakes = 700\nsolution = solve_it([large_cakes_per_hr * total_time - total_large_cakes, small_cakes_per_hr * total_time - total_small_cakes], num_helpers)\nanswer = solution[num_helpers]", "completions": ["num_helpers = Symbol('num_helpers', positive=True)\nlarge_cakes_per_hr = 2 * num_helpers\nsmall_cakes_per_hr = 35 * num_helpers\ntotal_time = 3\ntotal_large_cakes = 20\ntotal_small_cakes = 700\nsolution = solve_it([large_cakes_per_hr * total_time - total_large_cakes, small_cakes_per_hr * total_time - total_small_cakes], num_helpers)\nanswer = solution[num_helpers]"]}
{"id": 68, "answer": "E", "completion": "length_RS = 5\nlength_RT = 17\nlength_ST = 22\nlength_RU = (length_RS + length_RT + length_ST) / 2\nanswer = length_RU", "completions": ["length_RS = 5\nlength_RT = 17\nlength_ST = 22\nlength_RU = (length_RS + length_RT + length_ST) / 2\nanswer = length_RU"]}
{"id": 69, "answer": "B", "completion": "pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nsolution = solve_it([pita_breads / rolls - 2, rolls / baguettes - 3, baguettes / pita_breads - 5], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]", "completions": ["pita_breads = Symbol('pita_breads', positive=True)\nrolls = Symbol('rolls', positive=True)\nbaguettes = Symbol('baguettes', positive=True)\nsolution = solve_it([pita_breads / rolls - 2, rolls / baguettes - 3, baguettes / pita_breads - 5], [pita_breads, rolls, baguettes])\nanswer = solution[pita_breads]"]}
{"id": 70, "answer": "C", "completion": "original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount_percentage = 20\nsolution = solve_it(original_price - discounted_price - (original_price * discount_percentage / 100), original_price)\nanswer = (100 * (solution[original_price] - discounted_price) / discounted_price)", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscounted_price = Symbol('discounted_price', positive=True)\ndiscount_percentage = 20\nsolution = solve_it(original_price - discounted_price - (original_price * discount_percentage / 100), original_price)\nanswer = (100 * (solution[original_price] - discounted_price) / discounted_price)"]}
{"id": 71, "answer": "A", "completion": "bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\ntotal_fare = 1512\nsolution = solve_it([6 * bus_fare - 8 * train_fare - total_fare, 4 * bus_fare / 3 - train_fare], [bus_fare, train_fare])\nanswer = solution[train_fare]", "completions": ["bus_fare = Symbol('bus_fare', positive=True)\ntrain_fare = Symbol('train_fare', positive=True)\ntotal_fare = 1512\nsolution = solve_it([6 * bus_fare - 8 * train_fare - total_fare, 4 * bus_fare / 3 - train_fare], [bus_fare, train_fare])\nanswer = solution[train_fare]"]}
{"id": 72, "answer": "B", "completion": "length = 8\nwidth = 3\nanswer = 2 * (length + width)", "completions": ["length = 8\nwidth = 3\nanswer = 2 * (length + width)"]}
{"id": 73, "answer": "E", "completion": "answer = 6! = 720", "completions": ["answer = 6! = 720"]}
{"id": 74, "answer": "D", "completion": "x = Symbol('x', positive=True)\nlength_of_fence = (13 * x - 12) / 24\nanswer = length_of_fence", "completions": ["x = Symbol('x', positive=True)\nlength_of_fence = (13 * x - 12) / 24\nanswer = length_of_fence"]}
{"id": 75, "answer": "A", "completion": "ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = Symbol('plane_speed', positive=True)\ndistance_traveled_by_ship = 180\ndistance_traveled_by_plane = 10 * ship_speed\nsolution = solve_it(distance_traveled_by_plane - distance_traveled_by_ship, ship_speed)\nanswer = solution[ship_speed] * distance_traveled_by_plane", "completions": ["ship_speed = Symbol('ship_speed', positive=True)\nplane_speed = Symbol('plane_speed', positive=True)\ndistance_traveled_by_ship = 180\ndistance_traveled_by_plane = 10 * ship_speed\nsolution = solve_it(distance_traveled_by_plane - distance_traveled_by_ship, ship_speed)\nanswer = solution[ship_speed] * distance_traveled_by_plane"]}
{"id": 76, "answer": "E", "completion": "total_deer = Symbol('total_deer', positive=True)\ntagged_deer_in_2001 = 300\ntagged_deer_in_2002 = 20\npercent_tagged_in_2002 = tagged_deer_in_2002 / 500\nsolution = solve_it(percent_tagged_in_2002 - tagged_deer_in_2001 / total_deer, total_deer)\nanswer = solution[total_deer]", "completions": ["total_deer = Symbol('total_deer', positive=True)\ntagged_deer_in_2001 = 300\ntagged_deer_in_2002 = 20\npercent_tagged_in_2002 = tagged_deer_in_2002 / 500\nsolution = solve_it(percent_tagged_in_2002 - tagged_deer_in_2001 / total_deer, total_deer)\nanswer = solution[total_deer]"]}
{"id": 77, "answer": "A", "completion": "main_line_frequency = 10\nharbor_line_frequency = 10\ntime_difference = 2\nprobability = 1 - (time_difference / (main_line_frequency + harbor_line_frequency))\nanswer = probability", "completions": ["main_line_frequency = 10\nharbor_line_frequency = 10\ntime_difference = 2\nprobability = 1 - (time_difference / (main_line_frequency + harbor_line_frequency))\nanswer = probability"]}
{"id": 78, "answer": "B", "completion": "weight = Symbol('weight', positive=True)\ntotal_weight = 10 * 12.2 + weight\nnew_average = (total_weight + 2.6) / 11\nsolution = solve_it(new_average - 12.2, weight)\nanswer = solution[weight]", "completions": ["weight = Symbol('weight', positive=True)\ntotal_weight = 10 * 12.2 + weight\nnew_average = (total_weight + 2.6) / 11\nsolution = solve_it(new_average - 12.2, weight)\nanswer = solution[weight]"]}
{"id": 79, "answer": "B", "completion": "population_one_year_ago = Symbol('population_one_year_ago', positive=True)\npopulation_two_years_ago = Symbol('population_two_years_ago', positive=True)\npopulation_one_year_from_now = population_one_year_ago * 1.1\npopulation_two_years_from_now = population_two_years_ago * 1.1 ** 2\nsolution = solve_it(population_two_years_from_now - 2 * population_one_year_ago, population_one_year_ago)\nanswer = (solution[population_one_year_ago] / population_two_years_ago - 1) * 100", "completions": ["population_one_year_ago = Symbol('population_one_year_ago', positive=True)\npopulation_two_years_ago = Symbol('population_two_years_ago', positive=True)\npopulation_one_year_from_now = population_one_year_ago * 1.1\npopulation_two_years_from_now = population_two_years_ago * 1.1 ** 2\nsolution = solve_it(population_two_years_from_now - 2 * population_one_year_ago, population_one_year_ago)\nanswer = (solution[population_one_year_ago] / population_two_years_ago - 1) * 100"]}
{"id": 80, "answer": "A", "completion": "arjun = Symbol('arjun', positive=True)\nsajal = Symbol('sajal', positive=True)\nsolution = solve_it([arjun - (sajal + 30), sajal - (arjun - 10)], [arjun, sajal])\nanswer = (solution[arjun], solution[sajal])", "completions": ["arjun = Symbol('arjun', positive=True)\nsajal = Symbol('sajal', positive=True)\nsolution = solve_it([arjun - (sajal + 30), sajal - (arjun - 10)], [arjun, sajal])\nanswer = (solution[arjun], solution[sajal])"]}
{"id": 81, "answer": "A", "completion": "length = Symbol('length', positive=True)\nwidth = 100\narea = 3000\nsolution = solve_it(length * width - area, length)\nanswer = solution[length]", "completions": ["length = Symbol('length', positive=True)\nwidth = 100\narea = 3000\nsolution = solve_it(length * width - area, length)\nanswer = solution[length]"]}
{"id": 82, "answer": "B", "completion": "x = Symbol('x', positive=True)\ngcf = 11\nlcm = 7700\na = 350\nsolution = solve_it([gcf * x - lcm, a * x - lcm], [x])\nanswer = solution[x]", "completions": ["x = Symbol('x', positive=True)\ngcf = 11\nlcm = 7700\na = 350\nsolution = solve_it([gcf * x - lcm, a * x - lcm], [x])\nanswer = solution[x]"]}
{"id": 83, "answer": "B", "completion": "side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 4 * area, side)\nside_length = solution[side]\nperimeter = 4 * side_length\nanswer = perimeter", "completions": ["side = Symbol('side', positive=True)\narea = 70\nsolution = solve_it(side ** 2 - 4 * area, side)\nside_length = solution[side]\nperimeter = 4 * side_length\nanswer = perimeter"]}
{"id": 84, "answer": "A", "completion": "original_length = 30\nratio = 5 / 3\nanswer = original_length * ratio", "completions": ["original_length = 30\nratio = 5 / 3\nanswer = original_length * ratio"]}
{"id": 85, "answer": "E", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nM = a * 100 + b * 10 + c\nN = c * 100 + b * 10 + a\nsolution = solve_it(M - N + 396 * c - 990, [a, b, c])\nanswer = 0\nfor solution in solutions:\n    if M > 300:\n        answer += 1", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nc = Symbol('c', positive=True)\nM = a * 100 + b * 10 + c\nN = c * 100 + b * 10 + a\nsolution = solve_it(M - N + 396 * c - 990, [a, b, c])\nanswer = 0\nfor solution in solutions:\n    if M > 300:\n        answer += 1"]}
{"id": 86, "answer": "B", "completion": "total_students = Symbol('total_students', positive=True)\nnum_physics_students = 0.2 * total_students\nnum_math_students = 0.28 * total_students\nsolution = solve_it(num_physics_students + num_math_students - 501, total_students)\nanswer = solution[total_students]", "completions": ["total_students = Symbol('total_students', positive=True)\nnum_physics_students = 0.2 * total_students\nnum_math_students = 0.28 * total_students\nsolution = solve_it(num_physics_students + num_math_students - 501, total_students)\nanswer = solution[total_students]"]}
{"id": 87, "answer": "B", "completion": "Raj_age_5_years_ago = Symbol('Raj_age_5_years_ago', positive=True)\nRahim_age_5_years_ago = Symbol('Rahim_age_5_years_ago', positive=True)\nRaj_age_now = 17\nsolution = solve_it([Raj_age_5_years_ago - Rahim_age_5_years_ago / 3, Raj_age_now - Raj_age_5_years_ago + 5], [Raj_age_5_years_ago, Rahim_age_5_years_ago])\nanswer = solution[Rahim_age_5_years_ago] + 5", "completions": ["Raj_age_5_years_ago = Symbol('Raj_age_5_years_ago', positive=True)\nRahim_age_5_years_ago = Symbol('Rahim_age_5_years_ago', positive=True)\nRaj_age_now = 17\nsolution = solve_it([Raj_age_5_years_ago - Rahim_age_5_years_ago / 3, Raj_age_now - Raj_age_5_years_ago + 5], [Raj_age_5_years_ago, Rahim_age_5_years_ago])\nanswer = solution[Rahim_age_5_years_ago] + 5"]}
{"id": 88, "answer": "A", "completion": "length_of_rope = 14\narea_of_field = length_of_rope ** 2\narea_grazed_per_day = 10\ntime_taken = area_of_field / area_grazed_per_day\nanswer = time_taken / 7", "completions": ["length_of_rope = 14\narea_of_field = length_of_rope ** 2\narea_grazed_per_day = 10\ntime_taken = area_of_field / area_grazed_per_day\nanswer = time_taken / 7"]}
{"id": 89, "answer": "B", "completion": "cost_price = Symbol('cost_price', positive=True)\nselling_price = Symbol('selling_price', positive=True)\nprofit = 10\nsolution = solve_it(cost_price + cost_price * profit / 100 - 27.50, cost_price)\ncost_price = solution[cost_price]\nprofit_or_loss = (25.75 - cost_price) / cost_price * 100\nanswer = profit_or_loss", "completions": ["cost_price = Symbol('cost_price', positive=True)\nselling_price = Symbol('selling_price', positive=True)\nprofit = 10\nsolution = solve_it(cost_price + cost_price * profit / 100 - 27.50, cost_price)\ncost_price = solution[cost_price]\nprofit_or_loss = (25.75 - cost_price) / cost_price * 100\nanswer = profit_or_loss"]}
{"id": 90, "answer": "C", "completion": "answer = 2", "completions": ["answer = 2"]}
{"id": 91, "answer": "A", "completion": "fixed_cost = Symbol('fixed_cost', positive=True)\nvariable_cost = Symbol('variable_cost', positive=True)\nnum_calls_1 = 540\nnum_calls_2 = 620\nnum_calls_3 = 500\nbill_1 = fixed_cost + num_calls_1 * variable_cost\nbill_2 = fixed_cost + num_calls_2 * variable_cost\nbill_3 = fixed_cost + num_calls_3 * variable_cost\nsolution = solve_it([bill_1 - 1800, bill_2 - 2040, bill_3 - x], [fixed_cost, variable_cost, x])\nanswer = solution[x]", "completions": ["fixed_cost = Symbol('fixed_cost', positive=True)\nvariable_cost = Symbol('variable_cost', positive=True)\nnum_calls_1 = 540\nnum_calls_2 = 620\nnum_calls_3 = 500\nbill_1 = fixed_cost + num_calls_1 * variable_cost\nbill_2 = fixed_cost + num_calls_2 * variable_cost\nbill_3 = fixed_cost + num_calls_3 * variable_cost\nsolution = solve_it([bill_1 - 1800, bill_2 - 2040, bill_3 - x], [fixed_cost, variable_cost, x])\nanswer = solution[x]"]}
{"id": 92, "answer": "A", "completion": "time_A = 26 / 60\ntime_B = 35 / 60\nratio = time_A / time_B\nanswer = ratio * time_B * 60", "completions": ["time_A = 26 / 60\ntime_B = 35 / 60\nratio = time_A / time_B\nanswer = ratio * time_B * 60"]}
{"id": 93, "answer": "D", "completion": "hardcover_books = 30\nfiction_books = 20\nanswer = min(hardcover_books, fiction_books)", "completions": ["hardcover_books = 30\nfiction_books = 20\nanswer = min(hardcover_books, fiction_books)"]}
{"id": 94, "answer": "B", "completion": "sunday_papers = Symbol('sunday_papers', positive=True)\nmonday_papers = Symbol('monday_papers', positive=True)\ntotal_cost = 210\ncost_sunday_papers = 4 * sunday_papers\ncost_monday_papers = 1 * monday_papers\nsolution = solve_it([cost_sunday_papers + cost_monday_papers - total_cost, sunday_papers - 2 * monday_papers], [sunday_papers, monday_papers])\nanswer = solution[monday_papers]", "completions": ["sunday_papers = Symbol('sunday_papers', positive=True)\nmonday_papers = Symbol('monday_papers', positive=True)\ntotal_cost = 210\ncost_sunday_papers = 4 * sunday_papers\ncost_monday_papers = 1 * monday_papers\nsolution = solve_it([cost_sunday_papers + cost_monday_papers - total_cost, sunday_papers - 2 * monday_papers], [sunday_papers, monday_papers])\nanswer = solution[monday_papers]"]}
{"id": 95, "answer": "A", "completion": "num_friends = Symbol('num_friends', positive=True)\ntotal_cost = 96\nextra_cost = 4\nsolution = solve_it(num_friends * (total_cost / num_friends + extra_cost) - total_cost, num_friends)\nanswer = solution[num_friends]", "completions": ["num_friends = Symbol('num_friends', positive=True)\ntotal_cost = 96\nextra_cost = 4\nsolution = solve_it(num_friends * (total_cost / num_friends + extra_cost) - total_cost, num_friends)\nanswer = solution[num_friends]"]}
{"id": 96, "answer": "C", "completion": "length = 27\nbreadth = 17\nside = Symbol('side', positive=True)\nsolution = solve_it(length * breadth - side ** 2, side)\nanswer = solution[side]", "completions": ["length = 27\nbreadth = 17\nside = Symbol('side', positive=True)\nsolution = solve_it(length * breadth - side ** 2, side)\nanswer = solution[side]"]}
{"id": 97, "answer": "C", "completion": "sons = Symbol('sons', positive=True)\ndaughters = Symbol('daughters', positive=True)\nnephews = Symbol('nephews', positive=True)\ntotal_amount = 8600\nsolution = solve_it([sons + daughters + nephews - 5, sons - 5 * nephews, daughters - 4 * nephews, sons + daughters + nephews - total_amount], [sons, daughters, nephews])\nanswer = solution[daughters]", "completions": ["sons = Symbol('sons', positive=True)\ndaughters = Symbol('daughters', positive=True)\nnephews = Symbol('nephews', positive=True)\ntotal_amount = 8600\nsolution = solve_it([sons + daughters + nephews - 5, sons - 5 * nephews, daughters - 4 * nephews, sons + daughters + nephews - total_amount], [sons, daughters, nephews])\nanswer = solution[daughters]"]}
{"id": 98, "answer": "B", "completion": "weight = Symbol('weight', positive=True)\nsolution = solve_it(weight + 0.5 * weight - 29, weight)\nanswer = solution[weight]", "completions": ["weight = Symbol('weight', positive=True)\nsolution = solve_it(weight + 0.5 * weight - 29, weight)\nanswer = solution[weight]"]}
{"id": 99, "answer": "B", "completion": "time = Symbol('time', positive=True)\ntablets = 5\ninterval = 15\nsolution = solve_it(time - tablets * interval, time)\nanswer = solution[time]", "completions": ["time = Symbol('time', positive=True)\ntablets = 5\ninterval = 15\nsolution = solve_it(time - tablets * interval, time)\nanswer = solution[time]"]}
{"id": 100, "answer": "D", "completion": "red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = 120\nsolution = solve_it(3 * red_sweets - 4 * green_sweets, red_sweets)\nanswer = solution[red_sweets]", "completions": ["red_sweets = Symbol('red_sweets', positive=True)\ngreen_sweets = 120\nsolution = solve_it(3 * red_sweets - 4 * green_sweets, red_sweets)\nanswer = solution[red_sweets]"]}
{"id": 101, "answer": "B", "completion": "num_members = Symbol('num_members', positive=True)\ncommon_difference = 3\nyoungest_member_age = 7\nsum_of_ages = 250\nsolution = solve_it(num_members * (2 * youngest_member_age + (num_members - 1) * common_difference) - 2 * sum_of_ages, num_members)\nanswer = solution[num_members]", "completions": ["num_members = Symbol('num_members', positive=True)\ncommon_difference = 3\nyoungest_member_age = 7\nsum_of_ages = 250\nsolution = solve_it(num_members * (2 * youngest_member_age + (num_members - 1) * common_difference) - 2 * sum_of_ages, num_members)\nanswer = solution[num_members]"]}
{"id": 102, "answer": "D", "completion": "M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)", "completions": ["M = Symbol('M')\nD = Symbol('D')\ncost_before_dropout = D / M\ncost_after_dropout = D / (M - 3)\nanswer = simplify(cost_after_dropout - cost_before_dropout)"]}
{"id": 103, "answer": "E", "completion": "cost_price = 1200\ndiscount = 0.2\nprofit = 0.2\nselling_price = Symbol('selling_price', positive=True)\nsolution = solve_it(selling_price - cost_price * (1 - discount) - cost_price * profit, selling_price)\nanswer = solution[selling_price]", "completions": ["cost_price = 1200\ndiscount = 0.2\nprofit = 0.2\nselling_price = Symbol('selling_price', positive=True)\nsolution = solve_it(selling_price - cost_price * (1 - discount) - cost_price * profit, selling_price)\nanswer = solution[selling_price]"]}
{"id": 104, "answer": "C", "completion": "distance = Symbol('distance', positive=True)\nspeed_of_train_A = 40\nspeed_of_train_B = 72\ntime_taken_by_train_A = distance / speed_of_train_A\ntime_taken_by_train_B = distance / speed_of_train_B\nsolution = solve_it(time_taken_by_train_A - time_taken_by_train_B - 11, distance)\nanswer = solution[distance] / speed_of_train_B + 2", "completions": ["distance = Symbol('distance', positive=True)\nspeed_of_train_A = 40\nspeed_of_train_B = 72\ntime_taken_by_train_A = distance / speed_of_train_A\ntime_taken_by_train_B = distance / speed_of_train_B\nsolution = solve_it(time_taken_by_train_A - time_taken_by_train_B - 11, distance)\nanswer = solution[distance] / speed_of_train_B + 2"]}
{"id": 105, "answer": "B", "completion": "john_money = Symbol('john_money', positive=True)\nmark_money = Symbol('mark_money', positive=True)\nsolution = solve_it([john_money - mark_money / 2 - 75, john_money - mark_money / 3 - 75], [john_money, mark_money])\nanswer = solution[john_money]", "completions": ["john_money = Symbol('john_money', positive=True)\nmark_money = Symbol('mark_money', positive=True)\nsolution = solve_it([john_money - mark_money / 2 - 75, john_money - mark_money / 3 - 75], [john_money, mark_money])\nanswer = solution[john_money]"]}
{"id": 106, "answer": "B", "completion": "days = Symbol('days', positive=True)\nlilies = 64 * (2 ** (days / 2))\nsolution = solve_it(lilies - (2 ** (60 / 2)), days)\nanswer = solution[days]", "completions": ["days = Symbol('days', positive=True)\nlilies = 64 * (2 ** (days / 2))\nsolution = solve_it(lilies - (2 ** (60 / 2)), days)\nanswer = solution[days]"]}
{"id": 107, "answer": "D", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done = x * x * x / (x * y * y)\nanswer = work_done.subs({x: y})", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nwork_done = x * x * x / (x * y * y)\nanswer = work_done.subs({x: y})"]}
{"id": 108, "answer": "A", "completion": "answer = 12", "completions": ["answer = 12"]}
{"id": 109, "answer": "E", "completion": "angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AC + angle_BD - angle_AB\nanswer = angle_AD", "completions": ["angle_AC = 160\nangle_BD = 150\nangle_AB = angle_AC / 2\nangle_AD = angle_AC + angle_BD - angle_AB\nanswer = angle_AD"]}
{"id": 110, "answer": "A", "completion": "total_employees = 100\nemployees_taking_winter_vacation = 0.75 * total_employees\nemployees_taking_both_vacations = 0.4 * total_employees\nemployees_taking_neither_vacation = 0.2 * total_employees\nemployees_taking_summer_vacation = total_employees - employees_taking_winter_vacation - employees_taking_both_vacations - employees_taking_neither_vacation\nanswer = employees_taking_summer_vacation / total_employees", "completions": ["total_employees = 100\nemployees_taking_winter_vacation = 0.75 * total_employees\nemployees_taking_both_vacations = 0.4 * total_employees\nemployees_taking_neither_vacation = 0.2 * total_employees\nemployees_taking_summer_vacation = total_employees - employees_taking_winter_vacation - employees_taking_both_vacations - employees_taking_neither_vacation\nanswer = employees_taking_summer_vacation / total_employees"]}
{"id": 111, "answer": "A", "completion": "width_top = 10\nwidth_bottom = 6\narea = 640\ndepth = Symbol('depth', positive=True)\nsolution = solve_it(width_top + width_bottom - 2 * depth, depth)\nanswer = solution[depth]", "completions": ["width_top = 10\nwidth_bottom = 6\narea = 640\ndepth = Symbol('depth', positive=True)\nsolution = solve_it(width_top + width_bottom - 2 * depth, depth)\nanswer = solution[depth]"]}
{"id": 112, "answer": "B", "completion": "num_matches = 20\npercent_lost = 0.3\nnum_lost = num_matches * percent_lost\nanswer = num_lost", "completions": ["num_matches = 20\npercent_lost = 0.3\nnum_lost = num_matches * percent_lost\nanswer = num_lost"]}
{"id": 113, "answer": "D", "completion": "radius = 10\nrevolutions_per_minute = 300\nrevolutions_per_second = revolutions_per_minute / 60\ndistance_traveled = revolutions_per_second * 2 * pi * radius\nanswer = distance_traveled * 30", "completions": ["radius = 10\nrevolutions_per_minute = 300\nrevolutions_per_second = revolutions_per_minute / 60\ndistance_traveled = revolutions_per_second * 2 * pi * radius\nanswer = distance_traveled * 30"]}
{"id": 114, "answer": "E", "completion": "n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(36 - n, n)\nmin_n = solution[n]\nsolution = solve_it(n - 72, n)\nmax_n = solution[n]\nmin_x = x.subs(n, min_n)\nmax_x = x.subs(n, max_n)\nanswer = f'{min_x} < x < {max_x}'", "completions": ["n = Symbol('n', positive=True)\nx = (n ** 2 + 2 * sqrt(n) * (n + 4) + 16) / (n + 4 * sqrt(n) + 4)\nsolution = solve_it(36 - n, n)\nmin_n = solution[n]\nsolution = solve_it(n - 72, n)\nmax_n = solution[n]\nmin_x = x.subs(n, min_n)\nmax_x = x.subs(n, max_n)\nanswer = f'{min_x} < x < {max_x}'"]}
{"id": 115, "answer": "B", "completion": "speed = Symbol('speed', positive=True)\nheight = 700\ntime = 40 + 5\nlength = speed * time\nsolution = solve_it(length - height, speed)\nanswer = solution[speed] * time", "completions": ["speed = Symbol('speed', positive=True)\nheight = 700\ntime = 40 + 5\nlength = speed * time\nsolution = solve_it(length - height, speed)\nanswer = solution[speed] * time"]}
{"id": 116, "answer": "B", "completion": "A = 40000\nB = 60000\nC = 120000\ntotal_profit = 375000\nC_share = 150000\nmonths = Symbol('months', positive=True)\nsolution = solve_it(A + B + C * (1 + months / 12) - total_profit - C_share, months)\nanswer = solution[months]", "completions": ["A = 40000\nB = 60000\nC = 120000\ntotal_profit = 375000\nC_share = 150000\nmonths = Symbol('months', positive=True)\nsolution = solve_it(A + B + C * (1 + months / 12) - total_profit - C_share, months)\nanswer = solution[months]"]}
{"id": 117, "answer": "B", "completion": "radius = Symbol('radius', positive=True)\nside = 20\narea_of_square = side ** 2\narea_of_semi_circles = 2 * pi * radius ** 2\nsolution = solve_it(area_of_square - area_of_semi_circles - 8.75, radius)\nanswer = solution[radius]", "completions": ["radius = Symbol('radius', positive=True)\nside = 20\narea_of_square = side ** 2\narea_of_semi_circles = 2 * pi * radius ** 2\nsolution = solve_it(area_of_square - area_of_semi_circles - 8.75, radius)\nanswer = solution[radius]"]}
{"id": 118, "answer": "C", "completion": "M = Symbol('M')\nN = Symbol('N')\ntotal_distance = M + N\ntotal_time = 4\nanswer = total_distance / total_time", "completions": ["M = Symbol('M')\nN = Symbol('N')\ntotal_distance = M + N\ntotal_time = 4\nanswer = total_distance / total_time"]}
{"id": 119, "answer": "B", "completion": "num_men = Symbol('num_men', positive=True)\nnum_days = 6\nnum_hours = 1/2\nnum_men_required = num_men * num_days / num_hours\nsolution = solve_it(num_men_required - 8, num_men)\nanswer = solution[num_men]", "completions": ["num_men = Symbol('num_men', positive=True)\nnum_days = 6\nnum_hours = 1/2\nnum_men_required = num_men * num_days / num_hours\nsolution = solve_it(num_men_required - 8, num_men)\nanswer = solution[num_men]"]}
{"id": 120, "answer": "B", "completion": "num_boys = 64\nnum_girls = 40\nratio = 4 / 3\nnum_new_members = num_boys + num_girls\nnum_boys_after_membership_drive = num_boys + num_new_members * (ratio / (ratio + 1))\nnum_girls_after_membership_drive = num_girls + num_new_members * (1 / (ratio + 1))\nanswer = num_boys_after_membership_drive + num_girls_after_membership_drive", "completions": ["num_boys = 64\nnum_girls = 40\nratio = 4 / 3\nnum_new_members = num_boys + num_girls\nnum_boys_after_membership_drive = num_boys + num_new_members * (ratio / (ratio + 1))\nnum_girls_after_membership_drive = num_girls + num_new_members * (1 / (ratio + 1))\nanswer = num_boys_after_membership_drive + num_girls_after_membership_drive"]}
{"id": 121, "answer": "E", "completion": "speed = 12\ndistance = 48\ntime = distance / speed\nanswer = time * 60", "completions": ["speed = 12\ndistance = 48\ntime = distance / speed\nanswer = time * 60"]}
{"id": 122, "answer": "E", "completion": "distance = Symbol('distance', positive=True)\nspeed_1 = 70\nspeed_2 = 90\ntime_1 = 3\ntime_2 = distance / speed_1\ntotal_time = time_1 + time_2\ntotal_distance = total_time * speed_2\nsolution = solve_it(total_distance - distance - 70, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nspeed_1 = 70\nspeed_2 = 90\ntime_1 = 3\ntime_2 = distance / speed_1\ntotal_time = time_1 + time_2\ntotal_distance = total_time * speed_2\nsolution = solve_it(total_distance - distance - 70, distance)\nanswer = solution[distance]"]}
{"id": 123, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 30 - number / 3, number)\nanswer = 0.5 * solution[number]", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 30 - number / 3, number)\nanswer = 0.5 * solution[number]"]}
{"id": 124, "answer": "B", "completion": "man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nstill_water_speed = 4\nagainst_current_speed = 2\nsolution = solve_it(man_speed + current_speed - still_water_speed, man_speed - current_speed - against_current_speed)\nanswer = solution[man_speed] + solution[current_speed]", "completions": ["man_speed = Symbol('man_speed', positive=True)\ncurrent_speed = Symbol('current_speed', positive=True)\nstill_water_speed = 4\nagainst_current_speed = 2\nsolution = solve_it(man_speed + current_speed - still_water_speed, man_speed - current_speed - against_current_speed)\nanswer = solution[man_speed] + solution[current_speed]"]}
{"id": 125, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nz = Symbol('z', positive=True)\nsum_of_digits = x + y + z\nsum_of_squares = x ** 2 + y ** 2 + z ** 2\nreverse_number = z * 100 + y * 10 + x\nsolution = solve_it([sum_of_digits - 17, sum_of_squares - 109, reverse_number - 495], [x, y, z])\nanswer = solution[x] * 100 + solution[y] * 10 + solution[z]", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nz = Symbol('z', positive=True)\nsum_of_digits = x + y + z\nsum_of_squares = x ** 2 + y ** 2 + z ** 2\nreverse_number = z * 100 + y * 10 + x\nsolution = solve_it([sum_of_digits - 17, sum_of_squares - 109, reverse_number - 495], [x, y, z])\nanswer = solution[x] * 100 + solution[y] * 10 + solution[z]"]}
{"id": 126, "answer": "B", "completion": "x_zinc = 6\nx_copper = 9\ny_zinc = 7\ny_copper = 11\ntotal_zinc = x_zinc * 40 + y_zinc * 60\ntotal_copper = x_copper * 40 + y_copper * 60\nanswer = (total_zinc, total_copper)", "completions": ["x_zinc = 6\nx_copper = 9\ny_zinc = 7\ny_copper = 11\ntotal_zinc = x_zinc * 40 + y_zinc * 60\ntotal_copper = x_copper * 40 + y_copper * 60\nanswer = (total_zinc, total_copper)"]}
{"id": 127, "answer": "D", "completion": "hoopsmot_contribution = 16000\nsmolapon_contribution = 4000\ntotal_contribution = hoopsmot_contribution + smolapon_contribution\ntotal_senators = 30\nhoopsmot_senators = hoopsmot_contribution / total_contribution * total_senators\nanswer = hoopsmot_senators", "completions": ["hoopsmot_contribution = 16000\nsmolapon_contribution = 4000\ntotal_contribution = hoopsmot_contribution + smolapon_contribution\ntotal_senators = 30\nhoopsmot_senators = hoopsmot_contribution / total_contribution * total_senators\nanswer = hoopsmot_senators"]}
{"id": 128, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x**2 - y**2 - 256000, x + y - 1000], [x, y])\nanswer = (solution[x], solution[y])", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([x**2 - y**2 - 256000, x + y - 1000], [x, y])\nanswer = (solution[x], solution[y])"]}
{"id": 129, "answer": "D", "completion": "earth_weight = 211\nvenus_weight = 182\nanswer = venus_weight / earth_weight * 100", "completions": ["earth_weight = 211\nvenus_weight = 182\nanswer = venus_weight / earth_weight * 100"]}
{"id": 130, "answer": "A", "completion": "distance_at_5_kmph = 5 * 6\ndistance_at_4_kmph = 4 * 12\ntotal_distance = distance_at_5_kmph + distance_at_4_kmph\ntotal_time = 6 + 12\nanswer = total_distance / total_time", "completions": ["distance_at_5_kmph = 5 * 6\ndistance_at_4_kmph = 4 * 12\ntotal_distance = distance_at_5_kmph + distance_at_4_kmph\ntotal_time = 6 + 12\nanswer = total_distance / total_time"]}
{"id": 131, "answer": "C", "completion": "answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)", "completions": ["answer = (272 - 32) * (124 + 176) / (17 * 15 - 15)"]}
{"id": 132, "answer": "B", "completion": "total_income = 9000\nmedian_income = 3000\nnum_members = Symbol('num_members', positive=True)\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]", "completions": ["total_income = 9000\nmedian_income = 3000\nnum_members = Symbol('num_members', positive=True)\nsolution = solve_it(num_members * median_income - total_income, num_members)\nanswer = solution[num_members]"]}
{"id": 133, "answer": "E", "completion": "adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = (4 * adult_fare) + (3 * child_fare)\nanswer = total_fare", "completions": ["adult_fare = 140\nchild_fare = adult_fare / 2\ntotal_fare = (4 * adult_fare) + (3 * child_fare)\nanswer = total_fare"]}
{"id": 134, "answer": "A", "completion": "total_contribution = 6240000\nextra_contribution = 60000\nnum_employees = Symbol('num_employees', positive=True)\nsolution = solve_it(total_contribution - extra_contribution * num_employees - 6000000, num_employees)\nanswer = solution[num_employees]", "completions": ["total_contribution = 6240000\nextra_contribution = 60000\nnum_employees = Symbol('num_employees', positive=True)\nsolution = solve_it(total_contribution - extra_contribution * num_employees - 6000000, num_employees)\nanswer = solution[num_employees]"]}
{"id": 135, "answer": "A", "completion": "eligible_voters = 0.8 * 5000\nvotes_for_winning_candidate = 0.15 * eligible_voters\nanswer = votes_for_winning_candidate", "completions": ["eligible_voters = 0.8 * 5000\nvotes_for_winning_candidate = 0.15 * eligible_voters\nanswer = votes_for_winning_candidate"]}
{"id": 136, "answer": "E", "completion": "num_copper_coins = Symbol('num_copper_coins', positive=True)\nnum_brass_coins = Symbol('num_brass_coins', positive=True)\ntotal_amount = 3.4\nsolution = solve_it(20 * num_copper_coins + 25 * num_brass_coins - total_amount, num_copper_coins)\nanswer = solution[num_copper_coins]", "completions": ["num_copper_coins = Symbol('num_copper_coins', positive=True)\nnum_brass_coins = Symbol('num_brass_coins', positive=True)\ntotal_amount = 3.4\nsolution = solve_it(20 * num_copper_coins + 25 * num_brass_coins - total_amount, num_copper_coins)\nanswer = solution[num_copper_coins]"]}
{"id": 137, "answer": "E", "completion": "distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime = 10\nsolution = solve_it(distance / ram_speed + distance / krishna_speed - time, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nram_speed = 20\nkrishna_speed = 40\ntime = 10\nsolution = solve_it(distance / ram_speed + distance / krishna_speed - time, distance)\nanswer = solution[distance]"]}
{"id": 138, "answer": "C", "completion": "speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_y] - solution[speed_x]", "completions": ["speed_x = Symbol('speed_x', positive=True)\nspeed_y = Symbol('speed_y', positive=True)\ndistance_x = 320\ndistance_y = 415\ntime_x = 8\ntime_y = 5\nsolution = solve_it([speed_x * time_x - distance_x, speed_y * time_y - distance_y], [speed_x, speed_y])\nanswer = solution[speed_y] - solution[speed_x]"]}
{"id": 139, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nrunning_speed = 10\nwalking_speed = 5\ntime = 1\nsolution = solve_it(distance / running_speed + distance / walking_speed - time, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nrunning_speed = 10\nwalking_speed = 5\ntime = 1\nsolution = solve_it(distance / running_speed + distance / walking_speed - time, distance)\nanswer = solution[distance]"]}
{"id": 140, "answer": "B", "completion": "num_yellow_balls = Symbol('num_yellow_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\ntotal_balls = 600\npercent_sold = 0.8\nsolution = solve_it([num_yellow_balls + num_white_balls - total_balls, num_white_balls - percent_sold * total_balls], [num_yellow_balls, num_white_balls])\nanswer = solution[num_yellow_balls]", "completions": ["num_yellow_balls = Symbol('num_yellow_balls', positive=True)\nnum_white_balls = Symbol('num_white_balls', positive=True)\ntotal_balls = 600\npercent_sold = 0.8\nsolution = solve_it([num_yellow_balls + num_white_balls - total_balls, num_white_balls - percent_sold * total_balls], [num_yellow_balls, num_white_balls])\nanswer = solution[num_yellow_balls]"]}
{"id": 141, "answer": "B", "completion": "height = Symbol('height', positive=True)\nlength_of_shadow = Symbol('length_of_shadow', positive=True)\ngiven_height = 17.5\ngiven_length_of_shadow = 40.25\nsolution = solve_it([height * given_length_of_shadow - given_height * length_of_shadow, length_of_shadow - 28.75], [height, length_of_shadow])\nanswer = solution[height]", "completions": ["height = Symbol('height', positive=True)\nlength_of_shadow = Symbol('length_of_shadow', positive=True)\ngiven_height = 17.5\ngiven_length_of_shadow = 40.25\nsolution = solve_it([height * given_length_of_shadow - given_height * length_of_shadow, length_of_shadow - 28.75], [height, length_of_shadow])\nanswer = solution[height]"]}
{"id": 142, "answer": "B", "completion": "distance = 15\nspeed_difference = 55 - 52\ntime = distance / speed_difference\nanswer = time", "completions": ["distance = 15\nspeed_difference = 55 - 52\ntime = distance / speed_difference\nanswer = time"]}
{"id": 143, "answer": "B", "completion": "A = Symbol('A', positive=True)\nB = Symbol('B', positive=True)\nsolution = solve_it([A + B - 0.96, A - 0.6], [A, B])\nanswer = solution[B]", "completions": ["A = Symbol('A', positive=True)\nB = Symbol('B', positive=True)\nsolution = solve_it([A + B - 0.96, A - 0.6], [A, B])\nanswer = solution[B]"]}
{"id": 144, "answer": "B", "completion": "cube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\ncube_volume = cube_side ** 3\nsphere_volume = 4 / 3 * pi * sphere_radius ** 3\nsolution = solve_it(cube_volume / sphere_volume - 8 / 3, [cube_side, sphere_radius])\nanswer = cube_volume / sphere_volume", "completions": ["cube_side = Symbol('cube_side', positive=True)\nsphere_radius = Symbol('sphere_radius', positive=True)\ncube_volume = cube_side ** 3\nsphere_volume = 4 / 3 * pi * sphere_radius ** 3\nsolution = solve_it(cube_volume / sphere_volume - 8 / 3, [cube_side, sphere_radius])\nanswer = cube_volume / sphere_volume"]}
{"id": 145, "answer": "A", "completion": "answer = 2", "completions": ["answer = 2"]}
{"id": 146, "answer": "E", "completion": "answer = 25/12 * 5", "completions": ["answer = 25/12 * 5"]}
{"id": 147, "answer": "A", "completion": "answer = log(4, 2)", "completions": ["answer = log(4, 2)"]}
{"id": 148, "answer": "A", "completion": "cost_price = 450\nselling_price = 90 * 7.50\ngain = selling_price - cost_price\npercentage_gain = gain / cost_price * 100\nanswer = percentage_gain", "completions": ["cost_price = 450\nselling_price = 90 * 7.50\ngain = selling_price - cost_price\npercentage_gain = gain / cost_price * 100\nanswer = percentage_gain"]}
{"id": 149, "answer": "B", "completion": "train_M_speed = Symbol('train_M_speed', positive=True)\ntrain_N_speed = Symbol('train_N_speed', positive=True)\ndistance_between_cities = Symbol('distance_between_cities', positive=True)\ntime_taken_by_M = 4\ntime_taken_by_N = 3.5\nsolution = solve_it([train_M_speed * time_taken_by_M - distance_between_cities, train_N_speed * time_taken_by_N - distance_between_cities], [train_M_speed, train_N_speed, distance_between_cities])\ndistance_between_cities = solution[distance_between_cities]\ntime_taken_by_M = distance_between_cities / train_M_speed\ntime_taken_by_N = distance_between_cities / train_N_speed\ntime_of_crossing = time_taken_by_M + time_taken_by_N\nanswer = time_of_crossing", "completions": ["train_M_speed = Symbol('train_M_speed', positive=True)\ntrain_N_speed = Symbol('train_N_speed', positive=True)\ndistance_between_cities = Symbol('distance_between_cities', positive=True)\ntime_taken_by_M = 4\ntime_taken_by_N = 3.5\nsolution = solve_it([train_M_speed * time_taken_by_M - distance_between_cities, train_N_speed * time_taken_by_N - distance_between_cities], [train_M_speed, train_N_speed, distance_between_cities])\ndistance_between_cities = solution[distance_between_cities]\ntime_taken_by_M = distance_between_cities / train_M_speed\ntime_taken_by_N = distance_between_cities / train_N_speed\ntime_of_crossing = time_taken_by_M + time_taken_by_N\nanswer = time_of_crossing"]}
{"id": 150, "answer": "B", "completion": "janice_speed = 10\njennie_speed = 20\ntotal_speed = janice_speed + jennie_speed\ntime = 1 / total_speed\nanswer = time * 60", "completions": ["janice_speed = 10\njennie_speed = 20\ntotal_speed = janice_speed + jennie_speed\ntime = 1 / total_speed\nanswer = time * 60"]}
{"id": 151, "answer": "E", "completion": "M = Symbol('M', positive=True)\noriginal_marks = 504\nconverted_marks = 420\nsolution = solve_it(original_marks / M - converted_marks / 800, M)\nanswer = solution[M]", "completions": ["M = Symbol('M', positive=True)\noriginal_marks = 504\nconverted_marks = 420\nsolution = solve_it(original_marks / M - converted_marks / 800, M)\nanswer = solution[M]"]}
{"id": 152, "answer": "E", "completion": "num_people = Symbol('num_people', positive=True)\nnum_bottles = Symbol('num_bottles', positive=True)\nsolution = solve_it(num_bottles / 8 - num_bottles / num_people, num_bottles)\nanswer = solution[num_bottles]", "completions": ["num_people = Symbol('num_people', positive=True)\nnum_bottles = Symbol('num_bottles', positive=True)\nsolution = solve_it(num_bottles / 8 - num_bottles / num_people, num_bottles)\nanswer = solution[num_bottles]"]}
{"id": 153, "answer": "D", "completion": "ant1_height = 4\nant2_height = 6\nant1_shadow = 10\nant2_shadow = Symbol('ant2_shadow', positive=True)\nsolution = solve_it(ant2_height / ant1_height * ant1_shadow - ant2_shadow, ant2_shadow)\nanswer = solution[ant2_shadow]", "completions": ["ant1_height = 4\nant2_height = 6\nant1_shadow = 10\nant2_shadow = Symbol('ant2_shadow', positive=True)\nsolution = solve_it(ant2_height / ant1_height * ant1_shadow - ant2_shadow, ant2_shadow)\nanswer = solution[ant2_shadow]"]}
{"id": 154, "answer": "A", "completion": "width = 50 / 100\nheight = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nsolution = solve_it(2 * height - 5 * semi_perimeter, [height, semi_perimeter])\nheight = solution[height]\nsemi_perimeter = solution[semi_perimeter]\narea = semi_perimeter * width - 15\nanswer = height", "completions": ["width = 50 / 100\nheight = Symbol('height', positive=True)\nsemi_perimeter = Symbol('semi_perimeter', positive=True)\nsolution = solve_it(2 * height - 5 * semi_perimeter, [height, semi_perimeter])\nheight = solution[height]\nsemi_perimeter = solution[semi_perimeter]\narea = semi_perimeter * width - 15\nanswer = height"]}
{"id": 155, "answer": "B", "completion": "k = Symbol('k', positive=True)\nleast_integer = -50\nsolution = solve_it(k * (k + 1) / 2 - 51 + least_integer, k)\nanswer = solution[k]", "completions": ["k = Symbol('k', positive=True)\nleast_integer = -50\nsolution = solve_it(k * (k + 1) / 2 - 51 + least_integer, k)\nanswer = solution[k]"]}
{"id": 156, "answer": "B", "completion": "num_songs = 10\nnum_selections = 5\ntotal_selections = num_songs * num_selections\nnum_students = total_selections / num_selections\nanswer = num_students", "completions": ["num_songs = 10\nnum_selections = 5\ntotal_selections = num_songs * num_selections\nnum_students = total_selections / num_selections\nanswer = num_students"]}
{"id": 157, "answer": "B", "completion": "m = Symbol('m')\nx1 = 1.5\nx2 = Symbol('x2')\nsolution = solve_it(x1 * x2 + m * (x1 + x2) + 22, m)\nanswer = solution[m]", "completions": ["m = Symbol('m')\nx1 = 1.5\nx2 = Symbol('x2')\nsolution = solve_it(x1 * x2 + m * (x1 + x2) + 22, m)\nanswer = solution[m]"]}
{"id": 158, "answer": "A", "completion": "from math import factorial\nanswer = factorial(10) / factorial(3)", "completions": ["from math import factorial\nanswer = factorial(10) / factorial(3)"]}
{"id": 159, "answer": "B", "completion": "original_price = Symbol('original_price', positive=True)\ndiscount = 0.15\nnew_price = original_price * (1 - discount)\nsolution = solve_it(5 * new_price - 300, original_price)\nanswer = solution[original_price]", "completions": ["original_price = Symbol('original_price', positive=True)\ndiscount = 0.15\nnew_price = original_price * (1 - discount)\nsolution = solve_it(5 * new_price - 300, original_price)\nanswer = solution[original_price]"]}
{"id": 160, "answer": "D", "completion": "num_children = Symbol('num_children', positive=True)\nsolution = solve_it(num_children - (12 + 6 + 2 + 2 + 6), num_children)\nanswer = solution[num_children]", "completions": ["num_children = Symbol('num_children', positive=True)\nsolution = solve_it(num_children - (12 + 6 + 2 + 2 + 6), num_children)\nanswer = solution[num_children]"]}
{"id": 161, "answer": "A", "completion": "mixture = 10\nsand = 0.3 * mixture\nclay = 0.7 * mixture\namount_to_remove = clay - sand\namount_to_add = sand - clay\nanswer = (amount_to_remove + amount_to_add) / mixture", "completions": ["mixture = 10\nsand = 0.3 * mixture\nclay = 0.7 * mixture\namount_to_remove = clay - sand\namount_to_add = sand - clay\nanswer = (amount_to_remove + amount_to_add) / mixture"]}
{"id": 162, "answer": "A", "completion": "income = Symbol('income', positive=True)\nexpenditure = 0.7 * income\nnew_income = 1.2 * income\nnew_expenditure = 0.7 * new_income\nanswer = new_expenditure / new_income", "completions": ["income = Symbol('income', positive=True)\nexpenditure = 0.7 * income\nnew_income = 1.2 * income\nnew_expenditure = 0.7 * new_income\nanswer = new_expenditure / new_income"]}
{"id": 163, "answer": "A", "completion": "white_tulips = 28\nred_tulips = 98\nmax_bouquets = min(white_tulips, red_tulips)\nanswer = max_bouquets", "completions": ["white_tulips = 28\nred_tulips = 98\nmax_bouquets = min(white_tulips, red_tulips)\nanswer = max_bouquets"]}
{"id": 164, "answer": "B", "completion": "sharon_hours = 5\nkaren_hours = 4\ntotal_hours = sharon_hours + karen_hours\nanswer = total_hours", "completions": ["sharon_hours = 5\nkaren_hours = 4\ntotal_hours = sharon_hours + karen_hours\nanswer = total_hours"]}
{"id": 165, "answer": "C", "completion": "x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it([x < 0, y > 0, abs(x ** 3) > abs(y ** 2)], [x, y])\nanswer = 'D)–x < y'", "completions": ["x = Symbol('x', real=True)\ny = Symbol('y', real=True)\nsolution = solve_it([x < 0, y > 0, abs(x ** 3) > abs(y ** 2)], [x, y])\nanswer = 'D)–x < y'"]}
{"id": 166, "answer": "C", "completion": "pages = 100\nprinter_speed = 1 / 2\ntime = pages / (2 * printer_speed)\nanswer = time", "completions": ["pages = 100\nprinter_speed = 1 / 2\ntime = pages / (2 * printer_speed)\nanswer = time"]}
{"id": 167, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nspeed_A = 9\nspeed_B = 6\ntime = distance / (speed_A + speed_B)\nsolution = solve_it(75 - distance - time * speed_A, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nspeed_A = 9\nspeed_B = 6\ntime = distance / (speed_A + speed_B)\nsolution = solve_it(75 - distance - time * speed_A, distance)\nanswer = solution[distance]"]}
{"id": 168, "answer": "A", "completion": "actual_property_worth = 1023.65\nrecorded_property_worth = int(actual_property_worth // 100) * 100\nanswer = actual_property_worth - recorded_property_worth", "completions": ["actual_property_worth = 1023.65\nrecorded_property_worth = int(actual_property_worth // 100) * 100\nanswer = actual_property_worth - recorded_property_worth"]}
{"id": 169, "answer": "B", "completion": "trouser_price = 70\nshirt_price = 30\ntotal_amount = 810\nmax_trouser = total_amount // trouser_price\nmax_shirt = total_amount // shirt_price\nanswer = max_trouser / max_shirt", "completions": ["trouser_price = 70\nshirt_price = 30\ntotal_amount = 810\nmax_trouser = total_amount // trouser_price\nmax_shirt = total_amount // shirt_price\nanswer = max_trouser / max_shirt"]}
{"id": 170, "answer": "E", "completion": "subscription_cost = 42\ndiscount_percentage = 25\ncover_price = subscription_cost / (1 - discount_percentage / 100)\nanswer = cover_price / 15", "completions": ["subscription_cost = 42\ndiscount_percentage = 25\ncover_price = subscription_cost / (1 - discount_percentage / 100)\nanswer = cover_price / 15"]}
{"id": 171, "answer": "A", "completion": "heads = Symbol('heads', positive=True)\ntails = Symbol('tails', positive=True)\nsolution = solve_it(2 * heads - 3 * tails, heads)\nanswer = solution[heads]", "completions": ["heads = Symbol('heads', positive=True)\ntails = Symbol('tails', positive=True)\nsolution = solve_it(2 * heads - 3 * tails, heads)\nanswer = solution[heads]"]}
{"id": 172, "answer": "B", "completion": "distance = Symbol('distance', positive=True)\nallen_speed = 54\nbob_speed = 78\nallen_time = distance / allen_speed\nbob_time = (distance + 48) / bob_speed\nsolution = solve_it(allen_time - bob_time, distance)\nanswer = solution[distance]", "completions": ["distance = Symbol('distance', positive=True)\nallen_speed = 54\nbob_speed = 78\nallen_time = distance / allen_speed\nbob_time = (distance + 48) / bob_speed\nsolution = solve_it(allen_time - bob_time, distance)\nanswer = solution[distance]"]}
{"id": 173, "answer": "C", "completion": "cost_of_new_tires = 180\ncost_of_repair = 40\ncost_per_year_of_new_tires = cost_of_new_tires / 4\ncost_per_year_of_repair = cost_of_repair\nanswer = (cost_per_year_of_new_tires - cost_per_year_of_repair) / cost_per_year_of_repair * 100", "completions": ["cost_of_new_tires = 180\ncost_of_repair = 40\ncost_per_year_of_new_tires = cost_of_new_tires / 4\ncost_per_year_of_repair = cost_of_repair\nanswer = (cost_per_year_of_new_tires - cost_per_year_of_repair) / cost_per_year_of_repair * 100"]}
{"id": 174, "answer": "B", "completion": "length_1 = Symbol('length_1', positive=True)\nlength_2 = Symbol('length_2', positive=True)\ntotal_length = 20\ndifference = 3\nsolution = solve_it([length_1 + length_2 - total_length, length_1 - length_2 - difference], [length_1, length_2])\nanswer = solution[length_1]", "completions": ["length_1 = Symbol('length_1', positive=True)\nlength_2 = Symbol('length_2', positive=True)\ntotal_length = 20\ndifference = 3\nsolution = solve_it([length_1 + length_2 - total_length, length_1 - length_2 - difference], [length_1, length_2])\nanswer = solution[length_1]"]}
{"id": 175, "answer": "B", "completion": "interest_rate = 0.12\nprincipal = 5000\ninterest_accrued = principal * (1 + interest_rate / 2) ** 2 - principal\nanswer = interest_accrued", "completions": ["interest_rate = 0.12\nprincipal = 5000\ninterest_accrued = principal * (1 + interest_rate / 2) ** 2 - principal\nanswer = interest_accrued"]}
{"id": 176, "answer": "A", "completion": "answer = 9 * 2 * 0 * 0", "completions": ["answer = 9 * 2 * 0 * 0"]}
{"id": 177, "answer": "C", "completion": "sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsolution = solve_it(sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, ajay_age)\nanswer = solution[ajay_age] + 10", "completions": ["sachin_age = Symbol('sachin_age', positive=True)\najay_age = Symbol('ajay_age', positive=True)\nsachin_age_10_years_ago = sachin_age - 10\najay_age_10_years_ago = ajay_age - 10\nsolution = solve_it(sachin_age_10_years_ago - 2 * ajay_age_10_years_ago, ajay_age)\nanswer = solution[ajay_age] + 10"]}
{"id": 178, "answer": "A", "completion": "perimeter = 340\nwidth = Symbol('width', positive=True)\nlength = Symbol('length', positive=True)\nsolution = solve_it(2 * (width + length) - perimeter, [width, length])\narea = width * length\ncost = area * 10\nanswer = cost", "completions": ["perimeter = 340\nwidth = Symbol('width', positive=True)\nlength = Symbol('length', positive=True)\nsolution = solve_it(2 * (width + length) - perimeter, [width, length])\narea = width * length\ncost = area * 10\nanswer = cost"]}
{"id": 179, "answer": "B", "completion": "novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = Symbol('total_revenue', positive=True)\nsolution = solve_it([total_revenue - novel_revenue - biography_revenue, novel_revenue - 0.34 * total_revenue, biography_revenue - total_revenue / 3], [novel_revenue, biography_revenue, total_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]", "completions": ["novel_revenue = Symbol('novel_revenue', positive=True)\nbiography_revenue = Symbol('biography_revenue', positive=True)\ntotal_revenue = Symbol('total_revenue', positive=True)\nsolution = solve_it([total_revenue - novel_revenue - biography_revenue, novel_revenue - 0.34 * total_revenue, biography_revenue - total_revenue / 3], [novel_revenue, biography_revenue, total_revenue])\nanswer = solution[novel_revenue] / solution[biography_revenue]"]}
{"id": 180, "answer": "A", "completion": "percentage = 0.05\nnum_flowers = Symbol('num_flowers', positive=True)\nsolution = solve_it(num_flowers * percentage - 8, num_flowers)\nanswer = solution[num_flowers]", "completions": ["percentage = 0.05\nnum_flowers = Symbol('num_flowers', positive=True)\nsolution = solve_it(num_flowers * percentage - 8, num_flowers)\nanswer = solution[num_flowers]"]}
{"id": 181, "answer": "B", "completion": "answer = 5C2 * 4C4", "completions": ["answer = 5C2 * 4C4"]}
{"id": 182, "answer": "A", "completion": "a = Symbol('a')\nb = Symbol('b')\nsolution = simplify((a**2 - b**2) / (a + b)**2)\nanswer = solution", "completions": ["a = Symbol('a')\nb = Symbol('b')\nsolution = simplify((a**2 - b**2) / (a + b)**2)\nanswer = solution"]}
{"id": 183, "answer": "D", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number - 36 - (86 - number), number)\nanswer = solution[number]"]}
{"id": 184, "answer": "D", "completion": "p = Symbol('p', positive=True)\ncrates = 4\nphones_per_pallet = 1250\nanswer = crates * p * phones_per_pallet", "completions": ["p = Symbol('p', positive=True)\ncrates = 4\nphones_per_pallet = 1250\nanswer = crates * p * phones_per_pallet"]}
{"id": 185, "answer": "D", "completion": "A = 40\nB = 45\ntime_needed = A + B\nanswer = time_needed / 60", "completions": ["A = 40\nB = 45\ntime_needed = A + B\nanswer = time_needed / 60"]}
{"id": 186, "answer": "B", "completion": "speed = 120\ndistance = 1\ntime_to_enter_tunnel = 3\nanswer = time_to_enter_tunnel + distance / speed", "completions": ["speed = 120\ndistance = 1\ntime_to_enter_tunnel = 3\nanswer = time_to_enter_tunnel + distance / speed"]}
{"id": 187, "answer": "E", "completion": "discount_rate = Symbol('discount_rate', positive=True)\ninvoice_amount = 20000\ndiscount_amount = 4 / 30 * invoice_amount\nloan_amount = invoice_amount - discount_amount\ninterest_amount = n / 100 * loan_amount\nsolution = solve_it(interest_amount - discount_amount, discount_rate)\nanswer = solution[discount_rate]", "completions": ["discount_rate = Symbol('discount_rate', positive=True)\ninvoice_amount = 20000\ndiscount_amount = 4 / 30 * invoice_amount\nloan_amount = invoice_amount - discount_amount\ninterest_amount = n / 100 * loan_amount\nsolution = solve_it(interest_amount - discount_amount, discount_rate)\nanswer = solution[discount_rate]"]}
{"id": 188, "answer": "D", "completion": "answer = factorial(10) / (factorial(5) * factorial(5))", "completions": ["answer = factorial(10) / (factorial(5) * factorial(5))"]}
{"id": 189, "answer": "B", "completion": "rice = 3\nratio = [2, 3, 5]\ntotal = rice / ratio[0]\ncorn = total * ratio[2]\nanswer = corn", "completions": ["rice = 3\nratio = [2, 3, 5]\ntotal = rice / ratio[0]\ncorn = total * ratio[2]\nanswer = corn"]}
{"id": 190, "answer": "E", "completion": "soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]", "completions": ["soda_cost = Symbol('soda_cost', positive=True)\nbar_cost = Symbol('bar_cost', positive=True)\nsolution = solve_it([soda_cost + 2 * bar_cost - 150, 2 * soda_cost + 3 * bar_cost - 300], [soda_cost, bar_cost])\nanswer = 6 * solution[soda_cost] + 7 * solution[bar_cost]"]}
{"id": 191, "answer": "B", "completion": "cost_per_pen = Symbol('cost_per_pen', positive=True)\ntotal_cost = 7200 * cost_per_pen\ntotal_profit = 0.25 * total_cost\ntotal_revenue = total_cost + total_profit\ntotal_defective_pens = 0.1 * 7200\ntotal_good_pens = 7200 - total_defective_pens\ngood_pens_revenue = total_good_pens * 10\nsolution = solve_it(total_revenue - good_pens_revenue, cost_per_pen)\nanswer = solution[cost_per_pen]", "completions": ["cost_per_pen = Symbol('cost_per_pen', positive=True)\ntotal_cost = 7200 * cost_per_pen\ntotal_profit = 0.25 * total_cost\ntotal_revenue = total_cost + total_profit\ntotal_defective_pens = 0.1 * 7200\ntotal_good_pens = 7200 - total_defective_pens\ngood_pens_revenue = total_good_pens * 10\nsolution = solve_it(total_revenue - good_pens_revenue, cost_per_pen)\nanswer = solution[cost_per_pen]"]}
{"id": 192, "answer": "B", "completion": "digit_1 = Symbol('digit_1', positive=True)\ndigit_2 = Symbol('digit_2', positive=True)\ndifference = 18\nsolution = solve_it([digit_1 + digit_2 - (digit_1 * 10 + digit_2) + 18, digit_2 - 2 * digit_1], [digit_1, digit_2])\nanswer = int(solution[digit_1] * 10 + solution[digit_2])", "completions": ["digit_1 = Symbol('digit_1', positive=True)\ndigit_2 = Symbol('digit_2', positive=True)\ndifference = 18\nsolution = solve_it([digit_1 + digit_2 - (digit_1 * 10 + digit_2) + 18, digit_2 - 2 * digit_1], [digit_1, digit_2])\nanswer = int(solution[digit_1] * 10 + solution[digit_2])"]}
{"id": 193, "answer": "B", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(x) + 2 * floor(y)\nsolution = solve_it(L - R, [x, y])\nanswer = 'B)L(x,y) ≠ R(x,y)' if len(solution) > 0 else 'A)L(x,y) = R(x,y)'", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nL = floor(x) + floor(y) + floor(x + y)\nR = 2 * floor(x) + 2 * floor(y)\nsolution = solve_it(L - R, [x, y])\nanswer = 'B)L(x,y) ≠ R(x,y)' if len(solution) > 0 else 'A)L(x,y) = R(x,y)'"]}
{"id": 194, "answer": "E", "completion": "bell1 = 36\nbell2 = 40\nbell3 = 48\nlcm = lcm_of_list([bell1, bell2, bell3])\nanswer = lcm / 60", "completions": ["bell1 = 36\nbell2 = 40\nbell3 = 48\nlcm = lcm_of_list([bell1, bell2, bell3])\nanswer = lcm / 60"]}
{"id": 195, "answer": "A", "completion": "pole_height = 14\npole_shadow = 10\ntree_shadow = 15\ntree_height = (pole_height * tree_shadow) / pole_shadow\nanswer = tree_height", "completions": ["pole_height = 14\npole_shadow = 10\ntree_shadow = 15\ntree_height = (pole_height * tree_shadow) / pole_shadow\nanswer = tree_height"]}
{"id": 196, "answer": "C", "completion": "orange_cost = 18\npineapple_cost = 27\ngrape_cost = 15\nmango_cost = (orange_cost + pineapple_cost + grape_cost) / 3\nanswer = mango_cost", "completions": ["orange_cost = 18\npineapple_cost = 27\ngrape_cost = 15\nmango_cost = (orange_cost + pineapple_cost + grape_cost) / 3\nanswer = mango_cost"]}
{"id": 197, "answer": "C", "completion": "a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\narea = (a * y - b * y) / 2\nanswer = area", "completions": ["a = Symbol('a', positive=True)\nb = Symbol('b', positive=True)\nx = Symbol('x', positive=True)\ny = Symbol('y', negative=True)\narea = (a * y - b * y) / 2\nanswer = area"]}
{"id": 198, "answer": "A", "completion": "original_speed = 60\ntime_taken = 20\nnew_time_taken = 10\nnew_speed = original_speed * (time_taken / new_time_taken)\nanswer = new_speed - original_speed", "completions": ["original_speed = 60\ntime_taken = 20\nnew_time_taken = 10\nnew_speed = original_speed * (time_taken / new_time_taken)\nanswer = new_speed - original_speed"]}
{"id": 199, "answer": "A", "completion": "prob_alan = 1/5\nprob_roger = 2/3\nprob_peter = 5/6\nprob_correct_answer = prob_alan + prob_peter - (prob_alan * prob_peter)\nanswer = prob_correct_answer - prob_roger", "completions": ["prob_alan = 1/5\nprob_roger = 2/3\nprob_peter = 5/6\nprob_correct_answer = prob_alan + prob_peter - (prob_alan * prob_peter)\nanswer = prob_correct_answer - prob_roger"]}
{"id": 200, "answer": "B", "completion": "interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]", "completions": ["interest_rate = Symbol('interest_rate', positive=True)\namount = 5000\namount_with_simple_interest = amount * (1 + 2 * interest_rate / 100)\namount_with_compound_interest = amount * (1 + interest_rate / 100) ** 2\nsolution = solve_it(amount_with_compound_interest - amount_with_simple_interest - 72, interest_rate)\nanswer = solution[interest_rate]"]}
{"id": 201, "answer": "B", "completion": "num_files_infected_by_both = Symbol('num_files_infected_by_both', positive=True)\nnum_files_infected_by_worm = 2.5 * num_files_infected_by_both\nnum_files_not_infected_by_virus = 0.5 * 250\nnum_files_not_infected_by_worm = 250 - num_files_infected_by_worm - num_files_not_infected_by_virus\nsolution = solve_it(num_files_not_infected_by_worm, num_files_infected_by_both)\nanswer = solution[num_files_not_infected_by_worm]", "completions": ["num_files_infected_by_both = Symbol('num_files_infected_by_both', positive=True)\nnum_files_infected_by_worm = 2.5 * num_files_infected_by_both\nnum_files_not_infected_by_virus = 0.5 * 250\nnum_files_not_infected_by_worm = 250 - num_files_infected_by_worm - num_files_not_infected_by_virus\nsolution = solve_it(num_files_not_infected_by_worm, num_files_infected_by_both)\nanswer = solution[num_files_not_infected_by_worm]"]}
{"id": 202, "answer": "B", "completion": "mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\ninterest_rate = 0.04\nmohan_amount_at_26 = mohan_share * (1 + interest_rate) ** 3\nsohan_amount_at_26 = sohan_share * (1 + interest_rate) ** 3\nsolution = solve_it(mohan_amount_at_26 - sohan_amount_at_26 - 5100, [mohan_share, sohan_share])\nanswer = solution[mohan_share]", "completions": ["mohan_share = Symbol('mohan_share', positive=True)\nsohan_share = Symbol('sohan_share', positive=True)\ninterest_rate = 0.04\nmohan_amount_at_26 = mohan_share * (1 + interest_rate) ** 3\nsohan_amount_at_26 = sohan_share * (1 + interest_rate) ** 3\nsolution = solve_it(mohan_amount_at_26 - sohan_amount_at_26 - 5100, [mohan_share, sohan_share])\nanswer = solution[mohan_share]"]}
{"id": 203, "answer": "C", "completion": "percentage = 0.6 * 0.3\nanswer = percentage * 1400", "completions": ["percentage = 0.6 * 0.3\nanswer = percentage * 1400"]}
{"id": 204, "answer": "C", "completion": "w = Symbol('w')\nx = Symbol('x')\ny = Symbol('y')\nrate = w / (25 * x)\ntime = y / rate\nanswer = simplify(time / 60)", "completions": ["w = Symbol('w')\nx = Symbol('x')\ny = Symbol('y')\nrate = w / (25 * x)\ntime = y / rate\nanswer = simplify(time / 60)"]}
{"id": 205, "answer": "A", "completion": "weight_of_alloy_coin = 30\nvolume_of_alloy_coin = 2 * 15 * 15\nweight_of_aluminum = weight_of_alloy_coin / 2\nvolume_of_aluminum = volume_of_alloy_coin / 2\nweight_of_pure_aluminum_coin = weight_of_aluminum * (30 * 30) / (2 * 15 * 15)\nanswer = weight_of_pure_aluminum_coin", "completions": ["weight_of_alloy_coin = 30\nvolume_of_alloy_coin = 2 * 15 * 15\nweight_of_aluminum = weight_of_alloy_coin / 2\nvolume_of_aluminum = volume_of_alloy_coin / 2\nweight_of_pure_aluminum_coin = weight_of_aluminum * (30 * 30) / (2 * 15 * 15)\nanswer = weight_of_pure_aluminum_coin"]}
{"id": 206, "answer": "C", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(2/3 * number - 10 - (40 + 1/3 * number), number)\nanswer = solution[number]", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(2/3 * number - 10 - (40 + 1/3 * number), number)\nanswer = solution[number]"]}
{"id": 207, "answer": "B", "completion": "k = Symbol('k', positive=True)\nsolution = solve_it(k - (5 ** 2 - 4 * 1 * k), k)\nanswer = solution[k]", "completions": ["k = Symbol('k', positive=True)\nsolution = solve_it(k - (5 ** 2 - 4 * 1 * k), k)\nanswer = solution[k]"]}
{"id": 208, "answer": "E", "completion": "answer = 900 + 5 * 12", "completions": ["answer = 900 + 5 * 12"]}
{"id": 209, "answer": "C", "completion": "distance = 100\nrest_time = 10 / 60\ntotal_time = distance / 10 + (distance / 15) * rest_time\nanswer = total_time", "completions": ["distance = 100\nrest_time = 10 / 60\ntotal_time = distance / 10 + (distance / 15) * rest_time\nanswer = total_time"]}
{"id": 210, "answer": "B", "completion": "time_by_train = 17\ntime_by_car = time_by_train - 4\nanswer = time_by_car * 2", "completions": ["time_by_train = 17\ntime_by_car = time_by_train - 4\nanswer = time_by_car * 2"]}
{"id": 211, "answer": "A", "completion": "original_food = 100\nfood_remaining = original_food * (2/3)**4\nanswer = food_remaining", "completions": ["original_food = 100\nfood_remaining = original_food * (2/3)**4\nanswer = food_remaining"]}
{"id": 212, "answer": "A", "completion": "total_people = Symbol('total_people', positive=True)\nnum_women = 0.6 * total_people\nnum_men = total_people - num_women\nnum_men_liking_red = 0.75 * num_men\nnum_men_liking_green = 10\nsolution = solve_it(num_men_liking_red + num_men_liking_green - num_men, total_people)\nanswer = solution[total_people]", "completions": ["total_people = Symbol('total_people', positive=True)\nnum_women = 0.6 * total_people\nnum_men = total_people - num_women\nnum_men_liking_red = 0.75 * num_men\nnum_men_liking_green = 10\nsolution = solve_it(num_men_liking_red + num_men_liking_green - num_men, total_people)\nanswer = solution[total_people]"]}
{"id": 213, "answer": "E", "completion": "answer = 2 ** 10", "completions": ["answer = 2 ** 10"]}
{"id": 214, "answer": "A", "completion": "orange_juice = Symbol('orange_juice', positive=True)\nwater = Symbol('water', positive=True)\noriginal_percentage = 0.4\ndesired_percentage = 0.6\nsolution = solve_it([orange_juice + water - 1, orange_juice / (orange_juice + water) - desired_percentage], [orange_juice, water])\nadditional_orange_juice = solution[orange_juice] - original_percentage\nanswer = additional_orange_juice", "completions": ["orange_juice = Symbol('orange_juice', positive=True)\nwater = Symbol('water', positive=True)\noriginal_percentage = 0.4\ndesired_percentage = 0.6\nsolution = solve_it([orange_juice + water - 1, orange_juice / (orange_juice + water) - desired_percentage], [orange_juice, water])\nadditional_orange_juice = solution[orange_juice] - original_percentage\nanswer = additional_orange_juice"]}
{"id": 215, "answer": "D", "completion": "answer = (9 ** 3 - 7) % 10", "completions": ["answer = (9 ** 3 - 7) % 10"]}
{"id": 216, "answer": "D", "completion": "answer = 2/5", "completions": ["answer = 2/5"]}
{"id": 217, "answer": "B", "completion": "N = Symbol('N', positive=True)\nremainder = Symbol('remainder', positive=True)\nsolution = solve_it([2272 % N - remainder, 875 % N - remainder], [N, remainder])\nanswer = sum(map(int, str(solution[N])))", "completions": ["N = Symbol('N', positive=True)\nremainder = Symbol('remainder', positive=True)\nsolution = solve_it([2272 % N - remainder, 875 % N - remainder], [N, remainder])\nanswer = sum(map(int, str(solution[N])))"]}
{"id": 218, "answer": "B", "completion": "passing_students = Symbol('passing_students', positive=True)\nfailing_students = Symbol('failing_students', positive=True)\ntotal_students = passing_students + failing_students\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passing_students * passing_average + failing_students * failing_average - total_students * overall_average, total_students - passing_students - failing_students], [passing_students, failing_students])\nanswer = solution[passing_students] / total_students", "completions": ["passing_students = Symbol('passing_students', positive=True)\nfailing_students = Symbol('failing_students', positive=True)\ntotal_students = passing_students + failing_students\npassing_average = 83\nfailing_average = 55\noverall_average = 76\nsolution = solve_it([passing_students * passing_average + failing_students * failing_average - total_students * overall_average, total_students - passing_students - failing_students], [passing_students, failing_students])\nanswer = solution[passing_students] / total_students"]}
{"id": 219, "answer": "C", "completion": "wage_1 = Symbol('wage_1', positive=True)\nwage_2 = Symbol('wage_2', positive=True)\ntotal_wage = 90 * 15\ntotal_wage_1 = 87 * 7\ntotal_wage_2 = 92 * 7\nsolution = solve_it([total_wage - total_wage_1 - total_wage_2, total_wage_1 + wage_1 - total_wage_2 - wage_2], [wage_1, wage_2])\nanswer = solution[wage_2]", "completions": ["wage_1 = Symbol('wage_1', positive=True)\nwage_2 = Symbol('wage_2', positive=True)\ntotal_wage = 90 * 15\ntotal_wage_1 = 87 * 7\ntotal_wage_2 = 92 * 7\nsolution = solve_it([total_wage - total_wage_1 - total_wage_2, total_wage_1 + wage_1 - total_wage_2 - wage_2], [wage_1, wage_2])\nanswer = solution[wage_2]"]}
{"id": 220, "answer": "C", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * (x - 9) - 23 * (y - 9)], [x, y])\nanswer = solution[x]", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([3 * x - 5 * y, 12 * (x - 9) - 23 * (y - 9)], [x, y])\nanswer = solution[x]"]}
{"id": 221, "answer": "B", "completion": "ajay_age = Symbol('ajay_age', positive=True)\nrahul_age = (ajay_age - 6) / 18\ndenis_age = rahul_age + 2\nsolution = solve_it(denis_age - 5, ajay_age)\nanswer = solution[ajay_age]", "completions": ["ajay_age = Symbol('ajay_age', positive=True)\nrahul_age = (ajay_age - 6) / 18\ndenis_age = rahul_age + 2\nsolution = solve_it(denis_age - 5, ajay_age)\nanswer = solution[ajay_age]"]}
{"id": 222, "answer": "B", "completion": "answer = 4 * 3 * 2 * 1 = 24 minutes", "completions": ["answer = 4 * 3 * 2 * 1 = 24 minutes"]}
{"id": 223, "answer": "E", "completion": "discount_1 = 0.2\ndiscount_2 = 0.2\ntotal_discount = discount_1 + discount_2\nanswer = total_discount * 100", "completions": ["discount_1 = 0.2\ndiscount_2 = 0.2\ntotal_discount = discount_1 + discount_2\nanswer = total_discount * 100"]}
{"id": 224, "answer": "E", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nunpainted_side = 9\npainted_sides = 37\nsolution = solve_it([length + width - unpainted_side, 2 * (length + width) - painted_sides], [length, width])\nanswer = solution[length] * solution[width]", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\nunpainted_side = 9\npainted_sides = 37\nsolution = solve_it([length + width - unpainted_side, 2 * (length + width) - painted_sides], [length, width])\nanswer = solution[length] * solution[width]"]}
{"id": 225, "answer": "E", "completion": "answer = 4", "completions": ["answer = 4"]}
{"id": 226, "answer": "A", "completion": "total_weight = Symbol('total_weight', positive=True)\nnew_man_weight = Symbol('new_man_weight', positive=True)\nold_man_weight = 53\nsolution = solve_it(total_weight + new_man_weight - old_man_weight - 10 * (1.8 + 1), new_man_weight)\nanswer = solution[new_man_weight]", "completions": ["total_weight = Symbol('total_weight', positive=True)\nnew_man_weight = Symbol('new_man_weight', positive=True)\nold_man_weight = 53\nsolution = solve_it(total_weight + new_man_weight - old_man_weight - 10 * (1.8 + 1), new_man_weight)\nanswer = solution[new_man_weight]"]}
{"id": 227, "answer": "B", "completion": "n = Symbol('n', positive=True)\nways = 45\nsolution = solve_it(comb(n, 2) - ways - 1, n)\nanswer = solution[n]", "completions": ["n = Symbol('n', positive=True)\nways = 45\nsolution = solve_it(comb(n, 2) - ways - 1, n)\nanswer = solution[n]"]}
{"id": 228, "answer": "E", "completion": "answer = 'E)I and III only'", "completions": ["answer = 'E)I and III only'"]}
{"id": 229, "answer": "A", "completion": "x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]", "completions": ["x = Symbol('x', positive=True)\ny = Symbol('y', positive=True)\nsolution = solve_it([6 * x - y - 24, y - 3 * x], [x, y])\nanswer = solution[x]"]}
{"id": 230, "answer": "B", "completion": "cost_without_membership = 4\ncost_with_membership = 2\nmembership_cost = 7\n\n# Without membership\ncost_without_membership_total = cost_without_membership * x\n\n# With membership\ncost_with_membership_total = cost_with_membership * x + membership_cost\n\n# Find the minimum number of DVDs\nsolution = solve_it(cost_without_membership_total - cost_with_membership_total, x)\nanswer = solution[x]", "completions": ["cost_without_membership = 4\ncost_with_membership = 2\nmembership_cost = 7\n\n# Without membership\ncost_without_membership_total = cost_without_membership * x\n\n# With membership\ncost_with_membership_total = cost_with_membership * x + membership_cost\n\n# Find the minimum number of DVDs\nsolution = solve_it(cost_without_membership_total - cost_with_membership_total, x)\nanswer = solution[x]"]}
{"id": 231, "answer": "C", "completion": "weight_in_pounds = 7\nweight_in_ounces = 4\nweight_in_ounces = weight_in_pounds * 16 + weight_in_ounces\nanswer = weight_in_ounces", "completions": ["weight_in_pounds = 7\nweight_in_ounces = 4\nweight_in_ounces = weight_in_pounds * 16 + weight_in_ounces\nanswer = weight_in_ounces"]}
{"id": 232, "answer": "B", "completion": "jack_rate = 1 / 12\njill_rate = jack_rate * 0.05\nremaining_work = 1 - (2/3)\njill_time = remaining_work / jill_rate\nanswer = jill_time", "completions": ["jack_rate = 1 / 12\njill_rate = jack_rate * 0.05\nremaining_work = 1 - (2/3)\njill_time = remaining_work / jill_rate\nanswer = jill_time"]}
{"id": 233, "answer": "A", "completion": "principal = 5000\ntime = 3\ninterest = 300\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(principal * time * interest_rate / 100 - interest, interest_rate)\nanswer = solution[interest_rate]", "completions": ["principal = 5000\ntime = 3\ninterest = 300\ninterest_rate = Symbol('interest_rate', positive=True)\nsolution = solve_it(principal * time * interest_rate / 100 - interest, interest_rate)\nanswer = solution[interest_rate]"]}
{"id": 234, "answer": "B", "completion": "discount = 0.2\nactual_price = 4578 / (1 - discount)\nanswer = actual_price", "completions": ["discount = 0.2\nactual_price = 4578 / (1 - discount)\nanswer = actual_price"]}
{"id": 235, "answer": "A", "completion": "A = Symbol('A')\nB = Symbol('B')\ncost_per_bottle = A / 27\ncost_for_B_bottles = B * cost_per_bottle\nanswer = cost_for_B_bottles / 100", "completions": ["A = Symbol('A')\nB = Symbol('B')\ncost_per_bottle = A / 27\ncost_for_B_bottles = B * cost_per_bottle\nanswer = cost_for_B_bottles / 100"]}
{"id": 236, "answer": "E", "completion": "\n# Solution:\n# We can use the combination formula to solve this problem.\n# The total number of ways to select 3 candy bars from 11 candy bars is 11C3 = 165.\n# The number of ways to select 3 candy bars with cost more than $4 is the number of ways to select 3 candy bars with cost of 50 cents + 1 dollar + 2 dollars.\n# This is 3C3 + 4C3 + 4C3 = 28 + 4 + 4 = 36.\n# Therefore, the answer is 165 - 36 = 129.\n\nanswer = 129", "completions": ["\n# Solution:\n# We can use the combination formula to solve this problem.\n# The total number of ways to select 3 candy bars from 11 candy bars is 11C3 = 165.\n# The number of ways to select 3 candy bars with cost more than $4 is the number of ways to select 3 candy bars with cost of 50 cents + 1 dollar + 2 dollars.\n# This is 3C3 + 4C3 + 4C3 = 28 + 4 + 4 = 36.\n# Therefore, the answer is 165 - 36 = 129.\n\nanswer = 129"]}
{"id": 237, "answer": "E", "completion": "from math import factorial\n\nanswer = factorial(4) * factorial(4) * factorial(4) * factorial(4)", "completions": ["from math import factorial\n\nanswer = factorial(4) * factorial(4) * factorial(4) * factorial(4)"]}
{"id": 238, "answer": "A", "completion": "num_boys = 100\nnum_girls = (2 / 5) * (num_boys / (1 - 2 / 5))\nanswer = num_girls", "completions": ["num_boys = 100\nnum_girls = (2 / 5) * (num_boys / (1 - 2 / 5))\nanswer = num_girls"]}
{"id": 239, "answer": "C", "completion": "total_numbers = 1000\nrelatively_prime_numbers = 0\nfor i in range(1, total_numbers + 1):\n    if gcd(i, total_numbers) == 1:\n        relatively_prime_numbers += 1\nanswer = relatively_prime_numbers / total_numbers", "completions": ["total_numbers = 1000\nrelatively_prime_numbers = 0\nfor i in range(1, total_numbers + 1):\n    if gcd(i, total_numbers) == 1:\n        relatively_prime_numbers += 1\nanswer = relatively_prime_numbers / total_numbers"]}
{"id": 240, "answer": "B", "completion": "principal = Symbol('principal', positive=True)\ninterest_rate = 0.08\ntime = 1\namount = principal * (1 + interest_rate / 2) ** (2 * time)\nsolution = solve_it(amount - 54080, principal)\nanswer = solution[principal]", "completions": ["principal = Symbol('principal', positive=True)\ninterest_rate = 0.08\ntime = 1\namount = principal * (1 + interest_rate / 2) ** (2 * time)\nsolution = solve_it(amount - 54080, principal)\nanswer = solution[principal]"]}
{"id": 241, "answer": "B", "completion": "joe_age = Symbol('joe_age', positive=True)\nsister_age = Symbol('sister_age', positive=True)\nfather_age = Symbol('father_age', positive=True)\nsolution = solve_it([joe_age + sister_age + father_age - 100, sister_age + joe_age - 2 * father_age, father_age - 2 * sister_age], [joe_age, sister_age, father_age])\nanswer = solution[father_age]", "completions": ["joe_age = Symbol('joe_age', positive=True)\nsister_age = Symbol('sister_age', positive=True)\nfather_age = Symbol('father_age', positive=True)\nsolution = solve_it([joe_age + sister_age + father_age - 100, sister_age + joe_age - 2 * father_age, father_age - 2 * sister_age], [joe_age, sister_age, father_age])\nanswer = solution[father_age]"]}
{"id": 242, "answer": "A", "completion": "number = Symbol('number', positive=True)\nsolution = solve_it(number * 3/4 * 1/3 - 21, number)\nanswer = solution[number]", "completions": ["number = Symbol('number', positive=True)\nsolution = solve_it(number * 3/4 * 1/3 - 21, number)\nanswer = solution[number]"]}
{"id": 243, "answer": "E", "completion": "m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = simplify(m * 100 / x)", "completions": ["m = Symbol('m', positive=True)\ny = Symbol('y', positive=True)\nx = m * 4 * y / 100\nanswer = simplify(m * 100 / x)"]}
{"id": 244, "answer": "C", "completion": "answer = 6 * 8", "completions": ["answer = 6 * 8"]}
{"id": 245, "answer": "B", "completion": "p = 0.9\nn = 5\nanswer = binomial_probability(n, 4, p) * 100", "completions": ["p = 0.9\nn = 5\nanswer = binomial_probability(n, 4, p) * 100"]}
{"id": 246, "answer": "C", "completion": "length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\narea = 240\nunfenced_side = 10\nsolution = solve_it([length * width - area, length - unfenced_side], [length, width])\nanswer = 2 * (solution[length] + solution[width])", "completions": ["length = Symbol('length', positive=True)\nwidth = Symbol('width', positive=True)\narea = 240\nunfenced_side = 10\nsolution = solve_it([length * width - area, length - unfenced_side], [length, width])\nanswer = 2 * (solution[length] + solution[width])"]}
{"id": 247, "answer": "E", "completion": "vowels = 5\nconsonants = 20\nfirst_letter = consonants\nsecond_letter = vowels\nthird_letter = consonants - 1\nanswer = first_letter * second_letter * third_letter", "completions": ["vowels = 5\nconsonants = 20\nfirst_letter = consonants\nsecond_letter = vowels\nthird_letter = consonants - 1\nanswer = first_letter * second_letter * third_letter"]}
{"id": 248, "answer": "A", "completion": "x = Symbol('x', positive=True)\nsolution = solve_it(x * (x + 1) * (x + 2) - 727 - 728 - 729, x)\nanswer = solution[x] + solution[x] + 1 + 2", "completions": ["x = Symbol('x', positive=True)\nsolution = solve_it(x * (x + 1) * (x + 2) - 727 - 728 - 729, x)\nanswer = solution[x] + solution[x] + 1 + 2"]}
{"id": 249, "answer": "D", "completion": "width = 8\nlength = 6\nheight = 2.5\nanswer = width * length * height * 1000", "completions": ["width = 8\nlength = 6\nheight = 2.5\nanswer = width * length * height * 1000"]}
{"id": 250, "answer": "E", "completion": "adults = 4169516\nchildren = 5265526 - adults\nanswer = children", "completions": ["adults = 4169516\nchildren = 5265526 - adults\nanswer = children"]}
{"id": 251, "answer": "A", "completion": "distance = Symbol('distance', positive=True)\ndriving_time = 9\ndriving_speed = 20\ncycling_speed = 6\ncycling_time = distance / cycling_speed * 60\nsolution = solve_it(driving_time - cycling_time, distance)\nanswer = solution[distance] * 60 / cycling_speed", "completions": ["distance = Symbol('distance', positive=True)\ndriving_time = 9\ndriving_speed = 20\ncycling_speed = 6\ncycling_time = distance / cycling_speed * 60\nsolution = solve_it(driving_time - cycling_time, distance)\nanswer = solution[distance] * 60 / cycling_speed"]}
{"id": 252, "answer": "D", "completion": "P = Symbol('P', positive=True)\nQ = Symbol('Q', positive=True)\ntime_for_P = 10\ntime_for_Q = 5\nsolution = solve_it([P + Q - time_for_P, Q - time_for_Q / 2], [P, Q])\nanswer = solution[P]", "completions": ["P = Symbol('P', positive=True)\nQ = Symbol('Q', positive=True)\ntime_for_P = 10\ntime_for_Q = 5\nsolution = solve_it([P + Q - time_for_P, Q - time_for_Q / 2], [P, Q])\nanswer = solution[P]"]}
{"id": 253, "answer": "A", "completion": "price = 1.25\nprofit_percentage = 0.2\nnum_bags = 500\nprofit = price * num_bags * profit_percentage\nanswer = profit", "completions": ["price = 1.25\nprofit_percentage = 0.2\nnum_bags = 500\nprofit = price * num_bags * profit_percentage\nanswer = profit"]}
