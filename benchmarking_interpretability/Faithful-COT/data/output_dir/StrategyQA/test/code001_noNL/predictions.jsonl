{"id": 0, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"college commencements\", \"December\").\nHappens_in_time(\"college commencements\", \"May\").\nHappens_in_time(\"college commencements\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", season), Happens_in_time(\"college commencements\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"college commencements\", \"December\").\nHappens_in_time(\"college commencements\", \"May\").\nHappens_in_time(\"college commencements\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", season), Happens_in_time(\"college commencements\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1, "answer": false, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"hydrogen\", atomic_number), Has_n_members(\"Spice Girls\", n_members), atomic_number^2 > n_members.\n.output Answer\n\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"hydrogen\", atomic_number), Has_n_members(\"Spice Girls\", n_members), atomic_number^2 > n_members.\n.output Answer\n\n\n"]}
{"id": 2, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n\n"]}
{"id": 3, "answer": true, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"snake\", \"hamster\").\nEats(\"bird\", \"hamster\").\n.decl Answer()\nAnswer() :- Eats(animal, \"hamster\").\n.output Answer\n\n", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"snake\", \"hamster\").\nEats(\"bird\", \"hamster\").\n.decl Answer()\nAnswer() :- Eats(animal, \"hamster\").\n.output Answer\n\n"]}
{"id": 4, "answer": false, "completion": ".decl Has_limb(Object:symbol, Limb:symbol)\nHas_limb(\"human\", \"arm\").\nHas_limb(\"human\", \"leg\").\nHas_limb(\"human\", \"head\").\nHas_limb(\"human\", \"torso\").\nHas_limb(\"human\", \"neck\").\nHas_limb(\"human\", \"hand\").\nHas_limb(\"human\", \"foot\").\nHas_limb(\"human\", \"eye\").\nHas_limb(\"human\", \"ear\").\nHas_limb(\"human\", \"nose\").\nHas_limb(\"human\", \"mouth\").\nHas_limb(\"human\", \"hair\").\nHas_limb(\"human\", \"finger\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"thumb\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"neck\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_", "completions": [".decl Has_limb(Object:symbol, Limb:symbol)\nHas_limb(\"human\", \"arm\").\nHas_limb(\"human\", \"leg\").\nHas_limb(\"human\", \"head\").\nHas_limb(\"human\", \"torso\").\nHas_limb(\"human\", \"neck\").\nHas_limb(\"human\", \"hand\").\nHas_limb(\"human\", \"foot\").\nHas_limb(\"human\", \"eye\").\nHas_limb(\"human\", \"ear\").\nHas_limb(\"human\", \"nose\").\nHas_limb(\"human\", \"mouth\").\nHas_limb(\"human\", \"hair\").\nHas_limb(\"human\", \"finger\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"thumb\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"neck\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_limb(\"human\", \"calf\").\nHas_limb(\"human\", \"toe\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"back\").\nHas_limb(\"human\", \"chest\").\nHas_limb(\"human\", \"hip\").\nHas_limb(\"human\", \"shoulder\").\nHas_limb(\"human\", \"elbow\").\nHas_limb(\"human\", \"wrist\").\nHas_limb(\"human\", \"knee\").\nHas_limb(\"human\", \"ankle\").\nHas_limb(\"human\", \"heel\").\nHas_limb(\"human\", \"shin\").\nHas_limb(\"human\", \"thigh\").\nHas_"]}
{"id": 5, "answer": false, "completion": ".decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"War in Vietnam\", 6).\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"llama birth\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"llama birth\", n_months1), Last_n_months(\"War in Vietnam\", n_months2),  n_months1 <= n_months2.\n.output Answer\n\n", "completions": [".decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"War in Vietnam\", 6).\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"llama birth\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"llama birth\", n_months1), Last_n_months(\"War in Vietnam\", n_months2),  n_months1 <= n_months2.\n.output Answer\n\n"]}
{"id": 6, "answer": true, "completion": ".decl Makes_money(Person:symbol, Money:symbol)\nMakes_money(\"Linus Torvalds\", \"Microsoft\").\nMakes_money(\"Linus Torvalds\", \"Intel\").\nMakes_money(\"Linus Torvalds\", \"NVIDIA\").\n.decl Answer()\nAnswer() :- Makes_money(\"Linus Torvalds\", money), money = \"Microsoft\".\n.output Answer\n\n", "completions": [".decl Makes_money(Person:symbol, Money:symbol)\nMakes_money(\"Linus Torvalds\", \"Microsoft\").\nMakes_money(\"Linus Torvalds\", \"Intel\").\nMakes_money(\"Linus Torvalds\", \"NVIDIA\").\n.decl Answer()\nAnswer() :- Makes_money(\"Linus Torvalds\", money), money = \"Microsoft\".\n.output Answer\n\n"]}
{"id": 7, "answer": true, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Brooke Shields\", \"Princeton University\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Princeton University\", 1).\nRanks(\"University of Pennsylvania\", 7).\n.decl Answer()\nAnswer() :- Graduates(\"Brooke Shields\", \"University of Pennsylvania\").\nAnswer() :- Graduates(\"Brooke Shields\", university2), Ranks(university2, rank2), Ranks(\"University of Pennsylvania\", rank1), rank2 <= rank1.\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Brooke Shields\", \"Princeton University\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Princeton University\", 1).\nRanks(\"University of Pennsylvania\", 7).\n.decl Answer()\nAnswer() :- Graduates(\"Brooke Shields\", \"University of Pennsylvania\").\nAnswer() :- Graduates(\"Brooke Shields\", university2), Ranks(university2, rank2), Ranks(\"University of Pennsylvania\", rank1), rank2 <= rank1.\n.output Answer\n\n"]}
{"id": 8, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"silverfish\", 0.1).\nHas_height(\"Empire State Building\", 381).\n.decl Answer()\nAnswer() :- Has_height(\"silverfish\", height1), Has_height(\"Empire State Building\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"silverfish\", 0.1).\nHas_height(\"Empire State Building\", 381).\n.decl Answer()\nAnswer() :- Has_height(\"silverfish\", height1), Has_height(\"Empire State Building\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 9, "answer": true, "completion": ".decl Has_familiarity(Person:symbol, Familiarity:symbol)\nHas_familiarity(\"Reddit user\", \"familiar with the Pledge of Allegiance\").\n.decl Answer()\nAnswer() :- Has_familiarity(\"Reddit user\", familiarity), Familiarity = \"familiar with the Pledge of Allegiance\".\n.output Answer\n\n", "completions": [".decl Has_familiarity(Person:symbol, Familiarity:symbol)\nHas_familiarity(\"Reddit user\", \"familiar with the Pledge of Allegiance\").\n.decl Answer()\nAnswer() :- Has_familiarity(\"Reddit user\", familiarity), Familiarity = \"familiar with the Pledge of Allegiance\".\n.output Answer\n\n"]}
{"id": 10, "answer": false, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Marcelo\", \"Portuguese\").\nSpeaks(\"Marcelo\", \"English\").\nSpeaks(\"Marcelo\", \"Chinese\").\nSpeaks(\"Marcelo\", \"Spanish\").\nSpeaks(\"Marcelo\", \"Italian\").\nSpeaks(\"Marcelo\", \"German\").\nSpeaks(\"Marcelo\", \"Japanese\").\nSpeaks(\"Marcelo\", \"Korean\").\nSpeaks(\"Marcelo\", \"Russian\").\nSpeaks(\"Marcelo\", \"Arabic\").\nSpeaks(\"Marcelo\", \"Hindi\").\nSpeaks(\"Marcelo\", \"Urdu\").\nSpeaks(\"Marcelo\", \"Thai\").\nSpeaks(\"Marcelo\", \"Swahili\").\nSpeaks(\"Marcelo\", \"Swedish\").\nSpeaks(\"Marcelo\", \"Norwegian\").\nSpeaks(\"Marcelo\", \"Finnish\").\nSpeaks(\"Marcelo\", \"Danish\").\nSpeaks(\"Marcelo\", \"Flemish\").\nSpeaks(\"Marcelo\", \"Greek\").\nSpeaks(\"Marcelo\", \"Romanian\").\nSpeaks(\"Marcelo\", \"Albanian\").\nSpeaks(\"Marcelo\", \"Serbian\").\nSpeaks(\"Marcelo\", \"Croatian\").\nSpeaks(\"Marcelo\", \"Slovak\").\nSpeaks(\"Marcelo\", \"Czech\").\nSpeaks(\"Marcelo\", \"Bulgarian\").\nSpeaks(\"Marcelo\", \"Hungarian\").\nSpeaks(\"Marcelo\", \"Polish\").\nSpeaks(\"Marcelo\", \"Slovenian\").\nSpeaks(\"Marcelo\", \"Estonian\").\nSpeaks(\"Marcelo\", \"Latvian\").\nSpeaks(\"Marcelo\", \"Lithuanian\").\nSpeaks(\"Marcelo\", \"Catalan\").\nSpeaks(\"Marcelo\", \"Basque\").\nSpeaks(\"Marcelo\", \"Galician\").\nSpeaks(\"Marcelo\", \"Afrikaans\").\nSpeaks(\"Marcelo\", \"Vietnamese\").\nSpeaks(\"Marcelo\", \"Indonesian\").\nSpeaks(\"Marcelo\", \"Tagalog\").\nSpeaks(\"Marcelo\", \"Malay\").\nSpeaks(\"Marcelo\", \"Malayalam\").\nSpeaks(\"Marcelo\", \"Kannada\").\nSpeaks(\"Marcelo\", \"Tamil\").\nSpeaks(\"Marcelo\", \"Telugu\").\nSpeaks(\"Marcelo\", \"Sinhalese\").\nSpeaks(\"Marcelo\", \"Burmese\").\nSpeaks(\"Marcelo\", \"Khmer\").\nSpeaks(\"Marcelo\", \"Lao\").\nSpeaks(\"Marcelo\", \"Vietnamese\").\nSpeaks(\"Marcelo\", \"Thai\").\nSpeaks(\"Marcelo\", \"Tibetan\").\nSpeaks(\"Marcelo\", \"Nepali\").\nSpeaks(\"Marcelo\", \"Sanskrit\").\nSpeaks(\"Marcelo\", \"Marathi\").\nSpeaks(\"Marcelo\", \"Bengali\").\nSpeaks(\"Marcelo\", \"Assamese\").\nSpeaks(\"Marcelo\", \"Gujarati\").\nSpeaks(\"Marcelo\", \"Punjabi\").\nSpeaks(\"Marcelo\", \"Oriya\").\nSpeaks(\"Marcelo\", \"Malayalam\").\nSpeaks(\"Marcelo\", \"Kannada\").\nSpeaks(\"Marcelo\", \"Tamil", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Marcelo\", \"Portuguese\").\nSpeaks(\"Marcelo\", \"English\").\nSpeaks(\"Marcelo\", \"Chinese\").\nSpeaks(\"Marcelo\", \"Spanish\").\nSpeaks(\"Marcelo\", \"Italian\").\nSpeaks(\"Marcelo\", \"German\").\nSpeaks(\"Marcelo\", \"Japanese\").\nSpeaks(\"Marcelo\", \"Korean\").\nSpeaks(\"Marcelo\", \"Russian\").\nSpeaks(\"Marcelo\", \"Arabic\").\nSpeaks(\"Marcelo\", \"Hindi\").\nSpeaks(\"Marcelo\", \"Urdu\").\nSpeaks(\"Marcelo\", \"Thai\").\nSpeaks(\"Marcelo\", \"Swahili\").\nSpeaks(\"Marcelo\", \"Swedish\").\nSpeaks(\"Marcelo\", \"Norwegian\").\nSpeaks(\"Marcelo\", \"Finnish\").\nSpeaks(\"Marcelo\", \"Danish\").\nSpeaks(\"Marcelo\", \"Flemish\").\nSpeaks(\"Marcelo\", \"Greek\").\nSpeaks(\"Marcelo\", \"Romanian\").\nSpeaks(\"Marcelo\", \"Albanian\").\nSpeaks(\"Marcelo\", \"Serbian\").\nSpeaks(\"Marcelo\", \"Croatian\").\nSpeaks(\"Marcelo\", \"Slovak\").\nSpeaks(\"Marcelo\", \"Czech\").\nSpeaks(\"Marcelo\", \"Bulgarian\").\nSpeaks(\"Marcelo\", \"Hungarian\").\nSpeaks(\"Marcelo\", \"Polish\").\nSpeaks(\"Marcelo\", \"Slovenian\").\nSpeaks(\"Marcelo\", \"Estonian\").\nSpeaks(\"Marcelo\", \"Latvian\").\nSpeaks(\"Marcelo\", \"Lithuanian\").\nSpeaks(\"Marcelo\", \"Catalan\").\nSpeaks(\"Marcelo\", \"Basque\").\nSpeaks(\"Marcelo\", \"Galician\").\nSpeaks(\"Marcelo\", \"Afrikaans\").\nSpeaks(\"Marcelo\", \"Vietnamese\").\nSpeaks(\"Marcelo\", \"Indonesian\").\nSpeaks(\"Marcelo\", \"Tagalog\").\nSpeaks(\"Marcelo\", \"Malay\").\nSpeaks(\"Marcelo\", \"Malayalam\").\nSpeaks(\"Marcelo\", \"Kannada\").\nSpeaks(\"Marcelo\", \"Tamil\").\nSpeaks(\"Marcelo\", \"Telugu\").\nSpeaks(\"Marcelo\", \"Sinhalese\").\nSpeaks(\"Marcelo\", \"Burmese\").\nSpeaks(\"Marcelo\", \"Khmer\").\nSpeaks(\"Marcelo\", \"Lao\").\nSpeaks(\"Marcelo\", \"Vietnamese\").\nSpeaks(\"Marcelo\", \"Thai\").\nSpeaks(\"Marcelo\", \"Tibetan\").\nSpeaks(\"Marcelo\", \"Nepali\").\nSpeaks(\"Marcelo\", \"Sanskrit\").\nSpeaks(\"Marcelo\", \"Marathi\").\nSpeaks(\"Marcelo\", \"Bengali\").\nSpeaks(\"Marcelo\", \"Assamese\").\nSpeaks(\"Marcelo\", \"Gujarati\").\nSpeaks(\"Marcelo\", \"Punjabi\").\nSpeaks(\"Marcelo\", \"Oriya\").\nSpeaks(\"Marcelo\", \"Malayalam\").\nSpeaks(\"Marcelo\", \"Kannada\").\nSpeaks(\"Marcelo\", \"Tamil"]}
{"id": 11, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"water\", 1).\nHas_volume(\"bottle\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"water\", volume1), Has_volume(\"bottle\", volume2), volume1 > volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"water\", 1).\nHas_volume(\"bottle\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"water\", volume1), Has_volume(\"bottle\", volume2), volume1 > volume2.\n.output Answer\n\n"]}
{"id": 12, "answer": false, "completion": ".decl Has_adrenaline_increase(Movie:symbol)\nHas_adrenaline_increase(\"Scary Movie\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Scary Movie\", \"comedy\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Scary Movie\", \"action\").\n.decl Answer()\nAnswer() :- Has_adrenaline_increase(\"Scary Movie\"), Has_genre(\"Scary Movie\", genre).\n.output Answer\n\n", "completions": [".decl Has_adrenaline_increase(Movie:symbol)\nHas_adrenaline_increase(\"Scary Movie\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Scary Movie\", \"comedy\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Scary Movie\", \"action\").\n.decl Answer()\nAnswer() :- Has_adrenaline_increase(\"Scary Movie\"), Has_genre(\"Scary Movie\", genre).\n.output Answer\n\n"]}
{"id": 13, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Doctor Who\", 3).\nHas_n_members(\"Marvel's Gateway\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Doctor Who\", 3).\nHas_n_members(\"Marvel's Gateway\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Doctor Who\", n_members1), Has_n_members(\"Marvel's Gateway\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Doctor Who\", 3).\nHas_n_members(\"Marvel's Gateway\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Doctor Who\", 3).\nHas_n_members(\"Marvel's Gateway\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Doctor Who\", n_members1), Has_n_members(\"Marvel's Gateway\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 14, "answer": true, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"aloe plant\", \"material\").\nHas_material(\"petroleum-derived product\", \"material\").\n.decl Answer()\nAnswer() :- Has_material(\"aloe plant\", material), Has_material(\"petroleum-derived product\", material).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"aloe plant\", \"material\").\nHas_material(\"petroleum-derived product\", \"material\").\n.decl Answer()\nAnswer() :- Has_material(\"aloe plant\", material), Has_material(\"petroleum-derived product\", material).\n.output Answer\n\n"]}
{"id": 15, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"pea\", 0.01).\nHas_weight(\"bee hummingbird\", 0.0023).\n.decl Has_wingspan(Object:symbol, Wingspan:float)\nHas_wingspan(\"bee hummingbird\", 0.0012).\n.decl Answer()\nAnswer() :- Has_weight(\"pea\", weight1), Has_weight(\"bee hummingbird\", weight2), Has_wingspan(\"bee hummingbird\", wingspan), weight1 + weight2 > wingspan.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"pea\", 0.01).\nHas_weight(\"bee hummingbird\", 0.0023).\n.decl Has_wingspan(Object:symbol, Wingspan:float)\nHas_wingspan(\"bee hummingbird\", 0.0012).\n.decl Answer()\nAnswer() :- Has_weight(\"pea\", weight1), Has_weight(\"bee hummingbird\", weight2), Has_wingspan(\"bee hummingbird\", wingspan), weight1 + weight2 > wingspan.\n.output Answer\n\n"]}
{"id": 16, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"broadcast from Spirit\", \"January\").\nHappens_in_time(\"broadcast from Spirit\", \"February\").\nHappens_in_time(\"broadcast from Spirit\", \"March\").\nHappens_in_time(\"broadcast from Spirit\", \"April\").\nHappens_in_time(\"broadcast from Spirit\", \"May\").\nHappens_in_time(\"broadcast from Spirit\", \"June\").\nHappens_in_time(\"broadcast from Spirit\", \"July\").\nHappens_in_time(\"broadcast from Spirit\", \"August\").\nHappens_in_time(\"broadcast from Spirit\", \"September\").\nHappens_in_time(\"broadcast from Spirit\", \"October\").\nHappens_in_time(\"broadcast from Spirit\", \"November\").\nHappens_in_time(\"broadcast from Spirit\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"broadcast from Spirit\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"broadcast from Spirit\", n_months1), Happens_in_time(\"broadcast from Spirit\", month), In_season(month, season), n_months1 <= n_months2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"broadcast from Spirit\", \"January\").\nHappens_in_time(\"broadcast from Spirit\", \"February\").\nHappens_in_time(\"broadcast from Spirit\", \"March\").\nHappens_in_time(\"broadcast from Spirit\", \"April\").\nHappens_in_time(\"broadcast from Spirit\", \"May\").\nHappens_in_time(\"broadcast from Spirit\", \"June\").\nHappens_in_time(\"broadcast from Spirit\", \"July\").\nHappens_in_time(\"broadcast from Spirit\", \"August\").\nHappens_in_time(\"broadcast from Spirit\", \"September\").\nHappens_in_time(\"broadcast from Spirit\", \"October\").\nHappens_in_time(\"broadcast from Spirit\", \"November\").\nHappens_in_time(\"broadcast from Spirit\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"broadcast from Spirit\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"broadcast from Spirit\", n_months1), Happens_in_time(\"broadcast from Spirit\", month), In_season(month, season), n_months1 <= n_months2.\n.output Answer\n\n"]}
{"id": 17, "answer": false, "completion": ".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\nIs_a_religion(\"Islam\").\nIs_a_religion(\"Hinduism\").\nIs_a_religion(\"Buddhism\").\nIs_a_religion(\"Sikhism\").\nIs_a_religion(\"Judaism\").\nIs_a_religion(\"Shinto\").\nIs_a_religion(\"Taoism\").\nIs_a_religion(\"Confucianism\").\nIs_a_religion(\"Zoroastrianism\").\nIs_a_religion(\"Jainism\").\nIs_a_religion(\"Tengri\").\nIs_a_religion(\"Hellenism\").\nIs_a_religion(\"Syncretism\").\nIs_a_religion(\"Animism\").\nIs_a_religion(\"Non-Dualism\").\nIs_a_religion(\"Deism\").\nIs_a_religion(\"Atheism\").\nIs_a_religion(\"Paganism\").\n.decl Is_a_character(Character:symbol)\nIs_a_character(\"Harry Potter\").\nIs_a_character(\"Hermione Granger\").\nIs_a_character(\"Ron Weasley\").\nIs_a_character(\"Albus Dumbledore\").\nIs_a_character(\"Severus Snape\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Neville Longbottom\").\nIs_a_character(\"Luna Lovegood\").\nIs_a_character(\"Ginny Weasley\").\nIs_a_character(\"Rubeus Hagrid\").\nIs_a_character(\"Tom Riddle\").\nIs_a_character(\"Voldemort\").\nIs_a_character(\"Sirius Black\").\nIs_a_character(\"Remus Lupin\").\nIs_a_character(\"Peter Pettigrew\").\nIs_a_character(\"James Potter\").\nIs_a_character(\"Lily Potter\").\nIs_a_character(\"Albus Severus Potter\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Bellatrix Lestrange\").\nIs_a_character(\"Narcissa Malfoy\").\nIs_a_character(\"Lucius Malfoy\").\nIs_a_character(\"Vincent Crabbe\").\nIs_a_character(\"Gregory Goyle\").\nIs_a_character(\"Cho Chang\").\nIs_a_character(\"Moaning Myrtle\").\nIs_a_character(\"Argus Filch\").\nIs_a_character(\"Peeves\").\nIs_a_character(\"Dobby\").\nIs_a_character(\"Fluffy\").\nIs_a_character(\"Hedwig\").\nIs_a_character(\"Crookshanks\").\nIs_a_character(\"Scabbers\").\nIs_a_character(\"Crookshanks\").\nIs_a_character(\"Scabbers\").\nIs_a_character(\"Sirius Black\").\nIs_a_character(\"Remus Lupin\").\nIs_a_character(\"Peter Pettigrew\").\nIs_a_character(\"James Potter\").\nIs_a_character(\"Lily Potter\").\nIs_a_character(\"Albus Severus Potter\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Bellatrix Lestrange\").\nIs_a_character(\"Narcissa Malfoy\").\nIs_a_character(\"Lucius Malfoy\").\nIs_a_character(\"Vincent Crabbe\").\nIs_a_character(\"Gregory Goyle\").\nIs_a_character", "completions": [".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\nIs_a_religion(\"Islam\").\nIs_a_religion(\"Hinduism\").\nIs_a_religion(\"Buddhism\").\nIs_a_religion(\"Sikhism\").\nIs_a_religion(\"Judaism\").\nIs_a_religion(\"Shinto\").\nIs_a_religion(\"Taoism\").\nIs_a_religion(\"Confucianism\").\nIs_a_religion(\"Zoroastrianism\").\nIs_a_religion(\"Jainism\").\nIs_a_religion(\"Tengri\").\nIs_a_religion(\"Hellenism\").\nIs_a_religion(\"Syncretism\").\nIs_a_religion(\"Animism\").\nIs_a_religion(\"Non-Dualism\").\nIs_a_religion(\"Deism\").\nIs_a_religion(\"Atheism\").\nIs_a_religion(\"Paganism\").\n.decl Is_a_character(Character:symbol)\nIs_a_character(\"Harry Potter\").\nIs_a_character(\"Hermione Granger\").\nIs_a_character(\"Ron Weasley\").\nIs_a_character(\"Albus Dumbledore\").\nIs_a_character(\"Severus Snape\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Neville Longbottom\").\nIs_a_character(\"Luna Lovegood\").\nIs_a_character(\"Ginny Weasley\").\nIs_a_character(\"Rubeus Hagrid\").\nIs_a_character(\"Tom Riddle\").\nIs_a_character(\"Voldemort\").\nIs_a_character(\"Sirius Black\").\nIs_a_character(\"Remus Lupin\").\nIs_a_character(\"Peter Pettigrew\").\nIs_a_character(\"James Potter\").\nIs_a_character(\"Lily Potter\").\nIs_a_character(\"Albus Severus Potter\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Bellatrix Lestrange\").\nIs_a_character(\"Narcissa Malfoy\").\nIs_a_character(\"Lucius Malfoy\").\nIs_a_character(\"Vincent Crabbe\").\nIs_a_character(\"Gregory Goyle\").\nIs_a_character(\"Cho Chang\").\nIs_a_character(\"Moaning Myrtle\").\nIs_a_character(\"Argus Filch\").\nIs_a_character(\"Peeves\").\nIs_a_character(\"Dobby\").\nIs_a_character(\"Fluffy\").\nIs_a_character(\"Hedwig\").\nIs_a_character(\"Crookshanks\").\nIs_a_character(\"Scabbers\").\nIs_a_character(\"Crookshanks\").\nIs_a_character(\"Scabbers\").\nIs_a_character(\"Sirius Black\").\nIs_a_character(\"Remus Lupin\").\nIs_a_character(\"Peter Pettigrew\").\nIs_a_character(\"James Potter\").\nIs_a_character(\"Lily Potter\").\nIs_a_character(\"Albus Severus Potter\").\nIs_a_character(\"Draco Malfoy\").\nIs_a_character(\"Bellatrix Lestrange\").\nIs_a_character(\"Narcissa Malfoy\").\nIs_a_character(\"Lucius Malfoy\").\nIs_a_character(\"Vincent Crabbe\").\nIs_a_character(\"Gregory Goyle\").\nIs_a_character"]}
{"id": 18, "answer": true, "completion": ".decl Has_energy(Object:symbol, Energy:float)\nHas_energy(\"music\", 0.5).\nHas_energy(\"gun\", 0.1).\n.decl Answer()\nAnswer() :- Has_energy(\"music\", energy1), Has_energy(\"gun\", energy2), energy1 > energy2.\n.output Answer\n\n", "completions": [".decl Has_energy(Object:symbol, Energy:float)\nHas_energy(\"music\", 0.5).\nHas_energy(\"gun\", 0.1).\n.decl Answer()\nAnswer() :- Has_energy(\"music\", energy1), Has_energy(\"gun\", energy2), energy1 > energy2.\n.output Answer\n\n"]}
{"id": 19, "answer": false, "completion": ".decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Harry Potter\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Hermione Granger\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ron Weasley\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Draco Malfoy\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Neville Longbottom\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ginny Weasley\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Harry Potter\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Hermione Granger\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ron Weasley\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Draco Malfoy\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Neville Longbottom\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ginny Weasley\", \"Korean Air Lines\").\n.decl Answer()\nAnswer() :- Has_airline(\"Harry Potter\", airline), Has_airline(\"Hermione Granger\", airline), Has_airline(\"Ron Weasley\", airline), Has_airline(\"Draco Malfoy\", airline), Has_airline(\"Neville Longbottom\", airline), Has_airline(\"Ginny Weasley\", airline).\n.output Answer\n\n", "completions": [".decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Harry Potter\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Hermione Granger\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ron Weasley\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Draco Malfoy\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Neville Longbottom\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ginny Weasley\", \"Asiana Airlines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Harry Potter\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Hermione Granger\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ron Weasley\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Draco Malfoy\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Neville Longbottom\", \"Korean Air Lines\").\n.decl Has_airline(Person:symbol, Airline:symbol)\nHas_airline(\"Ginny Weasley\", \"Korean Air Lines\").\n.decl Answer()\nAnswer() :- Has_airline(\"Harry Potter\", airline), Has_airline(\"Hermione Granger\", airline), Has_airline(\"Ron Weasley\", airline), Has_airline(\"Draco Malfoy\", airline), Has_airline(\"Neville Longbottom\", airline), Has_airline(\"Ginny Weasley\", airline).\n.output Answer\n\n"]}
{"id": 20, "answer": false, "completion": ".decl Was_part_of(City:symbol, Empire:symbol)\nWas_part_of(\"Karachi\", \"Alexander the Great\").\n.decl Answer()\nAnswer() :- Was_part_of(\"Karachi\", empire), Was_part_of(city, empire), city != \"Karachi\".\n.output Answer\n\n", "completions": [".decl Was_part_of(City:symbol, Empire:symbol)\nWas_part_of(\"Karachi\", \"Alexander the Great\").\n.decl Answer()\nAnswer() :- Was_part_of(\"Karachi\", empire), Was_part_of(city, empire), city != \"Karachi\".\n.output Answer\n\n"]}
{"id": 21, "answer": true, "completion": ".decl Was_trained_by(Artist:symbol, Trainer:symbol)\nWas_trained_by(\"Jackson Pollock\", \"Leonardo da Vinci\").\n.decl Answer()\nAnswer() :- Was_trained_by(\"Jackson Pollock\", trainer), Was_trained_by(artist, trainer).\n.output Answer\n\n", "completions": [".decl Was_trained_by(Artist:symbol, Trainer:symbol)\nWas_trained_by(\"Jackson Pollock\", \"Leonardo da Vinci\").\n.decl Answer()\nAnswer() :- Was_trained_by(\"Jackson Pollock\", trainer), Was_trained_by(artist, trainer).\n.output Answer\n\n"]}
{"id": 22, "answer": false, "completion": ".decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"fear\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"joy\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"anger\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"sadness\").\n.decl Answer()\nAnswer() :- Has_emotion(\"The Exorcist\", emotion1), Has_emotion(\"The Exorcist\", emotion2), emotion1 != emotion2.\n.output Answer\n\n", "completions": [".decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"fear\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"joy\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"anger\").\n.decl Has_emotion(Event:symbol, Emotion:symbol)\nHas_emotion(\"The Exorcist\", \"sadness\").\n.decl Answer()\nAnswer() :- Has_emotion(\"The Exorcist\", emotion1), Has_emotion(\"The Exorcist\", emotion2), emotion1 != emotion2.\n.output Answer\n\n"]}
{"id": 23, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"World War II\", \"1939-1945\").\n"]}
{"id": 24, "answer": true, "completion": ".decl Has_weapon(Person:symbol, Weapon:symbol)\nHas_weapon(\"sophist\", \"épée\").\n.decl Answer()\nAnswer() :- Has_weapon(\"sophist\", weapon).\n.output Answer\n\n", "completions": [".decl Has_weapon(Person:symbol, Weapon:symbol)\nHas_weapon(\"sophist\", \"épée\").\n.decl Answer()\nAnswer() :- Has_weapon(\"sophist\", weapon).\n.output Answer\n\n"]}
{"id": 25, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Daytona 500\", \"January\").\nHappens_in_time(\"Daytona 500\", \"February\").\nHappens_in_time(\"Daytona 500\", \"March\").\nHappens_in_time(\"Daytona 500\", \"April\").\nHappens_in_time(\"Daytona 500\", \"May\").\nHappens_in_time(\"Daytona 500\", \"June\").\nHappens_in_time(\"Daytona 500\", \"July\").\nHappens_in_time(\"Daytona 500\", \"August\").\nHappens_in_time(\"Daytona 500\", \"September\").\nHappens_in_time(\"Daytona 500\", \"October\").\nHappens_in_time(\"Daytona 500\", \"November\").\nHappens_in_time(\"Daytona 500\", \"December\").\n.decl Happens_in_year(Event:symbol, Year:float)\nHappens_in_year(\"Daytona 500\", 1946).\nHappens_in_year(\"Daytona 500\", 1947).\nHappens_in_year(\"Daytona 500\", 1948).\nHappens_in_year(\"Daytona 500\", 1949).\nHappens_in_year(\"Daytona 500\", 1950).\nHappens_in_year(\"Daytona 500\", 1951).\nHappens_in_year(\"Daytona 500\", 1952).\nHappens_in_year(\"Daytona 500\", 1953).\nHappens_in_year(\"Daytona 500\", 1954).\nHappens_in_year(\"Daytona 500\", 1955).\nHappens_in_year(\"Daytona 500\", 1956).\nHappens_in_year(\"Daytona 500\", 1957).\nHappens_in_year(\"Daytona 500\", 1958).\nHappens_in_year(\"Daytona 500\", 1959).\nHappens_in_year(\"Daytona 500\", 1960).\nHappens_in_year(\"Daytona 500\", 1961).\nHappens_in_year(\"Daytona 500\", 1962).\nHappens_in_year(\"Daytona 500\", 1963).\nHappens_in_year(\"Daytona 500\", 1964).\nHappens_in_year(\"Daytona 500\", 1965).\nHappens_in_year(\"Daytona 500\", 1966).\nHappens_in_year(\"Daytona 500\", 1967).\nHappens_in_year(\"Daytona 500\", 1968).\nHappens_in_year(\"Daytona 500\", 1969).\nHappens_in_year(\"Daytona 500\", 1970).\nHappens_in_year(\"Daytona 500\", 1971).\nHappens_in_year(\"Daytona 500\", 1972).\nHappens_in_year(\"Daytona 500\", 1973).\nHappens_in_year(\"Daytona 500\", 1974).\nHappens_in_year(\"Daytona 500\", 1975).\nHappens_in_year(\"Daytona 500\", 1976).\nHappens_in_year(\"Daytona 500\", 1977).\nHappens_in_year(\"Daytona 500\", 1978).\nHappens_in_year(\"Daytona 500\", 1979).\nHappens_in_year(\"Daytona 500", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Daytona 500\", \"January\").\nHappens_in_time(\"Daytona 500\", \"February\").\nHappens_in_time(\"Daytona 500\", \"March\").\nHappens_in_time(\"Daytona 500\", \"April\").\nHappens_in_time(\"Daytona 500\", \"May\").\nHappens_in_time(\"Daytona 500\", \"June\").\nHappens_in_time(\"Daytona 500\", \"July\").\nHappens_in_time(\"Daytona 500\", \"August\").\nHappens_in_time(\"Daytona 500\", \"September\").\nHappens_in_time(\"Daytona 500\", \"October\").\nHappens_in_time(\"Daytona 500\", \"November\").\nHappens_in_time(\"Daytona 500\", \"December\").\n.decl Happens_in_year(Event:symbol, Year:float)\nHappens_in_year(\"Daytona 500\", 1946).\nHappens_in_year(\"Daytona 500\", 1947).\nHappens_in_year(\"Daytona 500\", 1948).\nHappens_in_year(\"Daytona 500\", 1949).\nHappens_in_year(\"Daytona 500\", 1950).\nHappens_in_year(\"Daytona 500\", 1951).\nHappens_in_year(\"Daytona 500\", 1952).\nHappens_in_year(\"Daytona 500\", 1953).\nHappens_in_year(\"Daytona 500\", 1954).\nHappens_in_year(\"Daytona 500\", 1955).\nHappens_in_year(\"Daytona 500\", 1956).\nHappens_in_year(\"Daytona 500\", 1957).\nHappens_in_year(\"Daytona 500\", 1958).\nHappens_in_year(\"Daytona 500\", 1959).\nHappens_in_year(\"Daytona 500\", 1960).\nHappens_in_year(\"Daytona 500\", 1961).\nHappens_in_year(\"Daytona 500\", 1962).\nHappens_in_year(\"Daytona 500\", 1963).\nHappens_in_year(\"Daytona 500\", 1964).\nHappens_in_year(\"Daytona 500\", 1965).\nHappens_in_year(\"Daytona 500\", 1966).\nHappens_in_year(\"Daytona 500\", 1967).\nHappens_in_year(\"Daytona 500\", 1968).\nHappens_in_year(\"Daytona 500\", 1969).\nHappens_in_year(\"Daytona 500\", 1970).\nHappens_in_year(\"Daytona 500\", 1971).\nHappens_in_year(\"Daytona 500\", 1972).\nHappens_in_year(\"Daytona 500\", 1973).\nHappens_in_year(\"Daytona 500\", 1974).\nHappens_in_year(\"Daytona 500\", 1975).\nHappens_in_year(\"Daytona 500\", 1976).\nHappens_in_year(\"Daytona 500\", 1977).\nHappens_in_year(\"Daytona 500\", 1978).\nHappens_in_year(\"Daytona 500\", 1979).\nHappens_in_year(\"Daytona 500"]}
{"id": 26, "answer": false, "completion": ".decl Is_in_region(Object:symbol, Region:symbol)\nIs_in_region(\"citrus\", \"Siberia\").\nIs_in_region(\"citrus\", \"Ulaanbaatar\").\n.decl Is_in_region(Object:symbol, Region:symbol)\nIs_in_region(\"Ulaanbaatar\", \"Mongolia\").\n.decl Answer()\nAnswer() :- Is_in_region(\"citrus\", region), Is_in_region(\"Ulaanbaatar\", region).\n.output Answer\n\n", "completions": [".decl Is_in_region(Object:symbol, Region:symbol)\nIs_in_region(\"citrus\", \"Siberia\").\nIs_in_region(\"citrus\", \"Ulaanbaatar\").\n.decl Is_in_region(Object:symbol, Region:symbol)\nIs_in_region(\"Ulaanbaatar\", \"Mongolia\").\n.decl Answer()\nAnswer() :- Is_in_region(\"citrus\", region), Is_in_region(\"Ulaanbaatar\", region).\n.output Answer\n\n"]}
{"id": 27, "answer": true, "completion": ".decl Has_craton(Location:symbol, Craton:symbol)\nHas_craton(\"New York Harbor\", \"North America\").\n.decl Has_volcanic_activity(Location:symbol, Volcanic_activity:symbol)\nHas_volcanic_activity(\"New York Harbor\", \"no\").\n.decl Answer()\nAnswer() :- Has_craton(\"New York Harbor\", craton), Has_volcanic_activity(\"New York Harbor\", volcanic_activity), craton != volcanic_activity.\n.output Answer\n\n", "completions": [".decl Has_craton(Location:symbol, Craton:symbol)\nHas_craton(\"New York Harbor\", \"North America\").\n.decl Has_volcanic_activity(Location:symbol, Volcanic_activity:symbol)\nHas_volcanic_activity(\"New York Harbor\", \"no\").\n.decl Answer()\nAnswer() :- Has_craton(\"New York Harbor\", craton), Has_volcanic_activity(\"New York Harbor\", volcanic_activity), craton != volcanic_activity.\n.output Answer\n\n"]}
{"id": 28, "answer": true, "completion": ".decl Is_in_time(Event:symbol, Time:symbol)\nIs_in_time(\"dark\", \"night\").\nIs_in_time(\"dark\", \"dusk\").\nIs_in_time(\"dark\", \"dawn\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Palace of Westminster\", \"night\").\nHappens_in_time(\"Palace of Westminster\", \"dusk\").\nHappens_in_time(\"Palace of Westminster\", \"dawn\").\n.decl Answer()\nAnswer() :- Is_in_time(\"dark\", time), Happens_in_time(\"Palace of Westminster\", time).\n.output Answer\n\n", "completions": [".decl Is_in_time(Event:symbol, Time:symbol)\nIs_in_time(\"dark\", \"night\").\nIs_in_time(\"dark\", \"dusk\").\nIs_in_time(\"dark\", \"dawn\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Palace of Westminster\", \"night\").\nHappens_in_time(\"Palace of Westminster\", \"dusk\").\nHappens_in_time(\"Palace of Westminster\", \"dawn\").\n.decl Answer()\nAnswer() :- Is_in_time(\"dark\", time), Happens_in_time(\"Palace of Westminster\", time).\n.output Answer\n\n"]}
{"id": 29, "answer": false, "completion": ".decl Has_age_group(Person:symbol, Age_group:symbol)\nHas_age_group(\"teenager\", \"teenagers\").\nHas_age_group(\"young adult\", \"young adults\").\nHas_age_group(\"adult\", \"adults\").\n.decl Has_depression(Person:symbol, Depression:symbol)\nHas_depression(\"teenager\", \"depression\").\nHas_depression(\"young adult\", \"depression\").\nHas_depression(\"adult\", \"depression\").\n.decl Has_SSRI(Person:symbol, SSRI:symbol)\nHas_SSRI(\"teenager\", \"SSRI\").\nHas_SSRI(\"young adult\", \"SSRI\").\nHas_SSRI(\"adult\", \"SSRI\").\n.decl Answer()\nAnswer() :- Has_age_group(person, age_group), Has_depression(person, depression), Has_SSRI(person, ssr), age_group == \"teenagers\", depression == \"depression\", ssr == \"SSRI\".\n.output Answer\n\n", "completions": [".decl Has_age_group(Person:symbol, Age_group:symbol)\nHas_age_group(\"teenager\", \"teenagers\").\nHas_age_group(\"young adult\", \"young adults\").\nHas_age_group(\"adult\", \"adults\").\n.decl Has_depression(Person:symbol, Depression:symbol)\nHas_depression(\"teenager\", \"depression\").\nHas_depression(\"young adult\", \"depression\").\nHas_depression(\"adult\", \"depression\").\n.decl Has_SSRI(Person:symbol, SSRI:symbol)\nHas_SSRI(\"teenager\", \"SSRI\").\nHas_SSRI(\"young adult\", \"SSRI\").\nHas_SSRI(\"adult\", \"SSRI\").\n.decl Answer()\nAnswer() :- Has_age_group(person, age_group), Has_depression(person, depression), Has_SSRI(person, ssr), age_group == \"teenagers\", depression == \"depression\", ssr == \"SSRI\".\n.output Answer\n\n"]}
{"id": 30, "answer": true, "completion": ".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Marco Rubio\", \"Islam\").\n.decl Answer()\nAnswer() :- Has_religion(\"Marco Rubio\", religion).\n.output Answer\n\n", "completions": [".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Marco Rubio\", \"Islam\").\n.decl Answer()\nAnswer() :- Has_religion(\"Marco Rubio\", religion).\n.output Answer\n\n"]}
{"id": 31, "answer": true, "completion": ".decl Has_interest(Person:symbol, Interest:symbol)\nHas_interest(\"Persephone\", \"gardening\").\nHas_interest(\"Persephone\", \"landscape architecture\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Persephone\", \"gardening\").\nHas_skill(\"Persephone\", \"landscape architecture\").\n.decl Answer()\nAnswer() :- Has_interest(\"Persephone\", interest), Has_skill(\"Persephone\", skill), interest = skill.\n.output Answer\n\n", "completions": [".decl Has_interest(Person:symbol, Interest:symbol)\nHas_interest(\"Persephone\", \"gardening\").\nHas_interest(\"Persephone\", \"landscape architecture\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Persephone\", \"gardening\").\nHas_skill(\"Persephone\", \"landscape architecture\").\n.decl Answer()\nAnswer() :- Has_interest(\"Persephone\", interest), Has_skill(\"Persephone\", skill), interest = skill.\n.output Answer\n\n"]}
{"id": 32, "answer": false, "completion": ".decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Neon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Neon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Helium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Helium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Hydrogen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Hydrogen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Carbon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Carbon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Nitrogen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Nitrogen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Oxygen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Oxygen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Fluorine\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Fluorine\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Sodium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Sodium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Magnesium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Magnesium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Aluminium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Aluminium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Silicon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Silicon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Phosphorus\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Phosphorus\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Sulfur\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Sulfur\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Chlorine\").\n.decl Near(Element", "completions": [".decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Neon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Neon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Helium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Helium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Hydrogen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Hydrogen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Carbon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Carbon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Nitrogen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Nitrogen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Oxygen\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Oxygen\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Fluorine\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Fluorine\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Sodium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Sodium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Magnesium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Magnesium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Aluminium\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Aluminium\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Silicon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Silicon\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Phosphorus\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Phosphorus\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Sulfur\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Sulfur\", \"Argon\").\n.decl Near(Element_A:symbol, Element_B:symbol)\nNear(\"Argon\", \"Chlorine\").\n.decl Near(Element"]}
{"id": 33, "answer": true, "completion": ".decl Has_spouse(Person:symbol, Spouse:symbol)\nHas_spouse(\"Thomas Greenhill\", \"Mary Ann Greenhill\").\nHas_spouse(\"Mary Ann Greenhill\", \"Thomas Greenhill\").\n.decl Answer()\nAnswer() :- Has_spouse(\"Thomas Greenhill\", spouse1), Has_spouse(\"Mary Ann Greenhill\", spouse2), spouse1 != spouse2.\n.output Answer\n\n", "completions": [".decl Has_spouse(Person:symbol, Spouse:symbol)\nHas_spouse(\"Thomas Greenhill\", \"Mary Ann Greenhill\").\nHas_spouse(\"Mary Ann Greenhill\", \"Thomas Greenhill\").\n.decl Answer()\nAnswer() :- Has_spouse(\"Thomas Greenhill\", spouse1), Has_spouse(\"Mary Ann Greenhill\", spouse2), spouse1 != spouse2.\n.output Answer\n\n"]}
{"id": 34, "answer": false, "completion": ".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"yellow pages\", 100).\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"high school student\", 10).\n.decl Answer()\nAnswer() :- Has_n_pages(\"high school student\", n_pages1), Has_n_pages(\"yellow pages\", n_pages2), n_pages1 > n_pages2.\n.output Answer\n\n", "completions": [".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"yellow pages\", 100).\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"high school student\", 10).\n.decl Answer()\nAnswer() :- Has_n_pages(\"high school student\", n_pages1), Has_n_pages(\"yellow pages\", n_pages2), n_pages1 > n_pages2.\n.output Answer\n\n"]}
{"id": 35, "answer": true, "completion": ".decl Distance(Place_A:symbol, Place_B:symbol, Distance:float)\nDistance(\"Alcatraz island\", \"Siberia\", 15000).\n.decl Answer()\nAnswer() :- Distance(\"Alcatraz island\", \"Siberia\", distance), distance > 1000.\n.output Answer\n\n", "completions": [".decl Distance(Place_A:symbol, Place_B:symbol, Distance:float)\nDistance(\"Alcatraz island\", \"Siberia\", 15000).\n.decl Answer()\nAnswer() :- Distance(\"Alcatraz island\", \"Siberia\", distance), distance > 1000.\n.output Answer\n\n"]}
{"id": 36, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Titanic\", 1.5).\nHas_density(\"Gulf of Finland\", 1.5).\n.decl Answer()\nAnswer() :- Has_density(\"Titanic\", density1), Has_density(\"Gulf of Finland\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Titanic\", 1.5).\nHas_density(\"Gulf of Finland\", 1.5).\n.decl Answer()\nAnswer() :- Has_density(\"Titanic\", density1), Has_density(\"Gulf of Finland\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 37, "answer": false, "completion": ".decl Has_habitat(Species:symbol, Habitat:symbol)\nHas_habitat(\"snowy owl\", \"Sonoran desert\").\nHas_habitat(\"snowy owl\", \"Alaska\").\n.decl Has_habitat(Species:symbol, Habitat:symbol)\nHas_habitat(\"snowy owl\", \"Sonoran desert\").\nHas_habitat(\"snowy owl\", \"Alaska\").\n.decl Answer()\nAnswer() :- Has_habitat(\"snowy owl\", \"Sonoran desert\").\nAnswer() :- Has_habitat(\"snowy owl\", \"Alaska\").\n.output Answer\n\n", "completions": [".decl Has_habitat(Species:symbol, Habitat:symbol)\nHas_habitat(\"snowy owl\", \"Sonoran desert\").\nHas_habitat(\"snowy owl\", \"Alaska\").\n.decl Has_habitat(Species:symbol, Habitat:symbol)\nHas_habitat(\"snowy owl\", \"Sonoran desert\").\nHas_habitat(\"snowy owl\", \"Alaska\").\n.decl Answer()\nAnswer() :- Has_habitat(\"snowy owl\", \"Sonoran desert\").\nAnswer() :- Has_habitat(\"snowy owl\", \"Alaska\").\n.output Answer\n\n"]}
{"id": 38, "answer": false, "completion": ".decl Killed(Person:symbol, Victim:symbol)\nKilled(\"Ranavalona I\", \"Ranavalona II\").\nKilled(\"Ranavalona I\", \"Ranavalona III\").\nKilled(\"Ranavalona I\", \"Ranavalona IV\").\nKilled(\"Ranavalona I\", \"Ranavalona V\").\nKilled(\"Ranavalona I\", \"Ranavalona VI\").\nKilled(\"Ranavalona I\", \"Ranavalona VII\").\nKilled(\"Ranavalona I\", \"Ranavalona VIII\").\nKilled(\"Ranavalona I\", \"Ranavalona IX\").\nKilled(\"Ranavalona I\", \"Ranavalona X\").\nKilled(\"Ranavalona I\", \"Ranavalona XI\").\nKilled(\"Ranavalona I\", \"Ranavalona XII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XV\").\nKilled(\"Ranavalona I\", \"Ranavalona XVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XL\").\nKilled(\"Ranavalona I\", \"Ranavalona XLI\").\nKilled(\"Ranavalona I\", \"Ranavalona XLII\").\nKilled(\"Ranavalona I\", \"Ranavalona XLIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XLIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XLV\").\nKilled(\"Ranavalona I", "completions": [".decl Killed(Person:symbol, Victim:symbol)\nKilled(\"Ranavalona I\", \"Ranavalona II\").\nKilled(\"Ranavalona I\", \"Ranavalona III\").\nKilled(\"Ranavalona I\", \"Ranavalona IV\").\nKilled(\"Ranavalona I\", \"Ranavalona V\").\nKilled(\"Ranavalona I\", \"Ranavalona VI\").\nKilled(\"Ranavalona I\", \"Ranavalona VII\").\nKilled(\"Ranavalona I\", \"Ranavalona VIII\").\nKilled(\"Ranavalona I\", \"Ranavalona IX\").\nKilled(\"Ranavalona I\", \"Ranavalona X\").\nKilled(\"Ranavalona I\", \"Ranavalona XI\").\nKilled(\"Ranavalona I\", \"Ranavalona XII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XV\").\nKilled(\"Ranavalona I\", \"Ranavalona XVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXX\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXV\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVI\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXVIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XXXIX\").\nKilled(\"Ranavalona I\", \"Ranavalona XL\").\nKilled(\"Ranavalona I\", \"Ranavalona XLI\").\nKilled(\"Ranavalona I\", \"Ranavalona XLII\").\nKilled(\"Ranavalona I\", \"Ranavalona XLIII\").\nKilled(\"Ranavalona I\", \"Ranavalona XLIV\").\nKilled(\"Ranavalona I\", \"Ranavalona XLV\").\nKilled(\"Ranavalona I"]}
{"id": 39, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"oil painter\", \"red\").\nHas_color(\"cactus\", \"green\").\n.decl Has_scale_insect(Object:symbol, Scale_insect:symbol)\nHas_scale_insect(\"cactus\", \"scale insect\").\n.decl Answer()\nAnswer() :- Has_color(\"oil painter\", color), Has_scale_insect(\"cactus\", scale_insect), color != scale_insect.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"oil painter\", \"red\").\nHas_color(\"cactus\", \"green\").\n.decl Has_scale_insect(Object:symbol, Scale_insect:symbol)\nHas_scale_insect(\"cactus\", \"scale insect\").\n.decl Answer()\nAnswer() :- Has_color(\"oil painter\", color), Has_scale_insect(\"cactus\", scale_insect), color != scale_insect.\n.output Answer\n\n"]}
{"id": 40, "answer": false, "completion": ".decl Was_written(Event:symbol, Time:symbol)\nWas_written(\"Second Amendment\", \"1791\").\n.decl Was_written(Event:symbol, Time:symbol)\nWas_written(\"black Americans\", \"1791\").\n.decl Answer()\nAnswer() :- Was_written(\"Second Amendment\", time), Was_written(\"black Americans\", time).\n.output Answer\n\n", "completions": [".decl Was_written(Event:symbol, Time:symbol)\nWas_written(\"Second Amendment\", \"1791\").\n.decl Was_written(Event:symbol, Time:symbol)\nWas_written(\"black Americans\", \"1791\").\n.decl Answer()\nAnswer() :- Was_written(\"Second Amendment\", time), Was_written(\"black Americans\", time).\n.output Answer\n\n"]}
{"id": 41, "answer": false, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"argon\", 18).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"helium\", 2).\nHas_atomic_number(\"methane\", 4).\nHas_atomic_number(\"ammonia\", 5).\nHas_atomic_number(\"nitric oxide\", 7).\nHas_atomic_number(\"nitrogen dioxide\", 8).\nHas_atomic_number(\"carbon dioxide\", 10).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"sulfur dioxide\", 16).\nHas_atomic_number(\"sulfur trioxide\", 16).\nHas_atomic_number(\"sulfur trioxide\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"chlorine dioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine dioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"argon\", 18).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"helium\", 2).\nHas_atomic_number(\"methane\", 4).\nHas_atomic_number(\"ammonia\", 5).\nHas_atomic_number(\"nitric oxide\", 7).\nHas_atomic_number(\"nitrogen dioxide\", 8).\nHas_atomic_number(\"carbon dioxide\", 10).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"sulfur dioxide\", 16).\nHas_atomic_number(\"sulfur trioxide\", 16).\nHas_atomic_number(\"sulfur trioxide\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"chlorine dioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine dioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_atomic_number(\"chlorine trioxide\", 17).\nHas_"]}
{"id": 42, "answer": false, "completion": ".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Bob Marley\", \"face\").\nHas_image(\"smoke shop\", \"image\").\n.decl Answer()\nAnswer() :- Has_image(\"Bob Marley\", image), Has_image(\"smoke shop\", image).\n.output Answer\n\n", "completions": [".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Bob Marley\", \"face\").\nHas_image(\"smoke shop\", \"image\").\n.decl Answer()\nAnswer() :- Has_image(\"Bob Marley\", image), Has_image(\"smoke shop\", image).\n.output Answer\n\n"]}
{"id": 43, "answer": false, "completion": ".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Pablo Escobar\", \"el Patrón\").\nHas_nickname(\"Robert Moses Grove\", \"the Mayor\").\n.decl Has_nickname_collection(Person:symbol, Nickname_collection:symbol)\nHas_nickname_collection(\"Pablo Escobar\", \"el Patrón\").\nHas_nickname_collection(\"Robert Moses Grove\", \"the Mayor\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Pablo Escobar\", nickname), Has_nickname_collection(\"Robert Moses Grove\", nickname_collection), nickname > nickname_collection.\n.output Answer\n\n", "completions": [".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Pablo Escobar\", \"el Patrón\").\nHas_nickname(\"Robert Moses Grove\", \"the Mayor\").\n.decl Has_nickname_collection(Person:symbol, Nickname_collection:symbol)\nHas_nickname_collection(\"Pablo Escobar\", \"el Patrón\").\nHas_nickname_collection(\"Robert Moses Grove\", \"the Mayor\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Pablo Escobar\", nickname), Has_nickname_collection(\"Robert Moses Grove\", nickname_collection), nickname > nickname_collection.\n.output Answer\n\n"]}
{"id": 44, "answer": false, "completion": ".decl Has_connection(Franchise:symbol, Child_abuser:symbol)\nHas_connection(\"Subway\", \"John Salvi\").\nHas_connection(\"Subway\", \"Jeffrey Epsteen\").\nHas_connection(\"Subway\", \"Jeffrey D. Yurick\").\nHas_connection(\"Subway\", \"Robert B. Terman\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn", "completions": [".decl Has_connection(Franchise:symbol, Child_abuser:symbol)\nHas_connection(\"Subway\", \"John Salvi\").\nHas_connection(\"Subway\", \"Jeffrey Epsteen\").\nHas_connection(\"Subway\", \"Jeffrey D. Yurick\").\nHas_connection(\"Subway\", \"Robert B. Terman\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn\").\nHas_connection(\"Subway\", \"Kevin S. Hahn"]}
{"id": 45, "answer": true, "completion": ".decl Uses(Object:symbol, Fuel:symbol)\nUses(\"autopilot\", \"fossil fuels\").\n.decl Answer()\nAnswer() :- Uses(\"autopilot\", fuel).\n.output Answer\n\n", "completions": [".decl Uses(Object:symbol, Fuel:symbol)\nUses(\"autopilot\", \"fossil fuels\").\n.decl Answer()\nAnswer() :- Uses(\"autopilot\", fuel).\n.output Answer\n\n"]}
{"id": 46, "answer": false, "completion": ".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"psychiatric patients\", 0).\nHas_rank(\"United States Air Force\", 1).\n.decl Answer()\nAnswer() :- Has_rank(\"psychiatric patients\", rank1), Has_rank(\"United States Air Force\", rank2), rank1 >= rank2.\n.output Answer\n\n", "completions": [".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"psychiatric patients\", 0).\nHas_rank(\"United States Air Force\", 1).\n.decl Answer()\nAnswer() :- Has_rank(\"psychiatric patients\", rank1), Has_rank(\"United States Air Force\", rank2), rank1 >= rank2.\n.output Answer\n\n"]}
{"id": 47, "answer": false, "completion": ".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Nicole Kidman\", \"Tom Cruise\").\nKnows(\"Tom Cruise\", \"Katie Holmes\").\nKnows(\"Katie Holmes\", \"Scientologist\").\n.decl Answer()\nAnswer() :- Knows(\"Nicole Kidman\", Person_B), Knows(Person_B, \"Scientologist\").\n.output Answer\n\n", "completions": [".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Nicole Kidman\", \"Tom Cruise\").\nKnows(\"Tom Cruise\", \"Katie Holmes\").\nKnows(\"Katie Holmes\", \"Scientologist\").\n.decl Answer()\nAnswer() :- Knows(\"Nicole Kidman\", Person_B), Knows(Person_B, \"Scientologist\").\n.output Answer\n\n"]}
{"id": 48, "answer": false, "completion": ".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Sasha Obama\", \"John Lennon\").\nKnows(\"John Lennon\", \"Yoko Ono\").\n.decl Answer()\nAnswer() :- Knows(\"Sasha Obama\", person_b), Knows(person_b, \"John Lennon\").\n.output Answer\n\n", "completions": [".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Sasha Obama\", \"John Lennon\").\nKnows(\"John Lennon\", \"Yoko Ono\").\n.decl Answer()\nAnswer() :- Knows(\"Sasha Obama\", person_b), Knows(person_b, \"John Lennon\").\n.output Answer\n\n"]}
{"id": 49, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"tunnels at CERN\", 10).\nHas_length(\"High Speed 1 rails\", 100).\n.decl Answer()\nAnswer() :- Has_length(\"tunnels at CERN\", length1), Has_length(\"High Speed 1 rails\", length2), length1 <= length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"tunnels at CERN\", 10).\nHas_length(\"High Speed 1 rails\", 100).\n.decl Answer()\nAnswer() :- Has_length(\"tunnels at CERN\", length1), Has_length(\"High Speed 1 rails\", length2), length1 <= length2.\n.output Answer\n\n"]}
{"id": 50, "answer": true, "completion": ".decl Has_strength(Animal:symbol, Strength:float)\nHas_strength(\"elephant\", 1000).\nHas_strength(\"macaque\", 100).\n.decl Answer()\nAnswer() :- Has_strength(\"elephant\", strength1), Has_strength(\"macaque\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Animal:symbol, Strength:float)\nHas_strength(\"elephant\", 1000).\nHas_strength(\"macaque\", 100).\n.decl Answer()\nAnswer() :- Has_strength(\"elephant\", strength1), Has_strength(\"macaque\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 51, "answer": true, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Ubuntu people\", \"Ubuntu\").\n.decl Answer()\nAnswer() :- Speaks(\"Ubuntu people\", language).\n.output Answer\n\n", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Ubuntu people\", \"Ubuntu\").\n.decl Answer()\nAnswer() :- Speaks(\"Ubuntu people\", language).\n.output Answer\n\n"]}
{"id": 52, "answer": true, "completion": ".decl Has_risk(Activity:symbol, Risk:float)\nHas_risk(\"cycling\", 0.8).\nHas_risk(\"pelvis fractures\", 0.1).\n.decl Answer()\nAnswer() :- Has_risk(\"cycling\", risk1), Has_risk(\"pelvis fractures\", risk2), risk1 > risk2.\n.output Answer\n\n", "completions": [".decl Has_risk(Activity:symbol, Risk:float)\nHas_risk(\"cycling\", 0.8).\nHas_risk(\"pelvis fractures\", 0.1).\n.decl Answer()\nAnswer() :- Has_risk(\"cycling\", risk1), Has_risk(\"pelvis fractures\", risk2), risk1 > risk2.\n.output Answer\n\n"]}
{"id": 53, "answer": true, "completion": ".decl Has_immunity(Animal:symbol, Disease:symbol)\nHas_immunity(\"platypus\", \"cholera\").\n.decl Answer()\nAnswer() :- Has_immunity(\"platypus\", disease).\n.output Answer\n\n", "completions": [".decl Has_immunity(Animal:symbol, Disease:symbol)\nHas_immunity(\"platypus\", \"cholera\").\n.decl Answer()\nAnswer() :- Has_immunity(\"platypus\", disease).\n.output Answer\n\n"]}
{"id": 54, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"moose\", 1000).\nHas_weight(\"minotaur\", 500).\n.decl Answer()\nAnswer() :- Has_weight(\"moose\", weight1), Has_weight(\"minotaur\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"moose\", 1000).\nHas_weight(\"minotaur\", 500).\n.decl Answer()\nAnswer() :- Has_weight(\"moose\", weight1), Has_weight(\"minotaur\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 55, "answer": true, "completion": ".decl Has_bones(Object:symbol)\nHas_bones(\"anchovy pizza\").\n.decl Answer()\nAnswer() :- Has_bones(\"anchovy pizza\").\n.output Answer\n\n", "completions": [".decl Has_bones(Object:symbol)\nHas_bones(\"anchovy pizza\").\n.decl Answer()\nAnswer() :- Has_bones(\"anchovy pizza\").\n.output Answer\n\n"]}
{"id": 56, "answer": false, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"Bengal cat\", \"pancakes\").\n.decl Has_mass(Food:symbol, Mass:float)\nHas_mass(\"pancakes\", 0.5).\n.decl Answer()\nAnswer() :- Eats(\"Bengal cat\", food), Has_mass(food, mass), mass > 0.5.\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"Bengal cat\", \"pancakes\").\n.decl Has_mass(Food:symbol, Mass:float)\nHas_mass(\"pancakes\", 0.5).\n.decl Answer()\nAnswer() :- Eats(\"Bengal cat\", food), Has_mass(food, mass), mass > 0.5.\n.output Answer\n\n"]}
{"id": 57, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"zucchini\", \"zucchini\").\n.decl Has_keyboard_layout(Name:symbol, Layout:symbol)\nHas_keyboard_layout(\"zucchini\", \"QWERTY\").\n.decl Answer()\nAnswer() :- Has_name(\"zucchini\", name), Has_keyboard_layout(name, layout), layout = \"QWERTY\".\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"zucchini\", \"zucchini\").\n.decl Has_keyboard_layout(Name:symbol, Layout:symbol)\nHas_keyboard_layout(\"zucchini\", \"QWERTY\").\n.decl Answer()\nAnswer() :- Has_name(\"zucchini\", name), Has_keyboard_layout(name, layout), layout = \"QWERTY\".\n.output Answer\n\n"]}
{"id": 58, "answer": false, "completion": ".decl Borders(City:symbol, Body_of_water:symbol)\nBorders(\"The Hague\", \"North Sea\").\nBorders(\"The Hague\", \"Atlantic Ocean\").\nBorders(\"The Hague\", \"North Sea\").\n.decl Answer()\nAnswer() :- Borders(\"The Hague\", body_of_water1), Borders(\"The Hague\", body_of_water2), body_of_water1 \\= body_of_water2.\n.output Answer\n\n", "completions": [".decl Borders(City:symbol, Body_of_water:symbol)\nBorders(\"The Hague\", \"North Sea\").\nBorders(\"The Hague\", \"Atlantic Ocean\").\nBorders(\"The Hague\", \"North Sea\").\n.decl Answer()\nAnswer() :- Borders(\"The Hague\", body_of_water1), Borders(\"The Hague\", body_of_water2), body_of_water1 \\= body_of_water2.\n.output Answer\n\n"]}
{"id": 59, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"person\", 12).\nHas_age(\"person\", 13).\n.decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"person\", \"female\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"person\", 12).\nHas_age(\"person\", 13).\n.decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"person\", \"female\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has_age_range(Person:symbol, Age_range:symbol)\nHas_age_range(\"person\", \"12-13\").\n.decl Has"]}
{"id": 60, "answer": false, "completion": ".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Iron Chef\", \"Japan\").\nHas_country(\"Iron Chef\", \"Korea\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"people in Korea under Japanese Rule\", \"Korea\").\nHas_country(\"people in Korea under Japanese Rule\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_country(\"Iron Chef\", country), Has_country(\"people in Korea under Japanese Rule\", country).\n.output Answer\n\n", "completions": [".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Iron Chef\", \"Japan\").\nHas_country(\"Iron Chef\", \"Korea\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"people in Korea under Japanese Rule\", \"Korea\").\nHas_country(\"people in Korea under Japanese Rule\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_country(\"Iron Chef\", country), Has_country(\"people in Korea under Japanese Rule\", country).\n.output Answer\n\n"]}
{"id": 61, "answer": false, "completion": ".decl Delivers_message(Bird:symbol, Message:symbol)\nDelivers_message(\"bald eagle\", \"urgent message\").\nDelivers_message(\"bald eagle\", \"message\").\nDelivers_message(\"b-52\", \"message\").\n.decl Answer()\nAnswer() :- Delivers_message(\"bald eagle\", message), Delivers_message(\"b-52\", message), message == \"urgent message\".\n.output Answer\n\n", "completions": [".decl Delivers_message(Bird:symbol, Message:symbol)\nDelivers_message(\"bald eagle\", \"urgent message\").\nDelivers_message(\"bald eagle\", \"message\").\nDelivers_message(\"b-52\", \"message\").\n.decl Answer()\nAnswer() :- Delivers_message(\"bald eagle\", message), Delivers_message(\"b-52\", message), message == \"urgent message\".\n.output Answer\n\n"]}
{"id": 62, "answer": false, "completion": ".decl Looks_like(Person_A:symbol, Person_B:symbol)\nLooks_like(\"Snoopy\", \"Chance\").\nLooks_like(\"Chance\", \"Homeward Bound\").\n.decl Answer()\nAnswer() :- Looks_like(\"Snoopy\", person_b), Looks_like(person_b, person_a), Looks_like(person_a, \"Chance\").\n.output Answer\n\n", "completions": [".decl Looks_like(Person_A:symbol, Person_B:symbol)\nLooks_like(\"Snoopy\", \"Chance\").\nLooks_like(\"Chance\", \"Homeward Bound\").\n.decl Answer()\nAnswer() :- Looks_like(\"Snoopy\", person_b), Looks_like(person_b, person_a), Looks_like(person_a, \"Chance\").\n.output Answer\n\n"]}
{"id": 63, "answer": true, "completion": ".decl Is_a_lapidary(Person:symbol)\nIs_a_lapidary(\"Dioskourides\").\n.decl Answer()\nAnswer() :- Is_a_lapidary(\"Dioskourides\").\n.output Answer\n\n", "completions": [".decl Is_a_lapidary(Person:symbol)\nIs_a_lapidary(\"Dioskourides\").\n.decl Answer()\nAnswer() :- Is_a_lapidary(\"Dioskourides\").\n.output Answer\n\n"]}
{"id": 64, "answer": true, "completion": ".decl Has_butler(Family:symbol)\nHas_butler(\"middle class\").\n.decl Answer()\nAnswer() :- Has_butler(\"middle class\").\n.output Answer\n\n", "completions": [".decl Has_butler(Family:symbol)\nHas_butler(\"middle class\").\n.decl Answer()\nAnswer() :- Has_butler(\"middle class\").\n.output Answer\n\n"]}
{"id": 65, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\",", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Rodham Clinton\").\nHas_name(\"Hillary Clinton\", \"Hillary Clinton\").\nHas_name(\"Hillary Clinton\","]}
{"id": 66, "answer": true, "completion": ".decl Sells(Store:symbol, Product:symbol)\nSells(\"New York Public Library\", \"Alpo\").\n.decl Answer()\nAnswer() :- Sells(\"New York Public Library\", product).\n.output Answer\n\n", "completions": [".decl Sells(Store:symbol, Product:symbol)\nSells(\"New York Public Library\", \"Alpo\").\n.decl Answer()\nAnswer() :- Sells(\"New York Public Library\", product).\n.output Answer\n\n"]}
{"id": 67, "answer": false, "completion": ".decl Is_prophet(Person:symbol)\nIs_prophet(\"Solomon\").\nIs_prophet(\"David\").\nIs_prophet(\"Isaiah\").\nIs_prophet(\"Muhammad\").\n.decl Is_king(Person:symbol)\nIs_king(\"Solomon\").\nIs_king(\"David\").\n.decl Answer()\nAnswer() :- Is_prophet(\"Solomon\"), Is_prophet(\"Isaiah\"), Is_prophet(\"Muhammad\"), Is_king(\"Solomon\"), Is_king(\"David\"), Is_prophet(\"Solomon\") > Is_prophet(\"David\").\n.output Answer\n\n", "completions": [".decl Is_prophet(Person:symbol)\nIs_prophet(\"Solomon\").\nIs_prophet(\"David\").\nIs_prophet(\"Isaiah\").\nIs_prophet(\"Muhammad\").\n.decl Is_king(Person:symbol)\nIs_king(\"Solomon\").\nIs_king(\"David\").\n.decl Answer()\nAnswer() :- Is_prophet(\"Solomon\"), Is_prophet(\"Isaiah\"), Is_prophet(\"Muhammad\"), Is_king(\"Solomon\"), Is_king(\"David\"), Is_prophet(\"Solomon\") > Is_prophet(\"David\").\n.output Answer\n\n"]}
{"id": 68, "answer": true, "completion": ".decl Has_oppa(Person:symbol, Oppa:symbol)\nHas_oppa(\"Taylor Swift\", \"Snoopy\").\n.decl Answer()\nAnswer() :- Has_oppa(\"Taylor Swift\", oppa).\n.output Answer\n\n", "completions": [".decl Has_oppa(Person:symbol, Oppa:symbol)\nHas_oppa(\"Taylor Swift\", \"Snoopy\").\n.decl Answer()\nAnswer() :- Has_oppa(\"Taylor Swift\", oppa).\n.output Answer\n\n"]}
{"id": 69, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"West Point\", \"1860s\").\nHappens_in_time(\"Confederate States Army\", \"1860s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"West Point\", time), Happens_in_time(\"Confederate States Army\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"West Point\", \"1860s\").\nHappens_in_time(\"Confederate States Army\", \"1860s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"West Point\", time), Happens_in_time(\"Confederate States Army\", time).\n.output Answer\n\n"]}
{"id": 70, "answer": false, "completion": ".decl Repulses(Person_A:symbol, Person_B:symbol)\nRepulses(\"Blaire White\", \"conservatism\").\n.decl Answer()\nAnswer() :- Repulses(\"Blaire White\", person_b), Repulses(person_b, \"conservatism\").\n.output Answer\n\n", "completions": [".decl Repulses(Person_A:symbol, Person_B:symbol)\nRepulses(\"Blaire White\", \"conservatism\").\n.decl Answer()\nAnswer() :- Repulses(\"Blaire White\", person_b), Repulses(person_b, \"conservatism\").\n.output Answer\n\n"]}
{"id": 71, "answer": true, "completion": ".decl Has_part(Plant:symbol, Part:symbol)\nHas_part(\"aloe vera\", \"stem\").\nHas_part(\"aloe vera\", \"leaf\").\nHas_part(\"aloe vera\", \"flower\").\n.decl Has_taste(Part:symbol, Taste:symbol)\nHas_taste(\"stem\", \"bitter\").\nHas_taste(\"stem\", \"sweet\").\nHas_taste(\"leaf\", \"bitter\").\nHas_taste(\"leaf\", \"sweet\").\nHas_taste(\"flower\", \"bitter\").\nHas_taste(\"flower\", \"sweet\").\n.decl Answer()\nAnswer() :- Has_part(\"aloe vera\", part), Has_taste(part, taste), taste = \"sweet\".\n.output Answer\n\n", "completions": [".decl Has_part(Plant:symbol, Part:symbol)\nHas_part(\"aloe vera\", \"stem\").\nHas_part(\"aloe vera\", \"leaf\").\nHas_part(\"aloe vera\", \"flower\").\n.decl Has_taste(Part:symbol, Taste:symbol)\nHas_taste(\"stem\", \"bitter\").\nHas_taste(\"stem\", \"sweet\").\nHas_taste(\"leaf\", \"bitter\").\nHas_taste(\"leaf\", \"sweet\").\nHas_taste(\"flower\", \"bitter\").\nHas_taste(\"flower\", \"sweet\").\n.decl Answer()\nAnswer() :- Has_part(\"aloe vera\", part), Has_taste(part, taste), taste = \"sweet\".\n.output Answer\n\n"]}
{"id": 72, "answer": true, "completion": ".decl Studies(Oceanographer:symbol, Science:symbol)\nStudies(\"oceanographer\", \"biology\").\nStudies(\"oceanographer\", \"chemistry\").\nStudies(\"oceanographer\", \"physics\").\nStudies(\"oceanographer\", \"mathematics\").\nStudies(\"oceanographer\", \"computer science\").\n.decl Answer()\nAnswer() :- Studies(\"oceanographer\", science1), Studies(\"oceanographer\", science2), Studies(\"oceanographer\", science3), Studies(\"oceanographer\", science4), Studies(\"oceanographer\", science5), science1 != science2, science1 != science3, science1 != science4, science1 != science5, science2 != science3, science2 != science4, science2 != science5, science3 != science4, science3 != science5, science4 != science5.\n.output Answer\n\n", "completions": [".decl Studies(Oceanographer:symbol, Science:symbol)\nStudies(\"oceanographer\", \"biology\").\nStudies(\"oceanographer\", \"chemistry\").\nStudies(\"oceanographer\", \"physics\").\nStudies(\"oceanographer\", \"mathematics\").\nStudies(\"oceanographer\", \"computer science\").\n.decl Answer()\nAnswer() :- Studies(\"oceanographer\", science1), Studies(\"oceanographer\", science2), Studies(\"oceanographer\", science3), Studies(\"oceanographer\", science4), Studies(\"oceanographer\", science5), science1 != science2, science1 != science3, science1 != science4, science1 != science5, science2 != science3, science2 != science4, science2 != science5, science3 != science4, science3 != science5, science4 != science5.\n.output Answer\n\n"]}
{"id": 73, "answer": false, "completion": ".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Kurt Cobain\", \"grunge\").\n.decl Has_death_year(Artist:symbol, Death_year:float)\nHas_death_year(\"Kurt Cobain\", 1994).\n.decl Answer()\nAnswer() :- Has_genre(\"Kurt Cobain\", genre), Has_death_year(\"Kurt Cobain\", death_year), death_year > 1994.\n.output Answer\n\n", "completions": [".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Kurt Cobain\", \"grunge\").\n.decl Has_death_year(Artist:symbol, Death_year:float)\nHas_death_year(\"Kurt Cobain\", 1994).\n.decl Answer()\nAnswer() :- Has_genre(\"Kurt Cobain\", genre), Has_death_year(\"Kurt Cobain\", death_year), death_year > 1994.\n.output Answer\n\n"]}
{"id": 74, "answer": false, "completion": ".decl Met(Person_A:symbol, Person_B:symbol)\nMet(\"Immanuel Kant\", \"George Washington\").\nMet(\"Immanuel Kant\", \"John Adams\").\nMet(\"Immanuel Kant\", \"Thomas Jefferson\").\nMet(\"Immanuel Kant\", \"James Madison\").\nMet(\"Immanuel Kant\", \"James Monroe\").\nMet(\"Immanuel Kant\", \"John Quincy Adams\").\nMet(\"Immanuel Kant\", \"Andrew Jackson\").\nMet(\"Immanuel Kant\", \"Martin Van Buren\").\nMet(\"Immanuel Kant\", \"William Henry Harrison\").\nMet(\"Immanuel Kant\", \"John Tyler\").\nMet(\"Immanuel Kant\", \"James K. Polk\").\nMet(\"Immanuel Kant\", \"Zachary Taylor\").\nMet(\"Immanuel Kant\", \"Millard Fillmore\").\nMet(\"Immanuel Kant\", \"Franklin Pierce\").\nMet(\"Immanuel Kant\", \"James Buchanan\").\nMet(\"Immanuel Kant\", \"Abraham Lincoln\").\nMet(\"Immanuel Kant\", \"Andrew Johnson\").\nMet(\"Immanuel Kant\", \"Ulysses S. Grant\").\nMet(\"Immanuel Kant\", \"Rutherford B. Hayes\").\nMet(\"Immanuel Kant\", \"James Garfield\").\nMet(\"Immanuel Kant\", \"Chester A. Arthur\").\nMet(\"Immanuel Kant\", \"Grover Cleveland\").\nMet(\"Immanuel Kant\", \"Benjamin Harrison\").\nMet(\"Immanuel Kant\", \"William McKinley\").\nMet(\"Immanuel Kant\", \"Theodore Roosevelt\").\nMet(\"Immanuel Kant\", \"William Howard Taft\").\nMet(\"Immanuel Kant\", \"Woodrow Wilson\").\nMet(\"Immanuel Kant\", \"Warren G. Harding\").\nMet(\"Immanuel Kant\", \"Calvin Coolidge\").\nMet(\"Immanuel Kant\", \"Herbert Hoover\").\nMet(\"Immanuel Kant\", \"Franklin D. Roosevelt\").\nMet(\"Immanuel Kant\", \"Harry S. Truman\").\nMet(\"Immanuel Kant\", \"Dwight D. Eisenhower\").\nMet(\"Immanuel Kant\", \"John F. Kennedy\").\nMet(\"Immanuel Kant\", \"Lyndon B. Johnson\").\nMet(\"Immanuel Kant\", \"Richard Nixon\").\nMet(\"Immanuel Kant\", \"Gerald Ford\").\nMet(\"Immanuel Kant\", \"Jimmy Carter\").\nMet(\"Immanuel Kant\", \"Ronald Reagan\").\nMet(\"Immanuel Kant\", \"George H. W. Bush\").\nMet(\"Immanuel Kant\", \"Bill Clinton\").\nMet(\"Immanuel Kant\", \"George W. Bush\").\nMet(\"Immanuel Kant\", \"Barack Obama\").\nMet(\"Immanuel Kant\", \"Donald Trump\").\n.decl Answer()\nAnswer() :- Met(\"Immanuel Kant\", \"George Washington\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Adams\").\nAnswer() :- Met(\"Immanuel Kant\", \"Thomas Jefferson\").\nAnswer() :- Met(\"Immanuel Kant\", \"James Madison\").\nAnswer() :- Met(\"Immanuel Kant\", \"James Monroe\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Quincy Adams\").\nAnswer() :- Met(\"Immanuel Kant\", \"Andrew Jackson\").\nAnswer() :- Met(\"Immanuel Kant\", \"Martin Van Buren\").\nAnswer() :- Met(\"Immanuel Kant\", \"William Henry Harrison\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Tyler\").\nAnswer() :- Met(\"Immanuel Kant\", \"James K. Polk\").\nAnswer() :- Met(\"Immanuel Kant\", \"Zachary Taylor\").\nAnswer() :- Met(\"Immanuel Kant\", \"Millard Fillmore\").\nAnswer() :- Met(\"Immanuel Kant\", \"Franklin Pierce\").\nAnswer() :- Met(\"Immanuel Kant\", \"James", "completions": [".decl Met(Person_A:symbol, Person_B:symbol)\nMet(\"Immanuel Kant\", \"George Washington\").\nMet(\"Immanuel Kant\", \"John Adams\").\nMet(\"Immanuel Kant\", \"Thomas Jefferson\").\nMet(\"Immanuel Kant\", \"James Madison\").\nMet(\"Immanuel Kant\", \"James Monroe\").\nMet(\"Immanuel Kant\", \"John Quincy Adams\").\nMet(\"Immanuel Kant\", \"Andrew Jackson\").\nMet(\"Immanuel Kant\", \"Martin Van Buren\").\nMet(\"Immanuel Kant\", \"William Henry Harrison\").\nMet(\"Immanuel Kant\", \"John Tyler\").\nMet(\"Immanuel Kant\", \"James K. Polk\").\nMet(\"Immanuel Kant\", \"Zachary Taylor\").\nMet(\"Immanuel Kant\", \"Millard Fillmore\").\nMet(\"Immanuel Kant\", \"Franklin Pierce\").\nMet(\"Immanuel Kant\", \"James Buchanan\").\nMet(\"Immanuel Kant\", \"Abraham Lincoln\").\nMet(\"Immanuel Kant\", \"Andrew Johnson\").\nMet(\"Immanuel Kant\", \"Ulysses S. Grant\").\nMet(\"Immanuel Kant\", \"Rutherford B. Hayes\").\nMet(\"Immanuel Kant\", \"James Garfield\").\nMet(\"Immanuel Kant\", \"Chester A. Arthur\").\nMet(\"Immanuel Kant\", \"Grover Cleveland\").\nMet(\"Immanuel Kant\", \"Benjamin Harrison\").\nMet(\"Immanuel Kant\", \"William McKinley\").\nMet(\"Immanuel Kant\", \"Theodore Roosevelt\").\nMet(\"Immanuel Kant\", \"William Howard Taft\").\nMet(\"Immanuel Kant\", \"Woodrow Wilson\").\nMet(\"Immanuel Kant\", \"Warren G. Harding\").\nMet(\"Immanuel Kant\", \"Calvin Coolidge\").\nMet(\"Immanuel Kant\", \"Herbert Hoover\").\nMet(\"Immanuel Kant\", \"Franklin D. Roosevelt\").\nMet(\"Immanuel Kant\", \"Harry S. Truman\").\nMet(\"Immanuel Kant\", \"Dwight D. Eisenhower\").\nMet(\"Immanuel Kant\", \"John F. Kennedy\").\nMet(\"Immanuel Kant\", \"Lyndon B. Johnson\").\nMet(\"Immanuel Kant\", \"Richard Nixon\").\nMet(\"Immanuel Kant\", \"Gerald Ford\").\nMet(\"Immanuel Kant\", \"Jimmy Carter\").\nMet(\"Immanuel Kant\", \"Ronald Reagan\").\nMet(\"Immanuel Kant\", \"George H. W. Bush\").\nMet(\"Immanuel Kant\", \"Bill Clinton\").\nMet(\"Immanuel Kant\", \"George W. Bush\").\nMet(\"Immanuel Kant\", \"Barack Obama\").\nMet(\"Immanuel Kant\", \"Donald Trump\").\n.decl Answer()\nAnswer() :- Met(\"Immanuel Kant\", \"George Washington\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Adams\").\nAnswer() :- Met(\"Immanuel Kant\", \"Thomas Jefferson\").\nAnswer() :- Met(\"Immanuel Kant\", \"James Madison\").\nAnswer() :- Met(\"Immanuel Kant\", \"James Monroe\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Quincy Adams\").\nAnswer() :- Met(\"Immanuel Kant\", \"Andrew Jackson\").\nAnswer() :- Met(\"Immanuel Kant\", \"Martin Van Buren\").\nAnswer() :- Met(\"Immanuel Kant\", \"William Henry Harrison\").\nAnswer() :- Met(\"Immanuel Kant\", \"John Tyler\").\nAnswer() :- Met(\"Immanuel Kant\", \"James K. Polk\").\nAnswer() :- Met(\"Immanuel Kant\", \"Zachary Taylor\").\nAnswer() :- Met(\"Immanuel Kant\", \"Millard Fillmore\").\nAnswer() :- Met(\"Immanuel Kant\", \"Franklin Pierce\").\nAnswer() :- Met(\"Immanuel Kant\", \"James"]}
{"id": 75, "answer": false, "completion": ".decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"steel company\", -1).\n.decl Has_market_share(Company:symbol, Market_share:float)\nHas_market_share(\"steel company\", 0.5).\n.decl Has_market_share(Company:symbol, Market_share:float)\nHas_market_share(\"bulk carrier company\", 0.5).\n.decl Answer()\nAnswer() :- Has_profit(\"steel company\", profit), Has_market_share(\"bulk carrier company\", market_share), profit > market_share.\n.output Answer\n\n", "completions": [".decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"steel company\", -1).\n.decl Has_market_share(Company:symbol, Market_share:float)\nHas_market_share(\"steel company\", 0.5).\n.decl Has_market_share(Company:symbol, Market_share:float)\nHas_market_share(\"bulk carrier company\", 0.5).\n.decl Answer()\nAnswer() :- Has_profit(\"steel company\", profit), Has_market_share(\"bulk carrier company\", market_share), profit > market_share.\n.output Answer\n\n"]}
{"id": 76, "answer": false, "completion": ".decl Uses(Person:symbol, Subject:symbol)\nUses(\"geographer\", \"biochemistry\").\n.decl Answer()\nAnswer() :- Uses(\"geographer\", subject), Uses(\"biochemist\", subject).\n.output Answer\n\n", "completions": [".decl Uses(Person:symbol, Subject:symbol)\nUses(\"geographer\", \"biochemistry\").\n.decl Answer()\nAnswer() :- Uses(\"geographer\", subject), Uses(\"biochemist\", subject).\n.output Answer\n\n"]}
{"id": 77, "answer": false, "completion": ".decl Is_produced_in(Coffee:symbol, Country:symbol)\nIs_produced_in(\"coffee\", \"Ethiopia\").\nIs_produced_in(\"coffee\", \"Brazil\").\nIs_produced_in(\"coffee\", \"Indonesia\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Uganda\").\nIs_produced_in(\"coffee\", \"Kenya\").\nIs_produced_in(\"coffee\", \"Colombia\").\nIs_produced_in(\"coffee\", \"Sudan\").\nIs_produced_in(\"coffee\", \"Brazil\").\nIs_produced_in(\"coffee\", \"Vietnam\").\nIs_produced_in(\"coffee\", \"Burundi\").\nIs_produced_in(\"coffee\", \"Cameroon\").\nIs_produced_in(\"coffee\", \"Peru\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"Uganda\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Costa Rica\").\nIs_produced_in(\"coffee\", \"Guatemala\").\nIs_produced_in(\"coffee\", \"Haiti\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\",", "completions": [".decl Is_produced_in(Coffee:symbol, Country:symbol)\nIs_produced_in(\"coffee\", \"Ethiopia\").\nIs_produced_in(\"coffee\", \"Brazil\").\nIs_produced_in(\"coffee\", \"Indonesia\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Uganda\").\nIs_produced_in(\"coffee\", \"Kenya\").\nIs_produced_in(\"coffee\", \"Colombia\").\nIs_produced_in(\"coffee\", \"Sudan\").\nIs_produced_in(\"coffee\", \"Brazil\").\nIs_produced_in(\"coffee\", \"Vietnam\").\nIs_produced_in(\"coffee\", \"Burundi\").\nIs_produced_in(\"coffee\", \"Cameroon\").\nIs_produced_in(\"coffee\", \"Peru\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"Uganda\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Costa Rica\").\nIs_produced_in(\"coffee\", \"Guatemala\").\nIs_produced_in(\"coffee\", \"Haiti\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\", \"Dominican Republic\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Jamaica\").\nIs_produced_in(\"coffee\", \"Mexico\").\nIs_produced_in(\"coffee\", \"El Salvador\").\nIs_produced_in(\"coffee\", \"Honduras\").\nIs_produced_in(\"coffee\", \"Nicaragua\").\nIs_produced_in(\"coffee\", \"Panama\").\nIs_produced_in(\"coffee\","]}
{"id": 78, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"BLT\", \"1940s\").\nHappens_in_time(\"Casablanca\", \"1940s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"BLT\", time), Happens_in_time(\"Casablanca\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"BLT\", \"1940s\").\nHappens_in_time(\"Casablanca\", \"1940s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"BLT\", time), Happens_in_time(\"Casablanca\", time).\n.output Answer\n\n"]}
{"id": 79, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Statue of Liberty\", 0.5).\nHas_volume(\"Voyages of Christopher Columbus\", 0.5).\n.decl Has_cargo_capacity(Ship:symbol, Capacity:float)\nHas_cargo_capacity(\"Voyages of Christopher Columbus\", 100).\n.decl Answer()\nAnswer() :- Has_volume(\"Statue of Liberty\", volume), Has_cargo_capacity(\"Voyages of Christopher Columbus\", capacity), volume < capacity.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Statue of Liberty\", 0.5).\nHas_volume(\"Voyages of Christopher Columbus\", 0.5).\n.decl Has_cargo_capacity(Ship:symbol, Capacity:float)\nHas_cargo_capacity(\"Voyages of Christopher Columbus\", 100).\n.decl Answer()\nAnswer() :- Has_volume(\"Statue of Liberty\", volume), Has_cargo_capacity(\"Voyages of Christopher Columbus\", capacity), volume < capacity.\n.output Answer\n\n"]}
{"id": 80, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Jolly Green Giant\", 100).\nHas_height(\"Pyrenees\", 2000).\n.decl Answer()\nAnswer() :- Has_height(\"Jolly Green Giant\", height1), Has_height(\"Pyrenees\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Jolly Green Giant\", 100).\nHas_height(\"Pyrenees\", 2000).\n.decl Answer()\nAnswer() :- Has_height(\"Jolly Green Giant\", height1), Has_height(\"Pyrenees\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 81, "answer": true, "completion": ".decl Influenced(Person:symbol, Party:symbol)\nInfluenced(\"Karl Marx\", \"communist party of China\").\n.decl Answer()\nAnswer() :- Influenced(\"Karl Marx\", party), Influenced(person, party).\n.output Answer\n\n", "completions": [".decl Influenced(Person:symbol, Party:symbol)\nInfluenced(\"Karl Marx\", \"communist party of China\").\n.decl Answer()\nAnswer() :- Influenced(\"Karl Marx\", party), Influenced(person, party).\n.output Answer\n\n"]}
{"id": 82, "answer": true, "completion": ".decl Has_protein(Food:symbol, Protein:symbol)\nHas_protein(\"soylent\", \"pea\").\n.decl Answer()\nAnswer() :- Has_protein(\"soylent\", protein).\n.output Answer\n\n", "completions": [".decl Has_protein(Food:symbol, Protein:symbol)\nHas_protein(\"soylent\", \"pea\").\n.decl Answer()\nAnswer() :- Has_protein(\"soylent\", protein).\n.output Answer\n\n"]}
{"id": 83, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Quebec\", \"christianity\").\nBelongs_to_religion(\"Quebec\", \"islam\").\nBelongs_to_religion(\"Quebec\", \"judaism\").\nBelongs_to_religion(\"Quebec\", \"buddhism\").\nBelongs_to_religion(\"Quebec\", \"hinduism\").\nBelongs_to_religion(\"Quebec\", \"sikhism\").\nBelongs_to_religion(\"Quebec\", \"shintoism\").\nBelongs_to_religion(\"Quebec\", \"taoism\").\nBelongs_to_religion(\"Quebec\", \"zoroastrianism\").\nBelongs_to_religion(\"Quebec\", \"baha'i\").\nBelongs_to_religion(\"Quebec\", \"non-religious\").\nBelongs_to_religion(\"Quebec\", \"other\").\nBelongs_to_religion(\"Quebec\", \"none\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Quebec\", religion), Belongs_to_religion(\"Quebec\", \"islam\").\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Quebec\", \"christianity\").\nBelongs_to_religion(\"Quebec\", \"islam\").\nBelongs_to_religion(\"Quebec\", \"judaism\").\nBelongs_to_religion(\"Quebec\", \"buddhism\").\nBelongs_to_religion(\"Quebec\", \"hinduism\").\nBelongs_to_religion(\"Quebec\", \"sikhism\").\nBelongs_to_religion(\"Quebec\", \"shintoism\").\nBelongs_to_religion(\"Quebec\", \"taoism\").\nBelongs_to_religion(\"Quebec\", \"zoroastrianism\").\nBelongs_to_religion(\"Quebec\", \"baha'i\").\nBelongs_to_religion(\"Quebec\", \"non-religious\").\nBelongs_to_religion(\"Quebec\", \"other\").\nBelongs_to_religion(\"Quebec\", \"none\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Quebec\", religion), Belongs_to_religion(\"Quebec\", \"islam\").\n.output Answer\n\n"]}
{"id": 84, "answer": true, "completion": ".decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Family Guy\", \"American West Coast\").\n.decl Answer()\nAnswer() :- Happens_in_place(\"Family Guy\", place).\n.output Answer\n\n", "completions": [".decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Family Guy\", \"American West Coast\").\n.decl Answer()\nAnswer() :- Happens_in_place(\"Family Guy\", place).\n.output Answer\n\n"]}
{"id": 85, "answer": true, "completion": ".decl Has_unit(Measurement:symbol, Unit:symbol)\nHas_unit(\"length\", \"metre\").\nHas_unit(\"length\", \"foot\").\n.decl Answer()\nAnswer() :- Has_unit(\"length\", unit), Has_unit(\"length\", unit2), unit != unit2.\n.output Answer\n\n", "completions": [".decl Has_unit(Measurement:symbol, Unit:symbol)\nHas_unit(\"length\", \"metre\").\nHas_unit(\"length\", \"foot\").\n.decl Answer()\nAnswer() :- Has_unit(\"length\", unit), Has_unit(\"length\", unit2), unit != unit2.\n.output Answer\n\n"]}
{"id": 86, "answer": true, "completion": ".decl Played_key_role(Person:symbol, Event:symbol)\nPlayed_key_role(\"Charles the Bold\", \"Hundred Years' War\").\n.decl Answer()\nAnswer() :- Played_key_role(\"Charles the Bold\", event).\n.output Answer\n\n", "completions": [".decl Played_key_role(Person:symbol, Event:symbol)\nPlayed_key_role(\"Charles the Bold\", \"Hundred Years' War\").\n.decl Answer()\nAnswer() :- Played_key_role(\"Charles the Bold\", event).\n.output Answer\n\n"]}
{"id": 87, "answer": false, "completion": ".decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"gorilla\", \"gorilla\").\nHas_species(\"panda bear\", \"panda\").\n.decl Has_genus(Species:symbol, Genus:symbol)\nHas_genus(\"gorilla\", \"gorilla\").\nHas_genus(\"panda\", \"panda\").\n.decl Answer()\nAnswer() :- Has_species(\"gorilla\", species), Has_species(\"panda bear\", species2), Has_genus(species, genus), Has_genus(species2, genus).\n.output Answer\n\n", "completions": [".decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"gorilla\", \"gorilla\").\nHas_species(\"panda bear\", \"panda\").\n.decl Has_genus(Species:symbol, Genus:symbol)\nHas_genus(\"gorilla\", \"gorilla\").\nHas_genus(\"panda\", \"panda\").\n.decl Answer()\nAnswer() :- Has_species(\"gorilla\", species), Has_species(\"panda bear\", species2), Has_genus(species, genus), Has_genus(species2, genus).\n.output Answer\n\n"]}
{"id": 88, "answer": true, "completion": ".decl Born_in(Person:symbol, Place:symbol)\nBorn_in(\"Christina Aguilera\", \"Manhattan\").\nBorn_in(\"Christina Aguilera\", \"Queens\").\nBorn_in(\"Christina Aguilera\", \"Bronx\").\nBorn_in(\"Christina Aguilera\", \"Brooklyn\").\nBorn_in(\"Christina Aguilera\", \"Staten Island\").\n.decl Answer()\nAnswer() :- Born_in(\"Christina Aguilera\", \"Staten Island\").\n.output Answer\n\n", "completions": [".decl Born_in(Person:symbol, Place:symbol)\nBorn_in(\"Christina Aguilera\", \"Manhattan\").\nBorn_in(\"Christina Aguilera\", \"Queens\").\nBorn_in(\"Christina Aguilera\", \"Bronx\").\nBorn_in(\"Christina Aguilera\", \"Brooklyn\").\nBorn_in(\"Christina Aguilera\", \"Staten Island\").\n.decl Answer()\nAnswer() :- Born_in(\"Christina Aguilera\", \"Staten Island\").\n.output Answer\n\n"]}
{"id": 89, "answer": false, "completion": ".decl Has_two_letter_pair_partner(Letter:symbol, Pair_partner:symbol)\nHas_two_letter_pair_partner(\"H\", \"I\").\nHas_two_letter_pair_partner(\"H\", \"J\").\nHas_two_letter_pair_partner(\"H\", \"K\").\nHas_two_letter_pair_partner(\"H\", \"L\").\nHas_two_letter_pair_partner(\"H\", \"M\").\nHas_two_letter_pair_partner(\"H\", \"N\").\nHas_two_letter_pair_partner(\"H\", \"O\").\nHas_two_letter_pair_partner(\"H\", \"P\").\nHas_two_letter_pair_partner(\"H\", \"Q\").\nHas_two_letter_pair_partner(\"H\", \"R\").\nHas_two_letter_pair_partner(\"H\", \"S\").\nHas_two_letter_pair_partner(\"H\", \"T\").\nHas_two_letter_pair_partner(\"H\", \"U\").\nHas_two_letter_pair_partner(\"H\", \"V\").\nHas_two_letter_pair_partner(\"H\", \"W\").\nHas_two_letter_pair_partner(\"H\", \"X\").\nHas_two_letter_pair_partner(\"H\", \"Y\").\nHas_two_letter_pair_partner(\"H\", \"Z\").\n.decl Answer()\nAnswer() :- Has_two_letter_pair_partner(\"H\", letter1), Has_two_letter_pair_partner(letter1, letter2), letter2 = \"E\".\n.output Answer\n\n", "completions": [".decl Has_two_letter_pair_partner(Letter:symbol, Pair_partner:symbol)\nHas_two_letter_pair_partner(\"H\", \"I\").\nHas_two_letter_pair_partner(\"H\", \"J\").\nHas_two_letter_pair_partner(\"H\", \"K\").\nHas_two_letter_pair_partner(\"H\", \"L\").\nHas_two_letter_pair_partner(\"H\", \"M\").\nHas_two_letter_pair_partner(\"H\", \"N\").\nHas_two_letter_pair_partner(\"H\", \"O\").\nHas_two_letter_pair_partner(\"H\", \"P\").\nHas_two_letter_pair_partner(\"H\", \"Q\").\nHas_two_letter_pair_partner(\"H\", \"R\").\nHas_two_letter_pair_partner(\"H\", \"S\").\nHas_two_letter_pair_partner(\"H\", \"T\").\nHas_two_letter_pair_partner(\"H\", \"U\").\nHas_two_letter_pair_partner(\"H\", \"V\").\nHas_two_letter_pair_partner(\"H\", \"W\").\nHas_two_letter_pair_partner(\"H\", \"X\").\nHas_two_letter_pair_partner(\"H\", \"Y\").\nHas_two_letter_pair_partner(\"H\", \"Z\").\n.decl Answer()\nAnswer() :- Has_two_letter_pair_partner(\"H\", letter1), Has_two_letter_pair_partner(letter1, letter2), letter2 = \"E\".\n.output Answer\n\n"]}
{"id": 90, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"quarter\", 0.5).\nHas_volume(\"human kidney\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"quarter\", volume1), Has_volume(\"human kidney\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"quarter\", 0.5).\nHas_volume(\"human kidney\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"quarter\", volume1), Has_volume(\"human kidney\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 91, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"James Webb Space Telescope\", \"JWST\").\nHas_name(\"James Webb Space Telescope\", \"James Webb\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"James Webb Space Telescope\", \"JWST\").\nHas_name(\"James Webb Space Telescope\", \"James Webb\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space Telescope\", \"James Webb Space Telescope\").\nHas_name(\"James Webb Space"]}
{"id": 92, "answer": true, "completion": ".decl Liked(Person:symbol, Book:symbol)\nLiked(\"P. G. Wodehouse\", \"The Hunger Games\").\n.decl Answer()\nAnswer() :- Liked(\"P. G. Wodehouse\", book).\n.output Answer\n\n", "completions": [".decl Liked(Person:symbol, Book:symbol)\nLiked(\"P. G. Wodehouse\", \"The Hunger Games\").\n.decl Answer()\nAnswer() :- Liked(\"P. G. Wodehouse\", book).\n.output Answer\n\n"]}
{"id": 93, "answer": true, "completion": ".decl Has_lorem_ipsum(Website:symbol)\nHas_lorem_ipsum(\"Google\").\nHas_lorem_ipsum(\"Facebook\").\nHas_lorem_ipsum(\"Twitter\").\n.decl Answer()\nAnswer() :- Has_lorem_ipsum(\"Google\").\nAnswer() :- Has_lorem_ipsum(\"Facebook\").\nAnswer() :- Has_lorem_ipsum(\"Twitter\").\n.output Answer\n\n", "completions": [".decl Has_lorem_ipsum(Website:symbol)\nHas_lorem_ipsum(\"Google\").\nHas_lorem_ipsum(\"Facebook\").\nHas_lorem_ipsum(\"Twitter\").\n.decl Answer()\nAnswer() :- Has_lorem_ipsum(\"Google\").\nAnswer() :- Has_lorem_ipsum(\"Facebook\").\nAnswer() :- Has_lorem_ipsum(\"Twitter\").\n.output Answer\n\n"]}
{"id": 94, "answer": true, "completion": ".decl Reads(Person:symbol, Newspaper:symbol)\nReads(\"William Shakespeare\", \"Daily Mirror\").\n.decl Answer()\nAnswer() :- Reads(\"William Shakespeare\", newspaper).\n.output Answer\n\n", "completions": [".decl Reads(Person:symbol, Newspaper:symbol)\nReads(\"William Shakespeare\", \"Daily Mirror\").\n.decl Answer()\nAnswer() :- Reads(\"William Shakespeare\", newspaper).\n.output Answer\n\n"]}
{"id": 95, "answer": true, "completion": ".decl Has_n_visitors(Place:symbol, N_visitors:float)\nHas_n_visitors(\"Taco Bell\", 100000).\nHas_n_visitors(\"Roy Rogers\", 10000).\n.decl Has_n_years(Place:symbol, N_years:float)\nHas_n_years(\"Taco Bell\", 10).\nHas_n_years(\"Roy Rogers\", 5).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Taco Bell\", visitors1), Has_n_visitors(\"Roy Rogers\", visitors2), Has_n_years(\"Taco Bell\", years1), Has_n_years(\"Roy Rogers\", years2), visitors1 > visitors2, years1 > years2.\n.output Answer\n\n", "completions": [".decl Has_n_visitors(Place:symbol, N_visitors:float)\nHas_n_visitors(\"Taco Bell\", 100000).\nHas_n_visitors(\"Roy Rogers\", 10000).\n.decl Has_n_years(Place:symbol, N_years:float)\nHas_n_years(\"Taco Bell\", 10).\nHas_n_years(\"Roy Rogers\", 5).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Taco Bell\", visitors1), Has_n_visitors(\"Roy Rogers\", visitors2), Has_n_years(\"Taco Bell\", years1), Has_n_years(\"Roy Rogers\", years2), visitors1 > visitors2, years1 > years2.\n.output Answer\n\n"]}
{"id": 96, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"snow\", \"winter\").\nHappens_in_time(\"sandals\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"snow\", time), Happens_in_time(\"sandals\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"snow\", \"winter\").\nHappens_in_time(\"sandals\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"snow\", time), Happens_in_time(\"sandals\", time).\n.output Answer\n\n"]}
{"id": 97, "answer": true, "completion": ".decl Was_born_in(Person:symbol, Country:symbol)\nWas_born_in(\"Nikola Tesla\", \"Austria\").\nWas_born_in(\"Abraham Lincoln\", \"America\").\n.decl Was_involved_in(Country:symbol, Event:symbol)\nWas_involved_in(\"Austria\", \"Austrian Empire\").\nWas_involved_in(\"America\", \"American Civil War\").\n.decl Answer()\nAnswer() :- Was_born_in(\"Nikola Tesla\", country), Was_involved_in(country, event).\n.output Answer\n\n", "completions": [".decl Was_born_in(Person:symbol, Country:symbol)\nWas_born_in(\"Nikola Tesla\", \"Austria\").\nWas_born_in(\"Abraham Lincoln\", \"America\").\n.decl Was_involved_in(Country:symbol, Event:symbol)\nWas_involved_in(\"Austria\", \"Austrian Empire\").\nWas_involved_in(\"America\", \"American Civil War\").\n.decl Answer()\nAnswer() :- Was_born_in(\"Nikola Tesla\", country), Was_involved_in(country, event).\n.output Answer\n\n"]}
{"id": 98, "answer": true, "completion": ".decl Age(Person:symbol, Age:float)\nAge(\"Ada Lovelace\", 37).\nAge(\"Ada Lovelace\", 36).\nAge(\"Ada Lovelace\", 35).\nAge(\"Ada Lovelace\", 34).\nAge(\"Ada Lovelace\", 33).\nAge(\"Ada Lovelace\", 32).\nAge(\"Ada Lovelace\", 31).\nAge(\"Ada Lovelace\", 30).\nAge(\"Ada Lovelace\", 29).\nAge(\"Ada Lovelace\", 28).\nAge(\"Ada Lovelace\", 27).\nAge(\"Ada Lovelace\", 26).\nAge(\"Ada Lovelace\", 25).\nAge(\"Ada Lovelace\", 24).\nAge(\"Ada Lovelace\", 23).\nAge(\"Ada Lovelace\", 22).\nAge(\"Ada Lovelace\", 21).\nAge(\"Ada Lovelace\", 20).\nAge(\"Ada Lovelace\", 19).\nAge(\"Ada Lovelace\", 18).\nAge(\"Ada Lovelace\", 17).\nAge(\"Ada Lovelace\", 16).\nAge(\"Ada Lovelace\", 15).\nAge(\"Ada Lovelace\", 14).\nAge(\"Ada Lovelace\", 13).\nAge(\"Ada Lovelace\", 12).\nAge(\"Ada Lovelace\", 11).\nAge(\"Ada Lovelace\", 10).\nAge(\"Ada Lovelace\", 9).\nAge(\"Ada Lovelace\", 8).\nAge(\"Ada Lovelace\", 7).\nAge(\"Ada Lovelace\", 6).\nAge(\"Ada Lovelace\", 5).\nAge(\"Ada Lovelace\", 4).\nAge(\"Ada Lovelace\", 3).\nAge(\"Ada Lovelace\", 2).\nAge(\"Ada Lovelace\", 1).\n.decl Answer()\nAnswer() :- Age(\"Ada Lovelace\", age1), Age(\"Ada Lovelace\", age2), age1 < age2.\n.output Answer\n\n", "completions": [".decl Age(Person:symbol, Age:float)\nAge(\"Ada Lovelace\", 37).\nAge(\"Ada Lovelace\", 36).\nAge(\"Ada Lovelace\", 35).\nAge(\"Ada Lovelace\", 34).\nAge(\"Ada Lovelace\", 33).\nAge(\"Ada Lovelace\", 32).\nAge(\"Ada Lovelace\", 31).\nAge(\"Ada Lovelace\", 30).\nAge(\"Ada Lovelace\", 29).\nAge(\"Ada Lovelace\", 28).\nAge(\"Ada Lovelace\", 27).\nAge(\"Ada Lovelace\", 26).\nAge(\"Ada Lovelace\", 25).\nAge(\"Ada Lovelace\", 24).\nAge(\"Ada Lovelace\", 23).\nAge(\"Ada Lovelace\", 22).\nAge(\"Ada Lovelace\", 21).\nAge(\"Ada Lovelace\", 20).\nAge(\"Ada Lovelace\", 19).\nAge(\"Ada Lovelace\", 18).\nAge(\"Ada Lovelace\", 17).\nAge(\"Ada Lovelace\", 16).\nAge(\"Ada Lovelace\", 15).\nAge(\"Ada Lovelace\", 14).\nAge(\"Ada Lovelace\", 13).\nAge(\"Ada Lovelace\", 12).\nAge(\"Ada Lovelace\", 11).\nAge(\"Ada Lovelace\", 10).\nAge(\"Ada Lovelace\", 9).\nAge(\"Ada Lovelace\", 8).\nAge(\"Ada Lovelace\", 7).\nAge(\"Ada Lovelace\", 6).\nAge(\"Ada Lovelace\", 5).\nAge(\"Ada Lovelace\", 4).\nAge(\"Ada Lovelace\", 3).\nAge(\"Ada Lovelace\", 2).\nAge(\"Ada Lovelace\", 1).\n.decl Answer()\nAnswer() :- Age(\"Ada Lovelace\", age1), Age(\"Ada Lovelace\", age2), age1 < age2.\n.output Answer\n\n"]}
{"id": 99, "answer": true, "completion": ".decl Uses(Object:symbol, Tool:symbol)\nUses(\"Asian black bear\", \"chopsticks\").\n.decl Answer()\nAnswer() :- Uses(\"Asian black bear\", tool).\n.output Answer\n\n", "completions": [".decl Uses(Object:symbol, Tool:symbol)\nUses(\"Asian black bear\", \"chopsticks\").\n.decl Answer()\nAnswer() :- Uses(\"Asian black bear\", tool).\n.output Answer\n\n"]}
{"id": 100, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"time\", 0.01).\nHas_price(\"Toronto Star\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"time\", price1), Has_price(\"Toronto Star\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"time\", 0.01).\nHas_price(\"Toronto Star\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"time\", price1), Has_price(\"Toronto Star\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 101, "answer": false, "completion": ".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"Apollo 13\", 0).\nHas_n_deaths(\"Apollo 14\", 0).\nHas_n_deaths(\"Apollo 15\", 0).\nHas_n_deaths(\"Apollo 16\", 0).\nHas_n_deaths(\"Apollo 17\", 0).\nHas_n_deaths(\"Apollo 18\", 0).\nHas_n_deaths(\"Apollo 19\", 0).\nHas_n_deaths(\"Apollo 20\", 0).\nHas_n_deaths(\"Apollo 21\", 0).\nHas_n_deaths(\"Apollo 22\", 0).\nHas_n_deaths(\"Apollo 23\", 0).\nHas_n_deaths(\"Apollo 24\", 0).\nHas_n_deaths(\"Apollo 25\", 0).\nHas_n_deaths(\"Apollo 26\", 0).\nHas_n_deaths(\"Apollo 27\", 0).\nHas_n_deaths(\"Apollo 28\", 0).\nHas_n_deaths(\"Apollo 29\", 0).\nHas_n_deaths(\"Apollo 30\", 0).\nHas_n_deaths(\"Apollo 31\", 0).\nHas_n_deaths(\"Apollo 32\", 0).\nHas_n_deaths(\"Apollo 33\", 0).\nHas_n_deaths(\"Apollo 34\", 0).\nHas_n_deaths(\"Apollo 35\", 0).\nHas_n_deaths(\"Apollo 36\", 0).\nHas_n_deaths(\"Apollo 37\", 0).\nHas_n_deaths(\"Apollo 38\", 0).\nHas_n_deaths(\"Apollo 39\", 0).\nHas_n_deaths(\"Apollo 40\", 0).\nHas_n_deaths(\"Apollo 41\", 0).\nHas_n_deaths(\"Apollo 42\", 0).\nHas_n_deaths(\"Apollo 43\", 0).\nHas_n_deaths(\"Apollo 44\", 0).\nHas_n_deaths(\"Apollo 45\", 0).\nHas_n_deaths(\"Apollo 46\", 0).\nHas_n_deaths(\"Apollo 47\", 0).\nHas_n_deaths(\"Apollo 48\", 0).\nHas_n_deaths(\"Apollo 49\", 0).\nHas_n_deaths(\"Apollo 50\", 0).\nHas_n_deaths(\"Apollo 51\", 0).\nHas_n_deaths(\"Apollo 52\", 0).\nHas_n_deaths(\"Apollo 53\", 0).\nHas_n_deaths(\"Apollo 54\", 0).\nHas_n_deaths(\"Apollo 55\", 0).\nHas_n_deaths(\"Apollo 56\", 0).\nHas_n_deaths(\"Apollo 57\", 0).\nHas_n_deaths(\"Apollo 58\", 0).\nHas_n_deaths(\"Apollo 59\", 0).\nHas_n_deaths(\"Apollo 60\", 0).\nHas_n_deaths(\"Apollo 61\", 0).\nHas_n_deaths(\"Apollo 62\", 0).\nHas_n_deaths(\"Apollo 63\", 0).\nHas_n_deaths(\"Apollo 64\", 0).\nHas_n_deaths(\"Apollo 65\", 0).\nHas_n_deaths(\"Apollo 66\", 0).\nHas_n_deaths(\"Apollo 67\", 0).\nHas_n_deaths(\"", "completions": [".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"Apollo 13\", 0).\nHas_n_deaths(\"Apollo 14\", 0).\nHas_n_deaths(\"Apollo 15\", 0).\nHas_n_deaths(\"Apollo 16\", 0).\nHas_n_deaths(\"Apollo 17\", 0).\nHas_n_deaths(\"Apollo 18\", 0).\nHas_n_deaths(\"Apollo 19\", 0).\nHas_n_deaths(\"Apollo 20\", 0).\nHas_n_deaths(\"Apollo 21\", 0).\nHas_n_deaths(\"Apollo 22\", 0).\nHas_n_deaths(\"Apollo 23\", 0).\nHas_n_deaths(\"Apollo 24\", 0).\nHas_n_deaths(\"Apollo 25\", 0).\nHas_n_deaths(\"Apollo 26\", 0).\nHas_n_deaths(\"Apollo 27\", 0).\nHas_n_deaths(\"Apollo 28\", 0).\nHas_n_deaths(\"Apollo 29\", 0).\nHas_n_deaths(\"Apollo 30\", 0).\nHas_n_deaths(\"Apollo 31\", 0).\nHas_n_deaths(\"Apollo 32\", 0).\nHas_n_deaths(\"Apollo 33\", 0).\nHas_n_deaths(\"Apollo 34\", 0).\nHas_n_deaths(\"Apollo 35\", 0).\nHas_n_deaths(\"Apollo 36\", 0).\nHas_n_deaths(\"Apollo 37\", 0).\nHas_n_deaths(\"Apollo 38\", 0).\nHas_n_deaths(\"Apollo 39\", 0).\nHas_n_deaths(\"Apollo 40\", 0).\nHas_n_deaths(\"Apollo 41\", 0).\nHas_n_deaths(\"Apollo 42\", 0).\nHas_n_deaths(\"Apollo 43\", 0).\nHas_n_deaths(\"Apollo 44\", 0).\nHas_n_deaths(\"Apollo 45\", 0).\nHas_n_deaths(\"Apollo 46\", 0).\nHas_n_deaths(\"Apollo 47\", 0).\nHas_n_deaths(\"Apollo 48\", 0).\nHas_n_deaths(\"Apollo 49\", 0).\nHas_n_deaths(\"Apollo 50\", 0).\nHas_n_deaths(\"Apollo 51\", 0).\nHas_n_deaths(\"Apollo 52\", 0).\nHas_n_deaths(\"Apollo 53\", 0).\nHas_n_deaths(\"Apollo 54\", 0).\nHas_n_deaths(\"Apollo 55\", 0).\nHas_n_deaths(\"Apollo 56\", 0).\nHas_n_deaths(\"Apollo 57\", 0).\nHas_n_deaths(\"Apollo 58\", 0).\nHas_n_deaths(\"Apollo 59\", 0).\nHas_n_deaths(\"Apollo 60\", 0).\nHas_n_deaths(\"Apollo 61\", 0).\nHas_n_deaths(\"Apollo 62\", 0).\nHas_n_deaths(\"Apollo 63\", 0).\nHas_n_deaths(\"Apollo 64\", 0).\nHas_n_deaths(\"Apollo 65\", 0).\nHas_n_deaths(\"Apollo 66\", 0).\nHas_n_deaths(\"Apollo 67\", 0).\nHas_n_deaths(\""]}
{"id": 102, "answer": false, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"taco\", \"corn\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"taco\", \"corn\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco\", \"jalapeno\").\nHas_ingredient(\"taco\", \"onion\").\nHas_ingredient(\"taco\", \"chicken\").\nHas_ingredient(\"taco\", \"beef\").\nHas_ingredient(\"taco\", \"lettuce\").\nHas_ingredient(\"taco\", \"tomato\").\nHas_ingredient(\"taco\", \"cheese\").\nHas_ingredient(\"taco\", \"salsa\").\nHas_ingredient(\"taco\", \"tortilla\").\nHas_ingredient(\"taco\", \"sour cream\").\nHas_ingredient(\"taco\", \"guacamole\").\nHas_ingredient(\"taco"]}
{"id": 103, "answer": true, "completion": ".decl Is_hypothetical(Event:symbol)\nIs_hypothetical(\"Saladin's conquest of Jerusalem\").\nIs_hypothetical(\"Ali Askari's death\").\n.decl Is_unimportant(Event_A:symbol, Event_B:symbol)\nIs_unimportant(\"Saladin's conquest of Jerusalem\", \"Ali Askari's death\").\n.decl Answer()\nAnswer() :- Is_hypothetical(\"Saladin's conquest of Jerusalem\"), Is_hypothetical(\"Ali Askari's death\"), Is_unimportant(\"Saladin's conquest of Jerusalem\", \"Ali Askari's death\").\n.output Answer\n\n", "completions": [".decl Is_hypothetical(Event:symbol)\nIs_hypothetical(\"Saladin's conquest of Jerusalem\").\nIs_hypothetical(\"Ali Askari's death\").\n.decl Is_unimportant(Event_A:symbol, Event_B:symbol)\nIs_unimportant(\"Saladin's conquest of Jerusalem\", \"Ali Askari's death\").\n.decl Answer()\nAnswer() :- Is_hypothetical(\"Saladin's conquest of Jerusalem\"), Is_hypothetical(\"Ali Askari's death\"), Is_unimportant(\"Saladin's conquest of Jerusalem\", \"Ali Askari's death\").\n.output Answer\n\n"]}
{"id": 104, "answer": true, "completion": ".decl Likes(Animal:symbol, Food:symbol)\nLikes(\"Sockington\", \"onions\").\n.decl Answer()\nAnswer() :- Likes(\"Sockington\", food).\n.output Answer\n\n", "completions": [".decl Likes(Animal:symbol, Food:symbol)\nLikes(\"Sockington\", \"onions\").\n.decl Answer()\nAnswer() :- Likes(\"Sockington\", food).\n.output Answer\n\n"]}
{"id": 105, "answer": false, "completion": ".decl Is_influenced_by(Painting:symbol, Country:symbol)\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Italy\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"France\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Spain\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Portugal\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Austria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Germany\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Netherlands\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Belgium\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Switzerland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Norway\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sweden\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Denmark\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Finland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Poland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Czech Republic\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Slovakia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Croatia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Bulgaria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Greece\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Moldova\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Macedonia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Albania\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Turkey\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Syria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Lebanon\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Israel\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Jordan\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Palestine\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Egypt\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Libya\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Algeria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Morocco\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Tunisia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Malta\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sicily\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sardinia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Corsica\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Mallorca\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Menorca\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Ibiza\").\nIs_inf", "completions": [".decl Is_influenced_by(Painting:symbol, Country:symbol)\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Italy\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"France\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Spain\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Portugal\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Austria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Germany\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Netherlands\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Belgium\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Switzerland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Norway\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sweden\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Denmark\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Finland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Poland\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Czech Republic\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Slovakia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Croatia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Bulgaria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Greece\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Moldova\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Macedonia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Albania\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Turkey\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Syria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Lebanon\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Israel\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Jordan\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Palestine\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Egypt\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Libya\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Algeria\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Morocco\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Tunisia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Malta\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sicily\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Sardinia\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Corsica\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Mallorca\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Menorca\").\nIs_influenced_by(\"The Calling of Saint Matthew\", \"Ibiza\").\nIs_inf"]}
{"id": 106, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Oscar Wilde\", 80).\nHas_weight(\"motor vehicle\", 1000).\n.decl Answer()\nAnswer() :- Has_weight(\"Oscar Wilde\", weight1), Has_weight(\"motor vehicle\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Oscar Wilde\", 80).\nHas_weight(\"motor vehicle\", 1000).\n.decl Answer()\nAnswer() :- Has_weight(\"Oscar Wilde\", weight1), Has_weight(\"motor vehicle\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 107, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"ontology\", \"scalpel\").\n.decl Answer()\nAnswer() :- Has_property(\"ontology\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"ontology\", \"scalpel\").\n.decl Answer()\nAnswer() :- Has_property(\"ontology\", property).\n.output Answer\n\n"]}
{"id": 108, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"beheading of Anne Boleyn\", \"May\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"June\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"July\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"August\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"September\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"October\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"November\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"December\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"January\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"February\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"March\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"April\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"beheading of Anne Boleyn\", \"1533\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"beheading of Anne Boleyn\", month), Happens_in_year(\"beheading of Anne Boleyn\", year), month = \"May\", year = \"1533\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"beheading of Anne Boleyn\", \"May\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"June\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"July\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"August\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"September\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"October\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"November\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"December\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"January\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"February\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"March\").\nHappens_in_time(\"beheading of Anne Boleyn\", \"April\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"beheading of Anne Boleyn\", \"1533\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"beheading of Anne Boleyn\", month), Happens_in_year(\"beheading of Anne Boleyn\", year), month = \"May\", year = \"1533\".\n.output Answer\n\n"]}
{"id": 109, "answer": false, "completion": ".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Alexander Graham Bell\", \"Edinburgh\").\nWas_born(\"Adolf Hitler\", \"Austria\").\n.decl Was_born_in_place(Person:symbol, Place:symbol)\nWas_born_in_place(\"Adolf Hitler\", \"Austria\").\n.decl Answer()\nAnswer() :- Was_born(\"Alexander Graham Bell\", place), Was_born_in_place(\"Adolf Hitler\", place).\n.output Answer\n\n", "completions": [".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Alexander Graham Bell\", \"Edinburgh\").\nWas_born(\"Adolf Hitler\", \"Austria\").\n.decl Was_born_in_place(Person:symbol, Place:symbol)\nWas_born_in_place(\"Adolf Hitler\", \"Austria\").\n.decl Answer()\nAnswer() :- Was_born(\"Alexander Graham Bell\", place), Was_born_in_place(\"Adolf Hitler\", place).\n.output Answer\n\n"]}
{"id": 110, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Harry Truman's presidency\", \"1946-1952\").\nHappens_in_time(\"Harry Truman's presidency\", \"1953-1961\").\nHappens_in_time(\"Harry Truman's presidency\", \"1962-1968\").\nHappens_in_time(\"Harry Truman's presidency\", \"1969-1974\").\nHappens_in_time(\"Harry Truman's presidency\", \"1975-1981\").\nHappens_in_time(\"Harry Truman's presidency\", \"1982-1988\").\nHappens_in_time(\"Harry Truman's presidency\", \"1989-1993\").\nHappens_in_time(\"Harry Truman's presidency\", \"1994-2000\").\nHappens_in_time(\"Harry Truman's presidency\", \"2001-2008\").\nHappens_in_time(\"Harry Truman's presidency\", \"2009-2015\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1919-1933\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1934-1948\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1949-1953\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1954-1958\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1959-1963\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1964-1968\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1969-1973\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1974-1978\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1979-1983\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1984-1988\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1989-1993\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1994-1998\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1999-2003\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2004-2008\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2009-2013\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2014-2018\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Harry Truman's presidency\", time1), Happens_in_time(\"twenty-third Amendment to the US Constitution\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Harry Truman's presidency\", \"1946-1952\").\nHappens_in_time(\"Harry Truman's presidency\", \"1953-1961\").\nHappens_in_time(\"Harry Truman's presidency\", \"1962-1968\").\nHappens_in_time(\"Harry Truman's presidency\", \"1969-1974\").\nHappens_in_time(\"Harry Truman's presidency\", \"1975-1981\").\nHappens_in_time(\"Harry Truman's presidency\", \"1982-1988\").\nHappens_in_time(\"Harry Truman's presidency\", \"1989-1993\").\nHappens_in_time(\"Harry Truman's presidency\", \"1994-2000\").\nHappens_in_time(\"Harry Truman's presidency\", \"2001-2008\").\nHappens_in_time(\"Harry Truman's presidency\", \"2009-2015\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1919-1933\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1934-1948\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1949-1953\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1954-1958\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1959-1963\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1964-1968\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1969-1973\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1974-1978\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1979-1983\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1984-1988\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1989-1993\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1994-1998\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"1999-2003\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2004-2008\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2009-2013\").\nHappens_in_time(\"twenty-third Amendment to the US Constitution\", \"2014-2018\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Harry Truman's presidency\", time1), Happens_in_time(\"twenty-third Amendment to the US Constitution\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 111, "answer": true, "completion": ".decl Has_month(Event:symbol, Month:symbol)\nHas_month(\"fall\", \"September\").\n.decl Has_color(Event:symbol, Color:symbol)\nHas_color(\"fall\", \"orange\").\nHas_color(\"fall\", \"red\").\n.decl Answer()\nAnswer() :- Has_month(\"fall\", month), Has_color(\"fall\", color), month = \"September\", color = \"orange\".\nAnswer() :- Has_month(\"fall\", month), Has_color(\"fall\", color), month = \"September\", color = \"red\".\n.output Answer\n\n", "completions": [".decl Has_month(Event:symbol, Month:symbol)\nHas_month(\"fall\", \"September\").\n.decl Has_color(Event:symbol, Color:symbol)\nHas_color(\"fall\", \"orange\").\nHas_color(\"fall\", \"red\").\n.decl Answer()\nAnswer() :- Has_month(\"fall\", month), Has_color(\"fall\", color), month = \"September\", color = \"orange\".\nAnswer() :- Has_month(\"fall\", month), Has_color(\"fall\", color), month = \"September\", color = \"red\".\n.output Answer\n\n"]}
{"id": 112, "answer": true, "completion": ".decl Has_capsaicin(Object:symbol)\nHas_capsaicin(\"capsaicin\").\n.decl Has_blm(Object:symbol)\nHas_blm(\"Black Lives Matter\").\n.decl Answer()\nAnswer() :- Has_capsaicin(\"capsaicin\"), Has_blm(\"Black Lives Matter\").\n.output Answer\n\n", "completions": [".decl Has_capsaicin(Object:symbol)\nHas_capsaicin(\"capsaicin\").\n.decl Has_blm(Object:symbol)\nHas_blm(\"Black Lives Matter\").\n.decl Answer()\nAnswer() :- Has_capsaicin(\"capsaicin\"), Has_blm(\"Black Lives Matter\").\n.output Answer\n\n"]}
{"id": 113, "answer": true, "completion": ".decl Ancestor(Person:symbol, Ancestor_of:symbol)\nAncestor(\"Achilles\", \"Achilles\").\nAncestor(\"Achilles\", \"Peleus\").\nAncestor(\"Peleus\", \"Achilles\").\nAncestor(\"Peleus\", \"Peleus\").\nAncestor(\"Gaia\", \"Achilles\").\nAncestor(\"Gaia\", \"Peleus\").\n.decl Answer()\nAnswer() :- Ancestor(\"Achilles\", person), Ancestor(person, ancestor_of).\n.output Answer\n\n", "completions": [".decl Ancestor(Person:symbol, Ancestor_of:symbol)\nAncestor(\"Achilles\", \"Achilles\").\nAncestor(\"Achilles\", \"Peleus\").\nAncestor(\"Peleus\", \"Achilles\").\nAncestor(\"Peleus\", \"Peleus\").\nAncestor(\"Gaia\", \"Achilles\").\nAncestor(\"Gaia\", \"Peleus\").\n.decl Answer()\nAnswer() :- Ancestor(\"Achilles\", person), Ancestor(person, ancestor_of).\n.output Answer\n\n"]}
{"id": 114, "answer": true, "completion": ".decl Hangs_out_at(Person:symbol, Place:symbol)\nHangs_out_at(\"Jerry Seinfeld\", \"Budweiser Party Deck\").\n.decl Answer()\nAnswer() :- Hangs_out_at(\"Jerry Seinfeld\", place).\n.output Answer\n\n", "completions": [".decl Hangs_out_at(Person:symbol, Place:symbol)\nHangs_out_at(\"Jerry Seinfeld\", \"Budweiser Party Deck\").\n.decl Answer()\nAnswer() :- Hangs_out_at(\"Jerry Seinfeld\", place).\n.output Answer\n\n"]}
{"id": 115, "answer": false, "completion": ".decl Has_ear(Animal:symbol, Ear:symbol)\nHas_ear(\"sand cat\", \"ear\").\nHas_ear(\"basketball\", \"ball\").\n.decl Answer()\nAnswer() :- Has_ear(\"sand cat\", ear), Has_ear(\"basketball\", ball), ear = ball.\n.output Answer\n\n", "completions": [".decl Has_ear(Animal:symbol, Ear:symbol)\nHas_ear(\"sand cat\", \"ear\").\nHas_ear(\"basketball\", \"ball\").\n.decl Answer()\nAnswer() :- Has_ear(\"sand cat\", ear), Has_ear(\"basketball\", ball), ear = ball.\n.output Answer\n\n"]}
{"id": 116, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"ŽRK Kumanovo\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"ŽRK Kumanovo\", n_members2), n_members1 = n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"ŽRK Kumanovo\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"ŽRK Kumanovo\", n_members2), n_members1 = n_members2.\n.output Answer\n\n"]}
{"id": 117, "answer": true, "completion": ".decl Has_positive_uses(Symbol:symbol)\nHas_positive_uses(\"swastika\").\n.decl Answer()\nAnswer() :- Has_positive_uses(\"swastika\").\n.output Answer\n\n", "completions": [".decl Has_positive_uses(Symbol:symbol)\nHas_positive_uses(\"swastika\").\n.decl Answer()\nAnswer() :- Has_positive_uses(\"swastika\").\n.output Answer\n\n"]}
{"id": 118, "answer": false, "completion": ".decl Has_upstaged(Insect:symbol, Insect2:symbol)\nHas_upstaged(\"Black fly\", \"fly\").\nHas_upstaged(\"fly\", \"mosquito\").\nHas_upstaged(\"mosquito\", \"housefly\").\nHas_upstaged(\"housefly\", \"cockroach\").\nHas_upstaged(\"cockroach\", \"ladybird\").\nHas_upstaged(\"ladybird\", \"dragonfly\").\nHas_upstaged(\"dragonfly\", \"grasshopper\").\nHas_upstaged(\"grasshopper\", \"cricket\").\nHas_upstaged(\"cricket\", \"cockroach\").\n.decl Answer()\nAnswer() :- Has_upstaged(\"Black fly\", insect2), Has_upstaged(insect2, insect3), Has_upstaged(insect3, insect4), Has_upstaged(insect4, insect5), Has_upstaged(insect5, insect6), Has_upstaged(insect6, insect7), Has_upstaged(insect7, insect8), Has_upstaged(insect8, insect9), Has_upstaged(insect9, insect10), Has_upstaged(insect10, insect11), Has_upstaged(insect11, insect12), Has_upstaged(insect12, insect13), Has_upstaged(insect13, insect14), Has_upstaged(insect14, insect15), Has_upstaged(insect15, insect16), Has_upstaged(insect16, insect17), Has_upstaged(insect17, insect18), Has_upstaged(insect18, insect19), Has_upstaged(insect19, insect20), Has_upstaged(insect20, insect21), Has_upstaged(insect21, insect22), Has_upstaged(insect22, insect23), Has_upstaged(insect23, insect24), Has_upstaged(insect24, insect25), Has_upstaged(insect25, insect26), Has_upstaged(insect26, insect27), Has_upstaged(insect27, insect28), Has_upstaged(insect28, insect29), Has_upstaged(insect29, insect30), Has_upstaged(insect30, insect31), Has_upstaged(insect31, insect32), Has_upstaged(insect32, insect33), Has_upstaged(insect33, insect34), Has_upstaged(insect34, insect35), Has_upstaged(insect35, insect36), Has_upstaged(insect36, insect37), Has_upstaged(insect37, insect38), Has_upstaged(insect38, insect39), Has_upstaged(insect39, insect40), Has_upstaged(insect40, insect41), Has_upstaged(insect41, insect42), Has_upstaged(insect42, insect43), Has_upstaged(insect43, insect44), Has_upstaged(insect44, insect45), Has_upstaged(insect45, insect46), Has_upstaged(insect46, insect47), Has_upstaged(insect47, insect48), Has_upstaged(insect48, insect49), Has_upstaged(insect49, insect50), Has", "completions": [".decl Has_upstaged(Insect:symbol, Insect2:symbol)\nHas_upstaged(\"Black fly\", \"fly\").\nHas_upstaged(\"fly\", \"mosquito\").\nHas_upstaged(\"mosquito\", \"housefly\").\nHas_upstaged(\"housefly\", \"cockroach\").\nHas_upstaged(\"cockroach\", \"ladybird\").\nHas_upstaged(\"ladybird\", \"dragonfly\").\nHas_upstaged(\"dragonfly\", \"grasshopper\").\nHas_upstaged(\"grasshopper\", \"cricket\").\nHas_upstaged(\"cricket\", \"cockroach\").\n.decl Answer()\nAnswer() :- Has_upstaged(\"Black fly\", insect2), Has_upstaged(insect2, insect3), Has_upstaged(insect3, insect4), Has_upstaged(insect4, insect5), Has_upstaged(insect5, insect6), Has_upstaged(insect6, insect7), Has_upstaged(insect7, insect8), Has_upstaged(insect8, insect9), Has_upstaged(insect9, insect10), Has_upstaged(insect10, insect11), Has_upstaged(insect11, insect12), Has_upstaged(insect12, insect13), Has_upstaged(insect13, insect14), Has_upstaged(insect14, insect15), Has_upstaged(insect15, insect16), Has_upstaged(insect16, insect17), Has_upstaged(insect17, insect18), Has_upstaged(insect18, insect19), Has_upstaged(insect19, insect20), Has_upstaged(insect20, insect21), Has_upstaged(insect21, insect22), Has_upstaged(insect22, insect23), Has_upstaged(insect23, insect24), Has_upstaged(insect24, insect25), Has_upstaged(insect25, insect26), Has_upstaged(insect26, insect27), Has_upstaged(insect27, insect28), Has_upstaged(insect28, insect29), Has_upstaged(insect29, insect30), Has_upstaged(insect30, insect31), Has_upstaged(insect31, insect32), Has_upstaged(insect32, insect33), Has_upstaged(insect33, insect34), Has_upstaged(insect34, insect35), Has_upstaged(insect35, insect36), Has_upstaged(insect36, insect37), Has_upstaged(insect37, insect38), Has_upstaged(insect38, insect39), Has_upstaged(insect39, insect40), Has_upstaged(insect40, insect41), Has_upstaged(insect41, insect42), Has_upstaged(insect42, insect43), Has_upstaged(insect43, insect44), Has_upstaged(insect44, insect45), Has_upstaged(insect45, insect46), Has_upstaged(insect46, insect47), Has_upstaged(insect47, insect48), Has_upstaged(insect48, insect49), Has_upstaged(insect49, insect50), Has"]}
{"id": 119, "answer": false, "completion": ".decl Edited(Person:symbol, Book:symbol)\nEdited(\"Linnaeus\", \"Origin of Species\").\n.decl Edited(Person:symbol, Book:symbol)\nEdited(\"Charles Darwin\", \"Origin of Species\").\n.decl Answer()\nAnswer() :- Edited(\"Linnaeus\", book), Edited(\"Charles Darwin\", book).\n.output Answer\n\n", "completions": [".decl Edited(Person:symbol, Book:symbol)\nEdited(\"Linnaeus\", \"Origin of Species\").\n.decl Edited(Person:symbol, Book:symbol)\nEdited(\"Charles Darwin\", \"Origin of Species\").\n.decl Answer()\nAnswer() :- Edited(\"Linnaeus\", book), Edited(\"Charles Darwin\", book).\n.output Answer\n\n"]}
{"id": 120, "answer": false, "completion": ".decl Has_disability(Patient:symbol, Disability:symbol)\nHas_disability(\"cancer patient\", \"disability\").\n.decl Answer()\nAnswer() :- Has_disability(\"cancer patient\", disability), !Has_disability(\"cancer patient\", disability2), disability != disability2.\n.output Answer\n\n", "completions": [".decl Has_disability(Patient:symbol, Disability:symbol)\nHas_disability(\"cancer patient\", \"disability\").\n.decl Answer()\nAnswer() :- Has_disability(\"cancer patient\", disability), !Has_disability(\"cancer patient\", disability2), disability != disability2.\n.output Answer\n\n"]}
{"id": 121, "answer": false, "completion": ".decl Affects(Person_A:symbol, Person_B:symbol)\nAffects(\"Helen Palmer\", \"Dr. Seuss\").\n.decl Answer()\nAnswer() :- Affects(\"Helen Palmer\", person_b), Affects(person_b, \"Dr. Seuss\").\n.output Answer\n\n", "completions": [".decl Affects(Person_A:symbol, Person_B:symbol)\nAffects(\"Helen Palmer\", \"Dr. Seuss\").\n.decl Answer()\nAnswer() :- Affects(\"Helen Palmer\", person_b), Affects(person_b, \"Dr. Seuss\").\n.output Answer\n\n"]}
{"id": 122, "answer": true, "completion": ".decl Has_disease(Animal:symbol, Disease:symbol)\nHas_disease(\"fish\", \"tonsillitis\").\n.decl Answer()\nAnswer() :- Has_disease(\"fish\", disease).\n.output Answer\n\n", "completions": [".decl Has_disease(Animal:symbol, Disease:symbol)\nHas_disease(\"fish\", \"tonsillitis\").\n.decl Answer()\nAnswer() :- Has_disease(\"fish\", disease).\n.output Answer\n\n"]}
{"id": 123, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Mayflower voyage\", \"May\").\nHappens_in_time(\"Mayflower voyage\", \"September\").\nHappens_in_time(\"Mayflower voyage\", \"October\").\nHappens_in_time(\"Mayflower voyage\", \"November\").\nHappens_in_time(\"Mayflower voyage\", \"December\").\nHappens_in_time(\"Mayflower voyage\", \"January\").\nHappens_in_time(\"Mayflower voyage\", \"February\").\nHappens_in_time(\"Mayflower voyage\", \"March\").\nHappens_in_time(\"Mayflower voyage\", \"April\").\nHappens_in_time(\"Burning Man\", \"August\").\nHappens_in_time(\"Burning Man\", \"September\").\nHappens_in_time(\"Burning Man\", \"October\").\nHappens_in_time(\"Burning Man\", \"November\").\nHappens_in_time(\"Burning Man\", \"December\").\nHappens_in_time(\"Burning Man\", \"January\").\nHappens_in_time(\"Burning Man\", \"February\").\nHappens_in_time(\"Burning Man\", \"March\").\nHappens_in_time(\"Burning Man\", \"April\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Mayflower voyage\", month1), Happens_in_time(\"Burning Man\", month2), month1 > month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Mayflower voyage\", \"May\").\nHappens_in_time(\"Mayflower voyage\", \"September\").\nHappens_in_time(\"Mayflower voyage\", \"October\").\nHappens_in_time(\"Mayflower voyage\", \"November\").\nHappens_in_time(\"Mayflower voyage\", \"December\").\nHappens_in_time(\"Mayflower voyage\", \"January\").\nHappens_in_time(\"Mayflower voyage\", \"February\").\nHappens_in_time(\"Mayflower voyage\", \"March\").\nHappens_in_time(\"Mayflower voyage\", \"April\").\nHappens_in_time(\"Burning Man\", \"August\").\nHappens_in_time(\"Burning Man\", \"September\").\nHappens_in_time(\"Burning Man\", \"October\").\nHappens_in_time(\"Burning Man\", \"November\").\nHappens_in_time(\"Burning Man\", \"December\").\nHappens_in_time(\"Burning Man\", \"January\").\nHappens_in_time(\"Burning Man\", \"February\").\nHappens_in_time(\"Burning Man\", \"March\").\nHappens_in_time(\"Burning Man\", \"April\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Mayflower voyage\", month1), Happens_in_time(\"Burning Man\", month2), month1 > month2.\n.output Answer\n\n"]}
{"id": 124, "answer": false, "completion": ".decl Has_paternal_family(Person:symbol, Family:symbol)\nHas_paternal_family(\"Barack Obama\", \"Kenya\").\nHas_paternal_family(\"Lupita Nyongo\", \"Mexico\").\n.decl Has_citizenship(Person:symbol, Citizenship:symbol)\nHas_citizenship(\"Barack Obama\", \"Kenya\").\nHas_citizenship(\"Lupita Nyongo\", \"Mexico\").\n.decl Answer()\nAnswer() :- Has_paternal_family(\"Barack Obama\", paternal_family), Has_citizenship(\"Lupita Nyongo\", citizenship), paternal_family = citizenship.\n.output Answer\n\n", "completions": [".decl Has_paternal_family(Person:symbol, Family:symbol)\nHas_paternal_family(\"Barack Obama\", \"Kenya\").\nHas_paternal_family(\"Lupita Nyongo\", \"Mexico\").\n.decl Has_citizenship(Person:symbol, Citizenship:symbol)\nHas_citizenship(\"Barack Obama\", \"Kenya\").\nHas_citizenship(\"Lupita Nyongo\", \"Mexico\").\n.decl Answer()\nAnswer() :- Has_paternal_family(\"Barack Obama\", paternal_family), Has_citizenship(\"Lupita Nyongo\", citizenship), paternal_family = citizenship.\n.output Answer\n\n"]}
{"id": 125, "answer": true, "completion": ".decl Has_n_records(Artist:symbol, N_records:float)\nHas_n_records(\"Jonny Cash\", 100).\n.decl Has_n_citizens(Country:symbol, N_citizens:float)\nHas_n_citizens(\"France\", 60).\n.decl Answer()\nAnswer() :- Has_n_records(\"Jonny Cash\", n_records), Has_n_citizens(\"France\", n_citizens), n_records > n_citizens.\n.output Answer\n\n", "completions": [".decl Has_n_records(Artist:symbol, N_records:float)\nHas_n_records(\"Jonny Cash\", 100).\n.decl Has_n_citizens(Country:symbol, N_citizens:float)\nHas_n_citizens(\"France\", 60).\n.decl Answer()\nAnswer() :- Has_n_records(\"Jonny Cash\", n_records), Has_n_citizens(\"France\", n_citizens), n_records > n_citizens.\n.output Answer\n\n"]}
{"id": 126, "answer": true, "completion": ".decl Smells_like(Object:symbol, Smell:symbol)\nSmells_like(\"brussels sprouts\", \"fart\").\n.decl Answer()\nAnswer() :- Smells_like(\"brussels sprouts\", smell), Smells_like(object, smell).\n.output Answer\n\n", "completions": [".decl Smells_like(Object:symbol, Smell:symbol)\nSmells_like(\"brussels sprouts\", \"fart\").\n.decl Answer()\nAnswer() :- Smells_like(\"brussels sprouts\", smell), Smells_like(object, smell).\n.output Answer\n\n"]}
{"id": 127, "answer": false, "completion": ".decl Is_a(Animal:symbol, Type:symbol)\nIs_a(\"mule deer\", \"deer\").\nIs_a(\"Stone Cold Steve Austin\", \"wrestler\").\n.decl Finisher(Wrestler:symbol, Finisher:symbol)\nFinisher(\"Stone Cold Steve Austin\", \"Stunner\").\n.decl Answer()\nAnswer() :- Is_a(\"mule deer\", animal), Is_a(\"Stone Cold Steve Austin\", animal), Finisher(\"Stone Cold Steve Austin\", finisher).\n.output Answer\n\n", "completions": [".decl Is_a(Animal:symbol, Type:symbol)\nIs_a(\"mule deer\", \"deer\").\nIs_a(\"Stone Cold Steve Austin\", \"wrestler\").\n.decl Finisher(Wrestler:symbol, Finisher:symbol)\nFinisher(\"Stone Cold Steve Austin\", \"Stunner\").\n.decl Answer()\nAnswer() :- Is_a(\"mule deer\", animal), Is_a(\"Stone Cold Steve Austin\", animal), Finisher(\"Stone Cold Steve Austin\", finisher).\n.output Answer\n\n"]}
{"id": 128, "answer": false, "completion": ".decl Has_relationship_status(Person:symbol, Relationship_status:symbol)\nHas_relationship_status(\"Joker\", \"single\").\nHas_relationship_status(\"Joker\", \"married\").\nHas_relationship_status(\"Joker\", \"divorced\").\n.decl Has_relationship_status(Person:symbol, Relationship_status:symbol)\nHas_relationship_status(\"Harley Quinn\", \"single\").\nHas_relationship_status(\"Harley Quinn\", \"married\").\nHas_relationship_status(\"Harley Quinn\", \"divorced\").\n.decl Answer()\nAnswer() :- Has_relationship_status(\"Joker\", relationship_status), Has_relationship_status(\"Harley Quinn\", relationship_status).\n.output Answer\n\n", "completions": [".decl Has_relationship_status(Person:symbol, Relationship_status:symbol)\nHas_relationship_status(\"Joker\", \"single\").\nHas_relationship_status(\"Joker\", \"married\").\nHas_relationship_status(\"Joker\", \"divorced\").\n.decl Has_relationship_status(Person:symbol, Relationship_status:symbol)\nHas_relationship_status(\"Harley Quinn\", \"single\").\nHas_relationship_status(\"Harley Quinn\", \"married\").\nHas_relationship_status(\"Harley Quinn\", \"divorced\").\n.decl Answer()\nAnswer() :- Has_relationship_status(\"Joker\", relationship_status), Has_relationship_status(\"Harley Quinn\", relationship_status).\n.output Answer\n\n"]}
{"id": 129, "answer": true, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"kayak\", \"boat\").\nIs_a(\"kayak\", \"traditional\").\nIs_a(\"boat\", \"traditional\").\n.decl Answer()\nAnswer() :- Is_a(\"kayak\", \"traditional\").\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"kayak\", \"boat\").\nIs_a(\"kayak\", \"traditional\").\nIs_a(\"boat\", \"traditional\").\n.decl Answer()\nAnswer() :- Is_a(\"kayak\", \"traditional\").\n.output Answer\n\n"]}
{"id": 130, "answer": true, "completion": ".decl Has_attended(Person:symbol, Event:symbol)\nHas_attended(\"Boris Yeltsin\", \"Olympics\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Olympics\", \"August\").\nHappens_in_time(\"Olympics\", \"July\").\n.decl Answer()\nAnswer() :- Has_attended(\"Boris Yeltsin\", \"Olympics\"), Happens_in_time(\"Olympics\", \"August\").\n.output Answer\n\n", "completions": [".decl Has_attended(Person:symbol, Event:symbol)\nHas_attended(\"Boris Yeltsin\", \"Olympics\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Olympics\", \"August\").\nHappens_in_time(\"Olympics\", \"July\").\n.decl Answer()\nAnswer() :- Has_attended(\"Boris Yeltsin\", \"Olympics\"), Happens_in_time(\"Olympics\", \"August\").\n.output Answer\n\n"]}
{"id": 131, "answer": true, "completion": ".decl Has_role(Person:symbol, Role:symbol)\nHas_role(\"King Arthur\", \"swallow\").\nHas_role(\"King Arthur\", \"knight\").\nHas_role(\"King Arthur\", \"king\").\n.decl Has_movie(Person:symbol, Movie:symbol)\nHas_movie(\"King Arthur\", \"Monty Python and the Holy Grail\").\n.decl Answer()\nAnswer() :- Has_role(\"King Arthur\", role), Has_movie(\"King Arthur\", movie), movie = \"Monty Python and the Holy Grail\".\n.output Answer\n\n", "completions": [".decl Has_role(Person:symbol, Role:symbol)\nHas_role(\"King Arthur\", \"swallow\").\nHas_role(\"King Arthur\", \"knight\").\nHas_role(\"King Arthur\", \"king\").\n.decl Has_movie(Person:symbol, Movie:symbol)\nHas_movie(\"King Arthur\", \"Monty Python and the Holy Grail\").\n.decl Answer()\nAnswer() :- Has_role(\"King Arthur\", role), Has_movie(\"King Arthur\", movie), movie = \"Monty Python and the Holy Grail\".\n.output Answer\n\n"]}
{"id": 132, "answer": false, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Michael Crichton\", \"Harvard University\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Harvard University\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Michael Crichton\", \"Harvard University\"), Ranks(\"Harvard University\", rank), rank > 1.\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Michael Crichton\", \"Harvard University\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Harvard University\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Michael Crichton\", \"Harvard University\"), Ranks(\"Harvard University\", rank), rank > 1.\n.output Answer\n\n"]}
{"id": 133, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pogs\", \"1990s\").\nHappens_in_time(\"surfing\", \"1950s\").\nHappens_in_time(\"surfing\", \"1960s\").\nHappens_in_time(\"surfing\", \"1970s\").\nHappens_in_time(\"surfing\", \"1980s\").\nHappens_in_time(\"surfing\", \"1990s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pogs\", time1), Happens_in_time(\"surfing\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pogs\", \"1990s\").\nHappens_in_time(\"surfing\", \"1950s\").\nHappens_in_time(\"surfing\", \"1960s\").\nHappens_in_time(\"surfing\", \"1970s\").\nHappens_in_time(\"surfing\", \"1980s\").\nHappens_in_time(\"surfing\", \"1990s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pogs\", time1), Happens_in_time(\"surfing\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 134, "answer": false, "completion": ".decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"caracal\", \"cat\").\nHas_species(\"student\", \"human\").\n.decl Has_home(Species:symbol, Place:symbol)\nHas_home(\"cat\", \"Africa\").\nHas_home(\"human\", \"Houston\").\n.decl Answer()\nAnswer() :- Has_species(\"caracal\", species), Has_home(species, place), Has_species(\"student\", species2), Has_home(species2, place2), place == place2.\n.output Answer\n\n", "completions": [".decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"caracal\", \"cat\").\nHas_species(\"student\", \"human\").\n.decl Has_home(Species:symbol, Place:symbol)\nHas_home(\"cat\", \"Africa\").\nHas_home(\"human\", \"Houston\").\n.decl Answer()\nAnswer() :- Has_species(\"caracal\", species), Has_home(species, place), Has_species(\"student\", species2), Has_home(species2, place2), place == place2.\n.output Answer\n\n"]}
{"id": 135, "answer": false, "completion": ".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Coen\", \"Fargo\").\nDirected(\"Ethan Coen\", \"Fargo\").\nDirected(\"Joel Coen\", \"The Big Lebowski\").\nDirected(\"Ethan Coen\", \"The Big Lebowski\").\nDirected(\"Joel Coen\", \"True Grit\").\nDirected(\"Ethan Coen\", \"True Grit\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Barthel and Wilhelm Grimm\", \"Hansel and Gretel\").\n.decl Answer()\nAnswer() :- Directed(\"Joel Coen\", movie1), Directed(\"Ethan Coen\", movie2), Directed(\"Barthel and Wilhelm Grimm\", movie3), movie1 == movie2, movie1 != movie3.\n.output Answer\n\n", "completions": [".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Coen\", \"Fargo\").\nDirected(\"Ethan Coen\", \"Fargo\").\nDirected(\"Joel Coen\", \"The Big Lebowski\").\nDirected(\"Ethan Coen\", \"The Big Lebowski\").\nDirected(\"Joel Coen\", \"True Grit\").\nDirected(\"Ethan Coen\", \"True Grit\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Barthel and Wilhelm Grimm\", \"Hansel and Gretel\").\n.decl Answer()\nAnswer() :- Directed(\"Joel Coen\", movie1), Directed(\"Ethan Coen\", movie2), Directed(\"Barthel and Wilhelm Grimm\", movie3), movie1 == movie2, movie1 != movie3.\n.output Answer\n\n"]}
{"id": 136, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"lolcat\", 0.000001).\nHas_volume(\"iPhone\", 0.000001).\n.decl Answer()\nAnswer() :- Has_volume(\"lolcat\", volume1), Has_volume(\"iPhone\", volume2), volume1 > volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"lolcat\", 0.000001).\nHas_volume(\"iPhone\", 0.000001).\n.decl Answer()\nAnswer() :- Has_volume(\"lolcat\", volume1), Has_volume(\"iPhone\", volume2), volume1 > volume2.\n.output Answer\n\n"]}
{"id": 137, "answer": false, "completion": ".decl Answer()\nAnswer() :- !.\n.output Answer\n\n", "completions": [".decl Answer()\nAnswer() :- !.\n.output Answer\n\n"]}
{"id": 138, "answer": true, "completion": ".decl Hosted_in_region(Service:symbol, Region:symbol)\nHosted_in_region(\"BBC World Service\", \"Europe\").\n.decl Answer()\nAnswer() :- Hosted_in_region(\"BBC World Service\", region).\n.output Answer\n\n", "completions": [".decl Hosted_in_region(Service:symbol, Region:symbol)\nHosted_in_region(\"BBC World Service\", \"Europe\").\n.decl Answer()\nAnswer() :- Hosted_in_region(\"BBC World Service\", region).\n.output Answer\n\n"]}
{"id": 139, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"1996\").\nHappens_in_time(\"birth\", \"2000\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", time), time = \"2000\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"1996\").\nHappens_in_time(\"birth\", \"2000\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", time), time = \"2000\".\n.output Answer\n\n"]}
{"id": 140, "answer": false, "completion": ".decl Marries(Person:symbol, N_times:float)\nMarries(\"Clark Gable\", 2).\nMarries(\"Richard Burton\", 3).\n.decl Answer()\nAnswer() :- Marries(\"Clark Gable\", n_times1), Marries(\"Richard Burton\", n_times2), n_times1 > n_times2.\n.output Answer\n\n", "completions": [".decl Marries(Person:symbol, N_times:float)\nMarries(\"Clark Gable\", 2).\nMarries(\"Richard Burton\", 3).\n.decl Answer()\nAnswer() :- Marries(\"Clark Gable\", n_times1), Marries(\"Richard Burton\", n_times2), n_times1 > n_times2.\n.output Answer\n\n"]}
{"id": 141, "answer": true, "completion": ".decl Has_blast_radius(Weapon:symbol, Blast_radius:float)\nHas_blast_radius(\"double-barreled shotgun\", 1).\nHas_blast_radius(\"squid brain\", 0.1).\n.decl Answer()\nAnswer() :- Has_blast_radius(\"double-barreled shotgun\", blast_radius1), Has_blast_radius(\"squid brain\", blast_radius2), blast_radius1 > blast_radius2.\n.output Answer\n\n", "completions": [".decl Has_blast_radius(Weapon:symbol, Blast_radius:float)\nHas_blast_radius(\"double-barreled shotgun\", 1).\nHas_blast_radius(\"squid brain\", 0.1).\n.decl Answer()\nAnswer() :- Has_blast_radius(\"double-barreled shotgun\", blast_radius1), Has_blast_radius(\"squid brain\", blast_radius2), blast_radius1 > blast_radius2.\n.output Answer\n\n"]}
{"id": 142, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pregnancy\", \"January\").\nHappens_in_time(\"pregnancy\", \"February\").\nHappens_in_time(\"pregnancy\", \"March\").\nHappens_in_time(\"pregnancy\", \"April\").\nHappens_in_time(\"pregnancy\", \"May\").\nHappens_in_time(\"pregnancy\", \"June\").\nHappens_in_time(\"pregnancy\", \"July\").\nHappens_in_time(\"pregnancy\", \"August\").\nHappens_in_time(\"pregnancy\", \"September\").\nHappens_in_time(\"pregnancy\", \"October\").\nHappens_in_time(\"pregnancy\", \"November\").\nHappens_in_time(\"pregnancy\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"new shoes\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"pregnancy\", month), Happens_every_n_months(\"new shoes\", n_months), month = month1, month1 = month2, month2 = month3, month3 = month4, month4 = month5, month5 = month6, month6 = month7, month7 = month8, month8 = month9, month9 = month10, month10 = month11, month11 = month12.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pregnancy\", \"January\").\nHappens_in_time(\"pregnancy\", \"February\").\nHappens_in_time(\"pregnancy\", \"March\").\nHappens_in_time(\"pregnancy\", \"April\").\nHappens_in_time(\"pregnancy\", \"May\").\nHappens_in_time(\"pregnancy\", \"June\").\nHappens_in_time(\"pregnancy\", \"July\").\nHappens_in_time(\"pregnancy\", \"August\").\nHappens_in_time(\"pregnancy\", \"September\").\nHappens_in_time(\"pregnancy\", \"October\").\nHappens_in_time(\"pregnancy\", \"November\").\nHappens_in_time(\"pregnancy\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"new shoes\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"pregnancy\", month), Happens_every_n_months(\"new shoes\", n_months), month = month1, month1 = month2, month2 = month3, month3 = month4, month4 = month5, month5 = month6, month6 = month7, month7 = month8, month8 = month9, month9 = month10, month10 = month11, month11 = month12.\n.output Answer\n\n"]}
{"id": 143, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Adherent\", \"Christianity\").\nBelongs_to_religion(\"Adherent\", \"Catholic Church\").\nBelongs_to_religion(\"Historic_enemy\", \"Christianity\").\nBelongs_to_religion(\"Historic_enemy\", \"Catholic Church\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Adherent\", religion1), Belongs_to_religion(\"Historic_enemy\", religion2), religion1 != religion2.\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Adherent\", \"Christianity\").\nBelongs_to_religion(\"Adherent\", \"Catholic Church\").\nBelongs_to_religion(\"Historic_enemy\", \"Christianity\").\nBelongs_to_religion(\"Historic_enemy\", \"Catholic Church\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Adherent\", religion1), Belongs_to_religion(\"Historic_enemy\", religion2), religion1 != religion2.\n.output Answer\n\n"]}
{"id": 144, "answer": false, "completion": ".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Milan\", \"Italy\").\nLocated_in(\"Shanghai\", \"China\").\n.decl Answer()\nAnswer() :- Located_in(\"Shanghai\", country), Located_in(\"Milan\", country).\n.output Answer\n\n", "completions": [".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Milan\", \"Italy\").\nLocated_in(\"Shanghai\", \"China\").\n.decl Answer()\nAnswer() :- Located_in(\"Shanghai\", country), Located_in(\"Milan\", country).\n.output Answer\n\n"]}
{"id": 145, "answer": true, "completion": ".decl Has_strength(Order:symbol, Strength:float)\nHas_strength(\"Dominican Order\", 1).\nHas_strength(\"Blessed Gerard's order\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"Dominican Order\", strength1), Has_strength(\"Blessed Gerard's order\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Order:symbol, Strength:float)\nHas_strength(\"Dominican Order\", 1).\nHas_strength(\"Blessed Gerard's order\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"Dominican Order\", strength1), Has_strength(\"Blessed Gerard's order\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 146, "answer": false, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"pottery kiln\", 2000).\nHas_temperature(\"glass blowing\", 1500).\n.decl Answer()\nAnswer() :- Has_temperature(\"pottery kiln\", temperature1), Has_temperature(\"glass blowing\", temperature2), temperature1 < temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"pottery kiln\", 2000).\nHas_temperature(\"glass blowing\", 1500).\n.decl Answer()\nAnswer() :- Has_temperature(\"pottery kiln\", temperature1), Has_temperature(\"glass blowing\", temperature2), temperature1 < temperature2.\n.output Answer\n\n"]}
{"id": 147, "answer": false, "completion": ".decl Has_population(Country:symbol, Population:float)\nHas_population(\"Bosnia and Herzegovina\", 3.5).\nHas_population(\"Croatia\", 4.5).\nHas_population(\"Kosovo\", 1.5).\nHas_population(\"Macedonia\", 2.5).\nHas_population(\"Montenegro\", 1.5).\nHas_population(\"Serbia\", 7.5).\nHas_population(\"Slovenia\", 2.5).\nHas_population(\"Japan\", 127).\n.decl Answer()\nAnswer() :- Has_population(\"Bosnia and Herzegovina\", population1), Has_population(\"Croatia\", population2), Has_population(\"Kosovo\", population3), Has_population(\"Macedonia\", population4), Has_population(\"Montenegro\", population5), Has_population(\"Serbia\", population6), Has_population(\"Slovenia\", population7), Has_population(\"Japan\", population8), population1 + population2 + population3 + population4 + population5 + population6 + population7 > population8.\n.output Answer\n\n", "completions": [".decl Has_population(Country:symbol, Population:float)\nHas_population(\"Bosnia and Herzegovina\", 3.5).\nHas_population(\"Croatia\", 4.5).\nHas_population(\"Kosovo\", 1.5).\nHas_population(\"Macedonia\", 2.5).\nHas_population(\"Montenegro\", 1.5).\nHas_population(\"Serbia\", 7.5).\nHas_population(\"Slovenia\", 2.5).\nHas_population(\"Japan\", 127).\n.decl Answer()\nAnswer() :- Has_population(\"Bosnia and Herzegovina\", population1), Has_population(\"Croatia\", population2), Has_population(\"Kosovo\", population3), Has_population(\"Macedonia\", population4), Has_population(\"Montenegro\", population5), Has_population(\"Serbia\", population6), Has_population(\"Slovenia\", population7), Has_population(\"Japan\", population8), population1 + population2 + population3 + population4 + population5 + population6 + population7 > population8.\n.output Answer\n\n"]}
{"id": 148, "answer": true, "completion": ".decl Has_email(Person:symbol, Email:symbol)\nHas_email(\"Steven Spielberg\", \"steven.spielberg@gmail.com\").\nHas_email(\"Steven Spielberg\", \"steven.spielberg@yahoo.com\").\n.decl Answer()\nAnswer() :- Has_email(\"Steven Spielberg\", email).\n.output Answer\n\n", "completions": [".decl Has_email(Person:symbol, Email:symbol)\nHas_email(\"Steven Spielberg\", \"steven.spielberg@gmail.com\").\nHas_email(\"Steven Spielberg\", \"steven.spielberg@yahoo.com\").\n.decl Answer()\nAnswer() :- Has_email(\"Steven Spielberg\", email).\n.output Answer\n\n"]}
{"id": 149, "answer": false, "completion": ".decl Wanted(Body:symbol)\nWanted(\"unwanted\").\n.decl Answer()\nAnswer() :- Wanted(\"Charles Manson's body\").\n.output Answer\n\n", "completions": [".decl Wanted(Body:symbol)\nWanted(\"unwanted\").\n.decl Answer()\nAnswer() :- Wanted(\"Charles Manson's body\").\n.output Answer\n\n"]}
{"id": 150, "answer": false, "completion": ".decl Has_n_teeth(Animal:symbol, N_teeth:float)\nHas_n_teeth(\"Beaver\", 100).\nHas_n_teeth(\"Smilodon\", 100).\n.decl Answer()\nAnswer() :- Has_n_teeth(\"Beaver\", n_teeth1), Has_n_teeth(\"Smilodon\", n_teeth2), n_teeth1 > n_teeth2.\n.output Answer\n\n", "completions": [".decl Has_n_teeth(Animal:symbol, N_teeth:float)\nHas_n_teeth(\"Beaver\", 100).\nHas_n_teeth(\"Smilodon\", 100).\n.decl Answer()\nAnswer() :- Has_n_teeth(\"Beaver\", n_teeth1), Has_n_teeth(\"Smilodon\", n_teeth2), n_teeth1 > n_teeth2.\n.output Answer\n\n"]}
{"id": 151, "answer": false, "completion": ".decl Has_location(Condition:symbol, Location:symbol)\nHas_location(\"dysphoria\", \"pelvis\").\n.decl Has_treatment(Condition:symbol, Treatment:symbol)\nHas_treatment(\"dysphoria\", \"surgery\").\n.decl Answer()\nAnswer() :- Has_location(\"dysphoria\", location), Has_treatment(\"dysphoria\", treatment), treatment \\= location.\n.output Answer\n\n", "completions": [".decl Has_location(Condition:symbol, Location:symbol)\nHas_location(\"dysphoria\", \"pelvis\").\n.decl Has_treatment(Condition:symbol, Treatment:symbol)\nHas_treatment(\"dysphoria\", \"surgery\").\n.decl Answer()\nAnswer() :- Has_location(\"dysphoria\", location), Has_treatment(\"dysphoria\", treatment), treatment \\= location.\n.output Answer\n\n"]}
{"id": 152, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Blue Lives Matter\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Grand Theft Auto III\", 9).\n.decl Answer()\nAnswer() :- Has_n_members(\"Blue Lives Matter\", n_members1), Has_n_members(\"Grand Theft Auto III\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Blue Lives Matter\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Grand Theft Auto III\", 9).\n.decl Answer()\nAnswer() :- Has_n_members(\"Blue Lives Matter\", n_members1), Has_n_members(\"Grand Theft Auto III\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 153, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Dalai Lama\", 1.5).\nHas_volume(\"car\", 4).\n.decl Answer()\nAnswer() :- Has_volume(\"Dalai Lama\", volume1), Has_volume(\"car\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Dalai Lama\", 1.5).\nHas_volume(\"car\", 4).\n.decl Answer()\nAnswer() :- Has_volume(\"Dalai Lama\", volume1), Has_volume(\"car\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 154, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Eurovision Song Contest\", 43).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Dafne Keen\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Eurovision Song Contest\", n_members1), Has_n_members(\"Dafne Keen\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Eurovision Song Contest\", 43).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Dafne Keen\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Eurovision Song Contest\", n_members1), Has_n_members(\"Dafne Keen\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 155, "answer": false, "completion": ".decl Has_n_flights(Airline:symbol, N_flights:float)\nHas_n_flights(\"United Airlines\", 100).\n.decl Has_n_delays(Airline:symbol, N_delays:float)\nHas_n_delays(\"United Airlines\", 0).\n.decl Answer()\nAnswer() :- Has_n_flights(\"United Airlines\", n_flights), Has_n_delays(\"United Airlines\", n_delays), n_flights = n_delays.\n.output Answer\n\n", "completions": [".decl Has_n_flights(Airline:symbol, N_flights:float)\nHas_n_flights(\"United Airlines\", 100).\n.decl Has_n_delays(Airline:symbol, N_delays:float)\nHas_n_delays(\"United Airlines\", 0).\n.decl Answer()\nAnswer() :- Has_n_flights(\"United Airlines\", n_flights), Has_n_delays(\"United Airlines\", n_delays), n_flights = n_delays.\n.output Answer\n\n"]}
{"id": 156, "answer": false, "completion": ".decl Has_criminal_record(Person:symbol, Country:symbol)\nHas_criminal_record(\"United States Secretary of State\", \"U.K.\").\n.decl Answer()\nAnswer() :- Has_criminal_record(\"United States Secretary of State\", country), Has_criminal_record(\"United States Secretary of State\", country2), country != country2.\n.output Answer\n\n", "completions": [".decl Has_criminal_record(Person:symbol, Country:symbol)\nHas_criminal_record(\"United States Secretary of State\", \"U.K.\").\n.decl Answer()\nAnswer() :- Has_criminal_record(\"United States Secretary of State\", country), Has_criminal_record(\"United States Secretary of State\", country2), country != country2.\n.output Answer\n\n"]}
{"id": 157, "answer": true, "completion": ".decl Has_brain_part(Brain_part:symbol, Brain_problem:symbol)\nHas_brain_part(\"cerebral cortex\", \"cerebral infarction\").\nHas_brain_part(\"cerebral cortex\", \"cerebral hemorrhage\").\nHas_brain_part(\"cerebral ventricles\", \"cerebral infarction\").\nHas_brain_part(\"cerebral ventricles\", \"cerebral hemorrhage\").\n.decl Answer()\nAnswer() :- Has_brain_part(\"cerebral cortex\", brain_problem), Has_brain_part(\"cerebral ventricles\", brain_problem).\n.output Answer\n\n", "completions": [".decl Has_brain_part(Brain_part:symbol, Brain_problem:symbol)\nHas_brain_part(\"cerebral cortex\", \"cerebral infarction\").\nHas_brain_part(\"cerebral cortex\", \"cerebral hemorrhage\").\nHas_brain_part(\"cerebral ventricles\", \"cerebral infarction\").\nHas_brain_part(\"cerebral ventricles\", \"cerebral hemorrhage\").\n.decl Answer()\nAnswer() :- Has_brain_part(\"cerebral cortex\", brain_problem), Has_brain_part(\"cerebral ventricles\", brain_problem).\n.output Answer\n\n"]}
{"id": 158, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Chick Fil A opening\", \"October\").\nHappens_in_time(\"Chick Fil A opening\", \"November\").\nHappens_in_time(\"Chick Fil A opening\", \"December\").\nHappens_in_time(\"Chick Fil A opening\", \"January\").\nHappens_in_time(\"Chick Fil A opening\", \"February\").\nHappens_in_time(\"Chick Fil A opening\", \"March\").\nHappens_in_time(\"Chick Fil A opening\", \"April\").\nHappens_in_time(\"Chick Fil A opening\", \"May\").\nHappens_in_time(\"Chick Fil A opening\", \"June\").\nHappens_in_time(\"Chick Fil A opening\", \"July\").\nHappens_in_time(\"Chick Fil A opening\", \"August\").\nHappens_in_time(\"Chick Fil A opening\", \"September\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"October\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"November\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"December\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"January\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"February\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"March\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"April\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"May\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"June\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"July\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"August\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"September\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Chick Fil A opening\", \"October\").\nHappens_in_time(\"Chick Fil A opening\", \"November\").\nHappens_in_time(\"Chick Fil A opening\", \"December\").\nHappens_in_time(\"Chick Fil A opening\", \"January\").\nHappens_in_time(\"Chick Fil A opening\", \"February\").\nHappens_in_time(\"Chick Fil A opening\", \"March\").\nHappens_in_time(\"Chick Fil A opening\", \"April\").\nHappens_in_time(\"Chick Fil A opening\", \"May\").\nHappens_in_time(\"Chick Fil A opening\", \"June\").\nHappens_in_time(\"Chick Fil A opening\", \"July\").\nHappens_in_time(\"Chick Fil A opening\", \"August\").\nHappens_in_time(\"Chick Fil A opening\", \"September\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"October\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"November\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"December\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"January\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"February\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"March\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"April\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"May\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"June\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"July\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"August\").\nAnswer() :- Happens_in_time(\"Chick Fil A opening\", \"September\").\n.output Answer\n\n"]}
{"id": 159, "answer": false, "completion": ".decl Is_a(Person:symbol, Group:symbol)\nIs_a(\"Godfrey of Bouillon\", \"Crusaders\").\nIs_a(\"Godfrey of Bouillon\", \"Frankish\").\nIs_a(\"Godfrey of Bouillon\", \"Christian\").\nIs_a(\"Godfrey of Bouillon\", \"French\").\nIs_a(\"Godfrey of Bouillon\", \"Nobleman\").\nIs_a(\"Godfrey of Bouillon\", \"Man\").\nIs_a(\"Godfrey of Bouillon\", \"Human\").\nIs_a(\"Godfrey of Bouillon\", \"Religious\").\nIs_a(\"Godfrey of Bouillon\", \"Military\").\nIs_a(\"Godfrey of Bouillon\", \"Noble\").\nIs_a(\"Godfrey of Bouillon\", \"Military leader\").\nIs_a(\"Godfrey of Bouillon\", \"Military leader of the Latin Empire of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord\").\nIs_a(\"Godfrey of Bouillon\", \"King\").\nIs_a(\"Godfrey of Bouillon\", \"King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"King of the Latin Empire of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"King of the Latin Empire of Jerusalem and Count of Tripoli\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of France\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of France and Duke of Normandy\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and", "completions": [".decl Is_a(Person:symbol, Group:symbol)\nIs_a(\"Godfrey of Bouillon\", \"Crusaders\").\nIs_a(\"Godfrey of Bouillon\", \"Frankish\").\nIs_a(\"Godfrey of Bouillon\", \"Christian\").\nIs_a(\"Godfrey of Bouillon\", \"French\").\nIs_a(\"Godfrey of Bouillon\", \"Nobleman\").\nIs_a(\"Godfrey of Bouillon\", \"Man\").\nIs_a(\"Godfrey of Bouillon\", \"Human\").\nIs_a(\"Godfrey of Bouillon\", \"Religious\").\nIs_a(\"Godfrey of Bouillon\", \"Military\").\nIs_a(\"Godfrey of Bouillon\", \"Noble\").\nIs_a(\"Godfrey of Bouillon\", \"Military leader\").\nIs_a(\"Godfrey of Bouillon\", \"Military leader of the Latin Empire of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord\").\nIs_a(\"Godfrey of Bouillon\", \"King\").\nIs_a(\"Godfrey of Bouillon\", \"King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"King of the Latin Empire of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"King of the Latin Empire of Jerusalem and Count of Tripoli\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of France\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and King of Jerusalem and King of France and Duke of Normandy\").\nIs_a(\"Godfrey of Bouillon\", \"Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and Lord of the Latin Empire of Jerusalem and Count of Tripoli and Prince of Antioch and Count of Edessa and"]}
{"id": 160, "answer": true, "completion": ".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"espresso\", \"assuage fear\").\n.decl Answer()\nAnswer() :- Has_effect(\"espresso\", effect).\n.output Answer\n\n", "completions": [".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"espresso\", \"assuage fear\").\n.decl Answer()\nAnswer() :- Has_effect(\"espresso\", effect).\n.output Answer\n\n"]}
{"id": 161, "answer": false, "completion": ".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"rice\").\nHas_ingredient(\"rice pudding\", \"water\").\n.decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"horchata\", \"rice\").\nHas_ingredient(\"horchata\", \"water\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient), Has_ingredient(\"horchata\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"rice\").\nHas_ingredient(\"rice pudding\", \"water\").\n.decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"horchata\", \"rice\").\nHas_ingredient(\"horchata\", \"water\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient), Has_ingredient(\"horchata\", ingredient).\n.output Answer\n\n"]}
{"id": 162, "answer": true, "completion": ".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"Bill Gates\", 4.0).\n.decl Has_honors(Person:symbol, Honors:symbol)\nHas_honors(\"Bill Gates\", \"Latin honors\").\n.decl Answer()\nAnswer() :- Has_grade(\"Bill Gates\", grade), Has_honors(\"Bill Gates\", honors), grade >= 3.5.\n.output Answer\n\n", "completions": [".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"Bill Gates\", 4.0).\n.decl Has_honors(Person:symbol, Honors:symbol)\nHas_honors(\"Bill Gates\", \"Latin honors\").\n.decl Answer()\nAnswer() :- Has_grade(\"Bill Gates\", grade), Has_honors(\"Bill Gates\", honors), grade >= 3.5.\n.output Answer\n\n"]}
{"id": 163, "answer": true, "completion": ".decl Has_digital_format(Object:symbol)\nHas_digital_format(\"Superhero fiction\").\n.decl Answer()\nAnswer() :- Has_digital_format(\"Superhero fiction\").\n.output Answer\n\n", "completions": [".decl Has_digital_format(Object:symbol)\nHas_digital_format(\"Superhero fiction\").\n.decl Answer()\nAnswer() :- Has_digital_format(\"Superhero fiction\").\n.output Answer\n\n"]}
{"id": 164, "answer": false, "completion": ".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"chicken\", \"bird\").\nIs_a(\"chicken\", \"animal\").\nIs_a(\"chicken\", \"chordate\").\nIs_a(\"chicken\", \"vertebrate\").\nIs_a(\"chicken\", \"mammal\").\nIs_a(\"chicken\", \"warm-blooded\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\n", "completions": [".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"chicken\", \"bird\").\nIs_a(\"chicken\", \"animal\").\nIs_a(\"chicken\", \"chordate\").\nIs_a(\"chicken\", \"vertebrate\").\nIs_a(\"chicken\", \"mammal\").\nIs_a(\"chicken\", \"warm-blooded\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\nIs_a(\"chicken\", \"chicken\").\n"]}
{"id": 165, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Daniel thrown into the lion's den\", \"Babylon\").\nHappens_in_time(\"Daniel thrown into the lion's den\", \"Israel\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"lion's den\", \"Babylon\").\nHappens_in_time(\"lion's den\", \"Israel\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Daniel thrown into the lion's den\", time1), Happens_in_time(\"lion's den\", time2), time1 != time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Daniel thrown into the lion's den\", \"Babylon\").\nHappens_in_time(\"Daniel thrown into the lion's den\", \"Israel\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"lion's den\", \"Babylon\").\nHappens_in_time(\"lion's den\", \"Israel\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Daniel thrown into the lion's den\", time1), Happens_in_time(\"lion's den\", time2), time1 != time2.\n.output Answer\n\n"]}
{"id": 166, "answer": true, "completion": ".decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"elephant pregnancy\", 4).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"solar eclipse\", 4).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"solar eclipse\", n_years1), Last_n_years(\"elephant pregnancy\", n_years2),  n_years1 <= n_years2.\n.output Answer\n\n", "completions": [".decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"elephant pregnancy\", 4).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"solar eclipse\", 4).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"solar eclipse\", n_years1), Last_n_years(\"elephant pregnancy\", n_years2),  n_years1 <= n_years2.\n.output Answer\n\n"]}
{"id": 167, "answer": true, "completion": ".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"swastika\", \"good luck\").\nHas_meaning(\"swastika\", \"a sacred symbol\").\nHas_meaning(\"swastika\", \"a Nazi symbol\").\n.decl Answer()\nAnswer() :- Has_meaning(\"swastika\", meaning), Has_meaning(\"swastika\", meaning2), meaning != meaning2.\n.output Answer\n\n", "completions": [".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"swastika\", \"good luck\").\nHas_meaning(\"swastika\", \"a sacred symbol\").\nHas_meaning(\"swastika\", \"a Nazi symbol\").\n.decl Answer()\nAnswer() :- Has_meaning(\"swastika\", meaning), Has_meaning(\"swastika\", meaning2), meaning != meaning2.\n.output Answer\n\n"]}
{"id": 168, "answer": true, "completion": ".decl Has_n_units(Company:symbol, N_units:float)\nHas_n_units(\"Sony\", 100).\nHas_n_units(\"Sega\", 50).\n.decl Has_n_units_in_time(Company:symbol, N_units:float, Time:symbol)\nHas_n_units_in_time(\"Sony\", 100, \"1980\").\nHas_n_units_in_time(\"Sega\", 50, \"1980\").\n.decl Answer()\nAnswer() :- Has_n_units(\"Sony\", n_units1), Has_n_units(\"Sega\", n_units2), Has_n_units_in_time(\"Sony\", n_units3, time), Has_n_units_in_time(\"Sega\", n_units4, time), n_units1 > n_units2, n_units3 > n_units4.\n.output Answer\n\n", "completions": [".decl Has_n_units(Company:symbol, N_units:float)\nHas_n_units(\"Sony\", 100).\nHas_n_units(\"Sega\", 50).\n.decl Has_n_units_in_time(Company:symbol, N_units:float, Time:symbol)\nHas_n_units_in_time(\"Sony\", 100, \"1980\").\nHas_n_units_in_time(\"Sega\", 50, \"1980\").\n.decl Answer()\nAnswer() :- Has_n_units(\"Sony\", n_units1), Has_n_units(\"Sega\", n_units2), Has_n_units_in_time(\"Sony\", n_units3, time), Has_n_units_in_time(\"Sega\", n_units4, time), n_units1 > n_units2, n_units3 > n_units4.\n.output Answer\n\n"]}
{"id": 169, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"ethics professor\", \"ethics\").\nHas_name(\"ethics professor\", \"professor\").\nHas_name(\"ethics professor\", \"Cezanne\").\n.decl Answer()\nAnswer() :- Has_name(\"ethics professor\", name1), Has_name(\"ethics professor\", name2), Has_name(\"ethics professor\", name3), name1 = name2, name2 = name3.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"ethics professor\", \"ethics\").\nHas_name(\"ethics professor\", \"professor\").\nHas_name(\"ethics professor\", \"Cezanne\").\n.decl Answer()\nAnswer() :- Has_name(\"ethics professor\", name1), Has_name(\"ethics professor\", name2), Has_name(\"ethics professor\", name3), name1 = name2, name2 = name3.\n.output Answer\n\n"]}
{"id": 170, "answer": true, "completion": ".decl Has_diary(Animal:symbol)\nHas_diary(\"dolphin\").\n.decl Answer()\nAnswer() :- Has_diary(\"dolphin\").\n.output Answer\n\n", "completions": [".decl Has_diary(Animal:symbol)\nHas_diary(\"dolphin\").\n.decl Answer()\nAnswer() :- Has_diary(\"dolphin\").\n.output Answer\n\n"]}
{"id": 171, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Columbus's 1492 expedition\", 7).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Durian trees\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Columbus's 1492 expedition\", n_members1), Has_n_members(\"Durian trees\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Columbus's 1492 expedition\", 7).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Durian trees\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Columbus's 1492 expedition\", n_members1), Has_n_members(\"Durian trees\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 172, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Chrysler\", 100).\nHas_volume(\"laptop bag\", 10).\n.decl Answer()\nAnswer() :- Has_volume(\"Chrysler\", volume1), Has_volume(\"laptop bag\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Chrysler\", 100).\nHas_volume(\"laptop bag\", 10).\n.decl Answer()\nAnswer() :- Has_volume(\"Chrysler\", volume1), Has_volume(\"laptop bag\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 173, "answer": false, "completion": ".decl Survived(Astronaut:symbol)\nSurvived(\"Buzz Aldrin\").\nSurvived(\"Neil Armstrong\").\nSurvived(\"Sally Ride\").\nSurvived(\"John Glenn\").\nSurvived(\"Alan Shepard\").\nSurvived(\"John Young\").\nSurvived(\"Charles Conrad\").\nSurvived(\"Alan Bean\").\nSurvived(\"James Lovell\").\nSurvived(\"Edgar Mitchell\").\nSurvived(\"Eugene Cernan\").\nSurvived(\"Charles Duke\").\nSurvived(\"Richard Gordon\").\nSurvived(\"Charles Duke\").\nSurvived(\"William Anders\").\nSurvived(\"Donn Eisele\").\nSurvived(\"Gus Grissom\").\nSurvived(\"Virgil Grissom\").\nSurvived(\"Gus Grissom\").\nSurvived(\"Stuart Roosa\").\nSurvived(\"John Young\").\nSurvived(\"Eugene Cernan\").\nSurvived(\"Ronald Evans\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived", "completions": [".decl Survived(Astronaut:symbol)\nSurvived(\"Buzz Aldrin\").\nSurvived(\"Neil Armstrong\").\nSurvived(\"Sally Ride\").\nSurvived(\"John Glenn\").\nSurvived(\"Alan Shepard\").\nSurvived(\"John Young\").\nSurvived(\"Charles Conrad\").\nSurvived(\"Alan Bean\").\nSurvived(\"James Lovell\").\nSurvived(\"Edgar Mitchell\").\nSurvived(\"Eugene Cernan\").\nSurvived(\"Charles Duke\").\nSurvived(\"Richard Gordon\").\nSurvived(\"Charles Duke\").\nSurvived(\"William Anders\").\nSurvived(\"Donn Eisele\").\nSurvived(\"Gus Grissom\").\nSurvived(\"Virgil Grissom\").\nSurvived(\"Gus Grissom\").\nSurvived(\"Stuart Roosa\").\nSurvived(\"John Young\").\nSurvived(\"Eugene Cernan\").\nSurvived(\"Ronald Evans\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived(\"Alan Bean\").\nSurvived"]}
{"id": 174, "answer": true, "completion": ".decl Has_term(Person:symbol, Term:float)\nHas_term(\"Chief Justice\", 8).\nHas_term(\"Senator\", 6).\n.decl Answer()\nAnswer() :- Has_term(\"Chief Justice\", term1), Has_term(\"Senator\", term2), term1 > term2.\n.output Answer\n\n", "completions": [".decl Has_term(Person:symbol, Term:float)\nHas_term(\"Chief Justice\", 8).\nHas_term(\"Senator\", 6).\n.decl Answer()\nAnswer() :- Has_term(\"Chief Justice\", term1), Has_term(\"Senator\", term2), term1 > term2.\n.output Answer\n\n"]}
{"id": 175, "answer": true, "completion": ".decl Has_hell_level(Person:symbol, Hell_level:float)\nHas_hell_level(\"Dante\", 3).\nHas_hell_level(\"Nostradamus\", 3).\n.decl Answer()\nAnswer() :- Has_hell_level(\"Dante\", level1), Has_hell_level(\"Nostradamus\", level2), level1 = level2.\n.output Answer\n\n", "completions": [".decl Has_hell_level(Person:symbol, Hell_level:float)\nHas_hell_level(\"Dante\", 3).\nHas_hell_level(\"Nostradamus\", 3).\n.decl Answer()\nAnswer() :- Has_hell_level(\"Dante\", level1), Has_hell_level(\"Nostradamus\", level2), level1 = level2.\n.output Answer\n\n"]}
{"id": 176, "answer": true, "completion": ".decl Was_associated_with(Company:symbol, Organization:symbol)\nWas_associated_with(\"Mercedes-Benz\", \"Nazi Germany\").\n.decl Answer()\nAnswer() :- Was_associated_with(\"Mercedes-Benz\", organization).\n.output Answer\n\n", "completions": [".decl Was_associated_with(Company:symbol, Organization:symbol)\nWas_associated_with(\"Mercedes-Benz\", \"Nazi Germany\").\n.decl Answer()\nAnswer() :- Was_associated_with(\"Mercedes-Benz\", organization).\n.output Answer\n\n"]}
{"id": 177, "answer": true, "completion": ".decl Has_n_visitors(Resort:symbol, N_visitors:float)\nHas_n_visitors(\"Disneyland Paris\", 12000000).\nHas_n_visitors(\"Disneyland Tokyo\", 5000000).\nHas_n_visitors(\"Disneyland California\", 5000000).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Disneyland Paris\", n_visitors1), Has_n_visitors(\"Disneyland Tokyo\", n_visitors2), Has_n_visitors(\"Disneyland California\", n_visitors3), n_visitors1 > n_visitors2, n_visitors1 > n_visitors3.\n.output Answer\n\n", "completions": [".decl Has_n_visitors(Resort:symbol, N_visitors:float)\nHas_n_visitors(\"Disneyland Paris\", 12000000).\nHas_n_visitors(\"Disneyland Tokyo\", 5000000).\nHas_n_visitors(\"Disneyland California\", 5000000).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Disneyland Paris\", n_visitors1), Has_n_visitors(\"Disneyland Tokyo\", n_visitors2), Has_n_visitors(\"Disneyland California\", n_visitors3), n_visitors1 > n_visitors2, n_visitors1 > n_visitors3.\n.output Answer\n\n"]}
{"id": 178, "answer": false, "completion": ".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Rockette\", \"blond\").\nHas_hair_color(\"Rockette\", \"red\").\nHas_hair_color(\"Rockette\", \"brown\").\n.decl Has_hair_length(Person:symbol, Hair_length:symbol)\nHas_hair_length(\"Rockette\", \"long\").\nHas_hair_length(\"Rockette\", \"short\").\n.decl Has_hair_style(Person:symbol, Hair_style:symbol)\nHas_hair_style(\"Rockette\", \"curly\").\nHas_hair_style(\"Rockette\", \"straight\").\n.decl Has_moustache(Person:symbol, Moustache:symbol)\nHas_moustache(\"Rockette\", \"yes\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Rockette\", hair_color), Has_hair_length(\"Rockette\", hair_length), Has_hair_style(\"Rockette\", hair_style), Has_moustache(\"Rockette\", moustache), hair_color \\= \"blond\", hair_length \\= \"short\", hair_style \\= \"straight\", moustache \\= \"yes\".\n.output Answer\n\n", "completions": [".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Rockette\", \"blond\").\nHas_hair_color(\"Rockette\", \"red\").\nHas_hair_color(\"Rockette\", \"brown\").\n.decl Has_hair_length(Person:symbol, Hair_length:symbol)\nHas_hair_length(\"Rockette\", \"long\").\nHas_hair_length(\"Rockette\", \"short\").\n.decl Has_hair_style(Person:symbol, Hair_style:symbol)\nHas_hair_style(\"Rockette\", \"curly\").\nHas_hair_style(\"Rockette\", \"straight\").\n.decl Has_moustache(Person:symbol, Moustache:symbol)\nHas_moustache(\"Rockette\", \"yes\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Rockette\", hair_color), Has_hair_length(\"Rockette\", hair_length), Has_hair_style(\"Rockette\", hair_style), Has_moustache(\"Rockette\", moustache), hair_color \\= \"blond\", hair_length \\= \"short\", hair_style \\= \"straight\", moustache \\= \"yes\".\n.output Answer\n\n"]}
{"id": 179, "answer": true, "completion": ".decl Plays_tennis(Turtle:symbol)\nPlays_tennis(\"Sea Turtle\").\n.decl Has_tennis_racket(Turtle:symbol)\nHas_tennis_racket(\"Sea Turtle\").\n.decl Answer()\nAnswer() :- Plays_tennis(turtle), Has_tennis_racket(turtle).\n.output Answer\n\n", "completions": [".decl Plays_tennis(Turtle:symbol)\nPlays_tennis(\"Sea Turtle\").\n.decl Has_tennis_racket(Turtle:symbol)\nHas_tennis_racket(\"Sea Turtle\").\n.decl Answer()\nAnswer() :- Plays_tennis(turtle), Has_tennis_racket(turtle).\n.output Answer\n\n"]}
{"id": 180, "answer": true, "completion": ".decl Was_invented_by(Idea:symbol, Person:symbol)\nWas_invented_by(\"New York Harbor\", \"Donald Trump\").\n.decl Answer()\nAnswer() :- Was_invented_by(\"New York Harbor\", person).\n.output Answer\n\n", "completions": [".decl Was_invented_by(Idea:symbol, Person:symbol)\nWas_invented_by(\"New York Harbor\", \"Donald Trump\").\n.decl Answer()\nAnswer() :- Was_invented_by(\"New York Harbor\", person).\n.output Answer\n\n"]}
{"id": 181, "answer": true, "completion": ".decl Has_currency(Object:symbol, Currency:symbol)\nHas_currency(\"paypal\", \"USD\").\nHas_currency(\"drug deals\", \"USD\").\n.decl Answer()\nAnswer() :- Has_currency(\"paypal\", currency), Has_currency(\"drug deals\", currency).\n.output Answer\n\n", "completions": [".decl Has_currency(Object:symbol, Currency:symbol)\nHas_currency(\"paypal\", \"USD\").\nHas_currency(\"drug deals\", \"USD\").\n.decl Answer()\nAnswer() :- Has_currency(\"paypal\", currency), Has_currency(\"drug deals\", currency).\n.output Answer\n\n"]}
{"id": 182, "answer": true, "completion": ".decl Is_safe_to_eat(Food:symbol, Safety:symbol)\nIs_safe_to_eat(\"kidney\", \"yes\").\nIs_safe_to_eat(\"kidney\", \"no\").\n.decl Answer()\nAnswer() :- Is_safe_to_eat(\"kidney\", safety).\n.output Answer\n\n", "completions": [".decl Is_safe_to_eat(Food:symbol, Safety:symbol)\nIs_safe_to_eat(\"kidney\", \"yes\").\nIs_safe_to_eat(\"kidney\", \"no\").\n.decl Answer()\nAnswer() :- Is_safe_to_eat(\"kidney\", safety).\n.output Answer\n\n"]}
{"id": 183, "answer": false, "completion": ".decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Answer()\nAnswer() :- Taste_better_after_long_time(\"shrimp\", time1), Taste_better_after_long_time(\"shrimp\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Taste_better_after_long_time(Food:symbol, Time:symbol)\nTaste_better_after_long_time(\"shrimp\", \"cooking\").\n.decl Answer()\nAnswer() :- Taste_better_after_long_time(\"shrimp\", time1), Taste_better_after_long_time(\"shrimp\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 184, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"African elephant\", 6000).\nHas_mass(\"Hulk\", 1000000).\n.decl Answer()\nAnswer() :- Has_mass(\"African elephant\", mass1), Has_mass(\"Hulk\", mass2), mass1 < mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"African elephant\", 6000).\nHas_mass(\"Hulk\", 1000000).\n.decl Answer()\nAnswer() :- Has_mass(\"African elephant\", mass1), Has_mass(\"Hulk\", mass2), mass1 < mass2.\n.output Answer\n\n"]}
{"id": 185, "answer": true, "completion": ".decl Has_n_years(Event:symbol, N_years:float)\nHas_n_years(\"USA\", 200).\nHas_n_years(\"alma mater\", 300).\n.decl Answer()\nAnswer() :- Has_n_years(\"alma mater\", n_years1), Has_n_years(\"USA\", n_years2), n_years1 > n_years2.\n.output Answer\n\n", "completions": [".decl Has_n_years(Event:symbol, N_years:float)\nHas_n_years(\"USA\", 200).\nHas_n_years(\"alma mater\", 300).\n.decl Answer()\nAnswer() :- Has_n_years(\"alma mater\", n_years1), Has_n_years(\"USA\", n_years2), n_years1 > n_years2.\n.output Answer\n\n"]}
{"id": 186, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Saturn\", \"Cronus\").\n.decl Has_greek_name(Object:symbol, Name:symbol)\nHas_greek_name(\"Cronus\", \"Zeus\").\n.decl Answer()\nAnswer() :- Has_name(\"Saturn\", name), Has_greek_name(\"Cronus\", greek_name), name = greek_name.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Saturn\", \"Cronus\").\n.decl Has_greek_name(Object:symbol, Name:symbol)\nHas_greek_name(\"Cronus\", \"Zeus\").\n.decl Answer()\nAnswer() :- Has_name(\"Saturn\", name), Has_greek_name(\"Cronus\", greek_name), name = greek_name.\n.output Answer\n\n"]}
{"id": 187, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American Independence Day\", \"July\").\nHappens_in_time(\"American Independence Day\", \"August\").\nHappens_in_time(\"American Independence Day\", \"September\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"autumn\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"American Independence Day\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American Independence Day\", \"July\").\nHappens_in_time(\"American Independence Day\", \"August\").\nHappens_in_time(\"American Independence Day\", \"September\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"autumn\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"American Independence Day\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 188, "answer": false, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Albany, Georgia\", 0.5).\nHas_population(\"Albany, New York\", 0.5).\nHas_population(\"Albany, Oregon\", 0.5).\n.decl Answer()\nAnswer() :- Has_population(\"Albany, Georgia\", population1), Has_population(\"Albany, New York\", population2), Has_population(\"Albany, Oregon\", population3), population1 > population2, population1 > population3.\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Albany, Georgia\", 0.5).\nHas_population(\"Albany, New York\", 0.5).\nHas_population(\"Albany, Oregon\", 0.5).\n.decl Answer()\nAnswer() :- Has_population(\"Albany, Georgia\", population1), Has_population(\"Albany, New York\", population2), Has_population(\"Albany, Oregon\", population3), population1 > population2, population1 > population3.\n.output Answer\n\n"]}
{"id": 189, "answer": false, "completion": ".decl From(Person:symbol, Country:symbol)\nFrom(\"Janus Friis\", \"Denmark\").\nFrom(\"Janus Friis\", \"Finland\").\nFrom(\"Janus Friis\", \"Norway\").\nFrom(\"Janus Friis\", \"Sweden\").\nFrom(\"Janus Friis\", \"United Kingdom\").\nFrom(\"Janus Friis\", \"United States\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Viet", "completions": [".decl From(Person:symbol, Country:symbol)\nFrom(\"Janus Friis\", \"Denmark\").\nFrom(\"Janus Friis\", \"Finland\").\nFrom(\"Janus Friis\", \"Norway\").\nFrom(\"Janus Friis\", \"Sweden\").\nFrom(\"Janus Friis\", \"United Kingdom\").\nFrom(\"Janus Friis\", \"United States\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Vietnam\").\nFrom(\"Janus Friis\", \"Viet"]}
{"id": 190, "answer": true, "completion": ".decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"reading Bible\", 15).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"reading Bible\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"reading Bible\", n_days), Happens_every_n_years(\"reading Bible\", n_years), n_days * 365 >= n_years.\n.output Answer\n\n", "completions": [".decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"reading Bible\", 15).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"reading Bible\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"reading Bible\", n_days), Happens_every_n_years(\"reading Bible\", n_years), n_days * 365 >= n_years.\n.output Answer\n\n"]}
{"id": 191, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"retirement\", \"1775\").\nHappens_in_time(\"centuries-old war\", \"1775\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"retirement\", time), Happens_in_time(\"centuries-old war\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"retirement\", \"1775\").\nHappens_in_time(\"centuries-old war\", \"1775\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"retirement\", time), Happens_in_time(\"centuries-old war\", time).\n.output Answer\n\n"]}
{"id": 192, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas carol\", \"December\").\nHappens_in_time(\"Ramadan\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Ramadan\", 30).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas carol\", month), Happens_in_time(\"Ramadan\", month), Happens_every_n_months(\"Ramadan\", n_months), month =/= \"November\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas carol\", \"December\").\nHappens_in_time(\"Ramadan\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Ramadan\", 30).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas carol\", month), Happens_in_time(\"Ramadan\", month), Happens_every_n_months(\"Ramadan\", n_months), month =/= \"November\".\n.output Answer\n\n"]}
{"id": 193, "answer": false, "completion": ".decl Has_lifespan(Object:symbol, Lifespan:float)\nHas_lifespan(\"tree\", 100).\n.decl Answer()\nAnswer() :- Has_lifespan(\"tree\", lifespan1), Lifespan1 < 100.\n.output Answer\n\n", "completions": [".decl Has_lifespan(Object:symbol, Lifespan:float)\nHas_lifespan(\"tree\", 100).\n.decl Answer()\nAnswer() :- Has_lifespan(\"tree\", lifespan1), Lifespan1 < 100.\n.output Answer\n\n"]}
{"id": 194, "answer": false, "completion": ".decl Has_salary(Person:symbol, Salary:float)\nHas_salary(\"Tange Sazen\", 100000).\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Tange Sazen\", \"secretary\").\n.decl Answer()\nAnswer() :- Has_salary(\"Tange Sazen\", salary), Has_job(\"Tange Sazen\", job), salary > 100000.\n.output Answer\n\n", "completions": [".decl Has_salary(Person:symbol, Salary:float)\nHas_salary(\"Tange Sazen\", 100000).\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Tange Sazen\", \"secretary\").\n.decl Answer()\nAnswer() :- Has_salary(\"Tange Sazen\", salary), Has_job(\"Tange Sazen\", job), salary > 100000.\n.output Answer\n\n"]}
{"id": 195, "answer": true, "completion": ".decl Has_effect(Food:symbol, Effect:symbol)\nHas_effect(\"Brussels sprout\", \"adrenal fatigue\").\n.decl Answer()\nAnswer() :- Has_effect(\"Brussels sprout\", effect).\n.output Answer\n\n", "completions": [".decl Has_effect(Food:symbol, Effect:symbol)\nHas_effect(\"Brussels sprout\", \"adrenal fatigue\").\n.decl Answer()\nAnswer() :- Has_effect(\"Brussels sprout\", effect).\n.output Answer\n\n"]}
{"id": 196, "answer": true, "completion": ".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Adam Sandler\", \"Easter\").\n.decl Answer()\nAnswer() :- Celebrates(\"Adam Sandler\", \"Easter\").\n.output Answer\n\n", "completions": [".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Adam Sandler\", \"Easter\").\n.decl Answer()\nAnswer() :- Celebrates(\"Adam Sandler\", \"Easter\").\n.output Answer\n\n"]}
{"id": 197, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"February\").\nHappens_in_time(\"leap year\", \"March\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"leap year\", 4).\n.decl Answer()\nAnswer() :- Happens_in_time(\"leap year\", month1), Happens_in_time(\"leap year\", month2), Happens_every_n_years(\"leap year\", n_years), month1 = month2, n_years = 4.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"February\").\nHappens_in_time(\"leap year\", \"March\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"leap year\", 4).\n.decl Answer()\nAnswer() :- Happens_in_time(\"leap year\", month1), Happens_in_time(\"leap year\", month2), Happens_every_n_years(\"leap year\", n_years), month1 = month2, n_years = 4.\n.output Answer\n\n"]}
{"id": 198, "answer": false, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"Shiva\", \"god\").\nIs_a(\"Shiva's divine dance\", \"dance\").\nIs_a(\"ancient physical fitness pose\", \"fitness pose\").\n.decl Answer()\nAnswer() :- Is_a(\"Shiva\", class1), Is_a(\"Shiva's divine dance\", class2), Is_a(\"ancient physical fitness pose\", class3), class1 = class2, class2 = class3.\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"Shiva\", \"god\").\nIs_a(\"Shiva's divine dance\", \"dance\").\nIs_a(\"ancient physical fitness pose\", \"fitness pose\").\n.decl Answer()\nAnswer() :- Is_a(\"Shiva\", class1), Is_a(\"Shiva's divine dance\", class2), Is_a(\"ancient physical fitness pose\", class3), class1 = class2, class2 = class3.\n.output Answer\n\n"]}
{"id": 199, "answer": false, "completion": ".decl Owned_by(Country:symbol, Empire:symbol)\nOwned_by(\"Israel\", \"Ottoman Empire\").\nOwned_by(\"Israel\", \"Roman Empire\").\nOwned_by(\"Israel\", \"British Empire\").\nOwned_by(\"Israel\", \"French Empire\").\nOwned_by(\"Israel\", \"Islamic Empire\").\n.decl In_year(Event:symbol, Year:float)\nIn_year(\"Israel's independence\", 1948).\nIn_year(\"Israel's declaration of independence\", 1948).\nIn_year(\"Israel's capture of Palestine\", 1948).\nIn_year(\"Israel's capture of Palestine\", 1949).\nIn_year(\"Israel's capture of Palestine\", 1950).\nIn_year(\"Israel's capture of Palestine\", 1951).\nIn_year(\"Israel's capture of Palestine\", 1952).\nIn_year(\"Israel's capture of Palestine\", 1953).\nIn_year(\"Israel's capture of Palestine\", 1954).\nIn_year(\"Israel's capture of Palestine\", 1955).\nIn_year(\"Israel's capture of Palestine\", 1956).\nIn_year(\"Israel's capture of Palestine\", 1957).\nIn_year(\"Israel's capture of Palestine\", 1958).\nIn_year(\"Israel's capture of Palestine\", 1959).\nIn_year(\"Israel's capture of Palestine\", 1960).\nIn_year(\"Israel's capture of Palestine\", 1961).\nIn_year(\"Israel's capture of Palestine\", 1962).\nIn_year(\"Israel's capture of Palestine\", 1963).\nIn_year(\"Israel's capture of Palestine\", 1964).\nIn_year(\"Israel's capture of Palestine\", 1965).\nIn_year(\"Israel's capture of Palestine\", 1966).\nIn_year(\"Israel's capture of Palestine\", 1967).\nIn_year(\"Israel's capture of Palestine\", 1968).\nIn_year(\"Israel's capture of Palestine\", 1969).\nIn_year(\"Israel's capture of Palestine\", 1970).\nIn_year(\"Israel's capture of Palestine\", 1971).\nIn_year(\"Israel's capture of Palestine\", 1972).\nIn_year(\"Israel's capture of Palestine\", 1973).\nIn_year(\"Israel's capture of Palestine\", 1974).\nIn_year(\"Israel's capture of Palestine\", 1975).\nIn_year(\"Israel's capture of Palestine\", 1976).\nIn_year(\"Israel's capture of Palestine\", 1977).\nIn_year(\"Israel's capture of Palestine\", 1978).\nIn_year(\"Israel's capture of Palestine\", 1979).\nIn_year(\"Israel's capture of Palestine\", 1980).\nIn_year(\"Israel's capture of Palestine\", 1981).\nIn_year(\"Israel's capture of Palestine\", 1982).\nIn_year(\"Israel's capture of Palestine\", 1983).\nIn_year(\"Israel's capture of Palestine\", 1984).\nIn_year(\"Israel's capture of Palestine\", 1985).\nIn_year(\"Israel's capture of Palestine\", 1986).\nIn_year(\"Israel's capture of Palestine\", 1987).\nIn_year(\"Israel's capture of Palestine\", 1988).\nIn_year(\"Israel's capture of Palestine\", 1989).\nIn_year(\"Israel's capture of Palestine\", 1990).\nIn_year(\"Israel's capture of Palestine\", 1991).\nIn_year(\"Israel's capture of Palestine\", 1992).\nIn_year(\"Israel's capture of Palestine\", 1993).\nIn_year(\"Israel's capture of Palestine\", 1994).\nIn_year(\"Israel's capture of Palestine\", 1995).\nIn_year(\"Israel's capture of Palestine\", 1996).\nIn_year(\"Israel's capture of Palestine\", 1997).\nIn_year(\"Israel's capture of Palestine\", 1998).\nIn_year(\"Israel's capture of Palestine\", 1999).\nIn_year(\"", "completions": [".decl Owned_by(Country:symbol, Empire:symbol)\nOwned_by(\"Israel\", \"Ottoman Empire\").\nOwned_by(\"Israel\", \"Roman Empire\").\nOwned_by(\"Israel\", \"British Empire\").\nOwned_by(\"Israel\", \"French Empire\").\nOwned_by(\"Israel\", \"Islamic Empire\").\n.decl In_year(Event:symbol, Year:float)\nIn_year(\"Israel's independence\", 1948).\nIn_year(\"Israel's declaration of independence\", 1948).\nIn_year(\"Israel's capture of Palestine\", 1948).\nIn_year(\"Israel's capture of Palestine\", 1949).\nIn_year(\"Israel's capture of Palestine\", 1950).\nIn_year(\"Israel's capture of Palestine\", 1951).\nIn_year(\"Israel's capture of Palestine\", 1952).\nIn_year(\"Israel's capture of Palestine\", 1953).\nIn_year(\"Israel's capture of Palestine\", 1954).\nIn_year(\"Israel's capture of Palestine\", 1955).\nIn_year(\"Israel's capture of Palestine\", 1956).\nIn_year(\"Israel's capture of Palestine\", 1957).\nIn_year(\"Israel's capture of Palestine\", 1958).\nIn_year(\"Israel's capture of Palestine\", 1959).\nIn_year(\"Israel's capture of Palestine\", 1960).\nIn_year(\"Israel's capture of Palestine\", 1961).\nIn_year(\"Israel's capture of Palestine\", 1962).\nIn_year(\"Israel's capture of Palestine\", 1963).\nIn_year(\"Israel's capture of Palestine\", 1964).\nIn_year(\"Israel's capture of Palestine\", 1965).\nIn_year(\"Israel's capture of Palestine\", 1966).\nIn_year(\"Israel's capture of Palestine\", 1967).\nIn_year(\"Israel's capture of Palestine\", 1968).\nIn_year(\"Israel's capture of Palestine\", 1969).\nIn_year(\"Israel's capture of Palestine\", 1970).\nIn_year(\"Israel's capture of Palestine\", 1971).\nIn_year(\"Israel's capture of Palestine\", 1972).\nIn_year(\"Israel's capture of Palestine\", 1973).\nIn_year(\"Israel's capture of Palestine\", 1974).\nIn_year(\"Israel's capture of Palestine\", 1975).\nIn_year(\"Israel's capture of Palestine\", 1976).\nIn_year(\"Israel's capture of Palestine\", 1977).\nIn_year(\"Israel's capture of Palestine\", 1978).\nIn_year(\"Israel's capture of Palestine\", 1979).\nIn_year(\"Israel's capture of Palestine\", 1980).\nIn_year(\"Israel's capture of Palestine\", 1981).\nIn_year(\"Israel's capture of Palestine\", 1982).\nIn_year(\"Israel's capture of Palestine\", 1983).\nIn_year(\"Israel's capture of Palestine\", 1984).\nIn_year(\"Israel's capture of Palestine\", 1985).\nIn_year(\"Israel's capture of Palestine\", 1986).\nIn_year(\"Israel's capture of Palestine\", 1987).\nIn_year(\"Israel's capture of Palestine\", 1988).\nIn_year(\"Israel's capture of Palestine\", 1989).\nIn_year(\"Israel's capture of Palestine\", 1990).\nIn_year(\"Israel's capture of Palestine\", 1991).\nIn_year(\"Israel's capture of Palestine\", 1992).\nIn_year(\"Israel's capture of Palestine\", 1993).\nIn_year(\"Israel's capture of Palestine\", 1994).\nIn_year(\"Israel's capture of Palestine\", 1995).\nIn_year(\"Israel's capture of Palestine\", 1996).\nIn_year(\"Israel's capture of Palestine\", 1997).\nIn_year(\"Israel's capture of Palestine\", 1998).\nIn_year(\"Israel's capture of Palestine\", 1999).\nIn_year(\""]}
{"id": 200, "answer": true, "completion": ".decl Has_lord(Lord:symbol)\nHas_lord(\"Lord 1\").\nHas_lord(\"Lord 2\").\nHas_lord(\"Lord 3\").\n.decl Has_peasant(Peasant:symbol)\nHas_peasant(\"Peasant 1\").\nHas_peasant(\"Peasant 2\").\nHas_peasant(\"Peasant 3\").\n.decl Has_price(Lord:symbol, Price:float)\nHas_price(\"Lord 1\", 1).\nHas_price(\"Lord 2\", 2).\nHas_price(\"Lord 3\", 3).\n.decl Has_quantity(Peasant:symbol, Quantity:float)\nHas_quantity(\"Peasant 1\", 1).\nHas_quantity(\"Peasant 2\", 2).\nHas_quantity(\"Peasant 3\", 3).\n.decl Answer()\nAnswer() :- Has_lord(lord), Has_peasant(peasant), Has_price(lord, price), Has_quantity(peasant, quantity), price > quantity.\n.output Answer\n\n", "completions": [".decl Has_lord(Lord:symbol)\nHas_lord(\"Lord 1\").\nHas_lord(\"Lord 2\").\nHas_lord(\"Lord 3\").\n.decl Has_peasant(Peasant:symbol)\nHas_peasant(\"Peasant 1\").\nHas_peasant(\"Peasant 2\").\nHas_peasant(\"Peasant 3\").\n.decl Has_price(Lord:symbol, Price:float)\nHas_price(\"Lord 1\", 1).\nHas_price(\"Lord 2\", 2).\nHas_price(\"Lord 3\", 3).\n.decl Has_quantity(Peasant:symbol, Quantity:float)\nHas_quantity(\"Peasant 1\", 1).\nHas_quantity(\"Peasant 2\", 2).\nHas_quantity(\"Peasant 3\", 3).\n.decl Answer()\nAnswer() :- Has_lord(lord), Has_peasant(peasant), Has_price(lord, price), Has_quantity(peasant, quantity), price > quantity.\n.output Answer\n\n"]}
{"id": 201, "answer": true, "completion": ".decl Has_hypothetical_use(Object:symbol, Use:symbol)\nHas_hypothetical_use(\"paleography\", \"understand Cthulhu\").\n.decl Answer()\nAnswer() :- Has_hypothetical_use(\"paleography\", use).\n.output Answer\n\n", "completions": [".decl Has_hypothetical_use(Object:symbol, Use:symbol)\nHas_hypothetical_use(\"paleography\", \"understand Cthulhu\").\n.decl Answer()\nAnswer() :- Has_hypothetical_use(\"paleography\", use).\n.output Answer\n\n"]}
{"id": 202, "answer": false, "completion": ".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"jokes\", 1000000).\nHas_n_deaths(\"rats\", 2000000).\n.decl Answer()\nAnswer() :- Has_n_deaths(\"jokes\", n_deaths1), Has_n_deaths(\"rats\", n_deaths2), n_deaths1 > n_deaths2.\n.output Answer\n\n", "completions": [".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"jokes\", 1000000).\nHas_n_deaths(\"rats\", 2000000).\n.decl Answer()\nAnswer() :- Has_n_deaths(\"jokes\", n_deaths1), Has_n_deaths(\"rats\", n_deaths2), n_deaths1 > n_deaths2.\n.output Answer\n\n"]}
{"id": 203, "answer": false, "completion": ".decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"slitting your wrists\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"hanging\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"poisoning\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"starvation\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"exsanguination\", \"death\").\n.decl Answer()\nAnswer() :- Has_effect(\"slitting your wrists\", effect), Has_effect(\"hanging\", effect), Has_effect(\"poisoning\", effect), Has_effect(\"starvation\", effect), Has_effect(\"exsanguination\", effect).\n.output Answer\n\n", "completions": [".decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"slitting your wrists\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"hanging\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"poisoning\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"starvation\", \"death\").\n.decl Has_effect(Method:symbol, Effect:symbol)\nHas_effect(\"exsanguination\", \"death\").\n.decl Answer()\nAnswer() :- Has_effect(\"slitting your wrists\", effect), Has_effect(\"hanging\", effect), Has_effect(\"poisoning\", effect), Has_effect(\"starvation\", effect), Has_effect(\"exsanguination\", effect).\n.output Answer\n\n"]}
{"id": 204, "answer": true, "completion": ".decl Has_rise_in_river(River:symbol, Rise:float)\nHas_rise_in_river(\"nile\", 1).\nHas_rise_in_river(\"amazon\", 2).\nHas_rise_in_river(\"yangtze\", 3).\n.decl Has_rise_in_time(Event:symbol, Rise:float)\nHas_rise_in_time(\"agriculture\", 1).\n.decl Answer()\nAnswer() :- Has_rise_in_river(\"nile\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\nAnswer() :- Has_rise_in_river(\"amazon\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\nAnswer() :- Has_rise_in_river(\"yangtze\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\n.output Answer\n\n", "completions": [".decl Has_rise_in_river(River:symbol, Rise:float)\nHas_rise_in_river(\"nile\", 1).\nHas_rise_in_river(\"amazon\", 2).\nHas_rise_in_river(\"yangtze\", 3).\n.decl Has_rise_in_time(Event:symbol, Rise:float)\nHas_rise_in_time(\"agriculture\", 1).\n.decl Answer()\nAnswer() :- Has_rise_in_river(\"nile\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\nAnswer() :- Has_rise_in_river(\"amazon\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\nAnswer() :- Has_rise_in_river(\"yangtze\", rise1), Has_rise_in_time(\"agriculture\", rise2), rise1 >= rise2.\n.output Answer\n\n"]}
{"id": 205, "answer": true, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Eskimos\", -20).\nHas_temperature(\"Eskimos\", -10).\nHas_temperature(\"Eskimos\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"Eskimos\", temperature), temperature < 0.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Eskimos\", -20).\nHas_temperature(\"Eskimos\", -10).\nHas_temperature(\"Eskimos\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"Eskimos\", temperature), temperature < 0.\n.output Answer\n\n"]}
{"id": 206, "answer": false, "completion": ".decl Works_at_night(Person:symbol)\nWorks_at_night(\"Bob\").\nWorks_at_night(\"Alice\").\nWorks_at_night(\"Eve\").\n.decl Works_at_night(Person:symbol, Shift:symbol)\nWorks_at_night(\"Bob\", \"night\").\nWorks_at_night(\"Alice\", \"night\").\nWorks_at_night(\"Eve\", \"night\").\n.decl Works_at_night(Person:symbol, Shift:symbol, Facility:symbol)\nWorks_at_night(\"Bob\", \"night\", \"Goldstone Deep Space Communications Complex\").\nWorks_at_night(\"Alice\", \"night\", \"Goldstone Deep Space Communications Complex\").\nWorks_at_night(\"Eve\", \"night\", \"Goldstone Deep Space Communications Complex\").\n.decl Answer()\nAnswer() :- Works_at_night(\"Bob\", shift, facility), Works_at_night(\"Alice\", shift, facility), Works_at_night(\"Eve\", shift, facility).\n.output Answer\n\n", "completions": [".decl Works_at_night(Person:symbol)\nWorks_at_night(\"Bob\").\nWorks_at_night(\"Alice\").\nWorks_at_night(\"Eve\").\n.decl Works_at_night(Person:symbol, Shift:symbol)\nWorks_at_night(\"Bob\", \"night\").\nWorks_at_night(\"Alice\", \"night\").\nWorks_at_night(\"Eve\", \"night\").\n.decl Works_at_night(Person:symbol, Shift:symbol, Facility:symbol)\nWorks_at_night(\"Bob\", \"night\", \"Goldstone Deep Space Communications Complex\").\nWorks_at_night(\"Alice\", \"night\", \"Goldstone Deep Space Communications Complex\").\nWorks_at_night(\"Eve\", \"night\", \"Goldstone Deep Space Communications Complex\").\n.decl Answer()\nAnswer() :- Works_at_night(\"Bob\", shift, facility), Works_at_night(\"Alice\", shift, facility), Works_at_night(\"Eve\", shift, facility).\n.output Answer\n\n"]}
{"id": 207, "answer": false, "completion": ".decl Has_n_episodes(Soap:symbol, N_episodes:float)\nHas_n_episodes(\"Days of Our Lives\", 1000).\n.decl Has_n_episodes(Soap:symbol, N_episodes:float)\nHas_n_episodes(\"General Hospital\", 500).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Days of Our Lives\", n_episodes1), Has_n_episodes(\"General Hospital\", n_episodes2), n_episodes1 > n_episodes2.\n.output Answer\n\n", "completions": [".decl Has_n_episodes(Soap:symbol, N_episodes:float)\nHas_n_episodes(\"Days of Our Lives\", 1000).\n.decl Has_n_episodes(Soap:symbol, N_episodes:float)\nHas_n_episodes(\"General Hospital\", 500).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Days of Our Lives\", n_episodes1), Has_n_episodes(\"General Hospital\", n_episodes2), n_episodes1 > n_episodes2.\n.output Answer\n\n"]}
{"id": 208, "answer": false, "completion": ".decl Likes(Pokemon:symbol, Person:symbol)\nLikes(\"Pikachu\", \"Charles Darwin\").\n.decl Answer()\nAnswer() :- Likes(\"Pikachu\", person), Likes(\"Charles Darwin\", person).\n.output Answer\n\n", "completions": [".decl Likes(Pokemon:symbol, Person:symbol)\nLikes(\"Pikachu\", \"Charles Darwin\").\n.decl Answer()\nAnswer() :- Likes(\"Pikachu\", person), Likes(\"Charles Darwin\", person).\n.output Answer\n\n"]}
{"id": 209, "answer": true, "completion": ".decl Has_hair(Person:symbol, Hair_location:symbol)\nHas_hair(\"person\", \"top of their scalp\").\n.decl Answer()\nAnswer() :- Has_hair(\"person\", hair_location), hair_location = \"top of their scalp\".\n.output Answer\n\n", "completions": [".decl Has_hair(Person:symbol, Hair_location:symbol)\nHas_hair(\"person\", \"top of their scalp\").\n.decl Answer()\nAnswer() :- Has_hair(\"person\", hair_location), hair_location = \"top of their scalp\".\n.output Answer\n\n"]}
{"id": 210, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"grey seal\", 0.5).\nHas_density(\"Moby Dick\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"grey seal\", density1), Has_density(\"Moby Dick\", density2), density1 >= density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"grey seal\", 0.5).\nHas_density(\"Moby Dick\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"grey seal\", density1), Has_density(\"Moby Dick\", density2), density1 >= density2.\n.output Answer\n\n"]}
{"id": 211, "answer": false, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Donald Duck\", \"bell-bottoms\").\n.decl Answer()\nAnswer() :- Owns(\"Donald Duck\", object).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Donald Duck\", \"bell-bottoms\").\n.decl Answer()\nAnswer() :- Owns(\"Donald Duck\", object).\n.output Answer\n\n"]}
{"id": 212, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Pizza\", \"sea cucumber\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nE", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Pizza\", \"sea cucumber\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nEats(\"Pizza\", \"sea snail\").\nEats(\"Pizza\", \"sea urchin\").\nEats(\"Pizza\", \"sea slug\").\nE"]}
{"id": 213, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"traffic\", \"day\").\nHappens_in_time(\"traffic\", \"night\").\nHappens_in_time(\"funeral\", \"day\").\nHappens_in_time(\"funeral\", \"night\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"traffic\", time), Happens_in_time(\"funeral\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"traffic\", \"day\").\nHappens_in_time(\"traffic\", \"night\").\nHappens_in_time(\"funeral\", \"day\").\nHappens_in_time(\"funeral\", \"night\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"traffic\", time), Happens_in_time(\"funeral\", time).\n.output Answer\n\n"]}
{"id": 214, "answer": true, "completion": ".decl Has_latitude(Place:symbol, Latitude:float)\nHas_latitude(\"home\", 40.7128).\nHas_latitude(\"home\", 40.7128).\n.decl Has_longitude(Place:symbol, Longitude:float)\nHas_longitude(\"home\", 74.0059).\nHas_longitude(\"home\", 74.0059).\n.decl Answer()\nAnswer() :- Has_latitude(\"home\", latitude), Has_longitude(\"home\", longitude), latitude > 40.7128, longitude > 74.0059.\n.output Answer\n\n", "completions": [".decl Has_latitude(Place:symbol, Latitude:float)\nHas_latitude(\"home\", 40.7128).\nHas_latitude(\"home\", 40.7128).\n.decl Has_longitude(Place:symbol, Longitude:float)\nHas_longitude(\"home\", 74.0059).\nHas_longitude(\"home\", 74.0059).\n.decl Answer()\nAnswer() :- Has_latitude(\"home\", latitude), Has_longitude(\"home\", longitude), latitude > 40.7128, longitude > 74.0059.\n.output Answer\n\n"]}
{"id": 215, "answer": false, "completion": ".decl Awaits(Person:symbol, Event:symbol)\nAwaits(\"Woody Allen\", \"Second Coming\").\n.decl Answer()\nAnswer() :- Awaits(\"Woody Allen\", event).\n.output Answer\n\n", "completions": [".decl Awaits(Person:symbol, Event:symbol)\nAwaits(\"Woody Allen\", \"Second Coming\").\n.decl Answer()\nAnswer() :- Awaits(\"Woody Allen\", event).\n.output Answer\n\n"]}
{"id": 216, "answer": true, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"meat\", 100).\nHas_temperature(\"human body\", 98).\n.decl Answer()\nAnswer() :- Has_temperature(\"meat\", temperature1), Has_temperature(\"human body\", temperature2), temperature1 > temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"meat\", 100).\nHas_temperature(\"human body\", 98).\n.decl Answer()\nAnswer() :- Has_temperature(\"meat\", temperature1), Has_temperature(\"human body\", temperature2), temperature1 > temperature2.\n.output Answer\n\n"]}
{"id": 217, "answer": false, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"Uranium\", 92).\nHas_atomic_number(\"Dicopomorpha echmepterygis\", 34).\n.decl Has_mass(Element:symbol, Mass:float)\nHas_mass(\"Dicopomorpha echmepterygis\", 0.1).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"Dicopomorpha echmepterygis\", atomic_number), Has_mass(\"Dicopomorpha echmepterygis\", mass), Has_atomic_number(\"Uranium\", atomic_number2), mass > atomic_number2.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"Uranium\", 92).\nHas_atomic_number(\"Dicopomorpha echmepterygis\", 34).\n.decl Has_mass(Element:symbol, Mass:float)\nHas_mass(\"Dicopomorpha echmepterygis\", 0.1).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"Dicopomorpha echmepterygis\", atomic_number), Has_mass(\"Dicopomorpha echmepterygis\", mass), Has_atomic_number(\"Uranium\", atomic_number2), mass > atomic_number2.\n.output Answer\n\n"]}
{"id": 218, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\nHappens_in_time(\"menthol\", \"December\").\nHappens_in_time(\"menthol\", \"January\").\nHappens_in_time(\"menthol\", \"February\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"menthol\", month), Happens_in_time(\"Christmas\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\nHappens_in_time(\"menthol\", \"December\").\nHappens_in_time(\"menthol\", \"January\").\nHappens_in_time(\"menthol\", \"February\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"menthol\", month), Happens_in_time(\"Christmas\", month).\n.output Answer\n\n"]}
{"id": 219, "answer": false, "completion": ".decl Runs(Person:symbol, Election:symbol)\nRuns(\"John Kerry\", \"United Kingdom general election\").\n.decl Is_election(Election:symbol)\nIs_election(\"United Kingdom general election\").\n.decl Answer()\nAnswer() :- Runs(\"John Kerry\", election), Is_election(election).\n.output Answer\n\n", "completions": [".decl Runs(Person:symbol, Election:symbol)\nRuns(\"John Kerry\", \"United Kingdom general election\").\n.decl Is_election(Election:symbol)\nIs_election(\"United Kingdom general election\").\n.decl Answer()\nAnswer() :- Runs(\"John Kerry\", election), Is_election(election).\n.output Answer\n\n"]}
{"id": 220, "answer": true, "completion": ".decl Has_fear(Animal:symbol, Fear:symbol)\nHas_fear(\"Bengal cat\", \"fish\").\n.decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"fish\", \"Bengal cat\").\n.decl Answer()\nAnswer() :- Has_fear(\"Bengal cat\", fear), Eats(\"fish\", animal), Has_fear(animal, fear).\n.output Answer\n\n", "completions": [".decl Has_fear(Animal:symbol, Fear:symbol)\nHas_fear(\"Bengal cat\", \"fish\").\n.decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"fish\", \"Bengal cat\").\n.decl Answer()\nAnswer() :- Has_fear(\"Bengal cat\", fear), Eats(\"fish\", animal), Has_fear(animal, fear).\n.output Answer\n\n"]}
{"id": 221, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pickles\", 12).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hypertension\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"pickles\", n_members1), Has_n_members(\"hypertension\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pickles\", 12).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hypertension\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"pickles\", n_members1), Has_n_members(\"hypertension\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 222, "answer": true, "completion": ".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Revolutionary Road\", \"novel\").\nHas_genre(\"Revolutionary Road\", \"drama\").\n.decl Has_subgenre(Book:symbol, Subgenre:symbol)\nHas_subgenre(\"Revolutionary Road\", \"drama\").\n.decl Answer()\nAnswer() :- Has_genre(\"Revolutionary Road\", genre), Has_subgenre(\"Revolutionary Road\", subgenre), genre = \"novel\", subgenre = \"drama\".\n.output Answer\n\n", "completions": [".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Revolutionary Road\", \"novel\").\nHas_genre(\"Revolutionary Road\", \"drama\").\n.decl Has_subgenre(Book:symbol, Subgenre:symbol)\nHas_subgenre(\"Revolutionary Road\", \"drama\").\n.decl Answer()\nAnswer() :- Has_genre(\"Revolutionary Road\", genre), Has_subgenre(\"Revolutionary Road\", subgenre), genre = \"novel\", subgenre = \"drama\".\n.output Answer\n\n"]}
{"id": 223, "answer": false, "completion": ".decl Associated_with(God:symbol, God_of:symbol)\nAssociated_with(\"Odin\", \"rulership\").\nAssociated_with(\"Odin\", \"war\").\nAssociated_with(\"Odin\", \"thunder\").\nAssociated_with(\"Odin\", \"runes\").\nAssociated_with(\"Odin\", \"poetry\").\nAssociated_with(\"Odin\", \"fertility\").\nAssociated_with(\"Odin\", \"the hunt\").\nAssociated_with(\"Odin\", \"the raven\").\nAssociated_with(\"Odin\", \"the seeress\").\nAssociated_with(\"Odin\", \"the shaper\").\nAssociated_with(\"Odin\", \"the ruler\").\nAssociated_with(\"Odin\", \"the seer\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\",", "completions": [".decl Associated_with(God:symbol, God_of:symbol)\nAssociated_with(\"Odin\", \"rulership\").\nAssociated_with(\"Odin\", \"war\").\nAssociated_with(\"Odin\", \"thunder\").\nAssociated_with(\"Odin\", \"runes\").\nAssociated_with(\"Odin\", \"poetry\").\nAssociated_with(\"Odin\", \"fertility\").\nAssociated_with(\"Odin\", \"the hunt\").\nAssociated_with(\"Odin\", \"the raven\").\nAssociated_with(\"Odin\", \"the seeress\").\nAssociated_with(\"Odin\", \"the shaper\").\nAssociated_with(\"Odin\", \"the ruler\").\nAssociated_with(\"Odin\", \"the seer\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\", \"the wild\").\nAssociated_with(\"Odin\", \"the wise\").\nAssociated_with(\"Odin\", \"the warrior\").\nAssociated_with(\"Odin\", \"the wanderer\").\nAssociated_with(\"Odin\","]}
{"id": 224, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"3D printer\", 1).\nHas_size(\"room\", 1).\n.decl Answer()\nAnswer() :- Has_size(\"3D printer\", size1), Has_size(\"room\", size2), size1 > size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"3D printer\", 1).\nHas_size(\"room\", 1).\n.decl Answer()\nAnswer() :- Has_size(\"3D printer\", size1), Has_size(\"room\", size2), size1 > size2.\n.output Answer\n\n"]}
{"id": 225, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Tower of London\", \"1400s\").\nHappens_in_time(\"Robert Stack\", \"1400s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Tower of London\", time), Happens_in_time(\"Robert Stack\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Tower of London\", \"1400s\").\nHappens_in_time(\"Robert Stack\", \"1400s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Tower of London\", time), Happens_in_time(\"Robert Stack\", time).\n.output Answer\n\n"]}
{"id": 226, "answer": true, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"sea otter\", \"spider\").\nEats(\"sea otter\", \"crab\").\nEats(\"sea otter\", \"squid\").\nEats(\"sea otter\", \"shrimp\").\nEats(\"sea otter\", \"octopus\").\nEats(\"sea otter\", \"lobster\").\nEats(\"sea otter\", \"clam\").\nEats(\"sea otter\", \"oyster\").\nEats(\"sea otter\", \"mussel\").\nEats(\"sea otter\", \"scallop\").\nEats(\"sea otter\", \"crab\").\nEats(\"sea otter\", \"squid\").\nEats(\"sea otter\", \"shrimp\").\nEats(\"sea otter\", \"octopus\").\nEats(\"sea otter\", \"lobster\").\nEats(\"sea otter\", \"clam\").\nEats(\"sea otter\", \"oyster\").\nEats(\"sea otter\", \"mussel\").\nEats(\"sea otter\", \"scallop\").\n.decl Answer()\nAnswer() :- Eats(\"sea otter\", \"spider\").\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"sea otter\", \"spider\").\nEats(\"sea otter\", \"crab\").\nEats(\"sea otter\", \"squid\").\nEats(\"sea otter\", \"shrimp\").\nEats(\"sea otter\", \"octopus\").\nEats(\"sea otter\", \"lobster\").\nEats(\"sea otter\", \"clam\").\nEats(\"sea otter\", \"oyster\").\nEats(\"sea otter\", \"mussel\").\nEats(\"sea otter\", \"scallop\").\nEats(\"sea otter\", \"crab\").\nEats(\"sea otter\", \"squid\").\nEats(\"sea otter\", \"shrimp\").\nEats(\"sea otter\", \"octopus\").\nEats(\"sea otter\", \"lobster\").\nEats(\"sea otter\", \"clam\").\nEats(\"sea otter\", \"oyster\").\nEats(\"sea otter\", \"mussel\").\nEats(\"sea otter\", \"scallop\").\n.decl Answer()\nAnswer() :- Eats(\"sea otter\", \"spider\").\n.output Answer\n\n"]}
{"id": 227, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"The Who tours\", \"1962-1969\").\nHappens_in_time(\"The Who tours\", \"1970-present\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"World War II\", time), Happens_in_time(\"The Who tours\", time), time < \"1939-1945\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"World War II\", \"1939-1945\").\nHappens_in_time(\"The Who tours\", \"1962-1969\").\nHappens_in_time(\"The Who tours\", \"1970-present\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"World War II\", time), Happens_in_time(\"The Who tours\", time), time < \"1939-1945\".\n.output Answer\n\n"]}
{"id": 228, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nickel\", 28).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"copper\", 29).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"silver\", 47).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"gold\", 79).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"nickel\", atomic_number1), Has_atomic_number(\"copper\", atomic_number2), Has_atomic_number(\"silver\", atomic_number3), Has_atomic_number(\"gold\", atomic_number4), atomic_number1 > atomic_number2, atomic_number1 > atomic_number3, atomic_number1 > atomic_number4.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nickel\", 28).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"copper\", 29).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"silver\", 47).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"gold\", 79).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"nickel\", atomic_number1), Has_atomic_number(\"copper\", atomic_number2), Has_atomic_number(\"silver\", atomic_number3), Has_atomic_number(\"gold\", atomic_number4), atomic_number1 > atomic_number2, atomic_number1 > atomic_number3, atomic_number1 > atomic_number4.\n.output Answer\n\n"]}
{"id": 229, "answer": true, "completion": ".decl Cost(Object:symbol, Cost:float)\nCost(\"run for President of India\", 100000).\nCost(\"buy a new iPhone 11\", 10000).\n.decl Answer()\nAnswer() :- Cost(\"run for President of India\", cost1), Cost(\"buy a new iPhone 11\", cost2), cost1 > cost2.\n.output Answer\n\n", "completions": [".decl Cost(Object:symbol, Cost:float)\nCost(\"run for President of India\", 100000).\nCost(\"buy a new iPhone 11\", 10000).\n.decl Answer()\nAnswer() :- Cost(\"run for President of India\", cost1), Cost(\"buy a new iPhone 11\", cost2), cost1 > cost2.\n.output Answer\n\n"]}
{"id": 230, "answer": false, "completion": ".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"New Year's Day\", \"Wednesday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"New Year's Day\", day), day = \"Wednesday\".\n.output Answer\n\n", "completions": [".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"New Year's Day\", \"Wednesday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"New Year's Day\", day), day = \"Wednesday\".\n.output Answer\n\n"]}
{"id": 231, "answer": true, "completion": ".decl Happened_in_time(Event:symbol, Time:symbol)\nHappened_in_time(\"Donald Trump\", \"January\").\nHappened_in_time(\"Donald Trump\", \"February\").\nHappened_in_time(\"Donald Trump\", \"March\").\nHappened_in_time(\"Donald Trump\", \"April\").\nHappened_in_time(\"Donald Trump\", \"May\").\nHappened_in_time(\"Donald Trump\", \"June\").\nHappened_in_time(\"Donald Trump\", \"July\").\nHappened_in_time(\"Donald Trump\", \"August\").\nHappened_in_time(\"Donald Trump\", \"September\").\nHappened_in_time(\"Donald Trump\", \"October\").\nHappened_in_time(\"Donald Trump\", \"November\").\nHappened_in_time(\"Donald Trump\", \"December\").\n.decl Happened_in_month(Event:symbol, Month:symbol)\nHappened_in_month(\"Donald Trump\", \"January\").\nHappened_in_month(\"Donald Trump\", \"February\").\nHappened_in_month(\"Donald Trump\", \"March\").\nHappened_in_month(\"Donald Trump\", \"April\").\nHappened_in_month(\"Donald Trump\", \"May\").\nHappened_in_month(\"Donald Trump\", \"June\").\nHappened_in_month(\"Donald Trump\", \"July\").\nHappened_in_month(\"Donald Trump\", \"August\").\nHappened_in_month(\"Donald Trump\", \"September\").\nHappened_in_month(\"Donald Trump\", \"October\").\nHappened_in_month(\"Donald Trump\", \"November\").\nHappened_in_month(\"Donald Trump\", \"December\").\n.decl Happened_in_year(Event:symbol, Year:symbol)\nHappened_in_year(\"Donald Trump\", \"2017\").\nHappened_in_year(\"Donald Trump\", \"2018\").\nHappened_in_year(\"Donald Trump\", \"2019\").\nHappened_in_year(\"Donald Trump\", \"2020\").\n.decl Answer()\nAnswer() :- Happened_in_year(\"Donald Trump\", year), Happened_in_month(\"Donald Trump\", month), Happened_in_time(\"Islamophobia\", time), year = time, month = time.\n.output Answer\n\n", "completions": [".decl Happened_in_time(Event:symbol, Time:symbol)\nHappened_in_time(\"Donald Trump\", \"January\").\nHappened_in_time(\"Donald Trump\", \"February\").\nHappened_in_time(\"Donald Trump\", \"March\").\nHappened_in_time(\"Donald Trump\", \"April\").\nHappened_in_time(\"Donald Trump\", \"May\").\nHappened_in_time(\"Donald Trump\", \"June\").\nHappened_in_time(\"Donald Trump\", \"July\").\nHappened_in_time(\"Donald Trump\", \"August\").\nHappened_in_time(\"Donald Trump\", \"September\").\nHappened_in_time(\"Donald Trump\", \"October\").\nHappened_in_time(\"Donald Trump\", \"November\").\nHappened_in_time(\"Donald Trump\", \"December\").\n.decl Happened_in_month(Event:symbol, Month:symbol)\nHappened_in_month(\"Donald Trump\", \"January\").\nHappened_in_month(\"Donald Trump\", \"February\").\nHappened_in_month(\"Donald Trump\", \"March\").\nHappened_in_month(\"Donald Trump\", \"April\").\nHappened_in_month(\"Donald Trump\", \"May\").\nHappened_in_month(\"Donald Trump\", \"June\").\nHappened_in_month(\"Donald Trump\", \"July\").\nHappened_in_month(\"Donald Trump\", \"August\").\nHappened_in_month(\"Donald Trump\", \"September\").\nHappened_in_month(\"Donald Trump\", \"October\").\nHappened_in_month(\"Donald Trump\", \"November\").\nHappened_in_month(\"Donald Trump\", \"December\").\n.decl Happened_in_year(Event:symbol, Year:symbol)\nHappened_in_year(\"Donald Trump\", \"2017\").\nHappened_in_year(\"Donald Trump\", \"2018\").\nHappened_in_year(\"Donald Trump\", \"2019\").\nHappened_in_year(\"Donald Trump\", \"2020\").\n.decl Answer()\nAnswer() :- Happened_in_year(\"Donald Trump\", year), Happened_in_month(\"Donald Trump\", month), Happened_in_time(\"Islamophobia\", time), year = time, month = time.\n.output Answer\n\n"]}
{"id": 232, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Alice in Wonderland\", \"March\").\nHappens_in_time(\"Alice in Wonderland\", \"April\").\nHappens_in_time(\"Alice in Wonderland\", \"May\").\nHappens_in_time(\"Alice in Wonderland\", \"June\").\nHappens_in_time(\"Alice in Wonderland\", \"July\").\nHappens_in_time(\"Alice in Wonderland\", \"August\").\nHappens_in_time(\"Alice in Wonderland\", \"September\").\nHappens_in_time(\"Alice in Wonderland\", \"October\").\nHappens_in_time(\"Alice in Wonderland\", \"November\").\nHappens_in_time(\"Alice in Wonderland\", \"December\").\n.decl Is_holiday(Month:symbol, Holiday:symbol)\nIs_holiday(\"March\", \"St. Patrick's Day\").\nIs_holiday(\"April\", \"April Fools' Day\").\nIs_holiday(\"May\", \"Mother's Day\").\nIs_holiday(\"June\", \"Father's Day\").\nIs_holiday(\"July\", \"Independence Day\").\nIs_holiday(\"August\", \"Labor Day\").\nIs_holiday(\"September\", \"Columbus Day\").\nIs_holiday(\"October\", \"Halloween\").\nIs_holiday(\"November\", \"Veteran's Day\").\nIs_holiday(\"December\", \"Christmas Day\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Alice in Wonderland\", month), Is_holiday(month, holiday).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Alice in Wonderland\", \"March\").\nHappens_in_time(\"Alice in Wonderland\", \"April\").\nHappens_in_time(\"Alice in Wonderland\", \"May\").\nHappens_in_time(\"Alice in Wonderland\", \"June\").\nHappens_in_time(\"Alice in Wonderland\", \"July\").\nHappens_in_time(\"Alice in Wonderland\", \"August\").\nHappens_in_time(\"Alice in Wonderland\", \"September\").\nHappens_in_time(\"Alice in Wonderland\", \"October\").\nHappens_in_time(\"Alice in Wonderland\", \"November\").\nHappens_in_time(\"Alice in Wonderland\", \"December\").\n.decl Is_holiday(Month:symbol, Holiday:symbol)\nIs_holiday(\"March\", \"St. Patrick's Day\").\nIs_holiday(\"April\", \"April Fools' Day\").\nIs_holiday(\"May\", \"Mother's Day\").\nIs_holiday(\"June\", \"Father's Day\").\nIs_holiday(\"July\", \"Independence Day\").\nIs_holiday(\"August\", \"Labor Day\").\nIs_holiday(\"September\", \"Columbus Day\").\nIs_holiday(\"October\", \"Halloween\").\nIs_holiday(\"November\", \"Veteran's Day\").\nIs_holiday(\"December\", \"Christmas Day\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Alice in Wonderland\", month), Is_holiday(month, holiday).\n.output Answer\n\n"]}
{"id": 233, "answer": true, "completion": ".decl Served_under(Person:symbol, Leader:symbol)\nServed_under(\"François Mitterrand\", \"Napoleon Bonapart\").\n.decl Answer()\nAnswer() :- Served_under(\"François Mitterrand\", \"Napoleon Bonapart\").\n.output Answer\n\n", "completions": [".decl Served_under(Person:symbol, Leader:symbol)\nServed_under(\"François Mitterrand\", \"Napoleon Bonapart\").\n.decl Answer()\nAnswer() :- Served_under(\"François Mitterrand\", \"Napoleon Bonapart\").\n.output Answer\n\n"]}
{"id": 234, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"argon\", 18).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"copper\", 29).\nHas_atomic_number(\"manganese\", 25).\nHas_atomic_number(\"zinc\", 30).\nHas_atomic_number(\"lead\", 82).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"argon\", 18).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"copper\", 29).\nHas_atomic_number(\"manganese\", 25).\nHas_atomic_number(\"zinc\", 30).\nHas_atomic_number(\"lead\", 82).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas_atomic_number(\"uranium\", 92).\nHas"]}
{"id": 235, "answer": true, "completion": ".decl Has_n_downloads(Game:symbol, N_downloads:float)\nHas_n_downloads(\"Mario 64\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_downloads(\"Mario 64\", n_downloads), n_downloads > 1000000.\n.output Answer\n\n", "completions": [".decl Has_n_downloads(Game:symbol, N_downloads:float)\nHas_n_downloads(\"Mario 64\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_downloads(\"Mario 64\", n_downloads), n_downloads > 1000000.\n.output Answer\n\n"]}
{"id": 236, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"lunch on the beach\", \"summer\").\nHappens_in_time(\"lunch on the beach\", \"spring\").\nHappens_in_time(\"lunch on the beach\", \"autumn\").\nHappens_in_time(\"lunch on the beach\", \"winter\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"rainbow\", \"summer\").\nHappens_in_season(\"rainbow\", \"spring\").\nHappens_in_season(\"rainbow\", \"autumn\").\nHappens_in_season(\"rainbow\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"lunch on the beach\", time), Happens_in_season(\"rainbow\", season), time == season.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"lunch on the beach\", \"summer\").\nHappens_in_time(\"lunch on the beach\", \"spring\").\nHappens_in_time(\"lunch on the beach\", \"autumn\").\nHappens_in_time(\"lunch on the beach\", \"winter\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"rainbow\", \"summer\").\nHappens_in_season(\"rainbow\", \"spring\").\nHappens_in_season(\"rainbow\", \"autumn\").\nHappens_in_season(\"rainbow\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"lunch on the beach\", time), Happens_in_season(\"rainbow\", season), time == season.\n.output Answer\n\n"]}
{"id": 237, "answer": true, "completion": ".decl Has_smoggy_days(City:symbol, N_days:float)\nHas_smoggy_days(\"Düsseldorf\", 3).\n.decl Has_n_days(City:symbol, N_days:float)\nHas_n_days(\"Düsseldorf\", 365).\n.decl Answer()\nAnswer() :- Has_smoggy_days(\"Düsseldorf\", n_days1), Has_n_days(\"Düsseldorf\", n_days2), n_days1 < n_days2.\n.output Answer\n\n", "completions": [".decl Has_smoggy_days(City:symbol, N_days:float)\nHas_smoggy_days(\"Düsseldorf\", 3).\n.decl Has_n_days(City:symbol, N_days:float)\nHas_n_days(\"Düsseldorf\", 365).\n.decl Answer()\nAnswer() :- Has_smoggy_days(\"Düsseldorf\", n_days1), Has_n_days(\"Düsseldorf\", n_days2), n_days1 < n_days2.\n.output Answer\n\n"]}
{"id": 238, "answer": true, "completion": ".decl Has_hairline(Person:symbol, Hairline:float)\nHas_hairline(\"Elon Musk\", 0.5).\n.decl Answer()\nAnswer() :- Has_hairline(\"Elon Musk\", hairline1), Has_hairline(\"Elon Musk\", hairline2), hairline1 != hairline2.\n.output Answer\n\n", "completions": [".decl Has_hairline(Person:symbol, Hairline:float)\nHas_hairline(\"Elon Musk\", 0.5).\n.decl Answer()\nAnswer() :- Has_hairline(\"Elon Musk\", hairline1), Has_hairline(\"Elon Musk\", hairline2), hairline1 != hairline2.\n.output Answer\n\n"]}
{"id": 239, "answer": true, "completion": ".decl Has_name(Villain:symbol, Name:symbol)\nHas_name(\"Thanos\", \"Thanos\").\nHas_name(\"Thanos\", \"citrus\").\n.decl Has_kind(Fruit:symbol, Kind:symbol)\nHas_kind(\"citrus\", \"fruit\").\n.decl Answer()\nAnswer() :- Has_name(\"Thanos\", name), Has_kind(name, kind), Has_name(\"Thanos\", kind).\n.output Answer\n\n", "completions": [".decl Has_name(Villain:symbol, Name:symbol)\nHas_name(\"Thanos\", \"Thanos\").\nHas_name(\"Thanos\", \"citrus\").\n.decl Has_kind(Fruit:symbol, Kind:symbol)\nHas_kind(\"citrus\", \"fruit\").\n.decl Answer()\nAnswer() :- Has_name(\"Thanos\", name), Has_kind(name, kind), Has_name(\"Thanos\", kind).\n.output Answer\n\n"]}
{"id": 240, "answer": true, "completion": ".decl Lives_in(Person:symbol, Location:symbol)\nLives_in(\"John\", \"Canary Islands\").\nLives_in(\"Mary\", \"Canary Islands\").\nLives_in(\"Paul\", \"United States\").\nLives_in(\"Paul\", \"Canada\").\nLives_in(\"Paul\", \"Mexico\").\n.decl Is_a(Location:symbol, Fish:symbol)\nIs_a(\"United States\", \"bass\").\nIs_a(\"Canada\", \"bass\").\nIs_a(\"Mexico\", \"bass\").\n.decl Answer()\nAnswer() :- Lives_in(\"John\", location), Is_a(location, fish), Lives_in(\"Paul\", location).\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, Location:symbol)\nLives_in(\"John\", \"Canary Islands\").\nLives_in(\"Mary\", \"Canary Islands\").\nLives_in(\"Paul\", \"United States\").\nLives_in(\"Paul\", \"Canada\").\nLives_in(\"Paul\", \"Mexico\").\n.decl Is_a(Location:symbol, Fish:symbol)\nIs_a(\"United States\", \"bass\").\nIs_a(\"Canada\", \"bass\").\nIs_a(\"Mexico\", \"bass\").\n.decl Answer()\nAnswer() :- Lives_in(\"John\", location), Is_a(location, fish), Lives_in(\"Paul\", location).\n.output Answer\n\n"]}
{"id": 241, "answer": false, "completion": ".decl Is_associated_with(Food:symbol, Food_type:symbol)\nIs_associated_with(\"anchovies\", \"Italian\").\n.decl Answer()\nAnswer() :- Is_associated_with(\"anchovies\", food_type).\n.output Answer\n\n", "completions": [".decl Is_associated_with(Food:symbol, Food_type:symbol)\nIs_associated_with(\"anchovies\", \"Italian\").\n.decl Answer()\nAnswer() :- Is_associated_with(\"anchovies\", food_type).\n.output Answer\n\n"]}
{"id": 242, "answer": true, "completion": ".decl Appears_on(Person:symbol, Show:symbol)\nAppears_on(\"Harry Houdini\", \"Mindfreak\").\nAppears_on(\"Chris Angel\", \"Mindfreak\").\n.decl Answer()\nAnswer() :- Appears_on(\"Harry Houdini\", show), Appears_on(\"Chris Angel\", show).\n.output Answer\n\n", "completions": [".decl Appears_on(Person:symbol, Show:symbol)\nAppears_on(\"Harry Houdini\", \"Mindfreak\").\nAppears_on(\"Chris Angel\", \"Mindfreak\").\n.decl Answer()\nAnswer() :- Appears_on(\"Harry Houdini\", show), Appears_on(\"Chris Angel\", show).\n.output Answer\n\n"]}
{"id": 243, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Ford F-350\", 20000).\nHas_mass(\"Yale University student body\", 1000000).\n.decl Answer()\nAnswer() :- Has_mass(\"Ford F-350\", mass1), Has_mass(\"Yale University student body\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Ford F-350\", 20000).\nHas_mass(\"Yale University student body\", 1000000).\n.decl Answer()\nAnswer() :- Has_mass(\"Ford F-350\", mass1), Has_mass(\"Yale University student body\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 244, "answer": false, "completion": ".decl Has_n_bees(Bee:symbol, N_bees:float)\nHas_n_bees(\"queen bee\", 1).\nHas_n_bees(\"worker bee\", 2).\n.decl Has_n_apples(Bee:symbol, N_apples:float)\nHas_n_apples(\"queen bee\", 1).\nHas_n_apples(\"worker bee\", 2).\n.decl Answer()\nAnswer() :- Has_n_bees(\"queen bee\", n_bees1), Has_n_bees(\"worker bee\", n_bees2), Has_n_apples(\"queen bee\", n_apples1), Has_n_apples(\"worker bee\", n_apples2), n_bees1 >= n_bees2, n_apples1 >= n_apples2.\n.output Answer\n\n", "completions": [".decl Has_n_bees(Bee:symbol, N_bees:float)\nHas_n_bees(\"queen bee\", 1).\nHas_n_bees(\"worker bee\", 2).\n.decl Has_n_apples(Bee:symbol, N_apples:float)\nHas_n_apples(\"queen bee\", 1).\nHas_n_apples(\"worker bee\", 2).\n.decl Answer()\nAnswer() :- Has_n_bees(\"queen bee\", n_bees1), Has_n_bees(\"worker bee\", n_bees2), Has_n_apples(\"queen bee\", n_apples1), Has_n_apples(\"worker bee\", n_apples2), n_bees1 >= n_bees2, n_apples1 >= n_apples2.\n.output Answer\n\n"]}
{"id": 245, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Mount Fuji\", 3776).\nHas_height(\"Sea of Japan\", 4500).\n.decl Answer()\nAnswer() :- Has_height(\"Mount Fuji\", height1), Has_height(\"Sea of Japan\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Mount Fuji\", 3776).\nHas_height(\"Sea of Japan\", 4500).\n.decl Answer()\nAnswer() :- Has_height(\"Mount Fuji\", height1), Has_height(\"Sea of Japan\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 246, "answer": true, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Dalai Lama\", \"divine barzakh\").\nBelieves(\"Dalai Lama\", \"divine providence\").\nBelieves(\"Dalai Lama\", \"divine punishment\").\n.decl Answer()\nAnswer() :- Believes(\"Dalai Lama\", belief).\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Dalai Lama\", \"divine barzakh\").\nBelieves(\"Dalai Lama\", \"divine providence\").\nBelieves(\"Dalai Lama\", \"divine punishment\").\n.decl Answer()\nAnswer() :- Believes(\"Dalai Lama\", belief).\n.output Answer\n\n"]}
{"id": 247, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"year 2000\", \"1999\").\nHappens_in_time(\"fear\", \"1999\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"fear\", time), Happens_in_time(\"year 2000\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"year 2000\", \"1999\").\nHappens_in_time(\"fear\", \"1999\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"fear\", time), Happens_in_time(\"year 2000\", time).\n.output Answer\n\n"]}
{"id": 248, "answer": true, "completion": ".decl Has_email_service(Person:symbol)\nHas_email_service(\"Walt Disney\").\n.decl Has_internet_service(Person:symbol)\nHas_internet_service(\"Walt Disney\").\n.decl Answer()\nAnswer() :- Has_email_service(\"Walt Disney\"), Has_internet_service(\"Walt Disney\").\n.output Answer\n\n", "completions": [".decl Has_email_service(Person:symbol)\nHas_email_service(\"Walt Disney\").\n.decl Has_internet_service(Person:symbol)\nHas_internet_service(\"Walt Disney\").\n.decl Answer()\nAnswer() :- Has_email_service(\"Walt Disney\"), Has_internet_service(\"Walt Disney\").\n.output Answer\n\n"]}
{"id": 249, "answer": true, "completion": ".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"Barack Obama\", 11).\nHas_grade(\"Donald Trump\", 11).\n.decl Answer()\nAnswer() :- Has_grade(\"Barack Obama\", grade), Has_grade(\"Donald Trump\", grade), grade > 10.\n.output Answer\n\n", "completions": [".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"Barack Obama\", 11).\nHas_grade(\"Donald Trump\", 11).\n.decl Answer()\nAnswer() :- Has_grade(\"Barack Obama\", grade), Has_grade(\"Donald Trump\", grade), grade > 10.\n.output Answer\n\n"]}
{"id": 250, "answer": true, "completion": ".decl Has_taste(Object:symbol, Taste:float)\nHas_taste(\"papaya\", 0.9).\n.decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"papaya\", \"spherical\").\n.decl Answer()\nAnswer() :- Has_taste(\"papaya\", taste), Has_shape(\"papaya\", shape), shape = \"spherical\".\n.output Answer\n\n", "completions": [".decl Has_taste(Object:symbol, Taste:float)\nHas_taste(\"papaya\", 0.9).\n.decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"papaya\", \"spherical\").\n.decl Answer()\nAnswer() :- Has_taste(\"papaya\", taste), Has_shape(\"papaya\", shape), shape = \"spherical\".\n.output Answer\n\n"]}
{"id": 251, "answer": true, "completion": ".decl Has_plot_device(Show:symbol, Plot_device:symbol)\nHas_plot_device(\"The X-Files\", \"radiation\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files", "completions": [".decl Has_plot_device(Show:symbol, Plot_device:symbol)\nHas_plot_device(\"The X-Files\", \"radiation\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files\", \"alien presence\").\nHas_plot_device(\"The X-Files\", \"alien threat\").\nHas_plot_device(\"The X-Files\", \"alien abduction\").\nHas_plot_device(\"The X-Files\", \"alien invasion\").\nHas_plot_device(\"The X-Files\", \"alien life\").\nHas_plot_device(\"The X-Files\", \"alien technology\").\nHas_plot_device(\"The X-Files\", \"alien virus\").\nHas_plot_device(\"The X-Files"]}
{"id": 252, "answer": true, "completion": ".decl Has_family(Animal:symbol, Family:symbol)\nHas_family(\"dog\", \"Canidae\").\nHas_family(\"cat\", \"Felidae\").\nHas_family(\"fox\", \"Canidae\").\nHas_family(\"wolf\", \"Canidae\").\nHas_family(\"bear\", \"Ursidae\").\nHas_family(\"weasel\", \"Mustelidae\").\nHas_family(\"otter\", \"Mustelidae\").\nHas_family(\"wolverine\", \"Mustelidae\").\nHas_family(\"hyena\", \"Hyaenidae\").\nHas_family(\"lion\", \"Felidae\").\nHas_family(\"tiger\", \"Felidae\").\nHas_family(\"cheetah\", \"Felidae\").\nHas_family(\"leopard\", \"Felidae\").\nHas_family(\"cougar\", \"Felidae\").\nHas_family(\"jaguar\", \"Felidae\").\nHas_family(\"panther\", \"Felidae\").\nHas_family(\"lynx\", \"Felidae\").\nHas_family(\"serval\", \"Felidae\").\nHas_family(\"coyote\", \"Canidae\").\nHas_family(\"dingo\", \"Canidae\").\nHas_family(\"dhole\", \"Canidae\").\nHas_family(\"African hunting dog\", \"Canidae\").\nHas_family(\"red fox\", \"Canidae\").\nHas_family(\"Arctic fox\", \"Canidae\").\nHas_family(\"grey fox\", \"Canidae\").\nHas_family(\"tabby cat\", \"Felidae\").\nHas_family(\"tiger cat\", \"Felidae\").\nHas_family(\"Persian cat\", \"Felidae\").\nHas_family(\"Siamese cat\", \"Felidae\").\nHas_family(\"Egyptian cat\", \"Felidae\").\nHas_family(\"cougar\", \"Felidae\").\nHas_family(\"lynx\", \"Felidae\").\nHas_family(\"leopard\", \"Felidae\").\nHas_family(\"snow leopard\", \"Felidae\").\nHas_family(\"jaguar\", \"Felidae\").\nHas_family(\"lion\", \"Felidae\").\nHas_family(\"tiger\", \"Felidae\").\nHas_family(\"cheetah\", \"Felidae\").\nHas_family(\"brown bear\", \"Ursidae\").\nHas_family(\"American black bear\", \"Ursidae\").\nHas_family(\"ice bear\", \"Ursidae\").\nHas_family(\"sloth bear\", \"Ursidae\").\nHas_family(\"mongoose\", \"Herpestidae\").\nHas_family(\"meerkat\", \"Herpestidae\").\nHas_family(\"tiger beetle\", \"Carabidae\").\nHas_family(\"ladybug\", \"Coccinellidae\").\nHas_family(\"ground beetle\", \"Carabidae\").\nHas_family(\"long-horned beetle\", \"Cerambycidae\").\nHas_family(\"leaf beetle\", \"Chrysomelidae\").\nHas_family(\"dung beetle\", \"Scarabaeidae\").\nHas_family(\"rhinoceros beetle\", \"Scarabaeidae\").\nHas_family(\"weevil\", \"Curculionidae\").\nHas_family(\"fly\", \"Diptera\").\nHas_family(\"bee\", \"Hymenoptera\").\nHas_family(\"grasshopper\", \"Orthoptera\").\nHas_family(\"cricket\", \"Orthoptera\").\nHas_family(\"walking stick\", \"Phasmida\").\nHas_family(\"cockroach\", \"Blattidae\").\nHas_family(\"mantis\", \"Mantidae\").\nHas_family(\"c", "completions": [".decl Has_family(Animal:symbol, Family:symbol)\nHas_family(\"dog\", \"Canidae\").\nHas_family(\"cat\", \"Felidae\").\nHas_family(\"fox\", \"Canidae\").\nHas_family(\"wolf\", \"Canidae\").\nHas_family(\"bear\", \"Ursidae\").\nHas_family(\"weasel\", \"Mustelidae\").\nHas_family(\"otter\", \"Mustelidae\").\nHas_family(\"wolverine\", \"Mustelidae\").\nHas_family(\"hyena\", \"Hyaenidae\").\nHas_family(\"lion\", \"Felidae\").\nHas_family(\"tiger\", \"Felidae\").\nHas_family(\"cheetah\", \"Felidae\").\nHas_family(\"leopard\", \"Felidae\").\nHas_family(\"cougar\", \"Felidae\").\nHas_family(\"jaguar\", \"Felidae\").\nHas_family(\"panther\", \"Felidae\").\nHas_family(\"lynx\", \"Felidae\").\nHas_family(\"serval\", \"Felidae\").\nHas_family(\"coyote\", \"Canidae\").\nHas_family(\"dingo\", \"Canidae\").\nHas_family(\"dhole\", \"Canidae\").\nHas_family(\"African hunting dog\", \"Canidae\").\nHas_family(\"red fox\", \"Canidae\").\nHas_family(\"Arctic fox\", \"Canidae\").\nHas_family(\"grey fox\", \"Canidae\").\nHas_family(\"tabby cat\", \"Felidae\").\nHas_family(\"tiger cat\", \"Felidae\").\nHas_family(\"Persian cat\", \"Felidae\").\nHas_family(\"Siamese cat\", \"Felidae\").\nHas_family(\"Egyptian cat\", \"Felidae\").\nHas_family(\"cougar\", \"Felidae\").\nHas_family(\"lynx\", \"Felidae\").\nHas_family(\"leopard\", \"Felidae\").\nHas_family(\"snow leopard\", \"Felidae\").\nHas_family(\"jaguar\", \"Felidae\").\nHas_family(\"lion\", \"Felidae\").\nHas_family(\"tiger\", \"Felidae\").\nHas_family(\"cheetah\", \"Felidae\").\nHas_family(\"brown bear\", \"Ursidae\").\nHas_family(\"American black bear\", \"Ursidae\").\nHas_family(\"ice bear\", \"Ursidae\").\nHas_family(\"sloth bear\", \"Ursidae\").\nHas_family(\"mongoose\", \"Herpestidae\").\nHas_family(\"meerkat\", \"Herpestidae\").\nHas_family(\"tiger beetle\", \"Carabidae\").\nHas_family(\"ladybug\", \"Coccinellidae\").\nHas_family(\"ground beetle\", \"Carabidae\").\nHas_family(\"long-horned beetle\", \"Cerambycidae\").\nHas_family(\"leaf beetle\", \"Chrysomelidae\").\nHas_family(\"dung beetle\", \"Scarabaeidae\").\nHas_family(\"rhinoceros beetle\", \"Scarabaeidae\").\nHas_family(\"weevil\", \"Curculionidae\").\nHas_family(\"fly\", \"Diptera\").\nHas_family(\"bee\", \"Hymenoptera\").\nHas_family(\"grasshopper\", \"Orthoptera\").\nHas_family(\"cricket\", \"Orthoptera\").\nHas_family(\"walking stick\", \"Phasmida\").\nHas_family(\"cockroach\", \"Blattidae\").\nHas_family(\"mantis\", \"Mantidae\").\nHas_family(\"c"]}
{"id": 253, "answer": true, "completion": ".decl Has_vitamin(Fruit:symbol, Vitamin:symbol)\nHas_vitamin(\"orange\", \"vitamin C\").\nHas_vitamin(\"apple\", \"vitamin C\").\nHas_vitamin(\"strawberry\", \"vitamin C\").\n.decl Has_health_effect(Vitamin:symbol, Health_effect:symbol)\nHas_health_effect(\"vitamin C\", \"scurvy\").\nHas_health_effect(\"vitamin C\", \"hyperactivity\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"orange\", vitamin), Has_health_effect(vitamin, health_effect), health_effect == \"scurvy\".\n.output Answer\n\n", "completions": [".decl Has_vitamin(Fruit:symbol, Vitamin:symbol)\nHas_vitamin(\"orange\", \"vitamin C\").\nHas_vitamin(\"apple\", \"vitamin C\").\nHas_vitamin(\"strawberry\", \"vitamin C\").\n.decl Has_health_effect(Vitamin:symbol, Health_effect:symbol)\nHas_health_effect(\"vitamin C\", \"scurvy\").\nHas_health_effect(\"vitamin C\", \"hyperactivity\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"orange\", vitamin), Has_health_effect(vitamin, health_effect), health_effect == \"scurvy\".\n.output Answer\n\n"]}
{"id": 254, "answer": true, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"cannon\", \"iron\").\nHas_material(\"cannon\", \"wood\").\nHas_material(\"cannon\", \"bronze\").\n.decl Known_during(Material:symbol, Time:symbol)\nKnown_during(\"iron\", \"bronze age\").\nKnown_during(\"wood\", \"bronze age\").\nKnown_during(\"bronze\", \"bronze age\").\n.decl Answer()\nAnswer() :- Has_material(\"cannon\", material), Known_during(material, time).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"cannon\", \"iron\").\nHas_material(\"cannon\", \"wood\").\nHas_material(\"cannon\", \"bronze\").\n.decl Known_during(Material:symbol, Time:symbol)\nKnown_during(\"iron\", \"bronze age\").\nKnown_during(\"wood\", \"bronze age\").\nKnown_during(\"bronze\", \"bronze age\").\n.decl Answer()\nAnswer() :- Has_material(\"cannon\", material), Known_during(material, time).\n.output Answer\n\n"]}
{"id": 255, "answer": true, "completion": ".decl Is_a(Person:symbol, Profession:symbol)\nIs_a(\"Barack Obama\", \"Politician\").\nIs_a(\"Barack Obama\", \"Democrat\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"American\").\nIs_a(\"Barack Obama\", \"Human\").\nIs_a(\"Barack Obama\", \"Person\").\nIs_a(\"Barack Obama\", \"Artist\").\nIs_a(\"Barack Obama\", \"Painter\").\nIs_a(\"Barack Obama\", \"Writer\").\nIs_a(\"Barack Obama\", \"Author\").\nIs_a(\"Barack Obama\", \"Dancer\").\nIs_a(\"Barack Obama\", \"Singer\").\nIs_a(\"Barack Obama\", \"Musician\").\nIs_a(\"Barack Obama\", \"Actor\").\nIs_a(\"Barack Obama\", \"Teacher\").\nIs_a(\"Barack Obama\", \"Professor\").\nIs_a(\"Barack Obama\", \"Scientist\").\nIs_a(\"Barack Obama\", \"Researcher\").\nIs_a(\"Barack Obama\", \"Philosopher\").\nIs_a(\"Barack Obama\", \"Writer\").\nIs_a(\"Barack Obama\", \"Lawyer\").\nIs_a(\"Barack Obama\", \"Judge\").\nIs_a(\"Barack Obama\", \"Governor\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Senator\").\nIs_a(\"Barack Obama\", \"Representative\").\nIs_a(\"Barack Obama\", \"Congressman\").\nIs_a(\"Barack Obama\", \"Congresswoman\").\nIs_a(\"Barack Obama\", \"Speaker\").\nIs_a(\"Barack Obama\", \"Secretary\").\nIs_a(\"Barack Obama\", \"Secretary of State\").\nIs_a(\"Barack Obama\", \"Secretary of Defense\").\nIs_a(\"Barack Obama\", \"Secretary of Commerce\").\nIs_a(\"Barack Obama\", \"Secretary of Labor\").\nIs_a(\"Barack Obama\", \"Secretary of Education\").\nIs_a(\"Barack Obama\", \"Secretary of Housing and Urban Development\").\nIs_a(\"Barack Obama\", \"Secretary of Health and Human Services\").\nIs_a(\"Barack Obama\", \"Secretary of Transportation\").\nIs_a(\"Barack Obama\", \"Secretary of Energy\").\nIs_a(\"Barack Obama\", \"Secretary of Homeland Security\").\nIs_a(\"Barack Obama\", \"Secretary of the Interior\").\nIs_a(\"Barack Obama\", \"Secretary of Labor\").\nIs_a(\"Barack Obama\", \"Secretary of Veterans Affairs\").\nIs_a(\"Barack Obama\", \"Attorney General\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Bar", "completions": [".decl Is_a(Person:symbol, Profession:symbol)\nIs_a(\"Barack Obama\", \"Politician\").\nIs_a(\"Barack Obama\", \"Democrat\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"American\").\nIs_a(\"Barack Obama\", \"Human\").\nIs_a(\"Barack Obama\", \"Person\").\nIs_a(\"Barack Obama\", \"Artist\").\nIs_a(\"Barack Obama\", \"Painter\").\nIs_a(\"Barack Obama\", \"Writer\").\nIs_a(\"Barack Obama\", \"Author\").\nIs_a(\"Barack Obama\", \"Dancer\").\nIs_a(\"Barack Obama\", \"Singer\").\nIs_a(\"Barack Obama\", \"Musician\").\nIs_a(\"Barack Obama\", \"Actor\").\nIs_a(\"Barack Obama\", \"Teacher\").\nIs_a(\"Barack Obama\", \"Professor\").\nIs_a(\"Barack Obama\", \"Scientist\").\nIs_a(\"Barack Obama\", \"Researcher\").\nIs_a(\"Barack Obama\", \"Philosopher\").\nIs_a(\"Barack Obama\", \"Writer\").\nIs_a(\"Barack Obama\", \"Lawyer\").\nIs_a(\"Barack Obama\", \"Judge\").\nIs_a(\"Barack Obama\", \"Governor\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Senator\").\nIs_a(\"Barack Obama\", \"Representative\").\nIs_a(\"Barack Obama\", \"Congressman\").\nIs_a(\"Barack Obama\", \"Congresswoman\").\nIs_a(\"Barack Obama\", \"Speaker\").\nIs_a(\"Barack Obama\", \"Secretary\").\nIs_a(\"Barack Obama\", \"Secretary of State\").\nIs_a(\"Barack Obama\", \"Secretary of Defense\").\nIs_a(\"Barack Obama\", \"Secretary of Commerce\").\nIs_a(\"Barack Obama\", \"Secretary of Labor\").\nIs_a(\"Barack Obama\", \"Secretary of Education\").\nIs_a(\"Barack Obama\", \"Secretary of Housing and Urban Development\").\nIs_a(\"Barack Obama\", \"Secretary of Health and Human Services\").\nIs_a(\"Barack Obama\", \"Secretary of Transportation\").\nIs_a(\"Barack Obama\", \"Secretary of Energy\").\nIs_a(\"Barack Obama\", \"Secretary of Homeland Security\").\nIs_a(\"Barack Obama\", \"Secretary of the Interior\").\nIs_a(\"Barack Obama\", \"Secretary of Labor\").\nIs_a(\"Barack Obama\", \"Secretary of Veterans Affairs\").\nIs_a(\"Barack Obama\", \"Attorney General\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Barack Obama\", \"Vice-President\").\nIs_a(\"Bar"]}
{"id": 256, "answer": false, "completion": ".decl Has_reproduction_rate(Animal:symbol, Reproduction_rate:float)\nHas_reproduction_rate(\"dog\", 1).\nHas_reproduction_rate(\"cat\", 0.5).\nHas_reproduction_rate(\"human\", 0.5).\n.decl Has_reproduction_rate(Animal:symbol, Reproduction_rate:float)\nHas_reproduction_rate(\"environmentalist\", 0.5).\n.decl Answer()\nAnswer() :- Has_reproduction_rate(\"environmentalist\", reproduction_rate), Has_reproduction_rate(\"dog\", reproduction_rate2), reproduction_rate > reproduction_rate2.\n.output Answer\n\n", "completions": [".decl Has_reproduction_rate(Animal:symbol, Reproduction_rate:float)\nHas_reproduction_rate(\"dog\", 1).\nHas_reproduction_rate(\"cat\", 0.5).\nHas_reproduction_rate(\"human\", 0.5).\n.decl Has_reproduction_rate(Animal:symbol, Reproduction_rate:float)\nHas_reproduction_rate(\"environmentalist\", 0.5).\n.decl Answer()\nAnswer() :- Has_reproduction_rate(\"environmentalist\", reproduction_rate), Has_reproduction_rate(\"dog\", reproduction_rate2), reproduction_rate > reproduction_rate2.\n.output Answer\n\n"]}
{"id": 257, "answer": false, "completion": ".decl Has_n_iterations(Object:symbol, N_iterations:float)\nHas_n_iterations(\"Iphone\", 1).\nHas_n_iterations(\"Samsung Galaxy\", 2).\n.decl Answer()\nAnswer() :- Has_n_iterations(\"Iphone\", n_iterations1), Has_n_iterations(\"Samsung Galaxy\", n_iterations2), n_iterations1 > n_iterations2.\n.output Answer\n\n", "completions": [".decl Has_n_iterations(Object:symbol, N_iterations:float)\nHas_n_iterations(\"Iphone\", 1).\nHas_n_iterations(\"Samsung Galaxy\", 2).\n.decl Answer()\nAnswer() :- Has_n_iterations(\"Iphone\", n_iterations1), Has_n_iterations(\"Samsung Galaxy\", n_iterations2), n_iterations1 > n_iterations2.\n.output Answer\n\n"]}
{"id": 258, "answer": true, "completion": ".decl Has_fan(CPU:symbol)\nHas_fan(\"central processing unit\").\n.decl Answer()\nAnswer() :- Has_fan(\"central processing unit\").\n.output Answer\n\n", "completions": [".decl Has_fan(CPU:symbol)\nHas_fan(\"central processing unit\").\n.decl Answer()\nAnswer() :- Has_fan(\"central processing unit\").\n.output Answer\n\n"]}
{"id": 259, "answer": true, "completion": ".decl Has_probability(Event:symbol, Probability:float)\nHas_probability(\"tonsure\", 0.1).\n.decl Answer()\nAnswer() :- Has_probability(\"tonsure\", probability), probability < 0.5.\n.output Answer\n\n", "completions": [".decl Has_probability(Event:symbol, Probability:float)\nHas_probability(\"tonsure\", 0.1).\n.decl Answer()\nAnswer() :- Has_probability(\"tonsure\", probability), probability < 0.5.\n.output Answer\n\n"]}
{"id": 260, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"diamond\", 2.4).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"diamond\", density1), Has_density(\"water\", density2), density1 < density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"diamond\", 2.4).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"diamond\", density1), Has_density(\"water\", density2), density1 < density2.\n.output Answer\n\n"]}
{"id": 261, "answer": true, "completion": ".decl Employed_by(Person:symbol, Employer:symbol)\nEmployed_by(\"Walt Disney\", \"Walt Disney Productions\").\nEmployed_by(\"Walt Disney\", \"Disney Enterprises\").\nEmployed_by(\"Walt Disney\", \"Disney Studios\").\nEmployed_by(\"Walt Disney\", \"Disneyland\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\",", "completions": [".decl Employed_by(Person:symbol, Employer:symbol)\nEmployed_by(\"Walt Disney\", \"Walt Disney Productions\").\nEmployed_by(\"Walt Disney\", \"Disney Enterprises\").\nEmployed_by(\"Walt Disney\", \"Disney Studios\").\nEmployed_by(\"Walt Disney\", \"Disneyland\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Hong Kong\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Paris\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Shanghai\").\nEmployed_by(\"Walt Disney\", \"Disneyland Resort Tokyo\").\nEmployed_by(\"Walt Disney\","]}
{"id": 262, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"koala\", 1).\nHas_size(\"nickel\", 0.5).\n.decl Answer()\nAnswer() :- Has_size(\"koala\", size1), Has_size(\"nickel\", size2), size1 >= size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"koala\", 1).\nHas_size(\"nickel\", 0.5).\n.decl Answer()\nAnswer() :- Has_size(\"koala\", size1), Has_size(\"nickel\", size2), size1 >= size2.\n.output Answer\n\n"]}
{"id": 263, "answer": true, "completion": ".decl Prays_over_Quran(Person:symbol)\nPrays_over_Quran(\"Dave Chappelle\").\n.decl Answer()\nAnswer() :- Prays_over_Quran(\"Dave Chappelle\").\n.output Answer\n\n", "completions": [".decl Prays_over_Quran(Person:symbol)\nPrays_over_Quran(\"Dave Chappelle\").\n.decl Answer()\nAnswer() :- Prays_over_Quran(\"Dave Chappelle\").\n.output Answer\n\n"]}
{"id": 264, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Alan Greenspan\", \"Alan Greenspan\").\n.decl Answer()\nAnswer() :- Has_name(\"Alan Greenspan\", name), Has_name(\"C-SPAN\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Alan Greenspan\", \"Alan Greenspan\").\n.decl Answer()\nAnswer() :- Has_name(\"Alan Greenspan\", name), Has_name(\"C-SPAN\", name).\n.output Answer\n\n"]}
{"id": 265, "answer": true, "completion": ".decl Has_power_source(Game:symbol, Power_source:symbol)\nHas_power_source(\"Final Fantasy VI\", \"electricity\").\n.decl Answer()\nAnswer() :- Has_power_source(\"Final Fantasy VI\", power_source).\n.output Answer\n\n", "completions": [".decl Has_power_source(Game:symbol, Power_source:symbol)\nHas_power_source(\"Final Fantasy VI\", \"electricity\").\n.decl Answer()\nAnswer() :- Has_power_source(\"Final Fantasy VI\", power_source).\n.output Answer\n\n"]}
{"id": 266, "answer": false, "completion": ".decl Wrote(Person:symbol, Play:symbol)\nWrote(\"Jean-Paul Sartre\", \"Hell is other people\").\n.decl Answer()\nAnswer() :- Wrote(\"Jean-Paul Sartre\", play).\n.output Answer\n\n", "completions": [".decl Wrote(Person:symbol, Play:symbol)\nWrote(\"Jean-Paul Sartre\", \"Hell is other people\").\n.decl Answer()\nAnswer() :- Wrote(\"Jean-Paul Sartre\", play).\n.output Answer\n\n"]}
{"id": 267, "answer": true, "completion": ".decl Has_infantry_training(Person:symbol, Infantry_training:symbol)\nHas_infantry_training(\"Tom Brady\", \"yes\").\nHas_infantry_training(\"Tom Brady\", \"no\").\nHas_infantry_training(\"Tom Brady\", \"no\").\n.decl Has_team(Person:symbol, Team:symbol)\nHas_team(\"Tom Brady\", \"Patriots\").\nHas_team(\"Tom Brady\", \"Patriots\").\nHas_team(\"Tom Brady\", \"Patriots\").\n.decl Answer()\nAnswer() :- Has_infantry_training(\"Tom Brady\", infantry_training), Has_team(\"Tom Brady\", team), infantry_training = \"yes\", team = \"Patriots\".\n.output Answer\n\n", "completions": [".decl Has_infantry_training(Person:symbol, Infantry_training:symbol)\nHas_infantry_training(\"Tom Brady\", \"yes\").\nHas_infantry_training(\"Tom Brady\", \"no\").\nHas_infantry_training(\"Tom Brady\", \"no\").\n.decl Has_team(Person:symbol, Team:symbol)\nHas_team(\"Tom Brady\", \"Patriots\").\nHas_team(\"Tom Brady\", \"Patriots\").\nHas_team(\"Tom Brady\", \"Patriots\").\n.decl Answer()\nAnswer() :- Has_infantry_training(\"Tom Brady\", infantry_training), Has_team(\"Tom Brady\", team), infantry_training = \"yes\", team = \"Patriots\".\n.output Answer\n\n"]}
{"id": 268, "answer": false, "completion": ".decl Has_stripe(Person:symbol, Stripe:symbol)\nHas_stripe(\"Goofy\", \"red\").\nHas_stripe(\"Bugs Bunny\", \"white\").\n.decl Answer()\nAnswer() :- Has_stripe(\"Goofy\", stripe1), Has_stripe(\"Bugs Bunny\", stripe2), stripe1 \\= stripe2.\n.output Answer\n\n", "completions": [".decl Has_stripe(Person:symbol, Stripe:symbol)\nHas_stripe(\"Goofy\", \"red\").\nHas_stripe(\"Bugs Bunny\", \"white\").\n.decl Answer()\nAnswer() :- Has_stripe(\"Goofy\", stripe1), Has_stripe(\"Bugs Bunny\", stripe2), stripe1 \\= stripe2.\n.output Answer\n\n"]}
{"id": 269, "answer": false, "completion": ".decl Has_surface_area(Object:symbol, Surface_area:float)\nHas_surface_area(\"europa\", 6).\nHas_surface_area(\"egg\", 0.5).\n.decl Answer()\nAnswer() :- Has_surface_area(\"europa\", surface_area1), Has_surface_area(\"egg\", surface_area2), surface_area1 > surface_area2.\n.output Answer\n\n", "completions": [".decl Has_surface_area(Object:symbol, Surface_area:float)\nHas_surface_area(\"europa\", 6).\nHas_surface_area(\"egg\", 0.5).\n.decl Answer()\nAnswer() :- Has_surface_area(\"europa\", surface_area1), Has_surface_area(\"egg\", surface_area2), surface_area1 > surface_area2.\n.output Answer\n\n"]}
{"id": 270, "answer": false, "completion": ".decl Has_air_date(Show:symbol, Air_date:symbol)\nHas_air_date(\"The Joy of Painting\", \"January 1, 2000\").\n.decl Answer()\nAnswer() :- Has_air_date(\"The Joy of Painting\", air_date), air_date > \"January 1, 2000\".\n.output Answer\n\n", "completions": [".decl Has_air_date(Show:symbol, Air_date:symbol)\nHas_air_date(\"The Joy of Painting\", \"January 1, 2000\").\n.decl Answer()\nAnswer() :- Has_air_date(\"The Joy of Painting\", air_date), air_date > \"January 1, 2000\".\n.output Answer\n\n"]}
{"id": 271, "answer": false, "completion": ".decl Owns(Company:symbol, Company_owned:symbol)\nOwns(\"Disney\", \"Marvel\").\nOwns(\"Disney\", \"DC\").\nOwns(\"Marvel\", \"DC\").\n.decl Answer()\nAnswer() :- Owns(\"Disney\", company_owned), Owns(company_owned, \"DC\").\n.output Answer\n\n", "completions": [".decl Owns(Company:symbol, Company_owned:symbol)\nOwns(\"Disney\", \"Marvel\").\nOwns(\"Disney\", \"DC\").\nOwns(\"Marvel\", \"DC\").\n.decl Answer()\nAnswer() :- Owns(\"Disney\", company_owned), Owns(company_owned, \"DC\").\n.output Answer\n\n"]}
{"id": 272, "answer": false, "completion": ".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"Yukiko\", \"breast cancer\").\nHas_cancer(\"Yukiko\", \"lung cancer\").\nHas_cancer(\"Yukiko\", \"prostate cancer\").\nHas_cancer(\"Yukiko\", \"pancreatic cancer\").\nHas_cancer(\"Yukiko\", \"colon cancer\").\nHas_cancer(\"Yukiko\", \"skin cancer\").\nHas_cancer(\"Yukiko\", \"brain cancer\").\nHas_cancer(\"Yukiko\", \"lymphoma\").\nHas_cancer(\"Yukiko\", \"leukemia\").\nHas_cancer(\"Yukiko\", \"esophageal cancer\").\nHas_cancer(\"Yukiko\", \"stomach cancer\").\nHas_cancer(\"Yukiko\", \"kidney cancer\").\nHas_cancer(\"Yukiko\", \"uterine cancer\").\nHas_cancer(\"Yukiko\", \"thyroid cancer\").\nHas_cancer(\"Yukiko\", \"cervical cancer\").\nHas_cancer(\"Yukiko\", \"bladder cancer\").\nHas_cancer(\"Yukiko\", \"colorectal cancer\").\nHas_cancer(\"Yukiko\", \"non-Hodgkin's lymphoma\").\nHas_cancer(\"Yukiko\", \"ovarian cancer\").\nHas_cancer(\"Yukiko\", \"brainstem cancer\").\nHas_cancer(\"Yukiko\", \"acute myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"chronic myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"acute lymphoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute lymphocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"acute nonlymphocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute promyelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroleukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myeloblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"", "completions": [".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"Yukiko\", \"breast cancer\").\nHas_cancer(\"Yukiko\", \"lung cancer\").\nHas_cancer(\"Yukiko\", \"prostate cancer\").\nHas_cancer(\"Yukiko\", \"pancreatic cancer\").\nHas_cancer(\"Yukiko\", \"colon cancer\").\nHas_cancer(\"Yukiko\", \"skin cancer\").\nHas_cancer(\"Yukiko\", \"brain cancer\").\nHas_cancer(\"Yukiko\", \"lymphoma\").\nHas_cancer(\"Yukiko\", \"leukemia\").\nHas_cancer(\"Yukiko\", \"esophageal cancer\").\nHas_cancer(\"Yukiko\", \"stomach cancer\").\nHas_cancer(\"Yukiko\", \"kidney cancer\").\nHas_cancer(\"Yukiko\", \"uterine cancer\").\nHas_cancer(\"Yukiko\", \"thyroid cancer\").\nHas_cancer(\"Yukiko\", \"cervical cancer\").\nHas_cancer(\"Yukiko\", \"bladder cancer\").\nHas_cancer(\"Yukiko\", \"colorectal cancer\").\nHas_cancer(\"Yukiko\", \"non-Hodgkin's lymphoma\").\nHas_cancer(\"Yukiko\", \"ovarian cancer\").\nHas_cancer(\"Yukiko\", \"brainstem cancer\").\nHas_cancer(\"Yukiko\", \"acute myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"chronic myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"acute lymphoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute lymphocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myeloid leukemia\").\nHas_cancer(\"Yukiko\", \"acute nonlymphocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute promyelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroleukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monoblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myeloblastic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute erythroid leukemia\").\nHas_cancer(\"Yukiko\", \"acute megakaryocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute monocytic leukemia\").\nHas_cancer(\"Yukiko\", \"acute myelocytic leukemia\").\nHas_cancer(\"Yukiko\", \""]}
{"id": 273, "answer": true, "completion": ".decl Inspired(Person:symbol, Inspiration:symbol)\nInspired(\"Washington Irving\", \"Irish mythology\").\n.decl Answer()\nAnswer() :- Inspired(\"Washington Irving\", inspiration).\n.output Answer\n\n", "completions": [".decl Inspired(Person:symbol, Inspiration:symbol)\nInspired(\"Washington Irving\", \"Irish mythology\").\n.decl Answer()\nAnswer() :- Inspired(\"Washington Irving\", inspiration).\n.output Answer\n\n"]}
{"id": 274, "answer": true, "completion": ".decl Is_part_of(Object:symbol, Part:symbol)\nIs_part_of(\"tibia\", \"leg\").\nIs_part_of(\"leg\", \"limb\").\nIs_part_of(\"limb\", \"body\").\n.decl Is_part_of(Object:symbol, Part:symbol)\nIs_part_of(\"tibia\", \"body\").\n.decl Answer()\nAnswer() :- Is_part_of(\"tibia\", part), Is_part_of(part, \"body\").\n.output Answer\n\n", "completions": [".decl Is_part_of(Object:symbol, Part:symbol)\nIs_part_of(\"tibia\", \"leg\").\nIs_part_of(\"leg\", \"limb\").\nIs_part_of(\"limb\", \"body\").\n.decl Is_part_of(Object:symbol, Part:symbol)\nIs_part_of(\"tibia\", \"body\").\n.decl Answer()\nAnswer() :- Is_part_of(\"tibia\", part), Is_part_of(part, \"body\").\n.output Answer\n\n"]}
{"id": 275, "answer": true, "completion": ".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Emma Roberts\", \"actress\").\nHas_occupation(\"Emma Roberts\", \"private investigator\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Emma Roberts\", occupation), occupation = \"private investigator\".\n.output Answer\n\n", "completions": [".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Emma Roberts\", \"actress\").\nHas_occupation(\"Emma Roberts\", \"private investigator\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Emma Roberts\", occupation), occupation = \"private investigator\".\n.output Answer\n\n"]}
{"id": 276, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age(\"Albert Einstein\", 76).\nHas_age"]}
{"id": 277, "answer": true, "completion": ".decl Has_category(Prize:symbol, Category:symbol)\nHas_category(\"Nobel Prize in Chemistry\", \"chemistry\").\nHas_category(\"Nobel Prize in Economics\", \"economics\").\nHas_category(\"Nobel Prize in Literature\", \"literature\").\nHas_category(\"Nobel Prize in Physics\", \"physics\").\n.decl Has_year(Prize:symbol, Year:float)\nHas_year(\"Nobel Prize in Chemistry\", 1901).\nHas_year(\"Nobel Prize in Economics\", 1901).\nHas_year(\"Nobel Prize in Literature\", 1901).\nHas_year(\"Nobel Prize in Physics\", 1901).\n.decl Answer()\nAnswer() :- Has_category(\"Nobel Prize in Chemistry\", category), Has_category(\"Nobel Prize in Economics\", category), Has_category(\"Nobel Prize in Literature\", category), Has_category(\"Nobel Prize in Physics\", category), Has_year(\"Nobel Prize in Chemistry\", year), Has_year(\"Nobel Prize in Economics\", year), Has_year(\"Nobel Prize in Literature\", year), Has_year(\"Nobel Prize in Physics\", year), category != \"chemistry\", category != \"economics\", category != \"literature\", category != \"physics\", year != 1901.\n.output Answer\n\n", "completions": [".decl Has_category(Prize:symbol, Category:symbol)\nHas_category(\"Nobel Prize in Chemistry\", \"chemistry\").\nHas_category(\"Nobel Prize in Economics\", \"economics\").\nHas_category(\"Nobel Prize in Literature\", \"literature\").\nHas_category(\"Nobel Prize in Physics\", \"physics\").\n.decl Has_year(Prize:symbol, Year:float)\nHas_year(\"Nobel Prize in Chemistry\", 1901).\nHas_year(\"Nobel Prize in Economics\", 1901).\nHas_year(\"Nobel Prize in Literature\", 1901).\nHas_year(\"Nobel Prize in Physics\", 1901).\n.decl Answer()\nAnswer() :- Has_category(\"Nobel Prize in Chemistry\", category), Has_category(\"Nobel Prize in Economics\", category), Has_category(\"Nobel Prize in Literature\", category), Has_category(\"Nobel Prize in Physics\", category), Has_year(\"Nobel Prize in Chemistry\", year), Has_year(\"Nobel Prize in Economics\", year), Has_year(\"Nobel Prize in Literature\", year), Has_year(\"Nobel Prize in Physics\", year), category != \"chemistry\", category != \"economics\", category != \"literature\", category != \"physics\", year != 1901.\n.output Answer\n\n"]}
{"id": 278, "answer": true, "completion": ".decl Belongs_to_country(Person:symbol, Country:symbol)\nBelongs_to_country(\"John Smith\", \"England\").\nBelongs_to_country(\"John Smith\", \"Wales\").\nBelongs_to_country(\"John Smith\", \"USA\").\nBelongs_to_country(\"John Smith\", \"Canada\").\nBelongs_to_country(\"John Smith\", \"Australia\").\nBelongs_to_country(\"John Smith\", \"France\").\nBelongs_to_country(\"John Smith\", \"Germany\").\nBelongs_to_country(\"John Smith\", \"Italy\").\nBelongs_to_country(\"John Smith\", \"Spain\").\nBelongs_to_country(\"John Smith\", \"Sweden\").\nBelongs_to_country(\"John Smith\", \"Norway\").\nBelongs_to_country(\"John Smith\", \"Denmark\").\nBelongs_to_country(\"John Smith\", \"Finland\").\nBelongs_to_country(\"John Smith\", \"Greece\").\nBelongs_to_country(\"John Smith\", \"Portugal\").\nBelongs_to_country(\"John Smith\", \"Ireland\").\nBelongs_to_country(\"John Smith\", \"Iceland\").\nBelongs_to_country(\"John Smith\", \"Brazil\").\nBelongs_to_country(\"John Smith\", \"Argentina\").\nBelongs_to_country(\"John Smith\", \"Chile\").\nBelongs_to_country(\"John Smith\", \"Peru\").\nBelongs_to_country(\"John Smith\", \"Ecuador\").\nBelongs_to_country(\"John Smith\", \"Colombia\").\nBelongs_to_country(\"John Smith\", \"Venezuela\").\nBelongs_to_country(\"John Smith\", \"Uruguay\").\nBelongs_to_country(\"John Smith\", \"Paraguay\").\nBelongs_to_country(\"John Smith\", \"Bolivia\").\nBelongs_to_country(\"John Smith\", \"Honduras\").\nBelongs_to_country(\"John Smith\", \"Nicaragua\").\nBelongs_to_country(\"John Smith\", \"El Salvador\").\nBelongs_to_country(\"John Smith\", \"Costa Rica\").\nBelongs_to_country(\"John Smith\", \"Panama\").\nBelongs_to_country(\"John Smith\", \"Guatemala\").\nBelongs_to_country(\"John Smith\", \"Cuba\").\nBelongs_to_country(\"John Smith\", \"Mexico\").\nBelongs_to_country(\"John Smith\", \"Dominican Republic\").\nBelongs_to_country(\"John Smith\", \"Haiti\").\nBelongs_to_country(\"John Smith\", \"Jamaica\").\nBelongs_to_country(\"John Smith\", \"Trinidad and Tobago\").\nBelongs_to_country(\"John Smith\", \"Barbados\").\nBelongs_to_country(\"John Smith\", \"Bahamas\").\nBelongs_to_country(\"John Smith\", \"Guyana\").\nBelongs_to_country(\"John Smith\", \"Suriname\").\nBelongs_to_country(\"John Smith\", \"Ecuador\").\nBelongs_to_country(\"John Smith\", \"Colombia\").\nBelongs_to_country(\"John Smith\", \"Venezuela\").\nBelongs_to_country(\"John Smith\", \"Uruguay\").\nBelongs_to_country(\"John Smith\", \"Paraguay\").\nBelongs_to_country(\"John Smith\", \"Bolivia\").\nBelongs_to_country(\"John Smith\", \"Honduras\").\nBelongs_to_country(\"John Smith\", \"Nicaragua", "completions": [".decl Belongs_to_country(Person:symbol, Country:symbol)\nBelongs_to_country(\"John Smith\", \"England\").\nBelongs_to_country(\"John Smith\", \"Wales\").\nBelongs_to_country(\"John Smith\", \"USA\").\nBelongs_to_country(\"John Smith\", \"Canada\").\nBelongs_to_country(\"John Smith\", \"Australia\").\nBelongs_to_country(\"John Smith\", \"France\").\nBelongs_to_country(\"John Smith\", \"Germany\").\nBelongs_to_country(\"John Smith\", \"Italy\").\nBelongs_to_country(\"John Smith\", \"Spain\").\nBelongs_to_country(\"John Smith\", \"Sweden\").\nBelongs_to_country(\"John Smith\", \"Norway\").\nBelongs_to_country(\"John Smith\", \"Denmark\").\nBelongs_to_country(\"John Smith\", \"Finland\").\nBelongs_to_country(\"John Smith\", \"Greece\").\nBelongs_to_country(\"John Smith\", \"Portugal\").\nBelongs_to_country(\"John Smith\", \"Ireland\").\nBelongs_to_country(\"John Smith\", \"Iceland\").\nBelongs_to_country(\"John Smith\", \"Brazil\").\nBelongs_to_country(\"John Smith\", \"Argentina\").\nBelongs_to_country(\"John Smith\", \"Chile\").\nBelongs_to_country(\"John Smith\", \"Peru\").\nBelongs_to_country(\"John Smith\", \"Ecuador\").\nBelongs_to_country(\"John Smith\", \"Colombia\").\nBelongs_to_country(\"John Smith\", \"Venezuela\").\nBelongs_to_country(\"John Smith\", \"Uruguay\").\nBelongs_to_country(\"John Smith\", \"Paraguay\").\nBelongs_to_country(\"John Smith\", \"Bolivia\").\nBelongs_to_country(\"John Smith\", \"Honduras\").\nBelongs_to_country(\"John Smith\", \"Nicaragua\").\nBelongs_to_country(\"John Smith\", \"El Salvador\").\nBelongs_to_country(\"John Smith\", \"Costa Rica\").\nBelongs_to_country(\"John Smith\", \"Panama\").\nBelongs_to_country(\"John Smith\", \"Guatemala\").\nBelongs_to_country(\"John Smith\", \"Cuba\").\nBelongs_to_country(\"John Smith\", \"Mexico\").\nBelongs_to_country(\"John Smith\", \"Dominican Republic\").\nBelongs_to_country(\"John Smith\", \"Haiti\").\nBelongs_to_country(\"John Smith\", \"Jamaica\").\nBelongs_to_country(\"John Smith\", \"Trinidad and Tobago\").\nBelongs_to_country(\"John Smith\", \"Barbados\").\nBelongs_to_country(\"John Smith\", \"Bahamas\").\nBelongs_to_country(\"John Smith\", \"Guyana\").\nBelongs_to_country(\"John Smith\", \"Suriname\").\nBelongs_to_country(\"John Smith\", \"Ecuador\").\nBelongs_to_country(\"John Smith\", \"Colombia\").\nBelongs_to_country(\"John Smith\", \"Venezuela\").\nBelongs_to_country(\"John Smith\", \"Uruguay\").\nBelongs_to_country(\"John Smith\", \"Paraguay\").\nBelongs_to_country(\"John Smith\", \"Bolivia\").\nBelongs_to_country(\"John Smith\", \"Honduras\").\nBelongs_to_country(\"John Smith\", \"Nicaragua"]}
{"id": 279, "answer": true, "completion": ".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Alan Turing\", 1912).\nHas_birth_year(\"Abraham Lincoln\", 1809).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"Alan Turing\", 1954).\nHas_death_year(\"Abraham Lincoln\", 1865).\n.decl Answer()\nAnswer() :- Has_birth_year(\"Alan Turing\", birth_year), Has_death_year(\"Alan Turing\", death_year), birth_year == death_year.\n.output Answer\n\n", "completions": [".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Alan Turing\", 1912).\nHas_birth_year(\"Abraham Lincoln\", 1809).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"Alan Turing\", 1954).\nHas_death_year(\"Abraham Lincoln\", 1865).\n.decl Answer()\nAnswer() :- Has_birth_year(\"Alan Turing\", birth_year), Has_death_year(\"Alan Turing\", death_year), birth_year == death_year.\n.output Answer\n\n"]}
{"id": 280, "answer": false, "completion": ".decl Has_catch_phrase(Person:symbol, Catch_phrase:symbol)\nHas_catch_phrase(\"John Kerry\", \"Swift Boat\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boat\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating", "completions": [".decl Has_catch_phrase(Person:symbol, Catch_phrase:symbol)\nHas_catch_phrase(\"John Kerry\", \"Swift Boat\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boat\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Swift Boating\").\nHas_catch_phrase(\"John Kerry\", \"Kerry's Swift Boating"]}
{"id": 281, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"argon\", 0.0037).\n.decl Answer()\nAnswer() :- Has_density(\"argon\", density1), density1 > 0.0037.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"argon\", 0.0037).\n.decl Answer()\nAnswer() :- Has_density(\"argon\", density1), density1 > 0.0037.\n.output Answer\n\n"]}
{"id": 282, "answer": true, "completion": ".decl Successful(Person:symbol, Success:symbol)\nSuccessful(\"Lucille Ball\", \"winemaking\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Lucille Ball\", \"winning the Miss America Pageant\").\n.decl Answer()\nAnswer() :- Successful(\"Lucille Ball\", success), Remembers(\"Lucille Ball\", event), success == event.\n.output Answer\n\n", "completions": [".decl Successful(Person:symbol, Success:symbol)\nSuccessful(\"Lucille Ball\", \"winemaking\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Lucille Ball\", \"winning the Miss America Pageant\").\n.decl Answer()\nAnswer() :- Successful(\"Lucille Ball\", success), Remembers(\"Lucille Ball\", event), success == event.\n.output Answer\n\n"]}
{"id": 283, "answer": false, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"guitar\", \"wood\").\nHas_material(\"guitar\", \"plastic\").\nHas_material(\"guitar\", \"glass\").\nHas_material(\"guitar\", \"metal\").\nHas_material(\"guitar\", \"leather\").\nHas_material(\"guitar\", \"cloth\").\nHas_material(\"guitar\", \"paper\").\nHas_material(\"guitar\", \"titanium\").\nHas_material(\"guitar\", \"tungsten\").\nHas_material(\"guitar\", \"aluminum\").\nHas_material(\"guitar\", \"iron\").\nHas_material(\"guitar\", \"steel\").\nHas_material(\"guitar\", \"silver\").\nHas_material(\"guitar\", \"gold\").\nHas_material(\"guitar\", \"copper\").\nHas_material(\"guitar\", \"bronze\").\nHas_material(\"guitar\", \"brass\").\nHas_material(\"guitar\", \"zinc\").\nHas_material(\"guitar\", \"nickel\").\nHas_material(\"guitar\", \"titanium\").\nHas_material(\"guitar\", \"tungsten\").\nHas_material(\"guitar\", \"aluminum\").\nHas_material(\"guitar\", \"iron\").\nHas_material(\"guitar\", \"steel\").\nHas_material(\"guitar\", \"silver\").\nHas_material(\"guitar\", \"gold\").\nHas_material(\"guitar\", \"copper\").\nHas_material(\"guitar\", \"bronze\").\nHas_material(\"guitar\", \"brass\").\nHas_material(\"guitar\", \"zinc\").\nHas_material(\"guitar\", \"nickel\").\n.decl Answer()\nAnswer() :- Has_material(\"guitar\", material), Has_material(\"oyster\", material).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"guitar\", \"wood\").\nHas_material(\"guitar\", \"plastic\").\nHas_material(\"guitar\", \"glass\").\nHas_material(\"guitar\", \"metal\").\nHas_material(\"guitar\", \"leather\").\nHas_material(\"guitar\", \"cloth\").\nHas_material(\"guitar\", \"paper\").\nHas_material(\"guitar\", \"titanium\").\nHas_material(\"guitar\", \"tungsten\").\nHas_material(\"guitar\", \"aluminum\").\nHas_material(\"guitar\", \"iron\").\nHas_material(\"guitar\", \"steel\").\nHas_material(\"guitar\", \"silver\").\nHas_material(\"guitar\", \"gold\").\nHas_material(\"guitar\", \"copper\").\nHas_material(\"guitar\", \"bronze\").\nHas_material(\"guitar\", \"brass\").\nHas_material(\"guitar\", \"zinc\").\nHas_material(\"guitar\", \"nickel\").\nHas_material(\"guitar\", \"titanium\").\nHas_material(\"guitar\", \"tungsten\").\nHas_material(\"guitar\", \"aluminum\").\nHas_material(\"guitar\", \"iron\").\nHas_material(\"guitar\", \"steel\").\nHas_material(\"guitar\", \"silver\").\nHas_material(\"guitar\", \"gold\").\nHas_material(\"guitar\", \"copper\").\nHas_material(\"guitar\", \"bronze\").\nHas_material(\"guitar\", \"brass\").\nHas_material(\"guitar\", \"zinc\").\nHas_material(\"guitar\", \"nickel\").\n.decl Answer()\nAnswer() :- Has_material(\"guitar\", material), Has_material(\"oyster\", material).\n.output Answer\n\n"]}
{"id": 284, "answer": true, "completion": ".decl Has_loudness(Instrument:symbol, Loudness:float)\nHas_loudness(\"saxophone\", 0.7).\nHas_loudness(\"trumpet\", 0.8).\nHas_loudness(\"piano\", 0.5).\n.decl Has_genre(Musician:symbol, Genre:symbol)\nHas_genre(\"James Cotton\", \"smooth jazz\").\n.decl Answer()\nAnswer() :- Has_loudness(\"saxophone\", loudness), Has_genre(\"James Cotton\", genre), loudness < 0.8.\n.output Answer\n\n", "completions": [".decl Has_loudness(Instrument:symbol, Loudness:float)\nHas_loudness(\"saxophone\", 0.7).\nHas_loudness(\"trumpet\", 0.8).\nHas_loudness(\"piano\", 0.5).\n.decl Has_genre(Musician:symbol, Genre:symbol)\nHas_genre(\"James Cotton\", \"smooth jazz\").\n.decl Answer()\nAnswer() :- Has_loudness(\"saxophone\", loudness), Has_genre(\"James Cotton\", genre), loudness < 0.8.\n.output Answer\n\n"]}
{"id": 285, "answer": true, "completion": ".decl Related(A:symbol, B:symbol)\nRelated(\"emu\", \"elk\").\nRelated(\"emu\", \"ostrich\").\nRelated(\"ostrich\", \"elk\").\n.decl Answer()\nAnswer() :- Related(\"emu\", \"elk\"), Related(\"emu\", \"ostrich\").\n.output Answer\n\n", "completions": [".decl Related(A:symbol, B:symbol)\nRelated(\"emu\", \"elk\").\nRelated(\"emu\", \"ostrich\").\nRelated(\"ostrich\", \"elk\").\n.decl Answer()\nAnswer() :- Related(\"emu\", \"elk\"), Related(\"emu\", \"ostrich\").\n.output Answer\n\n"]}
{"id": 286, "answer": false, "completion": ".decl Located_in(Art_object:symbol, Location:symbol)\nLocated_in(\"Mona Lisa\", \"Louvre\").\nLocated_in(\"Venus de Milo\", \"Louvre\").\n.decl Answer()\nAnswer() :- Located_in(\"Mona Lisa\", location), Located_in(\"Venus de Milo\", location).\n.output Answer\n\n", "completions": [".decl Located_in(Art_object:symbol, Location:symbol)\nLocated_in(\"Mona Lisa\", \"Louvre\").\nLocated_in(\"Venus de Milo\", \"Louvre\").\n.decl Answer()\nAnswer() :- Located_in(\"Mona Lisa\", location), Located_in(\"Venus de Milo\", location).\n.output Answer\n\n"]}
{"id": 287, "answer": true, "completion": ".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"George Washington\", \"Augustine Washington\").\nHas_ancestor(\"George Washington\", \"George Washington\").\nHas_ancestor(\"John Adams\", \"Augustine Washington\").\nHas_ancestor(\"John Adams\", \"George Washington\").\nHas_ancestor(\"John Adams\", \"John Adams\").\nHas_ancestor(\"Thomas Jefferson\", \"Augustine Washington\").\nHas_ancestor(\"Thomas Jefferson\", \"George Washington\").\nHas_ancestor(\"Thomas Jefferson\", \"Thomas Jefferson\").\nHas_ancestor(\"James Madison\", \"Augustine Washington\").\nHas_ancestor(\"James Madison\", \"George Washington\").\nHas_ancestor(\"James Madison\", \"Thomas Jefferson\").\nHas_ancestor(\"James Madison\", \"James Madison\").\nHas_ancestor(\"James Monroe\", \"Augustine Washington\").\nHas_ancestor(\"James Monroe\", \"George Washington\").\nHas_ancestor(\"James Monroe\", \"Thomas Jefferson\").\nHas_ancestor(\"James Monroe\", \"James Madison\").\nHas_ancestor(\"James Monroe\", \"James Monroe\").\nHas_ancestor(\"John Quincy Adams\", \"Augustine Washington\").\nHas_ancestor(\"John Quincy Adams\", \"George Washington\").\nHas_ancestor(\"John Quincy Adams\", \"Thomas Jefferson\").\nHas_ancestor(\"John Quincy Adams\", \"James Madison\").\nHas_ancestor(\"John Quincy Adams\", \"James Monroe\").\nHas_ancestor(\"John Quincy Adams\", \"John Quincy Adams\").\nHas_ancestor(\"Andrew Jackson\", \"Augustine Washington\").\nHas_ancestor(\"Andrew Jackson\", \"George Washington\").\nHas_ancestor(\"Andrew Jackson\", \"Thomas Jefferson\").\nHas_ancestor(\"Andrew Jackson\", \"James Madison\").\nHas_ancestor(\"Andrew Jackson\", \"James Monroe\").\nHas_ancestor(\"Andrew Jackson\", \"John Quincy Adams\").\nHas_ancestor(\"Andrew Jackson\", \"Andrew Jackson\").\nHas_ancestor(\"Martin Van Buren\", \"Augustine Washington\").\nHas_ancestor(\"Martin Van Buren\", \"George Washington\").\nHas_ancestor(\"Martin Van Buren\", \"Thomas Jefferson\").\nHas_ancestor(\"Martin Van Buren\", \"James Madison\").\nHas_ancestor(\"Martin Van Buren\", \"James Monroe\").\nHas_ancestor(\"Martin Van Buren\", \"John Quincy Adams\").\nHas_ancestor(\"Martin Van Buren\", \"Andrew Jackson\").\nHas_ancestor(\"Martin Van Buren\", \"Martin Van Buren\").\nHas_ancestor(\"William Henry Harrison\", \"Augustine Washington\").\nHas_ancestor(\"William Henry Harrison\", \"George Washington\").\nHas_ancestor(\"William Henry Harrison\", \"Thomas Jefferson\").\nHas_ancestor(\"William Henry Harrison\", \"James Madison\").\nHas_ancestor(\"William Henry Harrison\", \"James Monroe\").\nHas_ancestor(\"William Henry Harrison\", \"John Quincy Adams\").\nHas_ancestor(\"William Henry Harrison\", \"Andrew Jackson\").\nHas_ancestor(\"William Henry Harrison\", \"Martin Van Buren\").\nHas_ancestor(\"William Henry Harrison\", \"William Henry Harrison\").\nHas_ancestor(\"John Tyler\", \"Augustine Washington\").\nHas_ancestor(\"John Tyler\", \"George Washington\").\nHas_ancestor(\"John Tyler\", \"Thomas Jefferson\").\nHas_ancestor(\"John Tyler\", \"James Madison\").\nHas_ancestor(\"John Tyler\", \"James Monroe\").\nHas", "completions": [".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"George Washington\", \"Augustine Washington\").\nHas_ancestor(\"George Washington\", \"George Washington\").\nHas_ancestor(\"John Adams\", \"Augustine Washington\").\nHas_ancestor(\"John Adams\", \"George Washington\").\nHas_ancestor(\"John Adams\", \"John Adams\").\nHas_ancestor(\"Thomas Jefferson\", \"Augustine Washington\").\nHas_ancestor(\"Thomas Jefferson\", \"George Washington\").\nHas_ancestor(\"Thomas Jefferson\", \"Thomas Jefferson\").\nHas_ancestor(\"James Madison\", \"Augustine Washington\").\nHas_ancestor(\"James Madison\", \"George Washington\").\nHas_ancestor(\"James Madison\", \"Thomas Jefferson\").\nHas_ancestor(\"James Madison\", \"James Madison\").\nHas_ancestor(\"James Monroe\", \"Augustine Washington\").\nHas_ancestor(\"James Monroe\", \"George Washington\").\nHas_ancestor(\"James Monroe\", \"Thomas Jefferson\").\nHas_ancestor(\"James Monroe\", \"James Madison\").\nHas_ancestor(\"James Monroe\", \"James Monroe\").\nHas_ancestor(\"John Quincy Adams\", \"Augustine Washington\").\nHas_ancestor(\"John Quincy Adams\", \"George Washington\").\nHas_ancestor(\"John Quincy Adams\", \"Thomas Jefferson\").\nHas_ancestor(\"John Quincy Adams\", \"James Madison\").\nHas_ancestor(\"John Quincy Adams\", \"James Monroe\").\nHas_ancestor(\"John Quincy Adams\", \"John Quincy Adams\").\nHas_ancestor(\"Andrew Jackson\", \"Augustine Washington\").\nHas_ancestor(\"Andrew Jackson\", \"George Washington\").\nHas_ancestor(\"Andrew Jackson\", \"Thomas Jefferson\").\nHas_ancestor(\"Andrew Jackson\", \"James Madison\").\nHas_ancestor(\"Andrew Jackson\", \"James Monroe\").\nHas_ancestor(\"Andrew Jackson\", \"John Quincy Adams\").\nHas_ancestor(\"Andrew Jackson\", \"Andrew Jackson\").\nHas_ancestor(\"Martin Van Buren\", \"Augustine Washington\").\nHas_ancestor(\"Martin Van Buren\", \"George Washington\").\nHas_ancestor(\"Martin Van Buren\", \"Thomas Jefferson\").\nHas_ancestor(\"Martin Van Buren\", \"James Madison\").\nHas_ancestor(\"Martin Van Buren\", \"James Monroe\").\nHas_ancestor(\"Martin Van Buren\", \"John Quincy Adams\").\nHas_ancestor(\"Martin Van Buren\", \"Andrew Jackson\").\nHas_ancestor(\"Martin Van Buren\", \"Martin Van Buren\").\nHas_ancestor(\"William Henry Harrison\", \"Augustine Washington\").\nHas_ancestor(\"William Henry Harrison\", \"George Washington\").\nHas_ancestor(\"William Henry Harrison\", \"Thomas Jefferson\").\nHas_ancestor(\"William Henry Harrison\", \"James Madison\").\nHas_ancestor(\"William Henry Harrison\", \"James Monroe\").\nHas_ancestor(\"William Henry Harrison\", \"John Quincy Adams\").\nHas_ancestor(\"William Henry Harrison\", \"Andrew Jackson\").\nHas_ancestor(\"William Henry Harrison\", \"Martin Van Buren\").\nHas_ancestor(\"William Henry Harrison\", \"William Henry Harrison\").\nHas_ancestor(\"John Tyler\", \"Augustine Washington\").\nHas_ancestor(\"John Tyler\", \"George Washington\").\nHas_ancestor(\"John Tyler\", \"Thomas Jefferson\").\nHas_ancestor(\"John Tyler\", \"James Madison\").\nHas_ancestor(\"John Tyler\", \"James Monroe\").\nHas"]}
{"id": 288, "answer": false, "completion": ".decl Has_n_sequels(Movie:symbol, N_sequels:float)\nHas_n_sequels(\"Gremlins\", 3).\nHas_n_sequels(\"The Matrix\", 3).\n.decl Answer()\nAnswer() :- Has_n_sequels(\"Gremlins\", n_sequels1), Has_n_sequels(\"The Matrix\", n_sequels2), n_sequels1 = n_sequels2.\n.output Answer\n\n", "completions": [".decl Has_n_sequels(Movie:symbol, N_sequels:float)\nHas_n_sequels(\"Gremlins\", 3).\nHas_n_sequels(\"The Matrix\", 3).\n.decl Answer()\nAnswer() :- Has_n_sequels(\"Gremlins\", n_sequels1), Has_n_sequels(\"The Matrix\", n_sequels2), n_sequels1 = n_sequels2.\n.output Answer\n\n"]}
{"id": 289, "answer": true, "completion": ".decl Has_field(Person:symbol, Field:symbol)\nHas_field(\"Tony Stark\", \"physics\").\nHas_field(\"Tony Stark\", \"engineering\").\nHas_field(\"Tony Stark\", \"mathematics\").\nHas_field(\"Tony Stark\", \"chemistry\").\nHas_field(\"Tony Stark\", \"biology\").\nHas_field(\"Tony Stark\", \"philosophy\").\nHas_field(\"Tony Stark\", \"art\").\nHas_field(\"Tony Stark\", \"music\").\nHas_field(\"Tony Stark\", \"literature\").\n.decl Answer()\nAnswer() :- Has_field(\"Tony Stark\", field1), Has_field(\"Tony Stark\", field2), field1 \\= field2.\n.output Answer\n\n", "completions": [".decl Has_field(Person:symbol, Field:symbol)\nHas_field(\"Tony Stark\", \"physics\").\nHas_field(\"Tony Stark\", \"engineering\").\nHas_field(\"Tony Stark\", \"mathematics\").\nHas_field(\"Tony Stark\", \"chemistry\").\nHas_field(\"Tony Stark\", \"biology\").\nHas_field(\"Tony Stark\", \"philosophy\").\nHas_field(\"Tony Stark\", \"art\").\nHas_field(\"Tony Stark\", \"music\").\nHas_field(\"Tony Stark\", \"literature\").\n.decl Answer()\nAnswer() :- Has_field(\"Tony Stark\", field1), Has_field(\"Tony Stark\", field2), field1 \\= field2.\n.output Answer\n\n"]}
{"id": 290, "answer": true, "completion": ".decl Has_driver_license(Person:symbol)\nHas_driver_license(\"John\").\nHas_driver_license(\"Mary\").\n.decl Works_in_transport_of(Person:symbol, Transport:symbol)\nWorks_in_transport_of(\"John\", \"aviation fuel\").\nWorks_in_transport_of(\"Mary\", \"aviation fuel\").\n.decl Answer()\nAnswer() :- Has_driver_license(person), Works_in_transport_of(person, \"aviation fuel\").\n.output Answer\n\n", "completions": [".decl Has_driver_license(Person:symbol)\nHas_driver_license(\"John\").\nHas_driver_license(\"Mary\").\n.decl Works_in_transport_of(Person:symbol, Transport:symbol)\nWorks_in_transport_of(\"John\", \"aviation fuel\").\nWorks_in_transport_of(\"Mary\", \"aviation fuel\").\n.decl Answer()\nAnswer() :- Has_driver_license(person), Works_in_transport_of(person, \"aviation fuel\").\n.output Answer\n\n"]}
{"id": 291, "answer": true, "completion": ".decl Has_n_gold_medals(Country:symbol, N_gold_medals:float)\nHas_n_gold_medals(\"United States\", 10).\nHas_n_gold_medals(\"Soviet Union\", 8).\nHas_n_gold_medals(\"Great Britain\", 8).\nHas_n_gold_medals(\"France\", 7).\nHas_n_gold_medals(\"Germany\", 5).\nHas_n_gold_medals(\"Italy\", 4).\nHas_n_gold_medals(\"Sweden\", 4).\nHas_n_gold_medals(\"Hungary\", 2).\nHas_n_gold_medals(\"Australia\", 2).\nHas_n_gold_medals(\"Japan\", 2).\nHas_n_gold_medals(\"Canada\", 1).\nHas_n_gold_medals(\"Romania\", 1).\nHas_n_gold_medals(\"Netherlands\", 1).\nHas_n_gold_medals(\"Spain\", 1).\nHas_n_gold_medals(\"Bulgaria\", 0).\nHas_n_gold_medals(\"Cuba\", 0).\nHas_n_gold_medals(\"Ethiopia\", 0).\nHas_n_gold_medals(\"Kenya\", 0).\nHas_n_gold_medals(\"South Korea\", 0).\nHas_n_gold_medals(\"Switzerland\", 0).\nHas_n_gold_medals(\"United Arab Emirates\", 0).\n.decl Answer()\nAnswer() :- Has_n_gold_medals(\"United States\", n_gold_medals1), Has_n_gold_medals(\"Soviet Union\", n_gold_medals2), n_gold_medals1 > n_gold_medals2.\n.output Answer\n\n", "completions": [".decl Has_n_gold_medals(Country:symbol, N_gold_medals:float)\nHas_n_gold_medals(\"United States\", 10).\nHas_n_gold_medals(\"Soviet Union\", 8).\nHas_n_gold_medals(\"Great Britain\", 8).\nHas_n_gold_medals(\"France\", 7).\nHas_n_gold_medals(\"Germany\", 5).\nHas_n_gold_medals(\"Italy\", 4).\nHas_n_gold_medals(\"Sweden\", 4).\nHas_n_gold_medals(\"Hungary\", 2).\nHas_n_gold_medals(\"Australia\", 2).\nHas_n_gold_medals(\"Japan\", 2).\nHas_n_gold_medals(\"Canada\", 1).\nHas_n_gold_medals(\"Romania\", 1).\nHas_n_gold_medals(\"Netherlands\", 1).\nHas_n_gold_medals(\"Spain\", 1).\nHas_n_gold_medals(\"Bulgaria\", 0).\nHas_n_gold_medals(\"Cuba\", 0).\nHas_n_gold_medals(\"Ethiopia\", 0).\nHas_n_gold_medals(\"Kenya\", 0).\nHas_n_gold_medals(\"South Korea\", 0).\nHas_n_gold_medals(\"Switzerland\", 0).\nHas_n_gold_medals(\"United Arab Emirates\", 0).\n.decl Answer()\nAnswer() :- Has_n_gold_medals(\"United States\", n_gold_medals1), Has_n_gold_medals(\"Soviet Union\", n_gold_medals2), n_gold_medals1 > n_gold_medals2.\n.output Answer\n\n"]}
{"id": 292, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"open heart surgery\", \"January\").\nHappens_in_time(\"American Ballet Theatre's Swan Lake\", \"January\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"open heart surgery\", 1).\nHappens_every_n_months(\"American Ballet Theatre's Swan Lake\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"open heart surgery\", month), Happens_in_time(\"American Ballet Theatre's Swan Lake\", month), Happens_every_n_months(\"open heart surgery\", n_months1), Happens_every_n_months(\"American Ballet Theatre's Swan Lake\", n_months2), n_months1 < n_months2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"open heart surgery\", \"January\").\nHappens_in_time(\"American Ballet Theatre's Swan Lake\", \"January\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"open heart surgery\", 1).\nHappens_every_n_months(\"American Ballet Theatre's Swan Lake\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"open heart surgery\", month), Happens_in_time(\"American Ballet Theatre's Swan Lake\", month), Happens_every_n_months(\"open heart surgery\", n_months1), Happens_every_n_months(\"American Ballet Theatre's Swan Lake\", n_months2), n_months1 < n_months2.\n.output Answer\n\n"]}
{"id": 293, "answer": true, "completion": ".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"Yellow Pages\", 100).\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"phone book\", 1000).\n.decl Answer()\nAnswer() :- Has_n_pages(\"Yellow Pages\", n_pages1), Has_n_pages(\"phone book\", n_pages2), n_pages1 < n_pages2.\n.output Answer\n\n", "completions": [".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"Yellow Pages\", 100).\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"phone book\", 1000).\n.decl Answer()\nAnswer() :- Has_n_pages(\"Yellow Pages\", n_pages1), Has_n_pages(\"phone book\", n_pages2), n_pages1 < n_pages2.\n.output Answer\n\n"]}
{"id": 294, "answer": false, "completion": ".decl Served_on_the_Supreme_Court_of_the_United_States(Person:symbol)\nServed_on_the_Supreme_Court_of_the_United_States(\"Clarence Thomas\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Ruth Bader Ginsburg\").\nServed_on_the_Supreme_Court_of_the_United_States(\"John Paul Stevens\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Sandra Day O'Connor\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Antonin Scalia\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Anthony M. Kennedy\").\nServed_on_the_Supreme_Court_of_the_United_States(\"David H. Souter\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Clarence Thomas\").\nServed_on_the_Supreme_Court_of_the_United_States(\"John G. Roberts, Jr.\").\n.decl Answer()\nAnswer() :- Served_on_the_Supreme_Court_of_the_United_States(\"neanderthal\").\n.output Answer\n\n", "completions": [".decl Served_on_the_Supreme_Court_of_the_United_States(Person:symbol)\nServed_on_the_Supreme_Court_of_the_United_States(\"Clarence Thomas\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Ruth Bader Ginsburg\").\nServed_on_the_Supreme_Court_of_the_United_States(\"John Paul Stevens\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Sandra Day O'Connor\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Antonin Scalia\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Anthony M. Kennedy\").\nServed_on_the_Supreme_Court_of_the_United_States(\"David H. Souter\").\nServed_on_the_Supreme_Court_of_the_United_States(\"Clarence Thomas\").\nServed_on_the_Supreme_Court_of_the_United_States(\"John G. Roberts, Jr.\").\n.decl Answer()\nAnswer() :- Served_on_the_Supreme_Court_of_the_United_States(\"neanderthal\").\n.output Answer\n\n"]}
{"id": 295, "answer": true, "completion": ".decl Performed_by(Event:symbol, Band:symbol)\nPerformed_by(\"Nirvana\", \"Maroon 5\").\nPerformed_by(\"Nirvana\", \"The Beatles\").\nPerformed_by(\"Nirvana\", \"The Rolling Stones\").\nPerformed_by(\"Nirvana\", \"The Who\").\nPerformed_by(\"Nirvana\", \"The Kinks\").\nPerformed_by(\"Nirvana\", \"The Doors\").\nPerformed_by(\"Nirvana\", \"The Clash\").\nPerformed_by(\"Nirvana\", \"The Sex Pistols\").\nPerformed_by(\"Nirvana\", \"The Ramones\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nir", "completions": [".decl Performed_by(Event:symbol, Band:symbol)\nPerformed_by(\"Nirvana\", \"Maroon 5\").\nPerformed_by(\"Nirvana\", \"The Beatles\").\nPerformed_by(\"Nirvana\", \"The Rolling Stones\").\nPerformed_by(\"Nirvana\", \"The Who\").\nPerformed_by(\"Nirvana\", \"The Kinks\").\nPerformed_by(\"Nirvana\", \"The Doors\").\nPerformed_by(\"Nirvana\", \"The Clash\").\nPerformed_by(\"Nirvana\", \"The Sex Pistols\").\nPerformed_by(\"Nirvana\", \"The Ramones\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nirvana\", \"The Misfits\").\nPerformed_by(\"Nirvana\", \"The Pixies\").\nPerformed_by(\"Nirvana\", \"The Stooges\").\nPerformed_by(\"Nir"]}
{"id": 296, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Groundhog Day\", \"February\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"Groundhog Day\", \"Antarctica\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Groundhog Day\", time), Happens_in_location(\"Groundhog Day\", location), time = \"February\", location = \"Antarctica\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Groundhog Day\", \"February\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"Groundhog Day\", \"Antarctica\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Groundhog Day\", time), Happens_in_location(\"Groundhog Day\", location), time = \"February\", location = \"Antarctica\".\n.output Answer\n\n"]}
{"id": 297, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"helium\", 0.17).\n.decl Answer()\nAnswer() :- Has_density(\"helium\", density), density > 0.5.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"helium\", 0.17).\n.decl Answer()\nAnswer() :- Has_density(\"helium\", density), density > 0.5.\n.output Answer\n\n"]}
{"id": 298, "answer": false, "completion": ".decl Has_fuel_efficiency(Vehicle:symbol, Fuel_efficiency:float)\nHas_fuel_efficiency(\"car\", 0.5).\nHas_fuel_efficiency(\"bicycle\", 0.1).\n.decl Has_fuel_type(Vehicle:symbol, Fuel_type:symbol)\nHas_fuel_type(\"car\", \"petroleum jelly\").\nHas_fuel_type(\"bicycle\", \"batteries\").\n.decl Answer()\nAnswer() :- Has_fuel_efficiency(\"car\", fuel_efficiency), Has_fuel_type(\"car\", fuel_type), fuel_efficiency > 0.1.\n.output Answer\n\n", "completions": [".decl Has_fuel_efficiency(Vehicle:symbol, Fuel_efficiency:float)\nHas_fuel_efficiency(\"car\", 0.5).\nHas_fuel_efficiency(\"bicycle\", 0.1).\n.decl Has_fuel_type(Vehicle:symbol, Fuel_type:symbol)\nHas_fuel_type(\"car\", \"petroleum jelly\").\nHas_fuel_type(\"bicycle\", \"batteries\").\n.decl Answer()\nAnswer() :- Has_fuel_efficiency(\"car\", fuel_efficiency), Has_fuel_type(\"car\", fuel_type), fuel_efficiency > 0.1.\n.output Answer\n\n"]}
{"id": 299, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Seven Deadly Sins\", 7).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Seven Deadly Sins\", 7).\n.decl Answer()\nAnswer() :- Has_n_members(\"Seven Deadly Sins\", n_members), Has_n_members(\"greed\", n_members).\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Seven Deadly Sins\", 7).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Seven Deadly Sins\", 7).\n.decl Answer()\nAnswer() :- Has_n_members(\"Seven Deadly Sins\", n_members), Has_n_members(\"greed\", n_members).\n.output Answer\n\n"]}
{"id": 300, "answer": false, "completion": ".decl Wanted_fugitive(Person:symbol)\nWanted_fugitive(\"CEO of Nissan\").\n.decl Answer()\nAnswer() :- Wanted_fugitive(\"CEO of Nissan\").\n.output Answer\n\n", "completions": [".decl Wanted_fugitive(Person:symbol)\nWanted_fugitive(\"CEO of Nissan\").\n.decl Answer()\nAnswer() :- Wanted_fugitive(\"CEO of Nissan\").\n.output Answer\n\n"]}
{"id": 301, "answer": false, "completion": ".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"drag king\", \"male\").\n.decl Has_testosterone(Person:symbol, Testosterone:float)\nHas_testosterone(\"drag king\", 0.8).\n.decl Answer()\nAnswer() :- Has_gender(\"drag king\", gender), Has_testosterone(\"drag king\", testosterone), gender = \"male\", testosterone > 0.5.\n.output Answer\n\n", "completions": [".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"drag king\", \"male\").\n.decl Has_testosterone(Person:symbol, Testosterone:float)\nHas_testosterone(\"drag king\", 0.8).\n.decl Answer()\nAnswer() :- Has_gender(\"drag king\", gender), Has_testosterone(\"drag king\", testosterone), gender = \"male\", testosterone > 0.5.\n.output Answer\n\n"]}
{"id": 302, "answer": true, "completion": ".decl Lives_in_ocean(Animal:symbol)\nLives_in_ocean(\"crab\").\nLives_in_ocean(\"lobster\").\nLives_in_ocean(\"shrimp\").\n.decl Answer()\nAnswer() :- Lives_in_ocean(\"crab\"), Lives_in_ocean(\"lobster\"), Lives_in_ocean(\"shrimp\").\n.output Answer\n\n", "completions": [".decl Lives_in_ocean(Animal:symbol)\nLives_in_ocean(\"crab\").\nLives_in_ocean(\"lobster\").\nLives_in_ocean(\"shrimp\").\n.decl Answer()\nAnswer() :- Lives_in_ocean(\"crab\"), Lives_in_ocean(\"lobster\"), Lives_in_ocean(\"shrimp\").\n.output Answer\n\n"]}
{"id": 303, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Paul Bunyan\", 7).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Paul Bunyan\", 1000).\n.decl Answer()\nAnswer() :- Has_height(\"Paul Bunyan\", height), Has_weight(\"Paul Bunyan\", weight), height > weight.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Paul Bunyan\", 7).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Paul Bunyan\", 1000).\n.decl Answer()\nAnswer() :- Has_height(\"Paul Bunyan\", height), Has_weight(\"Paul Bunyan\", weight), height > weight.\n.output Answer\n\n"]}
{"id": 304, "answer": true, "completion": ".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"sunlight\", 0).\nHas_depth(\"Black Sea\", 1000).\n.decl Answer()\nAnswer() :- Has_depth(\"sunlight\", depth1), Has_depth(\"Black Sea\", depth2), depth1 < depth2.\n.output Answer\n\n", "completions": [".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"sunlight\", 0).\nHas_depth(\"Black Sea\", 1000).\n.decl Answer()\nAnswer() :- Has_depth(\"sunlight\", depth1), Has_depth(\"Black Sea\", depth2), depth1 < depth2.\n.output Answer\n\n"]}
{"id": 305, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"slingshot\", 0.1).\nHas_mass(\"artillery\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"slingshot\", mass1), Has_mass(\"artillery\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"slingshot\", 0.1).\nHas_mass(\"artillery\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"slingshot\", mass1), Has_mass(\"artillery\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 306, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"9/11\", \"September 2001\").\nHappens_in_time(\"don't ask don't tell\", \"September 2001\").\nHappens_in_time(\"don't ask don't tell\", \"January 2002\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"9/11\", time1), Happens_in_time(\"don't ask don't tell\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"9/11\", \"September 2001\").\nHappens_in_time(\"don't ask don't tell\", \"September 2001\").\nHappens_in_time(\"don't ask don't tell\", \"January 2002\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"9/11\", time1), Happens_in_time(\"don't ask don't tell\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 307, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Heracles famous labors\", 12).\n.decl Answer()\nAnswer() :- Has_n_members(\"Heracles famous labors\", n_members1), Has_n_members(\"baker's dozen\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Heracles famous labors\", 12).\n.decl Answer()\nAnswer() :- Has_n_members(\"Heracles famous labors\", n_members1), Has_n_members(\"baker's dozen\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 308, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thanksgiving\", \"November\").\n.decl Is_day_of_mourning(Event:symbol)\nIs_day_of_mourning(\"Thanksgiving\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thanksgiving\", month), Is_day_of_mourning(event), month = \"November\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thanksgiving\", \"November\").\n.decl Is_day_of_mourning(Event:symbol)\nIs_day_of_mourning(\"Thanksgiving\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thanksgiving\", month), Is_day_of_mourning(event), month = \"November\".\n.output Answer\n\n"]}
{"id": 309, "answer": true, "completion": ".decl Has_reign_length(Monarch:symbol, Length:float)\nHas_reign_length(\"Hapshetsut\", 20).\n.decl Answer()\nAnswer() :- Has_reign_length(\"Hapshetsut\", length), length > 10.\n.output Answer\n\n", "completions": [".decl Has_reign_length(Monarch:symbol, Length:float)\nHas_reign_length(\"Hapshetsut\", 20).\n.decl Answer()\nAnswer() :- Has_reign_length(\"Hapshetsut\", length), length > 10.\n.output Answer\n\n"]}
{"id": 310, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Golden Age of Piracy pirates\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Noah's Ark\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Golden Age of Piracy pirates\", n_members1), Has_n_members(\"Noah's Ark\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Golden Age of Piracy pirates\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Noah's Ark\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Golden Age of Piracy pirates\", n_members1), Has_n_members(\"Noah's Ark\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 311, "answer": true, "completion": ".decl Has_n_cans(Object:symbol, N_cans:float)\nHas_n_cans(\"Campbell's Soup\", 2).\n.decl Has_n_cans(Object:symbol, N_cans:float)\nHas_n_cans(\"hypertension\", 1).\n.decl Answer()\nAnswer() :- Has_n_cans(\"Campbell's Soup\", n_cans1), Has_n_cans(\"hypertension\", n_cans2), n_cans1 >= n_cans2.\n.output Answer\n\n", "completions": [".decl Has_n_cans(Object:symbol, N_cans:float)\nHas_n_cans(\"Campbell's Soup\", 2).\n.decl Has_n_cans(Object:symbol, N_cans:float)\nHas_n_cans(\"hypertension\", 1).\n.decl Answer()\nAnswer() :- Has_n_cans(\"Campbell's Soup\", n_cans1), Has_n_cans(\"hypertension\", n_cans2), n_cans1 >= n_cans2.\n.output Answer\n\n"]}
{"id": 312, "answer": false, "completion": ".decl Has_sales(Game:symbol, Sales:float)\nHas_sales(\"Metroid\", 1.5).\nHas_sales(\"Electronic Arts\", 1.5).\n.decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"Electronic Arts\", 1.5).\n.decl Answer()\nAnswer() :- Has_sales(\"Metroid\", sales), Has_profit(\"Electronic Arts\", profit), sales > profit.\n.output Answer\n\n", "completions": [".decl Has_sales(Game:symbol, Sales:float)\nHas_sales(\"Metroid\", 1.5).\nHas_sales(\"Electronic Arts\", 1.5).\n.decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"Electronic Arts\", 1.5).\n.decl Answer()\nAnswer() :- Has_sales(\"Metroid\", sales), Has_profit(\"Electronic Arts\", profit), sales > profit.\n.output Answer\n\n"]}
{"id": 313, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"snowboarding\", \"winter\").\nHappens_in_time(\"snowboarding\", \"spring\").\nHappens_in_time(\"snowboarding\", \"summer\").\nHappens_in_time(\"snowboarding\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"snowboarding\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"snowboarding\", \"winter\").\nHappens_in_time(\"snowboarding\", \"spring\").\nHappens_in_time(\"snowboarding\", \"summer\").\nHappens_in_time(\"snowboarding\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"snowboarding\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 314, "answer": true, "completion": ".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"fish\", 0.1).\nHas_depth(\"ocean\", 0.1).\nHas_depth(\"Bathypelagic Zone\", 0.1).\n.decl Answer()\nAnswer() :- Has_depth(\"fish\", depth1), Has_depth(\"ocean\", depth2), Has_depth(\"Bathypelagic Zone\", depth3), depth1 > depth2, depth1 > depth3.\n.output Answer\n\n", "completions": [".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"fish\", 0.1).\nHas_depth(\"ocean\", 0.1).\nHas_depth(\"Bathypelagic Zone\", 0.1).\n.decl Answer()\nAnswer() :- Has_depth(\"fish\", depth1), Has_depth(\"ocean\", depth2), Has_depth(\"Bathypelagic Zone\", depth3), depth1 > depth2, depth1 > depth3.\n.output Answer\n\n"]}
{"id": 315, "answer": false, "completion": ".decl Has_influence(Influence:symbol, Influenced:symbol)\nHas_influence(\"blues music\", \"Depeche Mode\").\n.decl Has_influence(Influence:symbol, Influenced:symbol)\nHas_influence(\"blues music\", \"The Beatles\").\n.decl Answer()\nAnswer() :- Has_influence(\"blues music\", influenced), Has_influence(\"Depeche Mode\", influenced).\n.output Answer\n\n", "completions": [".decl Has_influence(Influence:symbol, Influenced:symbol)\nHas_influence(\"blues music\", \"Depeche Mode\").\n.decl Has_influence(Influence:symbol, Influenced:symbol)\nHas_influence(\"blues music\", \"The Beatles\").\n.decl Answer()\nAnswer() :- Has_influence(\"blues music\", influenced), Has_influence(\"Depeche Mode\", influenced).\n.output Answer\n\n"]}
{"id": 316, "answer": false, "completion": ".decl Is_a_subclass(Class_A:symbol, Class_B:symbol)\nIs_a_subclass(\"lactobacillus\", \"bacteria\").\nIs_a_subclass(\"bacteria\", \"micro-organisms\").\nIs_a_subclass(\"micro-organisms\", \"organisms\").\nIs_a_subclass(\"organisms\", \"living-things\").\nIs_a_subclass(\"living-things\", \"things\").\nIs_a_subclass(\"things\", \"objects\").\n.decl Answer()\nAnswer() :- Is_a_subclass(\"lactobacillus\", class_A), Is_a_subclass(\"pickles\", class_B), class_A = class_B.\n.output Answer\n\n", "completions": [".decl Is_a_subclass(Class_A:symbol, Class_B:symbol)\nIs_a_subclass(\"lactobacillus\", \"bacteria\").\nIs_a_subclass(\"bacteria\", \"micro-organisms\").\nIs_a_subclass(\"micro-organisms\", \"organisms\").\nIs_a_subclass(\"organisms\", \"living-things\").\nIs_a_subclass(\"living-things\", \"things\").\nIs_a_subclass(\"things\", \"objects\").\n.decl Answer()\nAnswer() :- Is_a_subclass(\"lactobacillus\", class_A), Is_a_subclass(\"pickles\", class_B), class_A = class_B.\n.output Answer\n\n"]}
{"id": 317, "answer": false, "completion": ".decl Despises(Person:symbol, Group:symbol)\nDespises(\"King James I\", \"fairy beings\").\n.decl Answer()\nAnswer() :- Despises(\"King James I\", group).\n.output Answer\n\n", "completions": [".decl Despises(Person:symbol, Group:symbol)\nDespises(\"King James I\", \"fairy beings\").\n.decl Answer()\nAnswer() :- Despises(\"King James I\", group).\n.output Answer\n\n"]}
{"id": 318, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"US\", 300).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"dyslexia\", 200).\n.decl Answer()\nAnswer() :- Has_n_members(\"US\", n_members1), Has_n_members(\"dyslexia\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"US\", 300).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"dyslexia\", 200).\n.decl Answer()\nAnswer() :- Has_n_members(\"US\", n_members1), Has_n_members(\"dyslexia\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 319, "answer": false, "completion": ".decl Earns(Searcher:symbol, Earnings:float)\nEarns(\"Bing\", 0.5).\nEarns(\"Yahoo\", 0.4).\nEarns(\"Google\", 0.3).\nEarns(\"AOL\", 0.2).\nEarns(\"Ask\", 0.1).\n.decl Searches(Searcher:symbol, Searches:float)\nSearches(\"Bing\", 100).\nSearches(\"Yahoo\", 50).\nSearches(\"Google\", 20).\nSearches(\"AOL\", 10).\nSearches(\"Ask\", 5).\n.decl Answer()\nAnswer() :- Earns(searcher, earnings), Searches(searcher, searches), Earnings > searches.\n.output Answer\n\n", "completions": [".decl Earns(Searcher:symbol, Earnings:float)\nEarns(\"Bing\", 0.5).\nEarns(\"Yahoo\", 0.4).\nEarns(\"Google\", 0.3).\nEarns(\"AOL\", 0.2).\nEarns(\"Ask\", 0.1).\n.decl Searches(Searcher:symbol, Searches:float)\nSearches(\"Bing\", 100).\nSearches(\"Yahoo\", 50).\nSearches(\"Google\", 20).\nSearches(\"AOL\", 10).\nSearches(\"Ask\", 5).\n.decl Answer()\nAnswer() :- Earns(searcher, earnings), Searches(searcher, searches), Earnings > searches.\n.output Answer\n\n"]}
{"id": 320, "answer": false, "completion": ".decl Has_sodium(Food:symbol, Sodium:float)\nHas_sodium(\"olives\", 0.1).\n.decl Has_sodium(Food:symbol, Sodium:float)\nHas_sodium(\"salt\", 0).\n.decl Answer()\nAnswer() :- Has_sodium(\"olives\", sodium), Has_sodium(\"salt\", sodium2), sodium > sodium2.\n.output Answer\n\n", "completions": [".decl Has_sodium(Food:symbol, Sodium:float)\nHas_sodium(\"olives\", 0.1).\n.decl Has_sodium(Food:symbol, Sodium:float)\nHas_sodium(\"salt\", 0).\n.decl Answer()\nAnswer() :- Has_sodium(\"olives\", sodium), Has_sodium(\"salt\", sodium2), sodium > sodium2.\n.output Answer\n\n"]}
{"id": 321, "answer": false, "completion": ".decl Watched_TV(Person:symbol, TV_program:symbol)\nWatched_TV(\"Theodore Roosevelt\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William H. Taft\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William H. Taft\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"", "completions": [".decl Watched_TV(Person:symbol, TV_program:symbol)\nWatched_TV(\"Theodore Roosevelt\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William H. Taft\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William H. Taft\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"Theodore Roosevelt\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \"William McKinley\").\nWatched_TV(\"William H. Taft\", \""]}
{"id": 322, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Great Recession\", \"2007-2009\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"unemployment\", \"2007-2009\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Great Recession\", time), Happens_in_time(\"unemployment\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Great Recession\", \"2007-2009\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"unemployment\", \"2007-2009\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Great Recession\", time), Happens_in_time(\"unemployment\", time).\n.output Answer\n\n"]}
{"id": 323, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Grizzly Bears\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"occupants of Vellore Fort\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Grizzly Bears\", n_members1), Has_n_members(\"occupants of Vellore Fort\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Grizzly Bears\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"occupants of Vellore Fort\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Grizzly Bears\", n_members1), Has_n_members(\"occupants of Vellore Fort\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 324, "answer": false, "completion": ".decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"Ugly Betty\", 22).\n.decl Has_n_weeks(Show:symbol, N_weeks:float)\nHas_n_weeks(\"Ugly Betty\", 2).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Ugly Betty\", n_episodes), Has_n_weeks(\"Ugly Betty\", n_weeks), n_episodes <= n_weeks.\n.output Answer\n\n", "completions": [".decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"Ugly Betty\", 22).\n.decl Has_n_weeks(Show:symbol, N_weeks:float)\nHas_n_weeks(\"Ugly Betty\", 2).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Ugly Betty\", n_episodes), Has_n_weeks(\"Ugly Betty\", n_weeks), n_episodes <= n_weeks.\n.output Answer\n\n"]}
{"id": 325, "answer": false, "completion": ".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"Yucatan\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"Canada\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"India\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"China\").\n.decl Answer()\nAnswer() :- Located_in(\"snow leopard\", \"Yucatan\").\n.output Answer\n\n", "completions": [".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"Yucatan\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"Canada\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"India\").\n.decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"snow leopard\", \"China\").\n.decl Answer()\nAnswer() :- Located_in(\"snow leopard\", \"Yucatan\").\n.output Answer\n\n"]}
{"id": 326, "answer": false, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Pi\", 3).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"1980s China\", 1).\n.decl Answer()\nAnswer() :- Has_n_children(\"Pi\", n_children1), Has_n_children(\"1980s China\", n_children2), n_children1 >= n_children2.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Pi\", 3).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"1980s China\", 1).\n.decl Answer()\nAnswer() :- Has_n_children(\"Pi\", n_children1), Has_n_children(\"1980s China\", n_children2), n_children1 >= n_children2.\n.output Answer\n\n"]}
{"id": 327, "answer": true, "completion": ".decl Has_prevented_existential_crisis(Person:symbol, Has_prevented:bool)\nHas_prevented_existential_crisis(\"Dr. Strangelove\", true).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Str", "completions": [".decl Has_prevented_existential_crisis(Person:symbol, Has_prevented:bool)\nHas_prevented_existential_crisis(\"Dr. Strangelove\", true).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Strangelove\", false).\nHas_prevented_existential_crisis(\"Dr. Str"]}
{"id": 328, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"greyhound\", 48).\nHas_speed(\"greyhound bus\", 16).\n.decl Answer()\nAnswer() :- Has_speed(\"greyhound\", speed1), Has_speed(\"greyhound bus\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"greyhound\", 48).\nHas_speed(\"greyhound bus\", 16).\n.decl Answer()\nAnswer() :- Has_speed(\"greyhound\", speed1), Has_speed(\"greyhound bus\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 329, "answer": false, "completion": ".decl Is_part_of(Constellation:symbol, Animal:symbol)\nIs_part_of(\"Canis Major\", \"dog\").\nIs_part_of(\"Canis Major\", \"wolf\").\nIs_part_of(\"Canis Major\", \"jackal\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"jackal\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs", "completions": [".decl Is_part_of(Constellation:symbol, Animal:symbol)\nIs_part_of(\"Canis Major\", \"dog\").\nIs_part_of(\"Canis Major\", \"wolf\").\nIs_part_of(\"Canis Major\", \"jackal\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"jackal\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs_part_of(\"Canis Major\", \"greyhound\").\nIs_part_of(\"Canis Major\", \"coyote\").\nIs_part_of(\"Canis Major\", \"wolfhound\").\nIs_part_of(\"Canis Major\", \"fox\").\nIs_part_of(\"Canis Major\", \"dingo\").\nIs"]}
{"id": 330, "answer": true, "completion": ".decl Has_consent(Person:symbol, Consent:symbol)\nHas_consent(\"Snow White\", \"good\").\n.decl Answer()\nAnswer() :- Has_consent(\"Snow White\", consent), consent = \"good\".\n.output Answer\n\n", "completions": [".decl Has_consent(Person:symbol, Consent:symbol)\nHas_consent(\"Snow White\", \"good\").\n.decl Answer()\nAnswer() :- Has_consent(\"Snow White\", consent), consent = \"good\".\n.output Answer\n\n"]}
{"id": 331, "answer": false, "completion": ".decl Has_n_films(Event:symbol, N_films:float)\nHas_n_films(\"The Invisible Man\", 3).\nHas_n_films(\"Picnic at Hanging Rock\", 2).\n.decl Answer()\nAnswer() :- Has_n_films(\"The Invisible Man\", n_films1), Has_n_films(\"Picnic at Hanging Rock\", n_films2), n_films1 > n_films2.\n.output Answer\n\n", "completions": [".decl Has_n_films(Event:symbol, N_films:float)\nHas_n_films(\"The Invisible Man\", 3).\nHas_n_films(\"Picnic at Hanging Rock\", 2).\n.decl Answer()\nAnswer() :- Has_n_films(\"The Invisible Man\", n_films1), Has_n_films(\"Picnic at Hanging Rock\", n_films2), n_films1 > n_films2.\n.output Answer\n\n"]}
{"id": 332, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"bengal fox\", 0.5).\nHas_mass(\"Ryan Crouser\", 80).\n.decl Answer()\nAnswer() :- Has_mass(\"Ryan Crouser\", mass1), Has_mass(\"bengal fox\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"bengal fox\", 0.5).\nHas_mass(\"Ryan Crouser\", 80).\n.decl Answer()\nAnswer() :- Has_mass(\"Ryan Crouser\", mass1), Has_mass(\"bengal fox\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 333, "answer": true, "completion": ".decl Performs_live(Artist:symbol, Perfectly:bool)\nPerforms_live(\"Amy Winehouse\", true).\n.decl Answer()\nAnswer() :- Performs_live(\"Amy Winehouse\", true).\n.output Answer\n\n", "completions": [".decl Performs_live(Artist:symbol, Perfectly:bool)\nPerforms_live(\"Amy Winehouse\", true).\n.decl Answer()\nAnswer() :- Performs_live(\"Amy Winehouse\", true).\n.output Answer\n\n"]}
{"id": 334, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Peregrine falcon\", 200).\nHas_speed(\"Hurricane Harvey\", 150).\n.decl Answer()\nAnswer() :- Has_speed(\"Peregrine falcon\", speed1), Has_speed(\"Hurricane Harvey\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Peregrine falcon\", 200).\nHas_speed(\"Hurricane Harvey\", 150).\n.decl Answer()\nAnswer() :- Has_speed(\"Peregrine falcon\", speed1), Has_speed(\"Hurricane Harvey\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 335, "answer": true, "completion": ".decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Chinese\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Asian American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Asian\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity", "completions": [".decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Chinese\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Asian American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"Asian\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Chinese American\", \"American\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity"]}
{"id": 336, "answer": false, "completion": ".decl Has_n_syllables(Word:symbol, N_syllables:float)\nHas_n_syllables(\"haiku\", 5).\nHas_n_syllables(\"tweet\", 2).\n.decl Answer()\nAnswer() :- Has_n_syllables(\"haiku\", n_syllables1), Has_n_syllables(\"tweet\", n_syllables2), n_syllables1 <= n_syllables2.\n.output Answer\n\n", "completions": [".decl Has_n_syllables(Word:symbol, N_syllables:float)\nHas_n_syllables(\"haiku\", 5).\nHas_n_syllables(\"tweet\", 2).\n.decl Answer()\nAnswer() :- Has_n_syllables(\"haiku\", n_syllables1), Has_n_syllables(\"tweet\", n_syllables2), n_syllables1 <= n_syllables2.\n.output Answer\n\n"]}
{"id": 337, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"adult human skull\", 0.1).\nHas_volume(\"adult human birth canal\", 0.01).\n.decl Answer()\nAnswer() :- Has_volume(\"adult human skull\", volume1), Has_volume(\"adult human birth canal\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"adult human skull\", 0.1).\nHas_volume(\"adult human birth canal\", 0.01).\n.decl Answer()\nAnswer() :- Has_volume(\"adult human skull\", volume1), Has_volume(\"adult human birth canal\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 338, "answer": false, "completion": ".decl Has_box_office_revenue(Movie:symbol, Box_office_revenue:float)\nHas_box_office_revenue(\"King Kong (2005 film)\", 5.5).\n.decl Has_lead_actress(Movie:symbol, Actress:symbol)\nHas_lead_actress(\"King Kong (2005 film)\", \"Naomi Watts\").\n.decl Has_box_office_revenue(Movie:symbol, Box_office_revenue:float)\nHas_box_office_revenue(\"The Lord of the Rings: The Return of the King\", 11).\nHas_box_office_revenue(\"The Lord of the Rings: The Return of the King\", 11).\n.decl Has_lead_actress(Movie:symbol, Actress:symbol)\nHas_lead_actress(\"The Lord of the Rings: The Return of the King\", \"Elijah Wood\").\n.decl Answer()\nAnswer() :- Has_lead_actress(\"King Kong (2005 film)\", actress1), Has_lead_actress(\"The Lord of the Rings: The Return of the King\", actress2), Has_box_office_revenue(\"King Kong (2005 film)\", box_office_revenue1), Has_box_office_revenue(\"The Lord of the Rings: The Return of the King\", box_office_revenue2), box_office_revenue1 > box_office_revenue2.\n.output Answer\n\n\n", "completions": [".decl Has_box_office_revenue(Movie:symbol, Box_office_revenue:float)\nHas_box_office_revenue(\"King Kong (2005 film)\", 5.5).\n.decl Has_lead_actress(Movie:symbol, Actress:symbol)\nHas_lead_actress(\"King Kong (2005 film)\", \"Naomi Watts\").\n.decl Has_box_office_revenue(Movie:symbol, Box_office_revenue:float)\nHas_box_office_revenue(\"The Lord of the Rings: The Return of the King\", 11).\nHas_box_office_revenue(\"The Lord of the Rings: The Return of the King\", 11).\n.decl Has_lead_actress(Movie:symbol, Actress:symbol)\nHas_lead_actress(\"The Lord of the Rings: The Return of the King\", \"Elijah Wood\").\n.decl Answer()\nAnswer() :- Has_lead_actress(\"King Kong (2005 film)\", actress1), Has_lead_actress(\"The Lord of the Rings: The Return of the King\", actress2), Has_box_office_revenue(\"King Kong (2005 film)\", box_office_revenue1), Has_box_office_revenue(\"The Lord of the Rings: The Return of the King\", box_office_revenue2), box_office_revenue1 > box_office_revenue2.\n.output Answer\n\n\n"]}
{"id": 339, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"mollusk\", \"purple\").\n.decl Answer()\nAnswer() :- Has_color(\"mollusk\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"mollusk\", \"purple\").\n.decl Answer()\nAnswer() :- Has_color(\"mollusk\", color).\n.output Answer\n\n"]}
{"id": 340, "answer": true, "completion": ".decl Born_in_year(Person:symbol, Year:float)\nBorn_in_year(\"Anchovy\", 2020).\n.decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"US census\", 25).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"birth\", 1).\n.decl Answer()\nAnswer() :- Born_in_year(\"Anchovy\", year), Last_n_years(\"US census\", n_years), Happens_every_n_years(\"birth\", n_years1), year + n_years1 <= n_years.\n.output Answer\n\n", "completions": [".decl Born_in_year(Person:symbol, Year:float)\nBorn_in_year(\"Anchovy\", 2020).\n.decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"US census\", 25).\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"birth\", 1).\n.decl Answer()\nAnswer() :- Born_in_year(\"Anchovy\", year), Last_n_years(\"US census\", n_years), Happens_every_n_years(\"birth\", n_years1), year + n_years1 <= n_years.\n.output Answer\n\n"]}
{"id": 341, "answer": false, "completion": ".decl Has_altitude(Object:symbol, Altitude:float)\nHas_altitude(\"China\", 100).\nHas_altitude(\"France\", 200).\n.decl Has_unit(Object:symbol, Unit:symbol)\nHas_unit(\"China\", \"meters\").\nHas_unit(\"France\", \"meters\").\n.decl Has_conversion(Unit_A:symbol, Unit_B:symbol, Conversion:float)\nHas_conversion(\"meters\", \"feet\", 3.2808).\n.decl Answer()\nAnswer() :- Has_altitude(\"China\", altitude1), Has_unit(\"China\", unit1), Has_altitude(\"France\", altitude2), Has_unit(\"France\", unit2), Has_conversion(unit1, unit2, conversion), altitude1 * conversion =:= altitude2.\n.output Answer\n\n", "completions": [".decl Has_altitude(Object:symbol, Altitude:float)\nHas_altitude(\"China\", 100).\nHas_altitude(\"France\", 200).\n.decl Has_unit(Object:symbol, Unit:symbol)\nHas_unit(\"China\", \"meters\").\nHas_unit(\"France\", \"meters\").\n.decl Has_conversion(Unit_A:symbol, Unit_B:symbol, Conversion:float)\nHas_conversion(\"meters\", \"feet\", 3.2808).\n.decl Answer()\nAnswer() :- Has_altitude(\"China\", altitude1), Has_unit(\"China\", unit1), Has_altitude(\"France\", altitude2), Has_unit(\"France\", unit2), Has_conversion(unit1, unit2, conversion), altitude1 * conversion =:= altitude2.\n.output Answer\n\n"]}
{"id": 342, "answer": true, "completion": ".decl Has_length(Text:symbol, Length:float)\nHas_length(\"Lines on the Antiquity of Microbes\", 5).\nHas_length(\"haiku\", 5).\n.decl Answer()\nAnswer() :- Has_length(\"Lines on the Antiquity of Microbes\", length1), Has_length(\"haiku\", length2), length1 < length2.\n.output Answer\n\n", "completions": [".decl Has_length(Text:symbol, Length:float)\nHas_length(\"Lines on the Antiquity of Microbes\", 5).\nHas_length(\"haiku\", 5).\n.decl Answer()\nAnswer() :- Has_length(\"Lines on the Antiquity of Microbes\", length1), Has_length(\"haiku\", length2), length1 < length2.\n.output Answer\n\n"]}
{"id": 343, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant Pandas\", 4).\nHas_n_members(\"Metallica\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Giant Pandas\", n_members1), Has_n_members(\"Metallica\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant Pandas\", 4).\nHas_n_members(\"Metallica\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Giant Pandas\", n_members1), Has_n_members(\"Metallica\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 344, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"frost\", \"spring\").\nHappens_in_time(\"frost\", \"summer\").\nHappens_in_time(\"frost\", \"fall\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"frost\", 6).\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", month), Happens_every_n_months(\"frost\", n_months), In_season(month, season), n_months = 6.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"frost\", \"spring\").\nHappens_in_time(\"frost\", \"summer\").\nHappens_in_time(\"frost\", \"fall\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"frost\", 6).\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", month), Happens_every_n_months(\"frost\", n_months), In_season(month, season), n_months = 6.\n.output Answer\n\n"]}
{"id": 345, "answer": false, "completion": ".decl Is_president_of(Person:symbol, Country:symbol)\nIs_president_of(\"Cyril Ramaphosa\", \"South Africa\").\nIs_president_of(\"Donald Trump\", \"United States\").\nIs_president_of(\"Jens Stoltenberg\", \"Norway\").\nIs_president_of(\"Vladimir Putin\", \"Russia\").\n.decl Is_member_of(Country:symbol, Organization:symbol)\nIs_member_of(\"South Africa\", \"ANC\").\nIs_member_of(\"South Africa\", \"UN\").\nIs_member_of(\"Norway\", \"NATO\").\nIs_member_of(\"Russia\", \"NATO\").\n.decl Answer()\nAnswer() :- Is_president_of(\"Cyril Ramaphosa\", country), Is_member_of(country, organization), organization == \"NATO\".\n.output Answer\n\n", "completions": [".decl Is_president_of(Person:symbol, Country:symbol)\nIs_president_of(\"Cyril Ramaphosa\", \"South Africa\").\nIs_president_of(\"Donald Trump\", \"United States\").\nIs_president_of(\"Jens Stoltenberg\", \"Norway\").\nIs_president_of(\"Vladimir Putin\", \"Russia\").\n.decl Is_member_of(Country:symbol, Organization:symbol)\nIs_member_of(\"South Africa\", \"ANC\").\nIs_member_of(\"South Africa\", \"UN\").\nIs_member_of(\"Norway\", \"NATO\").\nIs_member_of(\"Russia\", \"NATO\").\n.decl Answer()\nAnswer() :- Is_president_of(\"Cyril Ramaphosa\", country), Is_member_of(country, organization), organization == \"NATO\".\n.output Answer\n\n"]}
{"id": 346, "answer": true, "completion": ".decl Is_artisan_made(Product:symbol)\nIs_artisan_made(\"twinkie\").\n.decl Answer()\nAnswer() :- Is_artisan_made(\"twinkie\").\n.output Answer\n\n", "completions": [".decl Is_artisan_made(Product:symbol)\nIs_artisan_made(\"twinkie\").\n.decl Answer()\nAnswer() :- Is_artisan_made(\"twinkie\").\n.output Answer\n\n"]}
{"id": 347, "answer": false, "completion": ".decl Born_near(Person:symbol, Place:symbol)\nBorn_near(\"Sean Connery\", \"Washington Monument\").\nBorn_near(\"Roger Moore\", \"Washington Monument\").\nBorn_near(\"Pierce Brosnan\", \"Washington Monument\").\nBorn_near(\"Daniel Craig\", \"Washington Monument\").\n.decl Answer()\nAnswer() :- Born_near(\"James Bond\", place), Born_near(person, place).\n.output Answer\n\n", "completions": [".decl Born_near(Person:symbol, Place:symbol)\nBorn_near(\"Sean Connery\", \"Washington Monument\").\nBorn_near(\"Roger Moore\", \"Washington Monument\").\nBorn_near(\"Pierce Brosnan\", \"Washington Monument\").\nBorn_near(\"Daniel Craig\", \"Washington Monument\").\n.decl Answer()\nAnswer() :- Born_near(\"James Bond\", place), Born_near(person, place).\n.output Answer\n\n"]}
{"id": 348, "answer": false, "completion": ".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"John\", \"hepatitis\").\n.decl Has_treatment(Disease:symbol, Treatment:symbol)\nHas_treatment(\"hepatitis\", \"tonsillectomy\").\n.decl Answer()\nAnswer() :- Has_disease(\"John\", disease), Has_treatment(disease, treatment).\n.output Answer\n\n", "completions": [".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"John\", \"hepatitis\").\n.decl Has_treatment(Disease:symbol, Treatment:symbol)\nHas_treatment(\"hepatitis\", \"tonsillectomy\").\n.decl Answer()\nAnswer() :- Has_disease(\"John\", disease), Has_treatment(disease, treatment).\n.output Answer\n\n"]}
{"id": 349, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"snowman\", 0.6).\nHas_density(\"ice\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"snowman\", density1), Has_density(\"ice\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"snowman\", 0.6).\nHas_density(\"ice\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"snowman\", density1), Has_density(\"ice\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 350, "answer": false, "completion": ".decl Has_lunch(Student:symbol, School:symbol)\nHas_lunch(\"John\", \"Harvard\").\nHas_lunch(\"John\", \"Princeton\").\nHas_lunch(\"John\", \"Yale\").\nHas_lunch(\"Mary\", \"Harvard\").\nHas_lunch(\"Mary\", \"Princeton\").\nHas_lunch(\"Mary\", \"Yale\").\nHas_lunch(\"Mary\", \"Stanford\").\nHas_lunch(\"Mary\", \"MIT\").\nHas_lunch(\"Mary\", \"Caltech\").\n.decl Answer()\nAnswer() :- Has_lunch(student, school), Has_lunch(student, school2), school != school2.\n.output Answer\n\n", "completions": [".decl Has_lunch(Student:symbol, School:symbol)\nHas_lunch(\"John\", \"Harvard\").\nHas_lunch(\"John\", \"Princeton\").\nHas_lunch(\"John\", \"Yale\").\nHas_lunch(\"Mary\", \"Harvard\").\nHas_lunch(\"Mary\", \"Princeton\").\nHas_lunch(\"Mary\", \"Yale\").\nHas_lunch(\"Mary\", \"Stanford\").\nHas_lunch(\"Mary\", \"MIT\").\nHas_lunch(\"Mary\", \"Caltech\").\n.decl Answer()\nAnswer() :- Has_lunch(student, school), Has_lunch(student, school2), school != school2.\n.output Answer\n\n"]}
{"id": 351, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"almond tree\", 10).\nHas_height(\"stool\", 2).\n.decl Answer()\nAnswer() :- Has_height(\"almond tree\", height1), Has_height(\"stool\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"almond tree\", 10).\nHas_height(\"stool\", 2).\n.decl Answer()\nAnswer() :- Has_height(\"almond tree\", height1), Has_height(\"stool\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 352, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Bonanza marathon\", \"January\").\nHappens_in_time(\"WWE Heat marathon\", \"January\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Bonanza marathon\", 3).\nHappens_every_n_months(\"WWE Heat marathon\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Bonanza marathon\", time1), Happens_in_time(\"WWE Heat marathon\", time2), Happens_every_n_months(\"Bonanza marathon\", n_months1), Happens_every_n_months(\"WWE Heat marathon\", n_months2), time1 < time2, n_months1 < n_months2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Bonanza marathon\", \"January\").\nHappens_in_time(\"WWE Heat marathon\", \"January\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Bonanza marathon\", 3).\nHappens_every_n_months(\"WWE Heat marathon\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Bonanza marathon\", time1), Happens_in_time(\"WWE Heat marathon\", time2), Happens_every_n_months(\"Bonanza marathon\", n_months1), Happens_every_n_months(\"WWE Heat marathon\", n_months2), time1 < time2, n_months1 < n_months2.\n.output Answer\n\n"]}
{"id": 353, "answer": false, "completion": ".decl Food(Food_name:symbol)\nFood(\"pineapple\").\nFood(\"banana\").\nFood(\"coconut\").\nFood(\"avocado\").\nFood(\"spam\").\n.decl Food_gross(Food_name:symbol)\nFood_gross(\"spam\").\n.decl Answer()\nAnswer() :- Food(\"pineapple\").\nAnswer() :- Food(\"banana\").\nAnswer() :- Food(\"coconut\").\nAnswer() :- Food(\"avocado\").\nAnswer() :- Food(\"spam\").\nAnswer() :- Food_gross(\"spam\").\n.output Answer\n\n", "completions": [".decl Food(Food_name:symbol)\nFood(\"pineapple\").\nFood(\"banana\").\nFood(\"coconut\").\nFood(\"avocado\").\nFood(\"spam\").\n.decl Food_gross(Food_name:symbol)\nFood_gross(\"spam\").\n.decl Answer()\nAnswer() :- Food(\"pineapple\").\nAnswer() :- Food(\"banana\").\nAnswer() :- Food(\"coconut\").\nAnswer() :- Food(\"avocado\").\nAnswer() :- Food(\"spam\").\nAnswer() :- Food_gross(\"spam\").\n.output Answer\n\n"]}
{"id": 354, "answer": true, "completion": ".decl Rides(Ride:symbol, Attraction:symbol)\nRides(\"Space Mountain\", \"Space Mountain\").\nRides(\"Space Mountain\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\n", "completions": [".decl Rides(Ride:symbol, Attraction:symbol)\nRides(\"Space Mountain\", \"Space Mountain\").\nRides(\"Space Mountain\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\nRides(\"Star Tours\", \"Star Tours\").\n"]}
{"id": 355, "answer": false, "completion": ".decl Has_diet(Person:symbol, Diet:symbol)\nHas_diet(\"Natalie Portman\", \"vegan\").\nHas_diet(\"Natalie Portman\", \"vegetarian\").\n.decl Has_preference(Person:symbol, Food:symbol)\nHas_preference(\"Natalie Portman\", \"Snickers bar\").\n.decl Answer()\nAnswer() :- Has_diet(\"Natalie Portman\", diet), Has_preference(\"Natalie Portman\", food), diet \\= \"vegan\", diet \\= \"vegetarian\", food \\= \"Snickers bar\".\n.output Answer\n\n", "completions": [".decl Has_diet(Person:symbol, Diet:symbol)\nHas_diet(\"Natalie Portman\", \"vegan\").\nHas_diet(\"Natalie Portman\", \"vegetarian\").\n.decl Has_preference(Person:symbol, Food:symbol)\nHas_preference(\"Natalie Portman\", \"Snickers bar\").\n.decl Answer()\nAnswer() :- Has_diet(\"Natalie Portman\", diet), Has_preference(\"Natalie Portman\", food), diet \\= \"vegan\", diet \\= \"vegetarian\", food \\= \"Snickers bar\".\n.output Answer\n\n"]}
{"id": 356, "answer": true, "completion": ".decl Has_license(Person:symbol, License:symbol)\nHas_license(\"child\", \"driver's license\").\nHas_license(\"person\", \"driver's license\").\n.decl Has_car(Person:symbol, Car:symbol)\nHas_car(\"child\", \"Mercedes-Benz\").\nHas_car(\"person\", \"Mercedes-Benz\").\n.decl Answer()\nAnswer() :- Has_license(\"child\", license), Has_car(\"child\", car), Has_license(\"person\", license), Has_car(\"person\", car).\n.output Answer\n\n", "completions": [".decl Has_license(Person:symbol, License:symbol)\nHas_license(\"child\", \"driver's license\").\nHas_license(\"person\", \"driver's license\").\n.decl Has_car(Person:symbol, Car:symbol)\nHas_car(\"child\", \"Mercedes-Benz\").\nHas_car(\"person\", \"Mercedes-Benz\").\n.decl Answer()\nAnswer() :- Has_license(\"child\", license), Has_car(\"child\", car), Has_license(\"person\", license), Has_car(\"person\", car).\n.output Answer\n\n"]}
{"id": 357, "answer": false, "completion": ".decl Has_intervals(Scale:symbol, Intervals:symbol)\nHas_intervals(\"Iwato\", \"1 2 3 5 6\").\nHas_intervals(\"Iwato\", \"1 2 3 5 7\").\n.decl Has_intervals(Scale:symbol, Intervals:symbol)\nHas_intervals(\"Iwato\", \"1 2 3 5 7\").\n.decl Answer()\nAnswer() :- Has_intervals(\"Iwato\", intervals1), Has_intervals(\"Iwato\", intervals2), intervals1 != intervals2.\n.output Answer\n\n", "completions": [".decl Has_intervals(Scale:symbol, Intervals:symbol)\nHas_intervals(\"Iwato\", \"1 2 3 5 6\").\nHas_intervals(\"Iwato\", \"1 2 3 5 7\").\n.decl Has_intervals(Scale:symbol, Intervals:symbol)\nHas_intervals(\"Iwato\", \"1 2 3 5 7\").\n.decl Answer()\nAnswer() :- Has_intervals(\"Iwato\", intervals1), Has_intervals(\"Iwato\", intervals2), intervals1 != intervals2.\n.output Answer\n\n"]}
{"id": 358, "answer": false, "completion": ".decl Has_image(Person:symbol, Image:symbol)\nHas_image(\"Stephen King\", \"clown\").\nHas_image(\"Stephen King\", \"scary\").\nHas_image(\"Stephen King\", \"fantasy\").\n.decl Has_image(Person:symbol, Image:symbol)\nHas_image(\"Stephen King fans\", \"clown\").\nHas_image(\"Stephen King fans\", \"scary\").\nHas_image(\"Stephen King fans\", \"fantasy\").\n.decl Answer()\nAnswer() :- Has_image(\"Stephen King fans\", image), Has_image(\"Stephen King\", image).\n.output Answer\n\n", "completions": [".decl Has_image(Person:symbol, Image:symbol)\nHas_image(\"Stephen King\", \"clown\").\nHas_image(\"Stephen King\", \"scary\").\nHas_image(\"Stephen King\", \"fantasy\").\n.decl Has_image(Person:symbol, Image:symbol)\nHas_image(\"Stephen King fans\", \"clown\").\nHas_image(\"Stephen King fans\", \"scary\").\nHas_image(\"Stephen King fans\", \"fantasy\").\n.decl Answer()\nAnswer() :- Has_image(\"Stephen King fans\", image), Has_image(\"Stephen King\", image).\n.output Answer\n\n"]}
{"id": 359, "answer": false, "completion": ".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Intel Core i7\", 799).\nHas_price(\"Intel Core i5\", 599).\nHas_price(\"Intel Core i3\", 399).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Core i7\", 799).\nHas_price(\"Intel Core i5\", 599).\nHas_price(\"Intel Core i3\", 399).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\n.decl Has_location(Location:symbol, Place:symbol)\nHas_location(\"McDonald's\", \"USA\").\nHas_location(\"McDonald's\", \"Canada\").\nHas_location(\"McDonald's\", \"Mexico\").\nHas_location(\"McDonald's\", \"France\").\nHas_location(\"McDonald's\", \"Germany\").\nHas_location(\"McDonald's\", \"Japan\").\nHas_location(\"McDonald's\", \"China\").\nHas_location(\"McDonald's\", \"UK\").\nHas_location(\"McDonald's\", \"Australia\").\nHas_location(\"McDonald's\", \"India\").\nHas_location(\"McDonald's\", \"South Korea\").\nHas_location(\"McDonald's\", \"Indonesia\").\nHas_location(\"McDonald's\", \"Brazil\").\nHas_location(\"McDonald's\", \"Russia\").\nHas_location(\"McDonald's\", \"Egypt\").\nHas_location(\"McDonald's\", \"Nigeria\").\nHas_location(\"McDonald's\", \"Vietnam\").\nHas_location(\"McDonald's\", \"Thailand\").\nHas_location(\"McDonald's\", \"Philippines\").\nHas_location(\"McDonald's\", \"Turkey\").\nHas_location(\"McDonald's\", \"Ukraine\").\nHas_location(\"McDonald's\", \"Pakistan\").\nHas_location(\"McDonald's\", \"Poland\").\nHas_location(\"McDonald's\", \"Saudi Arabia\").\nHas_location(\"McDonald's\", \"Colombia\").\nHas_location(\"McDonald's\", \"Malaysia\").\nHas_location(\"McDonald's\", \"Chile\").\nHas_location(\"McDonald's\", \"Singapore\").\nHas_location(\"McDonald's\", \"Peru\").\nHas_location(\"McDonald's\", \"UAE\").\nHas_location(\"McDonald's\", \"Kenya\").\nHas_location(\"McDonald's\", \"South Africa\").\nHas_location(\"McDonald's\", \"Argentina\").\nHas_location(\"McDonald's\", \"Egypt\").\nHas_location(\"McDonald's\", \"Morocco\").\nHas_location(\"McDonald's\", \"Algeria\").\nHas_location(\"McDonald's\", \"Tunisia\").\nHas_location(\"McDonald's\", \"Sudan\").\nHas_location(\"McDonald's\", \"Iran\").\nHas_location(\"McDonald's\", \"Iraq\").\nHas_location(\"McDonald's\", \"Afghanistan\").\nHas_location(\"McDonald's\", \"Pakistan\").\nHas_location(\"McDonald's\", \"Syria\").\nHas_location(\"", "completions": [".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Intel Core i7\", 799).\nHas_price(\"Intel Core i5\", 599).\nHas_price(\"Intel Core i3\", 399).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Core i7\", 799).\nHas_price(\"Intel Core i5\", 599).\nHas_price(\"Intel Core i3\", 399).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\nHas_price(\"Intel Pentium\", 199).\nHas_price(\"Intel Celeron\", 99).\nHas_price(\"Intel Xeon\", 1599).\n.decl Has_location(Location:symbol, Place:symbol)\nHas_location(\"McDonald's\", \"USA\").\nHas_location(\"McDonald's\", \"Canada\").\nHas_location(\"McDonald's\", \"Mexico\").\nHas_location(\"McDonald's\", \"France\").\nHas_location(\"McDonald's\", \"Germany\").\nHas_location(\"McDonald's\", \"Japan\").\nHas_location(\"McDonald's\", \"China\").\nHas_location(\"McDonald's\", \"UK\").\nHas_location(\"McDonald's\", \"Australia\").\nHas_location(\"McDonald's\", \"India\").\nHas_location(\"McDonald's\", \"South Korea\").\nHas_location(\"McDonald's\", \"Indonesia\").\nHas_location(\"McDonald's\", \"Brazil\").\nHas_location(\"McDonald's\", \"Russia\").\nHas_location(\"McDonald's\", \"Egypt\").\nHas_location(\"McDonald's\", \"Nigeria\").\nHas_location(\"McDonald's\", \"Vietnam\").\nHas_location(\"McDonald's\", \"Thailand\").\nHas_location(\"McDonald's\", \"Philippines\").\nHas_location(\"McDonald's\", \"Turkey\").\nHas_location(\"McDonald's\", \"Ukraine\").\nHas_location(\"McDonald's\", \"Pakistan\").\nHas_location(\"McDonald's\", \"Poland\").\nHas_location(\"McDonald's\", \"Saudi Arabia\").\nHas_location(\"McDonald's\", \"Colombia\").\nHas_location(\"McDonald's\", \"Malaysia\").\nHas_location(\"McDonald's\", \"Chile\").\nHas_location(\"McDonald's\", \"Singapore\").\nHas_location(\"McDonald's\", \"Peru\").\nHas_location(\"McDonald's\", \"UAE\").\nHas_location(\"McDonald's\", \"Kenya\").\nHas_location(\"McDonald's\", \"South Africa\").\nHas_location(\"McDonald's\", \"Argentina\").\nHas_location(\"McDonald's\", \"Egypt\").\nHas_location(\"McDonald's\", \"Morocco\").\nHas_location(\"McDonald's\", \"Algeria\").\nHas_location(\"McDonald's\", \"Tunisia\").\nHas_location(\"McDonald's\", \"Sudan\").\nHas_location(\"McDonald's\", \"Iran\").\nHas_location(\"McDonald's\", \"Iraq\").\nHas_location(\"McDonald's\", \"Afghanistan\").\nHas_location(\"McDonald's\", \"Pakistan\").\nHas_location(\"McDonald's\", \"Syria\").\nHas_location(\""]}
{"id": 360, "answer": true, "completion": ".decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"Rowe 550\", \"sailboat\").\nIs_a_type_of(\"Rowe 550\", \"sportboat\").\nIs_a_type_of(\"Rowe 550\", \"motorboat\").\nIs_a_type_of(\"Rowe 550\", \"sailboat\").\nIs_a_type_of(\"Rowe 550\", \"sportboat\").\nIs_a_type_of(\"Rowe 550\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sport", "completions": [".decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"Rowe 550\", \"sailboat\").\nIs_a_type_of(\"Rowe 550\", \"sportboat\").\nIs_a_type_of(\"Rowe 550\", \"motorboat\").\nIs_a_type_of(\"Rowe 550\", \"sailboat\").\nIs_a_type_of(\"Rowe 550\", \"sportboat\").\nIs_a_type_of(\"Rowe 550\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sportboat\", \"motorboat\").\nIs_a_type_of(\"motorboat\", \"sailboat\").\nIs_a_type_of(\"motorboat\", \"sportboat\").\nIs_a_type_of(\"motorboat\", \"motorboat\").\n.decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"sailboat\", \"sailboat\").\nIs_a_type_of(\"sailboat\", \"sportboat\").\nIs_a_type_of(\"sailboat\", \"motorboat\").\nIs_a_type_of(\"sportboat\", \"sailboat\").\nIs_a_type_of(\"sportboat\", \"sportboat\").\nIs_a_type_of(\"sport"]}
{"id": 361, "answer": true, "completion": ".decl Has_n_gilded_gramophones(Band:symbol, N_gramophones:float)\nHas_n_gilded_gramophones(\"Led Zeppelin\", 5).\n.decl Is_prime(N:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\nIs_prime(11).\nIs_prime(13).\nIs_prime(17).\nIs_prime(19).\nIs_prime(23).\nIs_prime(29).\nIs_prime(31).\nIs_prime(37).\nIs_prime(41).\nIs_prime(43).\nIs_prime(47).\nIs_prime(53).\nIs_prime(59).\nIs_prime(61).\nIs_prime(67).\nIs_prime(71).\nIs_prime(73).\nIs_prime(79).\nIs_prime(83).\nIs_prime(89).\nIs_prime(97).\n.decl Answer()\nAnswer() :- Has_n_gilded_gramophones(\"Led Zeppelin\", n_gramophones), Is_prime(n_gramophones).\n.output Answer\n\n", "completions": [".decl Has_n_gilded_gramophones(Band:symbol, N_gramophones:float)\nHas_n_gilded_gramophones(\"Led Zeppelin\", 5).\n.decl Is_prime(N:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\nIs_prime(11).\nIs_prime(13).\nIs_prime(17).\nIs_prime(19).\nIs_prime(23).\nIs_prime(29).\nIs_prime(31).\nIs_prime(37).\nIs_prime(41).\nIs_prime(43).\nIs_prime(47).\nIs_prime(53).\nIs_prime(59).\nIs_prime(61).\nIs_prime(67).\nIs_prime(71).\nIs_prime(73).\nIs_prime(79).\nIs_prime(83).\nIs_prime(89).\nIs_prime(97).\n.decl Answer()\nAnswer() :- Has_n_gilded_gramophones(\"Led Zeppelin\", n_gramophones), Is_prime(n_gramophones).\n.output Answer\n\n"]}
{"id": 362, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Robert Wadlow\", 2.72).\nHas_height(\"German Shepherd\", 0.9).\n.decl Answer()\nAnswer() :- Has_height(\"Robert Wadlow\", height1), Has_height(\"German Shepherd\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Robert Wadlow\", 2.72).\nHas_height(\"German Shepherd\", 0.9).\n.decl Answer()\nAnswer() :- Has_height(\"Robert Wadlow\", height1), Has_height(\"German Shepherd\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 363, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Great Pyramid of Giza\", 483.8).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"men\", 200).\n.decl Answer()\nAnswer() :- Has_length(\"Great Pyramid of Giza\", length), Has_n_members(\"men\", n_members), length / n_members >= 1.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Great Pyramid of Giza\", 483.8).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"men\", 200).\n.decl Answer()\nAnswer() :- Has_length(\"Great Pyramid of Giza\", length), Has_n_members(\"men\", n_members), length / n_members >= 1.\n.output Answer\n\n"]}
{"id": 364, "answer": false, "completion": ".decl Has_location(Tumor:symbol, Location:symbol)\nHas_location(\"lymphoma\", \"lymph nodes\").\n.decl Has_size(Tumor:symbol, Size:float)\nHas_size(\"lymphoma\", 1).\n.decl Answer()\nAnswer() :- Has_location(\"lymphoma\", location), Has_size(\"lymphoma\", size), location = \"lymph nodes\", size < 1.\n.output Answer\n\n", "completions": [".decl Has_location(Tumor:symbol, Location:symbol)\nHas_location(\"lymphoma\", \"lymph nodes\").\n.decl Has_size(Tumor:symbol, Size:float)\nHas_size(\"lymphoma\", 1).\n.decl Answer()\nAnswer() :- Has_location(\"lymphoma\", location), Has_size(\"lymphoma\", size), location = \"lymph nodes\", size < 1.\n.output Answer\n\n"]}
{"id": 365, "answer": false, "completion": ".decl Hosts(Show:symbol, Host:symbol)\nHosts(\"The Colbert Report\", \"Stephen Colbert\").\n.decl Answer()\nAnswer() :- Hosts(\"The Colbert Report\", host), Hosts(\"The Colbert Report\", host2), host != host2.\n.output Answer\n\n", "completions": [".decl Hosts(Show:symbol, Host:symbol)\nHosts(\"The Colbert Report\", \"Stephen Colbert\").\n.decl Answer()\nAnswer() :- Hosts(\"The Colbert Report\", host), Hosts(\"The Colbert Report\", host2), host != host2.\n.output Answer\n\n"]}
{"id": 366, "answer": false, "completion": ".decl Born_in_year(Person:symbol, Year:float)\nBorn_in_year(\"Tony Bennett\", 1926).\nBorn_in_year(\"Tony Bennett\", 1950).\nBorn_in_year(\"Tony Bennett\", 1980).\nBorn_in_year(\"Tony Bennett\", 2020).\n.decl Answer()\nAnswer() :- Born_in_year(\"Tony Bennett\", year), year >= 2020.\n.output Answer\n\n", "completions": [".decl Born_in_year(Person:symbol, Year:float)\nBorn_in_year(\"Tony Bennett\", 1926).\nBorn_in_year(\"Tony Bennett\", 1950).\nBorn_in_year(\"Tony Bennett\", 1980).\nBorn_in_year(\"Tony Bennett\", 2020).\n.decl Answer()\nAnswer() :- Born_in_year(\"Tony Bennett\", year), year >= 2020.\n.output Answer\n\n"]}
{"id": 367, "answer": false, "completion": ".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Easter Bunny\").\n.decl Answer()\nAnswer() :- Is_a_religion(\"Christianity\"), Is_a_religion(\"Easter Bunny\").\n.output Answer\n\n", "completions": [".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Easter Bunny\").\n.decl Answer()\nAnswer() :- Is_a_religion(\"Christianity\"), Is_a_religion(\"Easter Bunny\").\n.output Answer\n\n"]}
{"id": 368, "answer": false, "completion": ".decl Has_n_digits(Number:symbol, N_digits:float)\nHas_n_digits(\"1\", 1).\nHas_n_digits(\"2\", 1).\nHas_n_digits(\"3\", 1).\nHas_n_digits(\"4\", 1).\nHas_n_digits(\"5\", 1).\nHas_n_digits(\"6\", 1).\nHas_n_digits(\"7\", 1).\nHas_n_digits(\"8\", 1).\nHas_n_digits(\"9\", 1).\nHas_n_digits(\"10\", 2).\nHas_n_digits(\"11\", 2).\nHas_n_digits(\"12\", 2).\nHas_n_digits(\"13\", 2).\nHas_n_digits(\"14\", 2).\nHas_n_digits(\"15\", 2).\nHas_n_digits(\"16\", 2).\nHas_n_digits(\"17\", 2).\nHas_n_digits(\"18\", 2).\nHas_n_digits(\"19\", 2).\nHas_n_digits(\"20\", 3).\nHas_n_digits(\"21\", 3).\nHas_n_digits(\"22\", 3).\nHas_n_digits(\"23\", 3).\nHas_n_digits(\"24\", 3).\nHas_n_digits(\"25\", 3).\nHas_n_digits(\"26\", 3).\nHas_n_digits(\"27\", 3).\nHas_n_digits(\"28\", 3).\nHas_n_digits(\"29\", 3).\nHas_n_digits(\"30\", 3).\nHas_n_digits(\"31\", 3).\nHas_n_digits(\"32\", 3).\nHas_n_digits(\"33\", 3).\nHas_n_digits(\"34\", 3).\nHas_n_digits(\"35\", 3).\nHas_n_digits(\"36\", 3).\nHas_n_digits(\"37\", 3).\nHas_n_digits(\"38\", 3).\nHas_n_digits(\"39\", 3).\nHas_n_digits(\"40\", 4).\nHas_n_digits(\"41\", 4).\nHas_n_digits(\"42\", 4).\nHas_n_digits(\"43\", 4).\nHas_n_digits(\"44\", 4).\nHas_n_digits(\"45\", 4).\nHas_n_digits(\"46\", 4).\nHas_n_digits(\"47\", 4).\nHas_n_digits(\"48\", 4).\nHas_n_digits(\"49\", 4).\nHas_n_digits(\"50\", 4).\nHas_n_digits(\"51\", 4).\nHas_n_digits(\"52\", 4).\nHas_n_digits(\"53\", 4).\nHas_n_digits(\"54\", 4).\nHas_n_digits(\"55\", 4).\nHas_n_digits(\"56\", 4).\nHas_n_digits(\"57\", 4).\nHas_n_digits(\"58\", 4).\nHas_n_digits(\"59\", 4).\nHas_n_digits(\"60\", 4).\nHas_n_digits(\"61\", 4).\nHas_n_digits(\"62\", 4).\nHas_n_digits(\"63\", 4).\nHas_n_digits(\"64\", 4).\nHas_n_digits(\"65\",", "completions": [".decl Has_n_digits(Number:symbol, N_digits:float)\nHas_n_digits(\"1\", 1).\nHas_n_digits(\"2\", 1).\nHas_n_digits(\"3\", 1).\nHas_n_digits(\"4\", 1).\nHas_n_digits(\"5\", 1).\nHas_n_digits(\"6\", 1).\nHas_n_digits(\"7\", 1).\nHas_n_digits(\"8\", 1).\nHas_n_digits(\"9\", 1).\nHas_n_digits(\"10\", 2).\nHas_n_digits(\"11\", 2).\nHas_n_digits(\"12\", 2).\nHas_n_digits(\"13\", 2).\nHas_n_digits(\"14\", 2).\nHas_n_digits(\"15\", 2).\nHas_n_digits(\"16\", 2).\nHas_n_digits(\"17\", 2).\nHas_n_digits(\"18\", 2).\nHas_n_digits(\"19\", 2).\nHas_n_digits(\"20\", 3).\nHas_n_digits(\"21\", 3).\nHas_n_digits(\"22\", 3).\nHas_n_digits(\"23\", 3).\nHas_n_digits(\"24\", 3).\nHas_n_digits(\"25\", 3).\nHas_n_digits(\"26\", 3).\nHas_n_digits(\"27\", 3).\nHas_n_digits(\"28\", 3).\nHas_n_digits(\"29\", 3).\nHas_n_digits(\"30\", 3).\nHas_n_digits(\"31\", 3).\nHas_n_digits(\"32\", 3).\nHas_n_digits(\"33\", 3).\nHas_n_digits(\"34\", 3).\nHas_n_digits(\"35\", 3).\nHas_n_digits(\"36\", 3).\nHas_n_digits(\"37\", 3).\nHas_n_digits(\"38\", 3).\nHas_n_digits(\"39\", 3).\nHas_n_digits(\"40\", 4).\nHas_n_digits(\"41\", 4).\nHas_n_digits(\"42\", 4).\nHas_n_digits(\"43\", 4).\nHas_n_digits(\"44\", 4).\nHas_n_digits(\"45\", 4).\nHas_n_digits(\"46\", 4).\nHas_n_digits(\"47\", 4).\nHas_n_digits(\"48\", 4).\nHas_n_digits(\"49\", 4).\nHas_n_digits(\"50\", 4).\nHas_n_digits(\"51\", 4).\nHas_n_digits(\"52\", 4).\nHas_n_digits(\"53\", 4).\nHas_n_digits(\"54\", 4).\nHas_n_digits(\"55\", 4).\nHas_n_digits(\"56\", 4).\nHas_n_digits(\"57\", 4).\nHas_n_digits(\"58\", 4).\nHas_n_digits(\"59\", 4).\nHas_n_digits(\"60\", 4).\nHas_n_digits(\"61\", 4).\nHas_n_digits(\"62\", 4).\nHas_n_digits(\"63\", 4).\nHas_n_digits(\"64\", 4).\nHas_n_digits(\"65\","]}
{"id": 369, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"peas in a pod\", 8).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"commas\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"peas in a pod\", n_members1), Has_n_members(\"commas\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"peas in a pod\", 8).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"commas\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"peas in a pod\", n_members1), Has_n_members(\"commas\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 370, "answer": false, "completion": ".decl Is_ingredient_in(Ingredient:symbol, Recipe:symbol)\nIs_ingredient_in(\"egg\", \"french toast\").\nIs_ingredient_in(\"milk\", \"french toast\").\nIs_ingredient_in(\"butter\", \"french toast\").\nIs_ingredient_in(\"sugar\", \"french toast\").\nIs_ingredient_in(\"syrup\", \"french toast\").\n.decl Is_ingredient_in(Ingredient:symbol, Recipe:symbol)\nIs_ingredient_in(\"goat\", \"french toast\").\n.decl Answer()\nAnswer() :- Is_ingredient_in(\"goat\", \"french toast\").\n.output Answer\n\n", "completions": [".decl Is_ingredient_in(Ingredient:symbol, Recipe:symbol)\nIs_ingredient_in(\"egg\", \"french toast\").\nIs_ingredient_in(\"milk\", \"french toast\").\nIs_ingredient_in(\"butter\", \"french toast\").\nIs_ingredient_in(\"sugar\", \"french toast\").\nIs_ingredient_in(\"syrup\", \"french toast\").\n.decl Is_ingredient_in(Ingredient:symbol, Recipe:symbol)\nIs_ingredient_in(\"goat\", \"french toast\").\n.decl Answer()\nAnswer() :- Is_ingredient_in(\"goat\", \"french toast\").\n.output Answer\n\n"]}
{"id": 371, "answer": false, "completion": ".decl Is_similar_to(Person_A:symbol, Person_B:symbol)\nIs_similar_to(\"US Secretary of State\", \"administrative secretary of an office\").\n.decl Answer()\nAnswer() :- Is_similar_to(\"US Secretary of State\", person_b), Is_similar_to(\"administrative secretary of an office\", person_b).\n.output Answer\n\n", "completions": [".decl Is_similar_to(Person_A:symbol, Person_B:symbol)\nIs_similar_to(\"US Secretary of State\", \"administrative secretary of an office\").\n.decl Answer()\nAnswer() :- Is_similar_to(\"US Secretary of State\", person_b), Is_similar_to(\"administrative secretary of an office\", person_b).\n.output Answer\n\n"]}
{"id": 372, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dale Earnhardt Jr.\", 22).\n.decl Is_newbie(Person:symbol)\nIs_newbie(\"Dale Earnhardt Jr.\").\n.decl Answer()\nAnswer() :- Has_age(\"Dale Earnhardt Jr.\", age), age < 2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dale Earnhardt Jr.\", 22).\n.decl Is_newbie(Person:symbol)\nIs_newbie(\"Dale Earnhardt Jr.\").\n.decl Answer()\nAnswer() :- Has_age(\"Dale Earnhardt Jr.\", age), age < 2.\n.output Answer\n\n"]}
{"id": 373, "answer": true, "completion": ".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Ronda Rousey\", 3).\nHas_strength(\"X-Men's Colossus\", 2).\n.decl Answer()\nAnswer() :- Has_strength(\"Ronda Rousey\", strength1), Has_strength(\"X-Men's Colossus\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Ronda Rousey\", 3).\nHas_strength(\"X-Men's Colossus\", 2).\n.decl Answer()\nAnswer() :- Has_strength(\"Ronda Rousey\", strength1), Has_strength(\"X-Men's Colossus\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 374, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"DRL Racer X\", 0.8).\nHas_speed(\"Brooklyn Bridge\", 0.5).\n.decl Answer()\nAnswer() :- Has_speed(\"DRL Racer X\", speed1), Has_speed(\"Brooklyn Bridge\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"DRL Racer X\", 0.8).\nHas_speed(\"Brooklyn Bridge\", 0.5).\n.decl Answer()\nAnswer() :- Has_speed(\"DRL Racer X\", speed1), Has_speed(\"Brooklyn Bridge\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 375, "answer": false, "completion": ".decl Is_abstract(Art:symbol)\nIs_abstract(\"photography\").\n.decl Is_art(Art:symbol)\nIs_art(\"abstract art\").\n.decl Answer()\nAnswer() :- Is_abstract(art), Is_art(art).\n.output Answer\n\n", "completions": [".decl Is_abstract(Art:symbol)\nIs_abstract(\"photography\").\n.decl Is_art(Art:symbol)\nIs_art(\"abstract art\").\n.decl Answer()\nAnswer() :- Is_abstract(art), Is_art(art).\n.output Answer\n\n"]}
{"id": 376, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"titanic\", 300).\nHas_length(\"giant squid\", 30).\n.decl Answer()\nAnswer() :- Has_length(\"titanic\", length1), Has_length(\"giant squid\", length2), length1 > length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"titanic\", 300).\nHas_length(\"giant squid\", 30).\n.decl Answer()\nAnswer() :- Has_length(\"titanic\", length1), Has_length(\"giant squid\", length2), length1 > length2.\n.output Answer\n\n"]}
{"id": 377, "answer": true, "completion": ".decl Has_n_seasons(Show:symbol, N_seasons:float)\nHas_n_seasons(\"Supernatural\", 11).\nHas_n_seasons(\"The Vampire Diaries\", 8).\nHas_n_seasons(\"The Originals\", 4).\n.decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"Supernatural\", 220).\nHas_n_episodes(\"The Vampire Diaries\", 160).\nHas_n_episodes(\"The Originals\", 100).\n.decl Answer()\nAnswer() :- Has_n_seasons(\"Supernatural\", n_seasons1), Has_n_seasons(\"The Vampire Diaries\", n_seasons2), Has_n_seasons(\"The Originals\", n_seasons3), n_seasons1 > n_seasons2, n_seasons1 > n_seasons3.\nAnswer() :- Has_n_episodes(\"Supernatural\", n_episodes1), Has_n_episodes(\"The Vampire Diaries\", n_episodes2), Has_n_episodes(\"The Originals\", n_episodes3), n_episodes1 > n_episodes2, n_episodes1 > n_episodes3.\n.output Answer\n\n", "completions": [".decl Has_n_seasons(Show:symbol, N_seasons:float)\nHas_n_seasons(\"Supernatural\", 11).\nHas_n_seasons(\"The Vampire Diaries\", 8).\nHas_n_seasons(\"The Originals\", 4).\n.decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"Supernatural\", 220).\nHas_n_episodes(\"The Vampire Diaries\", 160).\nHas_n_episodes(\"The Originals\", 100).\n.decl Answer()\nAnswer() :- Has_n_seasons(\"Supernatural\", n_seasons1), Has_n_seasons(\"The Vampire Diaries\", n_seasons2), Has_n_seasons(\"The Originals\", n_seasons3), n_seasons1 > n_seasons2, n_seasons1 > n_seasons3.\nAnswer() :- Has_n_episodes(\"Supernatural\", n_episodes1), Has_n_episodes(\"The Vampire Diaries\", n_episodes2), Has_n_episodes(\"The Originals\", n_episodes3), n_episodes1 > n_episodes2, n_episodes1 > n_episodes3.\n.output Answer\n\n"]}
{"id": 378, "answer": false, "completion": ".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Eddie Murphy\", \"Murray Murphy\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eddie Murphy\", 53).\n.decl Answer()\nAnswer() :- Has_parent(\"Eddie Murphy\", parent), Has_age(parent, age), age > 53.\n.output Answer\n\n", "completions": [".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Eddie Murphy\", \"Murray Murphy\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eddie Murphy\", 53).\n.decl Answer()\nAnswer() :- Has_parent(\"Eddie Murphy\", parent), Has_age(parent, age), age > 53.\n.output Answer\n\n"]}
{"id": 379, "answer": true, "completion": ".decl Has_molecular_weight(Element:symbol, Molecular_weight:float)\nHas_molecular_weight(\"methane\", 16).\n.decl Answer()\nAnswer() :- Has_molecular_weight(\"methane\", molecular_weight), molecular_weight > 16.\n.output Answer\n\n", "completions": [".decl Has_molecular_weight(Element:symbol, Molecular_weight:float)\nHas_molecular_weight(\"methane\", 16).\n.decl Answer()\nAnswer() :- Has_molecular_weight(\"methane\", molecular_weight), molecular_weight > 16.\n.output Answer\n\n"]}
{"id": 380, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"frost\", \"September\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"September\", \"fall\").\nIn_season(\"September\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", month), In_season(month, season), season != \"fall\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"frost\", \"September\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"September\", \"fall\").\nIn_season(\"September\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", month), In_season(month, season), season != \"fall\".\n.output Answer\n\n"]}
{"id": 381, "answer": false, "completion": ".decl Located_in(Object:symbol, Location:symbol)\nLocated_in(\"mountain goats\", \"Mars\").\nLocated_in(\"Mount Sharp\", \"Mars\").\n.decl Answer()\nAnswer() :- Located_in(\"mountain goats\", location), Located_in(\"Mount Sharp\", location).\n.output Answer\n\n", "completions": [".decl Located_in(Object:symbol, Location:symbol)\nLocated_in(\"mountain goats\", \"Mars\").\nLocated_in(\"Mount Sharp\", \"Mars\").\n.decl Answer()\nAnswer() :- Located_in(\"mountain goats\", location), Located_in(\"Mount Sharp\", location).\n.output Answer\n\n"]}
{"id": 382, "answer": true, "completion": ".decl Voted_for(Person:symbol, Candidate:symbol)\nVoted_for(\"Felicity Huffman\", \"Mike DeWine\").\n.decl Answer()\nAnswer() :- Voted_for(\"Felicity Huffman\", \"Mike DeWine\").\n.output Answer\n\n", "completions": [".decl Voted_for(Person:symbol, Candidate:symbol)\nVoted_for(\"Felicity Huffman\", \"Mike DeWine\").\n.decl Answer()\nAnswer() :- Voted_for(\"Felicity Huffman\", \"Mike DeWine\").\n.output Answer\n\n"]}
{"id": 383, "answer": true, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Tony Bennett\", 5).\n.decl Has_n_wives(Person:symbol, N_wives:float)\nHas_n_wives(\"Tony Bennett\", 3).\n.decl Answer()\nAnswer() :- Has_n_children(\"Tony Bennett\", n_children), Has_n_wives(\"Tony Bennett\", n_wives), n_children > n_wives.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Tony Bennett\", 5).\n.decl Has_n_wives(Person:symbol, N_wives:float)\nHas_n_wives(\"Tony Bennett\", 3).\n.decl Answer()\nAnswer() :- Has_n_children(\"Tony Bennett\", n_children), Has_n_wives(\"Tony Bennett\", n_wives), n_children > n_wives.\n.output Answer\n\n"]}
{"id": 384, "answer": true, "completion": ".decl Has_n_letters(Word:symbol, N_letters:float)\nHas_n_letters(\"season\", 4).\nHas_n_letters(\"Survivor\", 7).\nHas_n_letters(\"Ancient Greek\", 11).\n.decl Answer()\nAnswer() :- Has_n_letters(\"season\", n_letters1), Has_n_letters(\"Survivor\", n_letters2), Has_n_letters(\"Ancient Greek\", n_letters3), n_letters1 < n_letters2, n_letters2 < n_letters3.\n.output Answer\n\n", "completions": [".decl Has_n_letters(Word:symbol, N_letters:float)\nHas_n_letters(\"season\", 4).\nHas_n_letters(\"Survivor\", 7).\nHas_n_letters(\"Ancient Greek\", 11).\n.decl Answer()\nAnswer() :- Has_n_letters(\"season\", n_letters1), Has_n_letters(\"Survivor\", n_letters2), Has_n_letters(\"Ancient Greek\", n_letters3), n_letters1 < n_letters2, n_letters2 < n_letters3.\n.output Answer\n\n"]}
{"id": 385, "answer": true, "completion": ".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"speaking\", 100).\n.decl Answer()\nAnswer() :- Has_distance(\"speaking\", distance), distance > 100.\n.output Answer\n\n", "completions": [".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"speaking\", 100).\n.decl Answer()\nAnswer() :- Has_distance(\"speaking\", distance), distance > 100.\n.output Answer\n\n"]}
{"id": 386, "answer": true, "completion": ".decl Is_essential_to(Object:symbol, Activity:symbol)\nIs_essential_to(\"grapes\", \"winemaking\").\n.decl Answer()\nAnswer() :- Is_essential_to(\"grapes\", activity).\n.output Answer\n\n", "completions": [".decl Is_essential_to(Object:symbol, Activity:symbol)\nIs_essential_to(\"grapes\", \"winemaking\").\n.decl Answer()\nAnswer() :- Is_essential_to(\"grapes\", activity).\n.output Answer\n\n"]}
{"id": 387, "answer": true, "completion": ".decl Has_bloom_date(Crop:symbol, Bloom_date:symbol)\nHas_bloom_date(\"wheat\", \"April\").\nHas_bloom_date(\"wheat\", \"May\").\n.decl Has_birth_date(Person:symbol, Birth_date:symbol)\nHas_birth_date(\"woman\", \"March\").\nHas_birth_date(\"woman\", \"April\").\nHas_birth_date(\"woman\", \"May\").\n.decl Answer()\nAnswer() :- Has_bloom_date(\"wheat\", bloom_date), Has_birth_date(\"woman\", birth_date), bloom_date < birth_date.\n.output Answer\n\n", "completions": [".decl Has_bloom_date(Crop:symbol, Bloom_date:symbol)\nHas_bloom_date(\"wheat\", \"April\").\nHas_bloom_date(\"wheat\", \"May\").\n.decl Has_birth_date(Person:symbol, Birth_date:symbol)\nHas_birth_date(\"woman\", \"March\").\nHas_birth_date(\"woman\", \"April\").\nHas_birth_date(\"woman\", \"May\").\n.decl Answer()\nAnswer() :- Has_bloom_date(\"wheat\", bloom_date), Has_birth_date(\"woman\", birth_date), bloom_date < birth_date.\n.output Answer\n\n"]}
{"id": 388, "answer": false, "completion": ".decl Has_n_nucleotides(Virus:symbol, N_nucleotides:float)\nHas_n_nucleotides(\"adenovirus\", 7).\n.decl Has_n_amino_acids(Virus:symbol, N_amino_acids:float)\nHas_n_amino_acids(\"adenovirus\", 7).\n.decl Answer()\nAnswer() :- Has_n_nucleotides(\"adenovirus\", n_nucleotides), Has_n_amino_acids(\"adenovirus\", n_amino_acids), n_nucleotides > n_amino_acids.\n.output Answer\n\n", "completions": [".decl Has_n_nucleotides(Virus:symbol, N_nucleotides:float)\nHas_n_nucleotides(\"adenovirus\", 7).\n.decl Has_n_amino_acids(Virus:symbol, N_amino_acids:float)\nHas_n_amino_acids(\"adenovirus\", 7).\n.decl Answer()\nAnswer() :- Has_n_nucleotides(\"adenovirus\", n_nucleotides), Has_n_amino_acids(\"adenovirus\", n_amino_acids), n_nucleotides > n_amino_acids.\n.output Answer\n\n"]}
{"id": 389, "answer": false, "completion": ".decl Has_character(Film:symbol, Character:symbol)\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Basil Hallward\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Dorian Gray\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian", "completions": [".decl Has_character(Film:symbol, Character:symbol)\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Basil Hallward\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Dorian Gray\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian Gray\", \"Lord Henry Wotton\").\nHas_character(\"The Picture of Dorian"]}
{"id": 390, "answer": false, "completion": ".decl Has_capacity(Stadium:symbol, Capacity:float)\nHas_capacity(\"Toyota stadium\", 100000).\n.decl Has_homelessness(State:symbol, Homelessness:float)\nHas_homelessness(\"Michigan\", 100000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Toyota stadium\", capacity), Has_homelessness(\"Michigan\", homelessness), capacity > homelessness.\n.output Answer\n\n", "completions": [".decl Has_capacity(Stadium:symbol, Capacity:float)\nHas_capacity(\"Toyota stadium\", 100000).\n.decl Has_homelessness(State:symbol, Homelessness:float)\nHas_homelessness(\"Michigan\", 100000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Toyota stadium\", capacity), Has_homelessness(\"Michigan\", homelessness), capacity > homelessness.\n.output Answer\n\n"]}
{"id": 391, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Arnold Schwarzenegger\", 1.8).\nHas_height(\"red fox\", 0.5).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Arnold Schwarzenegger picking up a red fox\", \"1967\").\n.decl Answer()\nAnswer() :- Has_height(\"Arnold Schwarzenegger\", height1), Has_height(\"red fox\", height2), Happens_in_time(\"Arnold Schwarzenegger picking up a red fox\", time), height1 < height2, time = \"1967\".\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Arnold Schwarzenegger\", 1.8).\nHas_height(\"red fox\", 0.5).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Arnold Schwarzenegger picking up a red fox\", \"1967\").\n.decl Answer()\nAnswer() :- Has_height(\"Arnold Schwarzenegger\", height1), Has_height(\"red fox\", height2), Happens_in_time(\"Arnold Schwarzenegger picking up a red fox\", time), height1 < height2, time = \"1967\".\n.output Answer\n\n"]}
{"id": 392, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Eid al-Fitr holiday\", \"June\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"July\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"August\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"September\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"October\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"November\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"December\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"January\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"February\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"March\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"April\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"May\").\n.decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"US Office\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Eid al-Fitr holiday\", month), Last_n_months(\"US Office\", n_months),  n_months >= 6.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Eid al-Fitr holiday\", \"June\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"July\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"August\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"September\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"October\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"November\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"December\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"January\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"February\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"March\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"April\").\nHappens_in_time(\"Eid al-Fitr holiday\", \"May\").\n.decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"US Office\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Eid al-Fitr holiday\", month), Last_n_months(\"US Office\", n_months),  n_months >= 6.\n.output Answer\n\n"]}
{"id": 393, "answer": false, "completion": ".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"Bill Clinton\", \"Auburn, New York\").\nLives_in(\"George Bush\", \"Auburn, New York\").\nLives_in(\"Al Gore\", \"Auburn, New York\").\nLives_in(\"George W. Bush\", \"Auburn, New York\").\nLives_in(\"Barack Obama\", \"Auburn, New York\").\n.decl Has_population(City:symbol, Population:float)\nHas_population(\"Auburn, New York\", 50000).\n.decl Answer()\nAnswer() :- Lives_in(\"Bill Clinton\", city), Lives_in(\"George Bush\", city), Lives_in(\"Al Gore\", city), Lives_in(\"George W. Bush\", city), Lives_in(\"Barack Obama\", city), Has_population(city, population), population > 50000.\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"Bill Clinton\", \"Auburn, New York\").\nLives_in(\"George Bush\", \"Auburn, New York\").\nLives_in(\"Al Gore\", \"Auburn, New York\").\nLives_in(\"George W. Bush\", \"Auburn, New York\").\nLives_in(\"Barack Obama\", \"Auburn, New York\").\n.decl Has_population(City:symbol, Population:float)\nHas_population(\"Auburn, New York\", 50000).\n.decl Answer()\nAnswer() :- Lives_in(\"Bill Clinton\", city), Lives_in(\"George Bush\", city), Lives_in(\"Al Gore\", city), Lives_in(\"George W. Bush\", city), Lives_in(\"Barack Obama\", city), Has_population(city, population), population > 50000.\n.output Answer\n\n"]}
{"id": 394, "answer": true, "completion": ".decl Parent(Parent:symbol, Child:symbol)\nParent(\"Richard III\", \"Edward IV\").\nParent(\"Richard III\", \"George Plantagenet\").\nParent(\"George Plantagenet\", \"Edward IV\").\n.decl Answer()\nAnswer() :- Parent(\"Richard III\", child), Parent(child, grandchild).\n.output Answer\n\n", "completions": [".decl Parent(Parent:symbol, Child:symbol)\nParent(\"Richard III\", \"Edward IV\").\nParent(\"Richard III\", \"George Plantagenet\").\nParent(\"George Plantagenet\", \"Edward IV\").\n.decl Answer()\nAnswer() :- Parent(\"Richard III\", child), Parent(child, grandchild).\n.output Answer\n\n"]}
{"id": 395, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"landslide\", \"1980\").\nHappens_in_time(\"landslide\", \"1984\").\nHappens_in_time(\"landslide\", \"1988\").\nHappens_in_time(\"landslide\", \"1992\").\nHappens_in_time(\"landslide\", \"1996\").\nHappens_in_time(\"landslide\", \"2000\").\nHappens_in_time(\"landslide\", \"2004\").\nHappens_in_time(\"landslide\", \"2008\").\nHappens_in_time(\"landslide\", \"2012\").\nHappens_in_time(\"landslide\", \"2016\").\nHappens_in_time(\"United States presidential election\", \"1980\").\nHappens_in_time(\"United States presidential election\", \"1984\").\nHappens_in_time(\"United States presidential election\", \"1988\").\nHappens_in_time(\"United States presidential election\", \"1992\").\nHappens_in_time(\"United States presidential election\", \"1996\").\nHappens_in_time(\"United States presidential election\", \"2000\").\nHappens_in_time(\"United States presidential election\", \"2004\").\nHappens_in_time(\"United States presidential election\", \"2008\").\nHappens_in_time(\"United States presidential election\", \"2012\").\nHappens_in_time(\"United States presidential election\", \"2016\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"landslide\", time1), Happens_in_time(\"United States presidential election\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"landslide\", \"1980\").\nHappens_in_time(\"landslide\", \"1984\").\nHappens_in_time(\"landslide\", \"1988\").\nHappens_in_time(\"landslide\", \"1992\").\nHappens_in_time(\"landslide\", \"1996\").\nHappens_in_time(\"landslide\", \"2000\").\nHappens_in_time(\"landslide\", \"2004\").\nHappens_in_time(\"landslide\", \"2008\").\nHappens_in_time(\"landslide\", \"2012\").\nHappens_in_time(\"landslide\", \"2016\").\nHappens_in_time(\"United States presidential election\", \"1980\").\nHappens_in_time(\"United States presidential election\", \"1984\").\nHappens_in_time(\"United States presidential election\", \"1988\").\nHappens_in_time(\"United States presidential election\", \"1992\").\nHappens_in_time(\"United States presidential election\", \"1996\").\nHappens_in_time(\"United States presidential election\", \"2000\").\nHappens_in_time(\"United States presidential election\", \"2004\").\nHappens_in_time(\"United States presidential election\", \"2008\").\nHappens_in_time(\"United States presidential election\", \"2012\").\nHappens_in_time(\"United States presidential election\", \"2016\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"landslide\", time1), Happens_in_time(\"United States presidential election\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 396, "answer": false, "completion": ".decl Has_depth(Location:symbol, Depth:float)\nHas_depth(\"Red Sea\", 4500).\n.decl Answer()\nAnswer() :- Has_depth(\"Red Sea\", depth), depth > 4500.\n.output Answer\n\n", "completions": [".decl Has_depth(Location:symbol, Depth:float)\nHas_depth(\"Red Sea\", 4500).\n.decl Answer()\nAnswer() :- Has_depth(\"Red Sea\", depth), depth > 4500.\n.output Answer\n\n"]}
{"id": 397, "answer": false, "completion": ".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Tom Cruise\", \"actor\").\nHas_occupation(\"Tom Cruise\", \"television producer\").\n.decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Auditing\", \"mental\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Tom Cruise\", occupation), Has_occupation(\"Auditing\", occupation).\n.output Answer\n\n", "completions": [".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Tom Cruise\", \"actor\").\nHas_occupation(\"Tom Cruise\", \"television producer\").\n.decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Auditing\", \"mental\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Tom Cruise\", occupation), Has_occupation(\"Auditing\", occupation).\n.output Answer\n\n"]}
{"id": 398, "answer": true, "completion": ".decl Listens(Person:symbol, Medium:symbol)\nListens(\"John Lennon\", \"compact discs\").\n.decl Answer()\nAnswer() :- Listens(\"John Lennon\", medium).\n.output Answer\n\n", "completions": [".decl Listens(Person:symbol, Medium:symbol)\nListens(\"John Lennon\", \"compact discs\").\n.decl Answer()\nAnswer() :- Listens(\"John Lennon\", medium).\n.output Answer\n\n"]}
{"id": 399, "answer": true, "completion": ".decl Was_prime_minister_of(Person:symbol, Country:symbol)\nWas_prime_minister_of(\"Margaret Thatcher\", \"UK\").\nWas_prime_minister_of(\"Stanley Baldwin\", \"UK\").\n.decl Was_prime_minister_before(Person:symbol, Person_before:symbol)\nWas_prime_minister_before(\"Margaret Thatcher\", \"Stanley Baldwin\").\n.decl Answer()\nAnswer() :- Was_prime_minister_of(\"Margaret Thatcher\", country), Was_prime_minister_before(\"Margaret Thatcher\", person_before), Was_prime_minister_of(person_before, country).\n.output Answer\n\n", "completions": [".decl Was_prime_minister_of(Person:symbol, Country:symbol)\nWas_prime_minister_of(\"Margaret Thatcher\", \"UK\").\nWas_prime_minister_of(\"Stanley Baldwin\", \"UK\").\n.decl Was_prime_minister_before(Person:symbol, Person_before:symbol)\nWas_prime_minister_before(\"Margaret Thatcher\", \"Stanley Baldwin\").\n.decl Answer()\nAnswer() :- Was_prime_minister_of(\"Margaret Thatcher\", country), Was_prime_minister_before(\"Margaret Thatcher\", person_before), Was_prime_minister_of(person_before, country).\n.output Answer\n\n"]}
{"id": 400, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Benito Mussolini\", 1.85).\nHas_height(\"Hafþór Björnsson\", 2.01).\n.decl Answer()\nAnswer() :- Has_height(\"Benito Mussolini\", height1), Has_height(\"Hafþór Björnsson\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Benito Mussolini\", 1.85).\nHas_height(\"Hafþór Björnsson\", 2.01).\n.decl Answer()\nAnswer() :- Has_height(\"Benito Mussolini\", height1), Has_height(\"Hafþór Björnsson\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 401, "answer": false, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"European wildcat\", \"black-tailed jackrabbit\").\n.decl Answer()\nAnswer() :- Eats(\"black-tailed jackrabbit\", animal), Eats(animal, \"European wildcat\").\n.output Answer\n\n", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"European wildcat\", \"black-tailed jackrabbit\").\n.decl Answer()\nAnswer() :- Eats(\"black-tailed jackrabbit\", animal), Eats(animal, \"European wildcat\").\n.output Answer\n\n"]}
{"id": 402, "answer": true, "completion": ".decl Is_named_after(City:symbol, Person:symbol)\nIs_named_after(\"Norman\", \"Ragnar Lodbrok\").\n.decl Answer()\nAnswer() :- Is_named_after(\"Norman\", person).\n.output Answer\n\n", "completions": [".decl Is_named_after(City:symbol, Person:symbol)\nIs_named_after(\"Norman\", \"Ragnar Lodbrok\").\n.decl Answer()\nAnswer() :- Is_named_after(\"Norman\", person).\n.output Answer\n\n"]}
{"id": 403, "answer": false, "completion": ".decl Has_latitude(Area:symbol, Latitude:float)\nHas_latitude(\"New York\", 40).\nHas_latitude(\"New York\", 41).\nHas_latitude(\"New York\", 42).\n.decl Answer()\nAnswer() :- Has_latitude(\"New York\", latitude), Has_latitude(\"New York\", latitude2), latitude != latitude2.\n.output Answer\n\n", "completions": [".decl Has_latitude(Area:symbol, Latitude:float)\nHas_latitude(\"New York\", 40).\nHas_latitude(\"New York\", 41).\nHas_latitude(\"New York\", 42).\n.decl Answer()\nAnswer() :- Has_latitude(\"New York\", latitude), Has_latitude(\"New York\", latitude2), latitude != latitude2.\n.output Answer\n\n"]}
{"id": 404, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Glen Beck\", 1).\nHas_n_members(\"Stephen Colbert\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Glen Beck and Stephen Colbert\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Glen Beck\", n_members1), Has_n_members(\"Stephen Colbert\", n_members2), Has_n_members(\"Glen Beck and Stephen Colbert\", n_members3), n_members1 + n_members2 = n_members3.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Glen Beck\", 1).\nHas_n_members(\"Stephen Colbert\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Glen Beck and Stephen Colbert\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Glen Beck\", n_members1), Has_n_members(\"Stephen Colbert\", n_members2), Has_n_members(\"Glen Beck and Stephen Colbert\", n_members3), n_members1 + n_members2 = n_members3.\n.output Answer\n\n"]}
{"id": 405, "answer": true, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Audi R8 V-10 Plus\", 300).\nHas_speed(\"sound barrier\", 1000).\n.decl Answer()\nAnswer() :- Has_speed(\"Audi R8 V-10 Plus\", speed1), Has_speed(\"sound barrier\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Audi R8 V-10 Plus\", 300).\nHas_speed(\"sound barrier\", 1000).\n.decl Answer()\nAnswer() :- Has_speed(\"Audi R8 V-10 Plus\", speed1), Has_speed(\"sound barrier\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 406, "answer": false, "completion": ".decl Has_lifespan(Animal:symbol, Lifespan:float)\nHas_lifespan(\"monkey\", 15).\nHas_lifespan(\"human being\", 80).\n.decl Answer()\nAnswer() :- Has_lifespan(\"monkey\", lifespan1), Has_lifespan(\"human being\", lifespan2), lifespan1 > lifespan2.\n.output Answer\n\n", "completions": [".decl Has_lifespan(Animal:symbol, Lifespan:float)\nHas_lifespan(\"monkey\", 15).\nHas_lifespan(\"human being\", 80).\n.decl Answer()\nAnswer() :- Has_lifespan(\"monkey\", lifespan1), Has_lifespan(\"human being\", lifespan2), lifespan1 > lifespan2.\n.output Answer\n\n"]}
{"id": 407, "answer": false, "completion": ".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBel", "completions": [".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBelieves_in(\"Bertrand Russell\", \"religion\").\nBel"]}
{"id": 408, "answer": false, "completion": ".decl Has_injury_level(Dance:symbol, Injury_level:float)\nHas_injury_level(\"waltz\", 0.1).\nHas_injury_level(\"slam dance\", 0.2).\n.decl Answer()\nAnswer() :- Has_injury_level(\"waltz\", injury_level1), Has_injury_level(\"slam dance\", injury_level2), injury_level1 < injury_level2.\n.output Answer\n\n", "completions": [".decl Has_injury_level(Dance:symbol, Injury_level:float)\nHas_injury_level(\"waltz\", 0.1).\nHas_injury_level(\"slam dance\", 0.2).\n.decl Answer()\nAnswer() :- Has_injury_level(\"waltz\", injury_level1), Has_injury_level(\"slam dance\", injury_level2), injury_level1 < injury_level2.\n.output Answer\n\n"]}
{"id": 409, "answer": false, "completion": ".decl Has_limbs(Animal:symbol, Limbs:symbol)\nHas_limbs(\"yeti\", \"prehensile\").\nHas_limbs(\"yeti\", \"non-prehensile\").\n.decl Has_limbs(Animal:symbol, Limbs:symbol)\nHas_limbs(\"yeti\", \"prehensile\").\nHas_limbs(\"yeti\", \"non-prehensile\").\n.decl Answer()\nAnswer() :- Has_limbs(\"yeti\", limbs), Has_limbs(\"yeti\", limbs).\n.output Answer\n\n", "completions": [".decl Has_limbs(Animal:symbol, Limbs:symbol)\nHas_limbs(\"yeti\", \"prehensile\").\nHas_limbs(\"yeti\", \"non-prehensile\").\n.decl Has_limbs(Animal:symbol, Limbs:symbol)\nHas_limbs(\"yeti\", \"prehensile\").\nHas_limbs(\"yeti\", \"non-prehensile\").\n.decl Answer()\nAnswer() :- Has_limbs(\"yeti\", limbs), Has_limbs(\"yeti\", limbs).\n.output Answer\n\n"]}
{"id": 410, "answer": true, "completion": ".decl Has_capacity(Room:symbol, Capacity:float)\nHas_capacity(\"Javits Center\", 60000).\nHas_capacity(\"United Nations Framework Convention on Climate Change\", 50000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Javits Center\", capacity1), Has_capacity(\"United Nations Framework Convention on Climate Change\", capacity2), capacity1 >= capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Room:symbol, Capacity:float)\nHas_capacity(\"Javits Center\", 60000).\nHas_capacity(\"United Nations Framework Convention on Climate Change\", 50000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Javits Center\", capacity1), Has_capacity(\"United Nations Framework Convention on Climate Change\", capacity2), capacity1 >= capacity2.\n.output Answer\n\n"]}
{"id": 411, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Operation Barbarossa\", \"1941\").\nHappens_in_time(\"Operation Barbarossa's last expedition\", \"1942\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"Operation Barbarossa\", \"Europe\").\nHappens_in_location(\"Operation Barbarossa's last expedition\", \"Africa\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Operation Barbarossa\", time), Happens_in_location(\"Operation Barbarossa's last expedition\", location), time = location.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Operation Barbarossa\", \"1941\").\nHappens_in_time(\"Operation Barbarossa's last expedition\", \"1942\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"Operation Barbarossa\", \"Europe\").\nHappens_in_location(\"Operation Barbarossa's last expedition\", \"Africa\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Operation Barbarossa\", time), Happens_in_location(\"Operation Barbarossa's last expedition\", location), time = location.\n.output Answer\n\n"]}
{"id": 412, "answer": false, "completion": ".decl Is_palindrome(Word:symbol)\nIs_palindrome(\"a\").\nIs_palindrome(\"b\").\nIs_palindrome(\"c\").\nIs_palindrome(\"d\").\nIs_palindrome(\"e\").\nIs_palindrome(\"f\").\nIs_palindrome(\"g\").\nIs_palindrome(\"h\").\nIs_palindrome(\"i\").\nIs_palindrome(\"j\").\nIs_palindrome(\"k\").\nIs_palindrome(\"l\").\nIs_palindrome(\"m\").\nIs_palindrome(\"n\").\nIs_palindrome(\"o\").\nIs_palindrome(\"p\").\nIs_palindrome(\"q\").\nIs_palindrome(\"r\").\nIs_palindrome(\"s\").\nIs_palindrome(\"t\").\nIs_palindrome(\"u\").\nIs_palindrome(\"v\").\nIs_palindrome(\"w\").\nIs_palindrome(\"x\").\nIs_palindrome(\"y\").\nIs_palindrome(\"z\").\nIs_palindrome(\"0\").\nIs_palindrome(\"1\").\nIs_palindrome(\"2\").\nIs_palindrome(\"3\").\nIs_palindrome(\"4\").\nIs_palindrome(\"5\").\nIs_palindrome(\"6\").\nIs_palindrome(\"7\").\nIs_palindrome(\"8\").\nIs_palindrome(\"9\").\n.decl Answer()\nAnswer() :- Is_palindrome(\"CAPTCHA\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\"), Is_palindrome(\"3\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\"), Is_palindrome(\"3\"), Is_palindrome(\"4\").\nAnswer() :- Is_", "completions": [".decl Is_palindrome(Word:symbol)\nIs_palindrome(\"a\").\nIs_palindrome(\"b\").\nIs_palindrome(\"c\").\nIs_palindrome(\"d\").\nIs_palindrome(\"e\").\nIs_palindrome(\"f\").\nIs_palindrome(\"g\").\nIs_palindrome(\"h\").\nIs_palindrome(\"i\").\nIs_palindrome(\"j\").\nIs_palindrome(\"k\").\nIs_palindrome(\"l\").\nIs_palindrome(\"m\").\nIs_palindrome(\"n\").\nIs_palindrome(\"o\").\nIs_palindrome(\"p\").\nIs_palindrome(\"q\").\nIs_palindrome(\"r\").\nIs_palindrome(\"s\").\nIs_palindrome(\"t\").\nIs_palindrome(\"u\").\nIs_palindrome(\"v\").\nIs_palindrome(\"w\").\nIs_palindrome(\"x\").\nIs_palindrome(\"y\").\nIs_palindrome(\"z\").\nIs_palindrome(\"0\").\nIs_palindrome(\"1\").\nIs_palindrome(\"2\").\nIs_palindrome(\"3\").\nIs_palindrome(\"4\").\nIs_palindrome(\"5\").\nIs_palindrome(\"6\").\nIs_palindrome(\"7\").\nIs_palindrome(\"8\").\nIs_palindrome(\"9\").\n.decl Answer()\nAnswer() :- Is_palindrome(\"CAPTCHA\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\"), Is_palindrome(\"3\").\nAnswer() :- Is_palindrome(\"CAPTCHA\"), Is_palindrome(\"C\"), Is_palindrome(\"A\"), Is_palindrome(\"P\"), Is_palindrome(\"T\"), Is_palindrome(\"C\"), Is_palindrome(\"H\"), Is_palindrome(\"A\"), Is_palindrome(\"1\"), Is_palindrome(\"2\"), Is_palindrome(\"3\"), Is_palindrome(\"4\").\nAnswer() :- Is_"]}
{"id": 413, "answer": true, "completion": ".decl Located_in(Location:symbol, Country:symbol)\nLocated_in(\"New York Stock Exchange\", \"United States\").\nLocated_in(\"Universal Music Group\", \"United States\").\nLocated_in(\"Universal Music Group\", \"Europe\").\n.decl Answer()\nAnswer() :- Located_in(\"New York Stock Exchange\", country1), Located_in(\"Universal Music Group\", country2), country1 != country2.\n.output Answer\n\n", "completions": [".decl Located_in(Location:symbol, Country:symbol)\nLocated_in(\"New York Stock Exchange\", \"United States\").\nLocated_in(\"Universal Music Group\", \"United States\").\nLocated_in(\"Universal Music Group\", \"Europe\").\n.decl Answer()\nAnswer() :- Located_in(\"New York Stock Exchange\", country1), Located_in(\"Universal Music Group\", country2), country1 != country2.\n.output Answer\n\n"]}
{"id": 414, "answer": false, "completion": ".decl Has_first_letter(Word:symbol, Letter:symbol)\nHas_first_letter(\"Lorem\", \"L\").\nHas_first_letter(\"ipsum\", \"i\").\nHas_first_letter(\"dolor\", \"d\").\nHas_first_letter(\"sit\", \"s\").\nHas_first_letter(\"amet\", \"a\").\n.decl Has_last_letter(Word:symbol, Letter:symbol)\nHas_last_letter(\"Lorem\", \"m\").\nHas_last_letter(\"ipsum\", \"m\").\nHas_last_letter(\"dolor\", \"r\").\nHas_last_letter(\"sit\", \"t\").\nHas_last_letter(\"amet\", \"t\").\n.decl Answer()\nAnswer() :- Has_first_letter(\"Lorem\", letter1), Has_last_letter(\"Lorem\", letter2), letter1 = letter2.\n.output Answer\n\n", "completions": [".decl Has_first_letter(Word:symbol, Letter:symbol)\nHas_first_letter(\"Lorem\", \"L\").\nHas_first_letter(\"ipsum\", \"i\").\nHas_first_letter(\"dolor\", \"d\").\nHas_first_letter(\"sit\", \"s\").\nHas_first_letter(\"amet\", \"a\").\n.decl Has_last_letter(Word:symbol, Letter:symbol)\nHas_last_letter(\"Lorem\", \"m\").\nHas_last_letter(\"ipsum\", \"m\").\nHas_last_letter(\"dolor\", \"r\").\nHas_last_letter(\"sit\", \"t\").\nHas_last_letter(\"amet\", \"t\").\n.decl Answer()\nAnswer() :- Has_first_letter(\"Lorem\", letter1), Has_last_letter(\"Lorem\", letter2), letter1 = letter2.\n.output Answer\n\n"]}
{"id": 415, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Amazon\", 100).\nHas_value(\"The Mona Lisa\", 1000000).\n.decl Answer()\nAnswer() :- Has_value(\"Amazon\", value1), Has_value(\"The Mona Lisa\", value2), value1 >= value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Amazon\", 100).\nHas_value(\"The Mona Lisa\", 1000000).\n.decl Answer()\nAnswer() :- Has_value(\"Amazon\", value1), Has_value(\"The Mona Lisa\", value2), value1 >= value2.\n.output Answer\n\n"]}
{"id": 416, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"stoning\", \"Somalia\").\nHappens_in_time(\"cleric\", \"Somalia\").\n.decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"cleric\", \"cleric\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"stoning\", time), Happens_in_time(\"cleric\", time), Is_a(\"cleric\", role).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"stoning\", \"Somalia\").\nHappens_in_time(\"cleric\", \"Somalia\").\n.decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"cleric\", \"cleric\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"stoning\", time), Happens_in_time(\"cleric\", time), Is_a(\"cleric\", role).\n.output Answer\n\n"]}
{"id": 417, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Kia Rio\", 5.5).\nHas_volume(\"Oval Office\", 35).\n.decl Answer()\nAnswer() :- Has_volume(\"Kia Rio\", volume1), Has_volume(\"Oval Office\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Kia Rio\", 5.5).\nHas_volume(\"Oval Office\", 35).\n.decl Answer()\nAnswer() :- Has_volume(\"Kia Rio\", volume1), Has_volume(\"Oval Office\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 418, "answer": true, "completion": ".decl Has_family_name(Person:symbol, Family_name:symbol)\nHas_family_name(\"João I\", \"Bragança\").\nHas_family_name(\"Maria I\", \"Bragança\").\nHas_family_name(\"João II\", \"Bragança\").\nHas_family_name(\"João III\", \"Bragança\").\nHas_family_name(\"João IV\", \"Bragança\").\nHas_family_name(\"Maria II\", \"Bragança\").\nHas_family_name(\"Maria III\", \"Bragança\").\nHas_family_name(\"Maria IV\", \"Bragança\").\nHas_family_name(\"João V\", \"Bragança\").\nHas_family_name(\"Maria I\", \"Toledo\").\nHas_family_name(\"João I\", \"Toledo\").\nHas_family_name(\"João II\", \"Toledo\").\nHas_family_name(\"João III\", \"Toledo\").\nHas_family_name(\"João IV\", \"Toledo\").\nHas_family_name(\"Maria II\", \"Toledo\").\nHas_family_name(\"Maria III\", \"Toledo\").\nHas_family_name(\"Maria IV\", \"Toledo\").\nHas_family_name(\"João V\", \"Toledo\").\n.decl Answer()\nAnswer() :- Has_family_name(\"João I\", family_name1), Has_family_name(\"Maria I\", family_name2), Has_family_name(\"João II\", family_name3), Has_family_name(\"João III\", family_name4), Has_family_name(\"João IV\", family_name5), Has_family_name(\"Maria II\", family_name6), Has_family_name(\"Maria III\", family_name7), Has_family_name(\"Maria IV\", family_name8), Has_family_name(\"João V\", family_name9), family_name1 = family_name2, family_name1 = family_name3, family_name1 = family_name4, family_name1 = family_name5, family_name1 = family_name6, family_name1 = family_name7, family_name1 = family_name8, family_name1 = family_name9.\n.output Answer\n\n", "completions": [".decl Has_family_name(Person:symbol, Family_name:symbol)\nHas_family_name(\"João I\", \"Bragança\").\nHas_family_name(\"Maria I\", \"Bragança\").\nHas_family_name(\"João II\", \"Bragança\").\nHas_family_name(\"João III\", \"Bragança\").\nHas_family_name(\"João IV\", \"Bragança\").\nHas_family_name(\"Maria II\", \"Bragança\").\nHas_family_name(\"Maria III\", \"Bragança\").\nHas_family_name(\"Maria IV\", \"Bragança\").\nHas_family_name(\"João V\", \"Bragança\").\nHas_family_name(\"Maria I\", \"Toledo\").\nHas_family_name(\"João I\", \"Toledo\").\nHas_family_name(\"João II\", \"Toledo\").\nHas_family_name(\"João III\", \"Toledo\").\nHas_family_name(\"João IV\", \"Toledo\").\nHas_family_name(\"Maria II\", \"Toledo\").\nHas_family_name(\"Maria III\", \"Toledo\").\nHas_family_name(\"Maria IV\", \"Toledo\").\nHas_family_name(\"João V\", \"Toledo\").\n.decl Answer()\nAnswer() :- Has_family_name(\"João I\", family_name1), Has_family_name(\"Maria I\", family_name2), Has_family_name(\"João II\", family_name3), Has_family_name(\"João III\", family_name4), Has_family_name(\"João IV\", family_name5), Has_family_name(\"Maria II\", family_name6), Has_family_name(\"Maria III\", family_name7), Has_family_name(\"Maria IV\", family_name8), Has_family_name(\"João V\", family_name9), family_name1 = family_name2, family_name1 = family_name3, family_name1 = family_name4, family_name1 = family_name5, family_name1 = family_name6, family_name1 = family_name7, family_name1 = family_name8, family_name1 = family_name9.\n.output Answer\n\n"]}
{"id": 419, "answer": true, "completion": ".decl Can_reproduce(Couple:symbol, Can_reproduce:bool)\nCan_reproduce(\"gay male couple\", false).\n.decl Answer()\nAnswer() :- Can_reproduce(\"gay male couple\", can_reproduce), can_reproduce == false.\n.output Answer\n\n", "completions": [".decl Can_reproduce(Couple:symbol, Can_reproduce:bool)\nCan_reproduce(\"gay male couple\", false).\n.decl Answer()\nAnswer() :- Can_reproduce(\"gay male couple\", can_reproduce), can_reproduce == false.\n.output Answer\n\n"]}
{"id": 420, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Yeti\", 2.5).\nHas_height(\"Andre the Giant\", 2.5).\n.decl Answer()\nAnswer() :- Has_height(\"Yeti\", height1), Has_height(\"Andre the Giant\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Yeti\", 2.5).\nHas_height(\"Andre the Giant\", 2.5).\n.decl Answer()\nAnswer() :- Has_height(\"Yeti\", height1), Has_height(\"Andre the Giant\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 421, "answer": false, "completion": ".decl Is_obscure(Author:symbol, Obscure:symbol)\nIs_obscure(\"Edgar Allan Poe\", \"yes\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Raven\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Cask of Amontillado\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Fall of the House of Usher\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Masque of the Red Death\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Murders in the Rue Morgue\").\n.decl Answer()\nAnswer() :- Is_author(\"Edgar Allan Poe\", author_of), Is_obscure(author_of, obscure).\n.output Answer\n\n", "completions": [".decl Is_obscure(Author:symbol, Obscure:symbol)\nIs_obscure(\"Edgar Allan Poe\", \"yes\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Raven\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Cask of Amontillado\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Fall of the House of Usher\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Masque of the Red Death\").\n.decl Is_author(Author:symbol, Author_of:symbol)\nIs_author(\"Edgar Allan Poe\", \"The Murders in the Rue Morgue\").\n.decl Answer()\nAnswer() :- Is_author(\"Edgar Allan Poe\", author_of), Is_obscure(author_of, obscure).\n.output Answer\n\n"]}
{"id": 422, "answer": true, "completion": ".decl Served_in_white_house(Person:symbol, Time:symbol)\nServed_in_white_house(\"Theodore Roosevelt\", \"Panic of 1907\").\n.decl Father_of(Person:symbol, Child:symbol)\nFather_of(\"Theodore Roosevelt\", \"Theodore Roosevelt Jr.\").\n.decl Answer()\nAnswer() :- Served_in_white_house(\"Theodore Roosevelt\", time), Father_of(\"Theodore Roosevelt\", child), Served_in_white_house(child, time).\n.output Answer\n\n", "completions": [".decl Served_in_white_house(Person:symbol, Time:symbol)\nServed_in_white_house(\"Theodore Roosevelt\", \"Panic of 1907\").\n.decl Father_of(Person:symbol, Child:symbol)\nFather_of(\"Theodore Roosevelt\", \"Theodore Roosevelt Jr.\").\n.decl Answer()\nAnswer() :- Served_in_white_house(\"Theodore Roosevelt\", time), Father_of(\"Theodore Roosevelt\", child), Served_in_white_house(child, time).\n.output Answer\n\n"]}
{"id": 423, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Apollo 13\", \"1968\").\nHappens_in_time(\"World War II\", \"1939\").\nHappens_in_time(\"World War II\", \"1945\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"World War II\", \"Europe\").\nHappens_in_place(\"World War II\", \"Pacific\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Apollo 13\", time), Happens_in_place(\"World War II\", place), Happens_in_time(\"World War II\", time), place == place.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Apollo 13\", \"1968\").\nHappens_in_time(\"World War II\", \"1939\").\nHappens_in_time(\"World War II\", \"1945\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"World War II\", \"Europe\").\nHappens_in_place(\"World War II\", \"Pacific\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Apollo 13\", time), Happens_in_place(\"World War II\", place), Happens_in_time(\"World War II\", time), place == place.\n.output Answer\n\n"]}
{"id": 424, "answer": false, "completion": ".decl Has_n_vertebrae(Animal:symbol, N_vertebrae:float)\nHas_n_vertebrae(\"human sacrum\", 7).\nHas_n_vertebrae(\"Alaskan Malamute\", 8).\n.decl Answer()\nAnswer() :- Has_n_vertebrae(\"human sacrum\", n_vertebrae1), Has_n_vertebrae(\"Alaskan Malamute\", n_vertebrae2), n_vertebrae1 > n_vertebrae2.\n.output Answer\n\n", "completions": [".decl Has_n_vertebrae(Animal:symbol, N_vertebrae:float)\nHas_n_vertebrae(\"human sacrum\", 7).\nHas_n_vertebrae(\"Alaskan Malamute\", 8).\n.decl Answer()\nAnswer() :- Has_n_vertebrae(\"human sacrum\", n_vertebrae1), Has_n_vertebrae(\"Alaskan Malamute\", n_vertebrae2), n_vertebrae1 > n_vertebrae2.\n.output Answer\n\n"]}
{"id": 425, "answer": true, "completion": ".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Josh Blue\", 60).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Josh Blue\", 1.8).\n.decl Has_n_legs(Person:symbol, N_legs:float)\nHas_n_legs(\"Josh Blue\", 2).\n.decl Has_n_arms(Person:symbol, N_arms:float)\nHas_n_arms(\"Josh Blue\", 2).\n.decl Answer()\nAnswer() :- Has_weight(\"Josh Blue\", weight), Has_height(\"Josh Blue\", height), Has_n_legs(\"Josh Blue\", n_legs), Has_n_arms(\"Josh Blue\", n_arms), weight > 50, height > 1.5, n_legs = 2, n_arms = 2.\n.output Answer\n\n", "completions": [".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Josh Blue\", 60).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Josh Blue\", 1.8).\n.decl Has_n_legs(Person:symbol, N_legs:float)\nHas_n_legs(\"Josh Blue\", 2).\n.decl Has_n_arms(Person:symbol, N_arms:float)\nHas_n_arms(\"Josh Blue\", 2).\n.decl Answer()\nAnswer() :- Has_weight(\"Josh Blue\", weight), Has_height(\"Josh Blue\", height), Has_n_legs(\"Josh Blue\", n_legs), Has_n_arms(\"Josh Blue\", n_arms), weight > 50, height > 1.5, n_legs = 2, n_arms = 2.\n.output Answer\n\n"]}
{"id": 426, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Evander Holyfield\", 50).\n.decl Has_age_record(Person:symbol, Age_record:float)\nHas_age_record(\"Evander Holyfield\", 49).\n.decl Answer()\nAnswer() :- Has_age(\"Evander Holyfield\", age), Has_age_record(\"Evander Holyfield\", age_record), age > age_record.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Evander Holyfield\", 50).\n.decl Has_age_record(Person:symbol, Age_record:float)\nHas_age_record(\"Evander Holyfield\", 49).\n.decl Answer()\nAnswer() :- Has_age(\"Evander Holyfield\", age), Has_age_record(\"Evander Holyfield\", age_record), age > age_record.\n.output Answer\n\n"]}
{"id": 427, "answer": true, "completion": ".decl Is_known_for(Person:symbol, Known_for:symbol)\nIs_known_for(\"Glenn Beck\", \"mild temper\").\n.decl Answer()\nAnswer() :- Is_known_for(\"Glenn Beck\", known_for).\n.output Answer\n\n", "completions": [".decl Is_known_for(Person:symbol, Known_for:symbol)\nIs_known_for(\"Glenn Beck\", \"mild temper\").\n.decl Answer()\nAnswer() :- Is_known_for(\"Glenn Beck\", known_for).\n.output Answer\n\n"]}
{"id": 428, "answer": false, "completion": ".decl Connects(Bone_A:symbol, Bone_B:symbol)\nConnects(\"sternum\", \"rib\").\nConnects(\"sternum\", \"ribcage\").\nConnects(\"sternum\", \"clavicle\").\nConnects(\"sternum\", \"scapula\").\nConnects(\"sternum\", \"sternoclavicular\").\nConnects(\"sternum\", \"acromioclavicular\").\nConnects(\"sternum\", \"manubrium\").\nConnects(\"sternum\", \"cervical vertebrae\").\nConnects(\"sternum\", \"lumbar vertebrae\").\nConnects(\"sternum\", \"sacrum\").\nConnects(\"sternum\", \"coccyx\").\nConnects(\"sternum\", \"rudiment of clavicle\").\nConnects(\"sternum\", \"rudiment of scapula\").\nConnects(\"sternum\", \"rudiment of manubrium\").\nConnects(\"sternum\", \"rudiment of sternoclavicular\").\nConnects(\"sternum\", \"rudiment of acromioclavicular\").\nConnects(\"sternum\", \"rudiment of rib\").\nConnects(\"sternum\", \"rudiment of ribcage\").\nConnects(\"sternum\", \"rudiment of lumbar vertebrae\").\nConnects(\"sternum\", \"rudiment of cervical vertebrae\").\nConnects(\"sternum\", \"rudiment of sacrum\").\nConnects(\"sternum\", \"rudiment of coccyx\").\n.decl Answer()\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rib\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"ribcage\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"clavicle\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"scapula\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"sternoclavicular\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"acromioclavicular\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"manubrium\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"cervical vertebrae\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"lumbar vertebrae\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"sacrum\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"coccyx\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rudiment of clavicle\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rudiment of scap", "completions": [".decl Connects(Bone_A:symbol, Bone_B:symbol)\nConnects(\"sternum\", \"rib\").\nConnects(\"sternum\", \"ribcage\").\nConnects(\"sternum\", \"clavicle\").\nConnects(\"sternum\", \"scapula\").\nConnects(\"sternum\", \"sternoclavicular\").\nConnects(\"sternum\", \"acromioclavicular\").\nConnects(\"sternum\", \"manubrium\").\nConnects(\"sternum\", \"cervical vertebrae\").\nConnects(\"sternum\", \"lumbar vertebrae\").\nConnects(\"sternum\", \"sacrum\").\nConnects(\"sternum\", \"coccyx\").\nConnects(\"sternum\", \"rudiment of clavicle\").\nConnects(\"sternum\", \"rudiment of scapula\").\nConnects(\"sternum\", \"rudiment of manubrium\").\nConnects(\"sternum\", \"rudiment of sternoclavicular\").\nConnects(\"sternum\", \"rudiment of acromioclavicular\").\nConnects(\"sternum\", \"rudiment of rib\").\nConnects(\"sternum\", \"rudiment of ribcage\").\nConnects(\"sternum\", \"rudiment of lumbar vertebrae\").\nConnects(\"sternum\", \"rudiment of cervical vertebrae\").\nConnects(\"sternum\", \"rudiment of sacrum\").\nConnects(\"sternum\", \"rudiment of coccyx\").\n.decl Answer()\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rib\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"ribcage\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"clavicle\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"scapula\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"sternoclavicular\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"acromioclavicular\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"manubrium\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"cervical vertebrae\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"lumbar vertebrae\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"sacrum\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"coccyx\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rudiment of clavicle\".\nAnswer() :- Connects(\"sternum\", bone1), Connects(bone1, bone2), bone2 = \"rudiment of scap"]}
{"id": 429, "answer": false, "completion": ".decl Can_transmit(Animal_A:symbol, Animal_B:symbol, Disease:symbol)\nCan_transmit(\"dog\", \"dog\", \"rabies\").\nCan_transmit(\"dog\", \"human\", \"rabies\").\nCan_transmit(\"human\", \"human\", \"rabies\").\nCan_transmit(\"human\", \"dog\", \"rabies\").\nCan_transmit(\"human\", \"rabbit\", \"rabies\").\nCan_transmit(\"rabbit\", \"rabbit\", \"rabies\").\nCan_transmit(\"rabbit\", \"human\", \"rabies\").\nCan_transmit(\"rabbit\", \"dog\", \"rabies\").\n.decl Answer()\nAnswer() :- Can_transmit(\"Snoopy\", animal, \"rabies\").\n.output Answer\n\n", "completions": [".decl Can_transmit(Animal_A:symbol, Animal_B:symbol, Disease:symbol)\nCan_transmit(\"dog\", \"dog\", \"rabies\").\nCan_transmit(\"dog\", \"human\", \"rabies\").\nCan_transmit(\"human\", \"human\", \"rabies\").\nCan_transmit(\"human\", \"dog\", \"rabies\").\nCan_transmit(\"human\", \"rabbit\", \"rabies\").\nCan_transmit(\"rabbit\", \"rabbit\", \"rabies\").\nCan_transmit(\"rabbit\", \"human\", \"rabies\").\nCan_transmit(\"rabbit\", \"dog\", \"rabies\").\n.decl Answer()\nAnswer() :- Can_transmit(\"Snoopy\", animal, \"rabies\").\n.output Answer\n\n"]}
{"id": 430, "answer": true, "completion": ".decl Works_in_publishing(Person:symbol)\nWorks_in_publishing(\"Buddy The Elf\").\n.decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Buddy The Elf\", \"Buddy The Elf\").\nKnows(\"Buddy The Elf\", \"Buddy The Elf's friend\").\nKnows(\"Buddy The Elf's friend\", \"Buddy The Elf\").\nKnows(\"Buddy The Elf's friend\", \"Buddy The Elf's friend\").\n.decl Answer()\nAnswer() :- Knows(\"Buddy The Elf\", person), Works_in_publishing(person).\n.output Answer\n\n", "completions": [".decl Works_in_publishing(Person:symbol)\nWorks_in_publishing(\"Buddy The Elf\").\n.decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"Buddy The Elf\", \"Buddy The Elf\").\nKnows(\"Buddy The Elf\", \"Buddy The Elf's friend\").\nKnows(\"Buddy The Elf's friend\", \"Buddy The Elf\").\nKnows(\"Buddy The Elf's friend\", \"Buddy The Elf's friend\").\n.decl Answer()\nAnswer() :- Knows(\"Buddy The Elf\", person), Works_in_publishing(person).\n.output Answer\n\n"]}
{"id": 431, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"apple\", \"red\").\nHas_color(\"pear\", \"green\").\nHas_color(\"pear\", \"yellow\").\nHas_color(\"pear\", \"red\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"apple\", \"apple\").\nHas_name(\"pear\", \"pear\").\n.decl Answer()\nAnswer() :- Has_color(\"pear\", color), Has_name(\"pear\", name), Has_name(\"apple\", name).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"apple\", \"red\").\nHas_color(\"pear\", \"green\").\nHas_color(\"pear\", \"yellow\").\nHas_color(\"pear\", \"red\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"apple\", \"apple\").\nHas_name(\"pear\", \"pear\").\n.decl Answer()\nAnswer() :- Has_color(\"pear\", color), Has_name(\"pear\", name), Has_name(\"apple\", name).\n.output Answer\n\n"]}
{"id": 432, "answer": true, "completion": ".decl Has_n_grams(Object:symbol, N_grams:float)\nHas_n_grams(\"zucchini\", 7).\n.decl Has_n_milligrams(Object:symbol, N_milligrams:float)\nHas_n_milligrams(\"potassium\", 400).\n.decl Answer()\nAnswer() :- Has_n_grams(\"zucchini\", grams), Has_n_milligrams(\"potassium\", milligrams), grams * 1000 > milligrams.\n.output Answer\n\n", "completions": [".decl Has_n_grams(Object:symbol, N_grams:float)\nHas_n_grams(\"zucchini\", 7).\n.decl Has_n_milligrams(Object:symbol, N_milligrams:float)\nHas_n_milligrams(\"potassium\", 400).\n.decl Answer()\nAnswer() :- Has_n_grams(\"zucchini\", grams), Has_n_milligrams(\"potassium\", milligrams), grams * 1000 > milligrams.\n.output Answer\n\n"]}
{"id": 433, "answer": false, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Oprah Winfrey\", \"Bugatti\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Oprah Winfrey\", 1).\n.decl Answer()\nAnswer() :- Owns(\"Oprah Winfrey\", \"Bugatti\"), Has_n_members(\"Oprah Winfrey\", n_members), n_members >= 12.\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Oprah Winfrey\", \"Bugatti\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Oprah Winfrey\", 1).\n.decl Answer()\nAnswer() :- Owns(\"Oprah Winfrey\", \"Bugatti\"), Has_n_members(\"Oprah Winfrey\", n_members), n_members >= 12.\n.output Answer\n\n"]}
{"id": 434, "answer": false, "completion": ".decl Has_party(Person:symbol, Party:symbol)\nHas_party(\"Ronald Reagan\", \"Republican Party\").\nHas_party(\"Jimmy Carter\", \"Democratic Party\").\nHas_party(\"Gerald Ford\", \"Republican Party\").\nHas_party(\"John F. Kennedy\", \"Democratic Party\").\nHas_party(\"John Nance Garner\", \"Democratic Party\").\nHas_party(\"Lyndon B. Johnson\", \"Democratic Party\").\nHas_party(\"Harry S. Truman\", \"Democratic Party\").\nHas_party(\"Dwight D. Eisenhower\", \"Republican Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party", "completions": [".decl Has_party(Person:symbol, Party:symbol)\nHas_party(\"Ronald Reagan\", \"Republican Party\").\nHas_party(\"Jimmy Carter\", \"Democratic Party\").\nHas_party(\"Gerald Ford\", \"Republican Party\").\nHas_party(\"John F. Kennedy\", \"Democratic Party\").\nHas_party(\"John Nance Garner\", \"Democratic Party\").\nHas_party(\"Lyndon B. Johnson\", \"Democratic Party\").\nHas_party(\"Harry S. Truman\", \"Democratic Party\").\nHas_party(\"Dwight D. Eisenhower\", \"Republican Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party\").\nHas_party(\"Adlai Stevenson\", \"Democratic Party"]}
{"id": 435, "answer": true, "completion": ".decl Last_name(Person:symbol, Last_name:symbol)\nLast_name(\"Henry Ford\", \"Ford\").\n.decl Answer()\nAnswer() :- Last_name(\"Henry Ford\", last_name), Last_name(person, last_name).\n.output Answer\n\n", "completions": [".decl Last_name(Person:symbol, Last_name:symbol)\nLast_name(\"Henry Ford\", \"Ford\").\n.decl Answer()\nAnswer() :- Last_name(\"Henry Ford\", last_name), Last_name(person, last_name).\n.output Answer\n\n"]}
{"id": 436, "answer": true, "completion": ".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Liberty Bell\", \"Philadelphia\").\n.decl Answer()\nAnswer() :- Is_in_location(\"Liberty Bell\", location), location = \"Philadelphia\".\n.output Answer\n\n", "completions": [".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Liberty Bell\", \"Philadelphia\").\n.decl Answer()\nAnswer() :- Is_in_location(\"Liberty Bell\", location), location = \"Philadelphia\".\n.output Answer\n\n"]}
{"id": 437, "answer": true, "completion": ".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"Monday Night Football\", 3).\nHas_duration(\"WWE Raw\", 2).\n.decl Happens_during(Event_A:symbol, Event_B:symbol)\nHappens_during(\"Monday Night Football\", \"WWE Raw\").\n.decl Answer()\nAnswer() :- Has_duration(\"Monday Night Football\", duration1), Has_duration(\"WWE Raw\", duration2), Happens_during(\"Monday Night Football\", \"WWE Raw\"), duration1 >= duration2.\n.output Answer\n\n", "completions": [".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"Monday Night Football\", 3).\nHas_duration(\"WWE Raw\", 2).\n.decl Happens_during(Event_A:symbol, Event_B:symbol)\nHappens_during(\"Monday Night Football\", \"WWE Raw\").\n.decl Answer()\nAnswer() :- Has_duration(\"Monday Night Football\", duration1), Has_duration(\"WWE Raw\", duration2), Happens_during(\"Monday Night Football\", \"WWE Raw\"), duration1 >= duration2.\n.output Answer\n\n"]}
{"id": 438, "answer": false, "completion": ".decl Attends_mass(Person:symbol, Mass:symbol)\nAttends_mass(\"John Wesley\", \"Sunday\").\nAttends_mass(\"John Wesley\", \"Christmas\").\nAttends_mass(\"John Wesley\", \"Easter\").\nAttends_mass(\"John Wesley\", \"Christmas Day\").\nAttends_mass(\"John Wesley\", \"Easter Day\").\nAttends_mass(\"John Wesley\", \"Christmas Eve\").\nAttends_mass(\"John Wesley\", \"Easter Eve\").\nAttends_mass(\"John Wesley\", \"Christmas Eve Mass\").\nAttends_mass(\"John Wesley\", \"Easter Eve Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Mass\").\nAttends_mass(\"John Wesley\", \"Easter Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter", "completions": [".decl Attends_mass(Person:symbol, Mass:symbol)\nAttends_mass(\"John Wesley\", \"Sunday\").\nAttends_mass(\"John Wesley\", \"Christmas\").\nAttends_mass(\"John Wesley\", \"Easter\").\nAttends_mass(\"John Wesley\", \"Christmas Day\").\nAttends_mass(\"John Wesley\", \"Easter Day\").\nAttends_mass(\"John Wesley\", \"Christmas Eve\").\nAttends_mass(\"John Wesley\", \"Easter Eve\").\nAttends_mass(\"John Wesley\", \"Christmas Eve Mass\").\nAttends_mass(\"John Wesley\", \"Easter Eve Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Mass\").\nAttends_mass(\"John Wesley\", \"Easter Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter Day Mass\").\nAttends_mass(\"John Wesley\", \"Christmas Day Mass\").\nAttends_mass(\"John Wesley\", \"Easter"]}
{"id": 439, "answer": true, "completion": ".decl Was_born(Person:symbol, Year:float)\nWas_born(\"Snoop Dogg\", 1971).\nWas_born(\"Tickle Me Elmo\", 1996).\n.decl Answer()\nAnswer() :- Was_born(\"Snoop Dogg\", year), Was_born(\"Tickle Me Elmo\", year2), year > year2.\n.output Answer\n\n", "completions": [".decl Was_born(Person:symbol, Year:float)\nWas_born(\"Snoop Dogg\", 1971).\nWas_born(\"Tickle Me Elmo\", 1996).\n.decl Answer()\nAnswer() :- Was_born(\"Snoop Dogg\", year), Was_born(\"Tickle Me Elmo\", year2), year > year2.\n.output Answer\n\n"]}
{"id": 440, "answer": false, "completion": ".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"Gypsy\", \"Romani people\").\n.decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"Gypsy\", \"non-Romani people\").\n.decl Answer()\nAnswer() :- Has_meaning(\"Gypsy\", meaning1), Has_meaning(\"Gypsy\", meaning2), meaning1 != meaning2.\n.output Answer\n\n", "completions": [".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"Gypsy\", \"Romani people\").\n.decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"Gypsy\", \"non-Romani people\").\n.decl Answer()\nAnswer() :- Has_meaning(\"Gypsy\", meaning1), Has_meaning(\"Gypsy\", meaning2), meaning1 != meaning2.\n.output Answer\n\n"]}
{"id": 441, "answer": true, "completion": ".decl Has_caliber(Object:symbol, Caliber:float)\nHas_caliber(\"Barry Burton\", 9).\nHas_caliber(\"Robert Downey Jr.\", 9).\n.decl Answer()\nAnswer() :- Has_caliber(\"Robert Downey Jr.\", caliber1), Has_caliber(\"Barry Burton\", caliber2), caliber1 = caliber2.\n.output Answer\n\n", "completions": [".decl Has_caliber(Object:symbol, Caliber:float)\nHas_caliber(\"Barry Burton\", 9).\nHas_caliber(\"Robert Downey Jr.\", 9).\n.decl Answer()\nAnswer() :- Has_caliber(\"Robert Downey Jr.\", caliber1), Has_caliber(\"Barry Burton\", caliber2), caliber1 = caliber2.\n.output Answer\n\n"]}
{"id": 442, "answer": true, "completion": ".decl Has_popular_vote(Candidate:symbol, Popular_vote:float)\nHas_popular_vote(\"Woodrow Wilson\", 49.4).\nHas_popular_vote(\"William Jennings Bryan\", 46.9).\nHas_popular_vote(\"Theodore Roosevelt\", 27.3).\nHas_popular_vote(\"Alton B. Parker\", 8.4).\nHas_popular_vote(\"William Howard Taft\", 8.3).\nHas_popular_vote(\"James S. Sherman\", 5.8).\nHas_popular_vote(\"George V. Johnson\", 2.1).\nHas_popular_vote(\"Walter L. Bryan\", 0.8).\nHas_popular_vote(\"Arthur E. Reimer\", 0.4).\n.decl Answer()\nAnswer() :- Has_popular_vote(\"Woodrow Wilson\", popular_vote1), Has_popular_vote(\"William Jennings Bryan\", popular_vote2), Has_popular_vote(\"Theodore Roosevelt\", popular_vote3), Has_popular_vote(\"Alton B. Parker\", popular_vote4), Has_popular_vote(\"William Howard Taft\", popular_vote5), Has_popular_vote(\"James S. Sherman\", popular_vote6), Has_popular_vote(\"George V. Johnson\", popular_vote7), Has_popular_vote(\"Walter L. Bryan\", popular_vote8), Has_popular_vote(\"Arthur E. Reimer\", popular_vote9), popular_vote1 > popular_vote2, popular_vote1 > popular_vote3, popular_vote1 > popular_vote4, popular_vote1 > popular_vote5, popular_vote1 > popular_vote6, popular_vote1 > popular_vote7, popular_vote1 > popular_vote8, popular_vote1 > popular_vote9.\n.output Answer\n\n", "completions": [".decl Has_popular_vote(Candidate:symbol, Popular_vote:float)\nHas_popular_vote(\"Woodrow Wilson\", 49.4).\nHas_popular_vote(\"William Jennings Bryan\", 46.9).\nHas_popular_vote(\"Theodore Roosevelt\", 27.3).\nHas_popular_vote(\"Alton B. Parker\", 8.4).\nHas_popular_vote(\"William Howard Taft\", 8.3).\nHas_popular_vote(\"James S. Sherman\", 5.8).\nHas_popular_vote(\"George V. Johnson\", 2.1).\nHas_popular_vote(\"Walter L. Bryan\", 0.8).\nHas_popular_vote(\"Arthur E. Reimer\", 0.4).\n.decl Answer()\nAnswer() :- Has_popular_vote(\"Woodrow Wilson\", popular_vote1), Has_popular_vote(\"William Jennings Bryan\", popular_vote2), Has_popular_vote(\"Theodore Roosevelt\", popular_vote3), Has_popular_vote(\"Alton B. Parker\", popular_vote4), Has_popular_vote(\"William Howard Taft\", popular_vote5), Has_popular_vote(\"James S. Sherman\", popular_vote6), Has_popular_vote(\"George V. Johnson\", popular_vote7), Has_popular_vote(\"Walter L. Bryan\", popular_vote8), Has_popular_vote(\"Arthur E. Reimer\", popular_vote9), popular_vote1 > popular_vote2, popular_vote1 > popular_vote3, popular_vote1 > popular_vote4, popular_vote1 > popular_vote5, popular_vote1 > popular_vote6, popular_vote1 > popular_vote7, popular_vote1 > popular_vote8, popular_vote1 > popular_vote9.\n.output Answer\n\n"]}
{"id": 443, "answer": false, "completion": ".decl Has_ingredients(Dessert:symbol, Ingredients:symbol)\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake", "completions": [".decl Has_ingredients(Dessert:symbol, Ingredients:symbol)\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake\", \"carrot\").\nHas_ingredients(\"cake\", \"cinnamon\").\nHas_ingredients(\"cake\", \"raisin\").\nHas_ingredients(\"cake\", \"walnut\").\nHas_ingredients(\"cake\", \"chocolate\").\nHas_ingredients(\"cake\", \"buttermilk\").\nHas_ingredients(\"cake\", \"egg yolk\").\nHas_ingredients(\"cake\", \"egg white\").\nHas_ingredients(\"cake\", \"egg\").\nHas_ingredients(\"cake\", \"flour\").\nHas_ingredients(\"cake\", \"sugar\").\nHas_ingredients(\"cake\", \"butter\").\nHas_ingredients(\"cake\", \"milk\").\nHas_ingredients(\"cake\", \"vanilla\").\nHas_ingredients(\"cake\", \"salt\").\nHas_ingredients(\"cake\", \"baking powder\").\nHas_ingredients(\"cake\", \"cocoa\").\nHas_ingredients(\"cake\", \"water\").\nHas_ingredients(\"cake"]}
{"id": 444, "answer": true, "completion": ".decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Diego\").\nHas_location(\"depression\", \"Los Angeles\").\nHas_location(\"depression\", \"San Jose\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_", "completions": [".decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Diego\").\nHas_location(\"depression\", \"Los Angeles\").\nHas_location(\"depression\", \"San Jose\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_location(\"depression\", \"San Francisco\").\nHas_"]}
{"id": 445, "answer": false, "completion": ".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"door\", \"rectangular\").\nHas_shape(\"letter D\", \"curved\").\n.decl Answer()\nAnswer() :- Has_shape(\"letter D\", shape), Has_shape(\"door\", shape).\n.output Answer\n\n", "completions": [".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"door\", \"rectangular\").\nHas_shape(\"letter D\", \"curved\").\n.decl Answer()\nAnswer() :- Has_shape(\"letter D\", shape), Has_shape(\"door\", shape).\n.output Answer\n\n"]}
{"id": 446, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Sarah\", 90).\nHas_age(\"Methuselah\", 969).\n.decl Answer()\nAnswer() :- Has_age(\"Sarah\", age1), Has_age(\"Methuselah\", age2), age1 >= 800, age2 >= 800, age1 >= age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Sarah\", 90).\nHas_age(\"Methuselah\", 969).\n.decl Answer()\nAnswer() :- Has_age(\"Sarah\", age1), Has_age(\"Methuselah\", age2), age1 >= 800, age2 >= 800, age1 >= age2.\n.output Answer\n\n"]}
{"id": 447, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"triples tandem bike\", 200).\nHas_weight(\"Apollo 15 crew\", 400).\n.decl Answer()\nAnswer() :- Has_weight(\"triples tandem bike\", weight1), Has_weight(\"Apollo 15 crew\", weight2), weight1 >= weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"triples tandem bike\", 200).\nHas_weight(\"Apollo 15 crew\", 400).\n.decl Answer()\nAnswer() :- Has_weight(\"triples tandem bike\", weight1), Has_weight(\"Apollo 15 crew\", weight2), weight1 >= weight2.\n.output Answer\n\n"]}
{"id": 448, "answer": false, "completion": ".decl Has_order(Animal_A:symbol, Animal_B:symbol)\nHas_order(\"dog\", \"Grey seal\").\nHas_order(\"Grey seal\", \"bell\").\n.decl Answer()\nAnswer() :- Has_order(\"dog\", animal_a), Has_order(\"Grey seal\", animal_a), Has_order(\"bell\", animal_b), animal_a < animal_b.\n.output Answer\n\n", "completions": [".decl Has_order(Animal_A:symbol, Animal_B:symbol)\nHas_order(\"dog\", \"Grey seal\").\nHas_order(\"Grey seal\", \"bell\").\n.decl Answer()\nAnswer() :- Has_order(\"dog\", animal_a), Has_order(\"Grey seal\", animal_a), Has_order(\"bell\", animal_b), animal_a < animal_b.\n.output Answer\n\n"]}
{"id": 449, "answer": false, "completion": ".decl Related(Animal_A:symbol, Animal_B:symbol)\nRelated(\"sable\", \"wolverine\").\nRelated(\"wolverine\", \"sable\").\n.decl Answer()\nAnswer() :- Related(\"sable\", animal1), Related(animal1, \"wolverine\").\n.output Answer\n\n", "completions": [".decl Related(Animal_A:symbol, Animal_B:symbol)\nRelated(\"sable\", \"wolverine\").\nRelated(\"wolverine\", \"sable\").\n.decl Answer()\nAnswer() :- Related(\"sable\", animal1), Related(animal1, \"wolverine\").\n.output Answer\n\n"]}
{"id": 450, "answer": false, "completion": ".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"lobster\", \"ocean\").\nLives_in(\"lobster\", \"sea\").\nLives_in(\"lobster\", \"ocean floor\").\nLives_in(\"lobster\", \"sea floor\").\n.decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"coyote\", \"desert\").\nLives_in(\"coyote\", \"mountain\").\nLives_in(\"coyote\", \"forest\").\nLives_in(\"coyote\", \"grassland\").\n.decl Answer()\nAnswer() :- Lives_in(\"lobster\", place1), Lives_in(\"coyote\", place2), place1 != place2.\n.output Answer\n\n", "completions": [".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"lobster\", \"ocean\").\nLives_in(\"lobster\", \"sea\").\nLives_in(\"lobster\", \"ocean floor\").\nLives_in(\"lobster\", \"sea floor\").\n.decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"coyote\", \"desert\").\nLives_in(\"coyote\", \"mountain\").\nLives_in(\"coyote\", \"forest\").\nLives_in(\"coyote\", \"grassland\").\n.decl Answer()\nAnswer() :- Lives_in(\"lobster\", place1), Lives_in(\"coyote\", place2), place1 != place2.\n.output Answer\n\n"]}
{"id": 451, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Nicole Kidman\", 1.7).\nHas_height(\"Halle Berry\", 1.7).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Nicole Kidman\", 60).\nHas_weight(\"Halle Berry\", 50).\n.decl Answer()\nAnswer() :- Has_height(\"Nicole Kidman\", height), Has_height(\"Halle Berry\", height2), Has_weight(\"Nicole Kidman\", weight), Has_weight(\"Halle Berry\", weight2), height > height2, weight > weight2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Nicole Kidman\", 1.7).\nHas_height(\"Halle Berry\", 1.7).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Nicole Kidman\", 60).\nHas_weight(\"Halle Berry\", 50).\n.decl Answer()\nAnswer() :- Has_height(\"Nicole Kidman\", height), Has_height(\"Halle Berry\", height2), Has_weight(\"Nicole Kidman\", weight), Has_weight(\"Halle Berry\", weight2), height > height2, weight > weight2.\n.output Answer\n\n"]}
{"id": 452, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"bodybuilder\", 200).\nHas_weight(\"cast\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"bodybuilder\", weight1), Has_weight(\"cast\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"bodybuilder\", 200).\nHas_weight(\"cast\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"bodybuilder\", weight1), Has_weight(\"cast\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 453, "answer": true, "completion": ".decl Owns(Person:symbol, Car:symbol)\nOwns(\"George Washington\", \"Lexus\").\n.decl Answer()\nAnswer() :- Owns(\"George Washington\", car).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Car:symbol)\nOwns(\"George Washington\", \"Lexus\").\n.decl Answer()\nAnswer() :- Owns(\"George Washington\", car).\n.output Answer\n\n"]}
{"id": 454, "answer": false, "completion": ".decl Has_feature(Software:symbol, Feature:symbol)\nHas_feature(\"Adobe Suite\", \"video game engine coding\").\n.decl Answer()\nAnswer() :- Has_feature(\"Adobe Suite\", feature).\n.output Answer\n\n", "completions": [".decl Has_feature(Software:symbol, Feature:symbol)\nHas_feature(\"Adobe Suite\", \"video game engine coding\").\n.decl Answer()\nAnswer() :- Has_feature(\"Adobe Suite\", feature).\n.output Answer\n\n"]}
{"id": 455, "answer": true, "completion": ".decl Has_year(Coin:symbol, Year:symbol)\nHas_year(\"1943-S penny\", \"1943\").\n.decl Has_value(Coin:symbol, Value:float)\nHas_value(\"1943-S penny\", 0.01).\n.decl Answer()\nAnswer() :- Has_year(\"1943-S penny\", year), Has_value(\"1943-S penny\", value), value > 0.01.\n.output Answer\n\n", "completions": [".decl Has_year(Coin:symbol, Year:symbol)\nHas_year(\"1943-S penny\", \"1943\").\n.decl Has_value(Coin:symbol, Value:float)\nHas_value(\"1943-S penny\", 0.01).\n.decl Answer()\nAnswer() :- Has_year(\"1943-S penny\", year), Has_value(\"1943-S penny\", value), value > 0.01.\n.output Answer\n\n"]}
{"id": 456, "answer": false, "completion": ".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"Voldemort\", \"Durmstrang\").\nWorks_for(\"Albus Dumbledore\", \"Durmstrang\").\n.decl Answer()\nAnswer() :- Works_for(\"Voldemort\", organization), Works_for(\"Albus Dumbledore\", organization).\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"Voldemort\", \"Durmstrang\").\nWorks_for(\"Albus Dumbledore\", \"Durmstrang\").\n.decl Answer()\nAnswer() :- Works_for(\"Voldemort\", organization), Works_for(\"Albus Dumbledore\", organization).\n.output Answer\n\n"]}
{"id": 457, "answer": true, "completion": ".decl Has_degree(Person:symbol, Degree:symbol)\nHas_degree(\"Brooke Shields\", \"B.A.\").\nHas_degree(\"Brooke Shields\", \"M.A.\").\nHas_degree(\"Brooke Shields\", \"Ph.D.\").\n.decl Works_as_bartender(Person:symbol)\nWorks_as_bartender(\"Brooke Shields\").\n.decl Answer()\nAnswer() :- Has_degree(\"Brooke Shields\", degree), Works_as_bartender(\"Brooke Shields\").\n.output Answer\n\n", "completions": [".decl Has_degree(Person:symbol, Degree:symbol)\nHas_degree(\"Brooke Shields\", \"B.A.\").\nHas_degree(\"Brooke Shields\", \"M.A.\").\nHas_degree(\"Brooke Shields\", \"Ph.D.\").\n.decl Works_as_bartender(Person:symbol)\nWorks_as_bartender(\"Brooke Shields\").\n.decl Answer()\nAnswer() :- Has_degree(\"Brooke Shields\", degree), Works_as_bartender(\"Brooke Shields\").\n.output Answer\n\n"]}
{"id": 458, "answer": true, "completion": ".decl Is_a_subset_of(Subset:symbol, Set:symbol)\nIs_a_subset_of(\"celery\", \"kitchen\").\nIs_a_subset_of(\"onion\", \"kitchen\").\nIs_a_subset_of(\"carrot\", \"kitchen\").\n.decl Answer()\nAnswer() :- Is_a_subset_of(\"celery\", kitchen), Is_a_subset_of(\"onion\", kitchen), Is_a_subset_of(\"carrot\", kitchen).\n.output Answer\n\n", "completions": [".decl Is_a_subset_of(Subset:symbol, Set:symbol)\nIs_a_subset_of(\"celery\", \"kitchen\").\nIs_a_subset_of(\"onion\", \"kitchen\").\nIs_a_subset_of(\"carrot\", \"kitchen\").\n.decl Answer()\nAnswer() :- Is_a_subset_of(\"celery\", kitchen), Is_a_subset_of(\"onion\", kitchen), Is_a_subset_of(\"carrot\", kitchen).\n.output Answer\n\n"]}
{"id": 459, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"white blood cells\", 7.5e12).\nHas_n_members(\"red blood cells\", 7e11).\n.decl Answer()\nAnswer() :- Has_n_members(\"white blood cells\", n_members1), Has_n_members(\"red blood cells\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"white blood cells\", 7.5e12).\nHas_n_members(\"red blood cells\", 7e11).\n.decl Answer()\nAnswer() :- Has_n_members(\"white blood cells\", n_members1), Has_n_members(\"red blood cells\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 460, "answer": false, "completion": ".decl Has_distance(Place_A:symbol, Place_B:symbol, Distance:float)\nHas_distance(\"New York\", \"Miami\", 4_000).\n.decl Answer()\nAnswer() :- Has_distance(\"New York\", \"Miami\", distance), distance < 4_000.\n.output Answer\n\n", "completions": [".decl Has_distance(Place_A:symbol, Place_B:symbol, Distance:float)\nHas_distance(\"New York\", \"Miami\", 4_000).\n.decl Answer()\nAnswer() :- Has_distance(\"New York\", \"Miami\", distance), distance < 4_000.\n.output Answer\n\n"]}
{"id": 461, "answer": true, "completion": ".decl Has_strength(Wizard:symbol, Strength:float)\nHas_strength(\"Gandalf\", 10).\nHas_strength(\"Rincewind\", 1).\n.decl Answer()\nAnswer() :- Has_strength(\"Gandalf\", strength1), Has_strength(\"Rincewind\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Wizard:symbol, Strength:float)\nHas_strength(\"Gandalf\", 10).\nHas_strength(\"Rincewind\", 1).\n.decl Answer()\nAnswer() :- Has_strength(\"Gandalf\", strength1), Has_strength(\"Rincewind\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 462, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Tiny House\", 2).\nHas_height(\"Osama bin Laden\", 7).\n.decl Answer()\nAnswer() :- Has_height(\"Tiny House\", height1), Has_height(\"Osama bin Laden\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Tiny House\", 2).\nHas_height(\"Osama bin Laden\", 7).\n.decl Answer()\nAnswer() :- Has_height(\"Tiny House\", height1), Has_height(\"Osama bin Laden\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 463, "answer": true, "completion": ".decl Won_olympic_gold_medal(Country:symbol, Year:symbol)\nWon_olympic_gold_medal(\"England\", \"1900\").\nWon_olympic_gold_medal(\"England\", \"1800\").\n.decl Answer()\nAnswer() :- Won_olympic_gold_medal(\"England\", year), year = 1800.\n.output Answer\n\n", "completions": [".decl Won_olympic_gold_medal(Country:symbol, Year:symbol)\nWon_olympic_gold_medal(\"England\", \"1900\").\nWon_olympic_gold_medal(\"England\", \"1800\").\n.decl Answer()\nAnswer() :- Won_olympic_gold_medal(\"England\", year), year = 1800.\n.output Answer\n\n"]}
{"id": 464, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"E.T. the Extra-Terrestrial\", \"E.T.\").\nHas_name(\"Atari Landfill\", \"Atari Landfill\").\n.decl Has_location(Object:symbol, Location:symbol)\nHas_location(\"E.T. the Extra-Terrestrial\", \"Atari Landfill\").\n.decl Answer()\nAnswer() :- Has_name(\"E.T. the Extra-Terrestrial\", name), Has_location(object, location), name = location.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"E.T. the Extra-Terrestrial\", \"E.T.\").\nHas_name(\"Atari Landfill\", \"Atari Landfill\").\n.decl Has_location(Object:symbol, Location:symbol)\nHas_location(\"E.T. the Extra-Terrestrial\", \"Atari Landfill\").\n.decl Answer()\nAnswer() :- Has_name(\"E.T. the Extra-Terrestrial\", name), Has_location(object, location), name = location.\n.output Answer\n\n"]}
{"id": 465, "answer": true, "completion": ".decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"paraplegic\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"quadriplegic\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"amputee\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"deaf\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"blind\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"paralyzed\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas", "completions": [".decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"paraplegic\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"quadriplegic\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"amputee\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"deaf\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"blind\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"paralyzed\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"injured\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"handicapped\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"disabled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas_disability(\"Jimmy Vee\", \"crippled\").\n.decl Has_disability(Person:symbol, Disability:symbol)\nHas"]}
{"id": 466, "answer": true, "completion": ".decl Elected(Person:symbol, Year:symbol)\nElected(\"Elijah Cummings\", \"2020\").\n.decl Answer()\nAnswer() :- Elected(\"Elijah Cummings\", year), year = \"2020\".\n.output Answer\n\n", "completions": [".decl Elected(Person:symbol, Year:symbol)\nElected(\"Elijah Cummings\", \"2020\").\n.decl Answer()\nAnswer() :- Elected(\"Elijah Cummings\", year), year = \"2020\".\n.output Answer\n\n"]}
{"id": 467, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Order of the British Empire\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hermione Granger\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Hermione Granger\", n_members1), Has_n_members(\"Order of the British Empire\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Order of the British Empire\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hermione Granger\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Hermione Granger\", n_members1), Has_n_members(\"Order of the British Empire\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 468, "answer": false, "completion": ".decl Is_cookable(Pottery:symbol)\nIs_cookable(\"ceramic\").\nIs_cookable(\"stoneware\").\nIs_cookable(\"porcelain\").\n.decl Answer()\nAnswer() :- Is_cookable(\"ceramic\"), Is_cookable(\"stoneware\"), Is_cookable(\"porcelain\").\n.output Answer\n\n", "completions": [".decl Is_cookable(Pottery:symbol)\nIs_cookable(\"ceramic\").\nIs_cookable(\"stoneware\").\nIs_cookable(\"porcelain\").\n.decl Answer()\nAnswer() :- Is_cookable(\"ceramic\"), Is_cookable(\"stoneware\"), Is_cookable(\"porcelain\").\n.output Answer\n\n"]}
{"id": 469, "answer": true, "completion": ".decl Has_n_popes(Country:symbol, N_popes:float)\nHas_n_popes(\"Italy\", 8).\nHas_n_popes(\"Spain\", 5).\nHas_n_popes(\"France\", 4).\nHas_n_popes(\"Portugal\", 3).\nHas_n_popes(\"Austria\", 2).\nHas_n_popes(\"Germany\", 2).\nHas_n_popes(\"Poland\", 2).\nHas_n_popes(\"England\", 1).\nHas_n_popes(\"Scotland\", 1).\nHas_n_popes(\"Netherlands\", 1).\nHas_n_popes(\"Switzerland\", 1).\n.decl Answer()\nAnswer() :- Has_n_popes(\"Italy\", n_popes1), Has_n_popes(\"Spain\", n_popes2), Has_n_popes(\"France\", n_popes3), Has_n_popes(\"Portugal\", n_popes4), Has_n_popes(\"Austria\", n_popes5), Has_n_popes(\"Germany\", n_popes6), Has_n_popes(\"Poland\", n_popes7), Has_n_popes(\"England\", n_popes8), Has_n_popes(\"Scotland\", n_popes9), Has_n_popes(\"Netherlands\", n_popes10), Has_n_popes(\"Switzerland\", n_popes11), n_popes1 >= n_popes2, n_popes1 >= n_popes3, n_popes1 >= n_popes4, n_popes1 >= n_popes5, n_popes1 >= n_popes6, n_popes1 >= n_popes7, n_popes1 >= n_popes8, n_popes1 >= n_popes9, n_popes1 >= n_popes10, n_popes1 >= n_popes11.\n.output Answer\n\n", "completions": [".decl Has_n_popes(Country:symbol, N_popes:float)\nHas_n_popes(\"Italy\", 8).\nHas_n_popes(\"Spain\", 5).\nHas_n_popes(\"France\", 4).\nHas_n_popes(\"Portugal\", 3).\nHas_n_popes(\"Austria\", 2).\nHas_n_popes(\"Germany\", 2).\nHas_n_popes(\"Poland\", 2).\nHas_n_popes(\"England\", 1).\nHas_n_popes(\"Scotland\", 1).\nHas_n_popes(\"Netherlands\", 1).\nHas_n_popes(\"Switzerland\", 1).\n.decl Answer()\nAnswer() :- Has_n_popes(\"Italy\", n_popes1), Has_n_popes(\"Spain\", n_popes2), Has_n_popes(\"France\", n_popes3), Has_n_popes(\"Portugal\", n_popes4), Has_n_popes(\"Austria\", n_popes5), Has_n_popes(\"Germany\", n_popes6), Has_n_popes(\"Poland\", n_popes7), Has_n_popes(\"England\", n_popes8), Has_n_popes(\"Scotland\", n_popes9), Has_n_popes(\"Netherlands\", n_popes10), Has_n_popes(\"Switzerland\", n_popes11), n_popes1 >= n_popes2, n_popes1 >= n_popes3, n_popes1 >= n_popes4, n_popes1 >= n_popes5, n_popes1 >= n_popes6, n_popes1 >= n_popes7, n_popes1 >= n_popes8, n_popes1 >= n_popes9, n_popes1 >= n_popes10, n_popes1 >= n_popes11.\n.output Answer\n\n"]}
{"id": 470, "answer": false, "completion": ".decl Has_depression(Person:symbol, Depression:symbol)\nHas_depression(\"Brooke Shields\", \"depression\").\n.decl Has_laziness(Person:symbol, Laziness:symbol)\nHas_laziness(\"Brooke Shields\", \"laziness\").\n.decl Answer()\nAnswer() :- Has_depression(\"Brooke Shields\", depression), Has_laziness(\"Brooke Shields\", laziness), depression = laziness.\n.output Answer\n\n", "completions": [".decl Has_depression(Person:symbol, Depression:symbol)\nHas_depression(\"Brooke Shields\", \"depression\").\n.decl Has_laziness(Person:symbol, Laziness:symbol)\nHas_laziness(\"Brooke Shields\", \"laziness\").\n.decl Answer()\nAnswer() :- Has_depression(\"Brooke Shields\", depression), Has_laziness(\"Brooke Shields\", laziness), depression = laziness.\n.output Answer\n\n"]}
{"id": 471, "answer": true, "completion": ".decl Has_danger_level(Animal:symbol, Level:float)\nHas_danger_level(\"Allosaurus\", 3).\nHas_danger_level(\"Oculudentavis\", 2).\n.decl Answer()\nAnswer() :- Has_danger_level(\"Allosaurus\", level1), Has_danger_level(\"Oculudentavis\", level2), level1 > level2.\n.output Answer\n\n", "completions": [".decl Has_danger_level(Animal:symbol, Level:float)\nHas_danger_level(\"Allosaurus\", 3).\nHas_danger_level(\"Oculudentavis\", 2).\n.decl Answer()\nAnswer() :- Has_danger_level(\"Allosaurus\", level1), Has_danger_level(\"Oculudentavis\", level2), level1 > level2.\n.output Answer\n\n"]}
{"id": 472, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Christopher Nolan\", 1.8).\nHas_height(\"Danny Devito\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"Christopher Nolan\", height1), Has_height(\"Danny Devito\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Christopher Nolan\", 1.8).\nHas_height(\"Danny Devito\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"Christopher Nolan\", height1), Has_height(\"Danny Devito\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 473, "answer": true, "completion": ".decl Has_n_bells(Clock:symbol, N_bells:float)\nHas_n_bells(\"Big Ben\", 13).\n.decl Has_n_rings(Clock:symbol, N_rings:float)\nHas_n_rings(\"Big Ben\", 3).\n.decl Answer()\nAnswer() :- Has_n_bells(\"Big Ben\", n_bells), Has_n_rings(\"Big Ben\", n_rings), n_bells = n_rings.\n.output Answer\n\n", "completions": [".decl Has_n_bells(Clock:symbol, N_bells:float)\nHas_n_bells(\"Big Ben\", 13).\n.decl Has_n_rings(Clock:symbol, N_rings:float)\nHas_n_rings(\"Big Ben\", 3).\n.decl Answer()\nAnswer() :- Has_n_bells(\"Big Ben\", n_bells), Has_n_rings(\"Big Ben\", n_rings), n_bells = n_rings.\n.output Answer\n\n"]}
{"id": 474, "answer": true, "completion": ".decl Appears_in_movie(Character:symbol, Movie:symbol)\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Last Jedi\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Force Awakens\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Phantom Menace\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Clone Wars\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Rise of Skywalker\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Force Awakens\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Last Jedi\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Rise of Skywalker\").\n.decl Answer()\nAnswer() :- Appears_in_movie(\"Kylo Ren\", movie).\n.output Answer\n\n", "completions": [".decl Appears_in_movie(Character:symbol, Movie:symbol)\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Last Jedi\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Force Awakens\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Phantom Menace\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Clone Wars\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Rise of Skywalker\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Force Awakens\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Last Jedi\").\nAppears_in_movie(\"Kylo Ren\", \"Star Wars: The Rise of Skywalker\").\n.decl Answer()\nAnswer() :- Appears_in_movie(\"Kylo Ren\", movie).\n.output Answer\n\n"]}
{"id": 475, "answer": true, "completion": ".decl Is_buried_in(Person:symbol, Place:symbol)\nIs_buried_in(\"Queen Elizabeth\", \"Pantheon\").\n.decl Is_buried_in(Person:symbol, Place:symbol)\nIs_buried_in(\"Queen Victoria\", \"Pantheon\").\n.decl Answer()\nAnswer() :- Is_buried_in(\"Queen Elizabeth\", \"Pantheon\").\nAnswer() :- Is_buried_in(\"Queen Victoria\", \"Pantheon\").\n.output Answer\n\n", "completions": [".decl Is_buried_in(Person:symbol, Place:symbol)\nIs_buried_in(\"Queen Elizabeth\", \"Pantheon\").\n.decl Is_buried_in(Person:symbol, Place:symbol)\nIs_buried_in(\"Queen Victoria\", \"Pantheon\").\n.decl Answer()\nAnswer() :- Is_buried_in(\"Queen Elizabeth\", \"Pantheon\").\nAnswer() :- Is_buried_in(\"Queen Victoria\", \"Pantheon\").\n.output Answer\n\n"]}
{"id": 476, "answer": true, "completion": ".decl Is_part_of(City:symbol, Country:symbol)\nIs_part_of(\"Olympia\", \"Washington\").\nIs_part_of(\"Olympia\", \"USA\").\nIs_part_of(\"Ishim\", \"Ishim\").\nIs_part_of(\"Ishim\", \"Ishim country\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Olympia\", country), Is_part_of(\"Ishim\", country).\n.output Answer\n\n", "completions": [".decl Is_part_of(City:symbol, Country:symbol)\nIs_part_of(\"Olympia\", \"Washington\").\nIs_part_of(\"Olympia\", \"USA\").\nIs_part_of(\"Ishim\", \"Ishim\").\nIs_part_of(\"Ishim\", \"Ishim country\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Olympia\", country), Is_part_of(\"Ishim\", country).\n.output Answer\n\n"]}
{"id": 477, "answer": true, "completion": ".decl Has_difficulty(Sport:symbol, Difficulty:float)\nHas_difficulty(\"judo\", 0.5).\nHas_difficulty(\"silicone suits\", 0.8).\n.decl Answer()\nAnswer() :- Has_difficulty(\"judo\", difficulty1), Has_difficulty(\"silicone suits\", difficulty2), difficulty1 > difficulty2.\n.output Answer\n\n", "completions": [".decl Has_difficulty(Sport:symbol, Difficulty:float)\nHas_difficulty(\"judo\", 0.5).\nHas_difficulty(\"silicone suits\", 0.8).\n.decl Answer()\nAnswer() :- Has_difficulty(\"judo\", difficulty1), Has_difficulty(\"silicone suits\", difficulty2), difficulty1 > difficulty2.\n.output Answer\n\n"]}
{"id": 478, "answer": true, "completion": ".decl Has_n_bits(Object:symbol, N_bits:float)\nHas_n_bits(\"boolean algebra\", 2).\n.decl Answer()\nAnswer() :- Has_n_bits(\"boolean algebra\", n_bits1), Has_n_bits(\"binary\", n_bits2), n_bits1 > n_bits2.\n.output Answer\n\n", "completions": [".decl Has_n_bits(Object:symbol, N_bits:float)\nHas_n_bits(\"boolean algebra\", 2).\n.decl Answer()\nAnswer() :- Has_n_bits(\"boolean algebra\", n_bits1), Has_n_bits(\"binary\", n_bits2), n_bits1 > n_bits2.\n.output Answer\n\n"]}
{"id": 479, "answer": false, "completion": ".decl Has_age(Animal:symbol, Age:float)\nHas_age(\"cat\", 3).\nHas_age(\"dog\", 5).\nHas_age(\"hamster\", 1).\nHas_age(\"goldfish\", 1).\nHas_age(\"guinea pig\", 1).\nHas_age(\"ferret\", 1).\nHas_age(\"rabbit\", 1).\nHas_age(\"gerbil\", 1).\nHas_age(\"horse\", 10).\nHas_age(\"cow\", 10).\nHas_age(\"llama\", 10).\nHas_age(\"goat\", 10).\nHas_age(\"sheep\", 10).\nHas_age(\"pig\", 10).\nHas_age(\"duck\", 10).\nHas_age(\"chicken\", 10).\nHas_age(\"turkey\", 10).\nHas_age(\"goose\", 10).\nHas_age(\"deer\", 10).\nHas_age(\"moose\", 10).\nHas_age(\"caribou\", 10).\nHas_age(\"reindeer\", 10).\nHas_age(\"elk\", 10).\nHas_age(\"whale\", 10).\nHas_age(\"seal\", 10).\nHas_age(\"sea lion\", 10).\nHas_age(\"otter\", 10).\nHas_age(\"skunk\", 10).\nHas_age(\"fox\", 10).\nHas_age(\"wolf\", 10).\nHas_age(\"bear\", 10).\nHas_age(\"lion\", 10).\nHas_age(\"tiger\", 10).\nHas_age(\"cheetah\", 10).\nHas_age(\"cougar\", 10).\nHas_age(\"leopard\", 10).\nHas_age(\"coyote\", 10).\nHas_age(\"dingo\", 10).\nHas_age(\"dhole\", 10).\nHas_age(\"bobcat\", 10).\nHas_age(\"serval\", 10).\nHas_age(\"civet\", 10).\nHas_age(\"mongoose\", 10).\nHas_age(\"meerkat\", 10).\nHas_age(\"sloth\", 10).\nHas_age(\"armadillo\", 10).\nHas_age(\"three-toed sloth\", 10).\nHas_age(\"orangutan\", 10).\nHas_age(\"gorilla\", 10).\nHas_age(\"chimpanzee\", 10).\nHas_age(\"gibbon\", 10).\nHas_age(\"siamang\", 10).\nHas_age(\"guenon\", 10).\nHas_age(\"patas monkey\", 10).\nHas_age(\"baboon\", 10).\nHas_age(\"macaque\", 10).\nHas_age(\"langur\", 10).\nHas_age(\"colobus\", 10).\nHas_age(\"proboscis monkey\", 10).\nHas_age(\"marmoset\", 10).\nHas_age(\"capuchin\", 10).\nHas_age(\"howler monkey\", 10).\nHas_age(\"titi\", 10).\nHas_age(\"spider monkey\", 10).\nHas_age(\"squirrel monkey\", 10).\nHas_age(\"Madagascar cat\", 10).\nHas_age(\"indri\", 10).\nHas_age(\"Indian elephant\", 10).\nHas_age(\"African elephant\", 10).\nHas_age(\"lesser panda\", 10).\nHas_age(\"giant panda\", 10).\nHas_age(\"barracouta\", 10).\nHas_age(\"eel\", 10).\nHas_age(\"coho salmon\", 10).\nHas_age(\"rock beauty\", 10).", "completions": [".decl Has_age(Animal:symbol, Age:float)\nHas_age(\"cat\", 3).\nHas_age(\"dog\", 5).\nHas_age(\"hamster\", 1).\nHas_age(\"goldfish\", 1).\nHas_age(\"guinea pig\", 1).\nHas_age(\"ferret\", 1).\nHas_age(\"rabbit\", 1).\nHas_age(\"gerbil\", 1).\nHas_age(\"horse\", 10).\nHas_age(\"cow\", 10).\nHas_age(\"llama\", 10).\nHas_age(\"goat\", 10).\nHas_age(\"sheep\", 10).\nHas_age(\"pig\", 10).\nHas_age(\"duck\", 10).\nHas_age(\"chicken\", 10).\nHas_age(\"turkey\", 10).\nHas_age(\"goose\", 10).\nHas_age(\"deer\", 10).\nHas_age(\"moose\", 10).\nHas_age(\"caribou\", 10).\nHas_age(\"reindeer\", 10).\nHas_age(\"elk\", 10).\nHas_age(\"whale\", 10).\nHas_age(\"seal\", 10).\nHas_age(\"sea lion\", 10).\nHas_age(\"otter\", 10).\nHas_age(\"skunk\", 10).\nHas_age(\"fox\", 10).\nHas_age(\"wolf\", 10).\nHas_age(\"bear\", 10).\nHas_age(\"lion\", 10).\nHas_age(\"tiger\", 10).\nHas_age(\"cheetah\", 10).\nHas_age(\"cougar\", 10).\nHas_age(\"leopard\", 10).\nHas_age(\"coyote\", 10).\nHas_age(\"dingo\", 10).\nHas_age(\"dhole\", 10).\nHas_age(\"bobcat\", 10).\nHas_age(\"serval\", 10).\nHas_age(\"civet\", 10).\nHas_age(\"mongoose\", 10).\nHas_age(\"meerkat\", 10).\nHas_age(\"sloth\", 10).\nHas_age(\"armadillo\", 10).\nHas_age(\"three-toed sloth\", 10).\nHas_age(\"orangutan\", 10).\nHas_age(\"gorilla\", 10).\nHas_age(\"chimpanzee\", 10).\nHas_age(\"gibbon\", 10).\nHas_age(\"siamang\", 10).\nHas_age(\"guenon\", 10).\nHas_age(\"patas monkey\", 10).\nHas_age(\"baboon\", 10).\nHas_age(\"macaque\", 10).\nHas_age(\"langur\", 10).\nHas_age(\"colobus\", 10).\nHas_age(\"proboscis monkey\", 10).\nHas_age(\"marmoset\", 10).\nHas_age(\"capuchin\", 10).\nHas_age(\"howler monkey\", 10).\nHas_age(\"titi\", 10).\nHas_age(\"spider monkey\", 10).\nHas_age(\"squirrel monkey\", 10).\nHas_age(\"Madagascar cat\", 10).\nHas_age(\"indri\", 10).\nHas_age(\"Indian elephant\", 10).\nHas_age(\"African elephant\", 10).\nHas_age(\"lesser panda\", 10).\nHas_age(\"giant panda\", 10).\nHas_age(\"barracouta\", 10).\nHas_age(\"eel\", 10).\nHas_age(\"coho salmon\", 10).\nHas_age(\"rock beauty\", 10)."]}
{"id": 480, "answer": true, "completion": ".decl Has_benefit(Project:symbol, Person:symbol)\nHas_benefit(\"Project Semicolon\", \"Kurt Cobain\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Kurt Cobain\", \"music\").\n.decl Answer()\nAnswer() :- Has_benefit(\"Project Semicolon\", person), Has_skill(person, skill), skill = \"music\".\n.output Answer\n\n", "completions": [".decl Has_benefit(Project:symbol, Person:symbol)\nHas_benefit(\"Project Semicolon\", \"Kurt Cobain\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Kurt Cobain\", \"music\").\n.decl Answer()\nAnswer() :- Has_benefit(\"Project Semicolon\", person), Has_skill(person, skill), skill = \"music\".\n.output Answer\n\n"]}
{"id": 481, "answer": false, "completion": ".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"anxious person\", \"anxiety\").\nHas_emotion(\"Wizard of Oz\", \"courage\").\n.decl Answer()\nAnswer() :- Has_emotion(\"anxious person\", emotion), Has_emotion(\"Wizard of Oz\", emotion).\n.output Answer\n\n", "completions": [".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"anxious person\", \"anxiety\").\nHas_emotion(\"Wizard of Oz\", \"courage\").\n.decl Answer()\nAnswer() :- Has_emotion(\"anxious person\", emotion), Has_emotion(\"Wizard of Oz\", emotion).\n.output Answer\n\n"]}
{"id": 482, "answer": false, "completion": ".decl Has_firewall(Object:symbol, Firewall:symbol)\nHas_firewall(\"firewall\", \"firewall\").\nHas_firewall(\"firewall\", \"firewall\").\n.decl Has_short_circuit(Object:symbol, Short_circuit:symbol)\nHas_short_circuit(\"firewall\", \"short circuit\").\nHas_short_circuit(\"firewall\", \"short circuit\").\n.decl Answer()\nAnswer() :- Has_firewall(\"firewall\", firewall), Has_short_circuit(\"firewall\", short_circuit), firewall != short_circuit.\n.output Answer\n\n", "completions": [".decl Has_firewall(Object:symbol, Firewall:symbol)\nHas_firewall(\"firewall\", \"firewall\").\nHas_firewall(\"firewall\", \"firewall\").\n.decl Has_short_circuit(Object:symbol, Short_circuit:symbol)\nHas_short_circuit(\"firewall\", \"short circuit\").\nHas_short_circuit(\"firewall\", \"short circuit\").\n.decl Answer()\nAnswer() :- Has_firewall(\"firewall\", firewall), Has_short_circuit(\"firewall\", short_circuit), firewall != short_circuit.\n.output Answer\n\n"]}
{"id": 483, "answer": true, "completion": ".decl Qualifies(Person:symbol, Qualification:symbol)\nQualifies(\"Michael J Fox\", \"Army Rangers\").\n.decl Answer()\nAnswer() :- Qualifies(\"Michael J Fox\", \"Army Rangers\").\n.output Answer\n\n", "completions": [".decl Qualifies(Person:symbol, Qualification:symbol)\nQualifies(\"Michael J Fox\", \"Army Rangers\").\n.decl Answer()\nAnswer() :- Qualifies(\"Michael J Fox\", \"Army Rangers\").\n.output Answer\n\n"]}
{"id": 484, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The Isley Brothers\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"The Jackson 5\", n_members1), Has_n_members(\"The Isley Brothers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The Isley Brothers\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"The Jackson 5\", n_members1), Has_n_members(\"The Isley Brothers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 485, "answer": false, "completion": ".decl Is_a_guru(Person:symbol)\nIs_a_guru(\"Kim Kardashian\").\n.decl Answer()\nAnswer() :- Is_a_guru(\"Kim Kardashian\").\n.output Answer\n\n", "completions": [".decl Is_a_guru(Person:symbol)\nIs_a_guru(\"Kim Kardashian\").\n.decl Answer()\nAnswer() :- Is_a_guru(\"Kim Kardashian\").\n.output Answer\n\n"]}
{"id": 486, "answer": false, "completion": ".decl Has_won_slammy(Show:symbol, Slammy:symbol)\nHas_won_slammy(\"Modern Family\", \"Comedy\").\n.decl Has_won_slammy(Show:symbol, Slammy:symbol)\nHas_won_slammy(\"Modern Family\", \"Outstanding Comedy Series\").\n.decl Answer()\nAnswer() :- Has_won_slammy(\"Modern Family\", \"Comedy\").\nAnswer() :- Has_won_slammy(\"Modern Family\", \"Outstanding Comedy Series\").\n.output Answer\n\n", "completions": [".decl Has_won_slammy(Show:symbol, Slammy:symbol)\nHas_won_slammy(\"Modern Family\", \"Comedy\").\n.decl Has_won_slammy(Show:symbol, Slammy:symbol)\nHas_won_slammy(\"Modern Family\", \"Outstanding Comedy Series\").\n.decl Answer()\nAnswer() :- Has_won_slammy(\"Modern Family\", \"Comedy\").\nAnswer() :- Has_won_slammy(\"Modern Family\", \"Outstanding Comedy Series\").\n.output Answer\n\n"]}
{"id": 487, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"Larry King ex-wives\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"Larry King ex-wives\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"Larry King ex-wives\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"Larry King ex-wives\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 488, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jason\", \"Dr. Disrespect\").\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Disrespect\", \"Jason\").\n.decl Answer()\nAnswer() :- Has_name(\"Jason\", name1), Has_name(\"Dr. Disrespect\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jason\", \"Dr. Disrespect\").\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Disrespect\", \"Jason\").\n.decl Answer()\nAnswer() :- Has_name(\"Jason\", name1), Has_name(\"Dr. Disrespect\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 489, "answer": false, "completion": ".decl Is_in_area(Location:symbol, Area:symbol)\nIs_in_area(\"Iowa\", \"United States\").\nIs_in_area(\"United States\", \"Europe\").\nIs_in_area(\"Iowa\", \"Mississippi River\").\nIs_in_area(\"Mississippi River\", \"English Channel\").\n.decl Answer()\nAnswer() :- Is_in_area(\"Iowa\", area), Is_in_area(area, \"English Channel\").\n.output Answer\n\n", "completions": [".decl Is_in_area(Location:symbol, Area:symbol)\nIs_in_area(\"Iowa\", \"United States\").\nIs_in_area(\"United States\", \"Europe\").\nIs_in_area(\"Iowa\", \"Mississippi River\").\nIs_in_area(\"Mississippi River\", \"English Channel\").\n.decl Answer()\nAnswer() :- Is_in_area(\"Iowa\", area), Is_in_area(area, \"English Channel\").\n.output Answer\n\n"]}
{"id": 490, "answer": true, "completion": ".decl Married_to(Person:symbol, Spouse:symbol)\nMarried_to(\"Kublai Khan\", \"Khatun\").\nMarried_to(\"Kublai Khan\", \"Chimish\").\nMarried_to(\"Kublai Khan\", \"Bortkelu\").\nMarried_to(\"Kublai Khan\", \"Korla\").\nMarried_to(\"Kublai Khan\", \"Kara\").\nMarried_to(\"Kublai Khan\", \"Kuchu\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").", "completions": [".decl Married_to(Person:symbol, Spouse:symbol)\nMarried_to(\"Kublai Khan\", \"Khatun\").\nMarried_to(\"Kublai Khan\", \"Chimish\").\nMarried_to(\"Kublai Khan\", \"Bortkelu\").\nMarried_to(\"Kublai Khan\", \"Korla\").\nMarried_to(\"Kublai Khan\", \"Kara\").\nMarried_to(\"Kublai Khan\", \"Kuchu\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\").\nMarried_to(\"Kublai Khan\", \"Kuyun\")."]}
{"id": 491, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Flag of the United States\", \"red\").\nHas_color(\"Flag of the United States\", \"white\").\nHas_color(\"Flag of the United States\", \"blue\").\n.decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"John F. Kennedy\", \"leukophobia\").\n.decl Answer()\nAnswer() :- Has_phobia(\"John F. Kennedy\", phobia), Has_color(\"Flag of the United States\", color), phobia \\= color.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Flag of the United States\", \"red\").\nHas_color(\"Flag of the United States\", \"white\").\nHas_color(\"Flag of the United States\", \"blue\").\n.decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"John F. Kennedy\", \"leukophobia\").\n.decl Answer()\nAnswer() :- Has_phobia(\"John F. Kennedy\", phobia), Has_color(\"Flag of the United States\", color), phobia \\= color.\n.output Answer\n\n"]}
{"id": 492, "answer": false, "completion": ".decl Killed(Person:symbol, Victim:symbol)\nKilled(\"Lex Luthor\", \"Superman\").\nKilled(\"Lex Luthor\", \"Robin\").\n.decl Answer()\nAnswer() :- Killed(\"Lex Luthor\", victim), Killed(person, victim).\n.output Answer\n\n", "completions": [".decl Killed(Person:symbol, Victim:symbol)\nKilled(\"Lex Luthor\", \"Superman\").\nKilled(\"Lex Luthor\", \"Robin\").\n.decl Answer()\nAnswer() :- Killed(\"Lex Luthor\", victim), Killed(person, victim).\n.output Answer\n\n"]}
{"id": 493, "answer": true, "completion": ".decl Has_similarity(Object_A:symbol, Object_B:symbol, Similarity:float)\nHas_similarity(\"sweet potato\", \"pineapple\", 0.8).\n.decl Answer()\nAnswer() :- Has_similarity(\"sweet potato\", \"pineapple\", similarity), similarity > 0.5.\n.output Answer\n\n", "completions": [".decl Has_similarity(Object_A:symbol, Object_B:symbol, Similarity:float)\nHas_similarity(\"sweet potato\", \"pineapple\", 0.8).\n.decl Answer()\nAnswer() :- Has_similarity(\"sweet potato\", \"pineapple\", similarity), similarity > 0.5.\n.output Answer\n\n"]}
{"id": 494, "answer": false, "completion": ".decl Has_dental_insurance(Person:symbol)\nHas_dental_insurance(\"Lactobacillus\").\n.decl Has_dental_insurance(Person:symbol)\nHas_dental_insurance(\"John\").\n.decl Answer()\nAnswer() :- Has_dental_insurance(\"Lactobacillus\"), !Has_dental_insurance(\"John\").\n.output Answer\n\n", "completions": [".decl Has_dental_insurance(Person:symbol)\nHas_dental_insurance(\"Lactobacillus\").\n.decl Has_dental_insurance(Person:symbol)\nHas_dental_insurance(\"John\").\n.decl Answer()\nAnswer() :- Has_dental_insurance(\"Lactobacillus\"), !Has_dental_insurance(\"John\").\n.output Answer\n\n"]}
{"id": 495, "answer": false, "completion": ".decl Located_in_country(City:symbol, Country:symbol)\nLocated_in_country(\"Bucharest\", \"Romania\").\nLocated_in_country(\"Cairo\", \"Egypt\").\n.decl Answer()\nAnswer() :- Located_in_country(\"Bucharest\", country), Located_in_country(\"Cairo\", country), country != \"Egypt\".\n.output Answer\n\n", "completions": [".decl Located_in_country(City:symbol, Country:symbol)\nLocated_in_country(\"Bucharest\", \"Romania\").\nLocated_in_country(\"Cairo\", \"Egypt\").\n.decl Answer()\nAnswer() :- Located_in_country(\"Bucharest\", country), Located_in_country(\"Cairo\", country), country != \"Egypt\".\n.output Answer\n\n"]}
{"id": 496, "answer": true, "completion": ".decl Has_calories(Object:symbol, Calories:float)\nHas_calories(\"soy milk\", 120).\nHas_calories(\"Cardi B.\", 200).\n.decl Answer()\nAnswer() :- Has_calories(\"soy milk\", calories1), Has_calories(\"Cardi B.\", calories2), calories1 > calories2.\n.output Answer\n\n", "completions": [".decl Has_calories(Object:symbol, Calories:float)\nHas_calories(\"soy milk\", 120).\nHas_calories(\"Cardi B.\", 200).\n.decl Answer()\nAnswer() :- Has_calories(\"soy milk\", calories1), Has_calories(\"Cardi B.\", calories2), calories1 > calories2.\n.output Answer\n\n"]}
{"id": 497, "answer": false, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Arvanite Greek\", \"Albanian\").\nSpeaks(\"Albanian\", \"Albanian Declaration of Independence\").\n.decl Answer()\nAnswer() :- Speaks(\"Arvanite Greek\", language1), Speaks(\"Albanian\", language2), language1 = language2.\n.output Answer\n\n", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"Arvanite Greek\", \"Albanian\").\nSpeaks(\"Albanian\", \"Albanian Declaration of Independence\").\n.decl Answer()\nAnswer() :- Speaks(\"Arvanite Greek\", language1), Speaks(\"Albanian\", language2), language1 = language2.\n.output Answer\n\n"]}
{"id": 498, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"WW2\", \"1939-1945\").\nHappens_in_time(\"breakdancing\", \"1970s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"breakdancing\", time), Happens_in_time(\"WW2\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"WW2\", \"1939-1945\").\nHappens_in_time(\"breakdancing\", \"1970s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"breakdancing\", time), Happens_in_time(\"WW2\", time).\n.output Answer\n\n"]}
{"id": 499, "answer": true, "completion": ".decl Has_title(Person:symbol, Title:symbol)\nHas_title(\"Romeo\", \"Prince\").\nHas_title(\"Juliet\", \"Princess\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Romeo\", 15).\nHas_age(\"Juliet\", 15).\n.decl Answer()\nAnswer() :- Has_title(\"Romeo\", title), Has_title(\"Juliet\", title), Has_age(\"Romeo\", age1), Has_age(\"Juliet\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_title(Person:symbol, Title:symbol)\nHas_title(\"Romeo\", \"Prince\").\nHas_title(\"Juliet\", \"Princess\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Romeo\", 15).\nHas_age(\"Juliet\", 15).\n.decl Answer()\nAnswer() :- Has_title(\"Romeo\", title), Has_title(\"Juliet\", title), Has_age(\"Romeo\", age1), Has_age(\"Juliet\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 500, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Jon Brower Minnoch\", 1.5).\nHas_mass(\"Voyager 2\", 1.5).\n.decl Answer()\nAnswer() :- Has_mass(\"Jon Brower Minnoch\", mass1), Has_mass(\"Voyager 2\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Jon Brower Minnoch\", 1.5).\nHas_mass(\"Voyager 2\", 1.5).\n.decl Answer()\nAnswer() :- Has_mass(\"Jon Brower Minnoch\", mass1), Has_mass(\"Voyager 2\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 501, "answer": false, "completion": ".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Earth Day\", \"summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"June\", season).\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"July\", season).\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"August\", season).\n.output Answer\n\n", "completions": [".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Earth Day\", \"summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"June\", season).\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"July\", season).\nAnswer() :- Happens_in_season(\"Earth Day\", season), In_season(\"August\", season).\n.output Answer\n\n"]}
{"id": 502, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"bumblebees\", \"November\").\nHappens_in_time(\"United States presidential election\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"bumblebees\", time), Happens_in_time(\"United States presidential election\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"bumblebees\", \"November\").\nHappens_in_time(\"United States presidential election\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"bumblebees\", time), Happens_in_time(\"United States presidential election\", time).\n.output Answer\n\n"]}
{"id": 503, "answer": true, "completion": ".decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\nHas_sting_power(\"honey bee\", 1).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\nHas_sting_power(\"honey bee\", 1).\n.decl Answer()\nAnswer() :- Has_sting_power(\"honey bee\", sting_power1), Has_sting_power(\"honey bee\", sting_power2), sting_power1 > sting_power2.\n.output Answer\n\n", "completions": [".decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\nHas_sting_power(\"honey bee\", 1).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\nHas_sting_power(\"honey bee\", 1).\n.decl Answer()\nAnswer() :- Has_sting_power(\"honey bee\", sting_power1), Has_sting_power(\"honey bee\", sting_power2), sting_power1 > sting_power2.\n.output Answer\n\n"]}
{"id": 504, "answer": true, "completion": ".decl Has_first_letter(Name:symbol, Letter:symbol)\nHas_first_letter(\"Bubbles\", \"B\").\nHas_first_letter(\"Blossom\", \"B\").\nHas_first_letter(\"Buttercup\", \"B\").\n.decl Answer()\nAnswer() :- Has_first_letter(\"Bubbles\", letter1), Has_first_letter(\"Blossom\", letter2), Has_first_letter(\"Buttercup\", letter3), letter1 = letter2, letter2 = letter3.\n.output Answer\n\n", "completions": [".decl Has_first_letter(Name:symbol, Letter:symbol)\nHas_first_letter(\"Bubbles\", \"B\").\nHas_first_letter(\"Blossom\", \"B\").\nHas_first_letter(\"Buttercup\", \"B\").\n.decl Answer()\nAnswer() :- Has_first_letter(\"Bubbles\", letter1), Has_first_letter(\"Blossom\", letter2), Has_first_letter(\"Buttercup\", letter3), letter1 = letter2, letter2 = letter3.\n.output Answer\n\n"]}
{"id": 505, "answer": false, "completion": ".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"J.K Rowling\", \"Alan Rickman\").\nKnows(\"Alan Rickman\", \"J.K Rowling\").\n.decl Answer()\nAnswer() :- Knows(\"J.K Rowling\", person_a), Knows(person_a, \"Alan Rickman\").\n.output Answer\n\n", "completions": [".decl Knows(Person_A:symbol, Person_B:symbol)\nKnows(\"J.K Rowling\", \"Alan Rickman\").\nKnows(\"Alan Rickman\", \"J.K Rowling\").\n.decl Answer()\nAnswer() :- Knows(\"J.K Rowling\", person_a), Knows(person_a, \"Alan Rickman\").\n.output Answer\n\n"]}
{"id": 506, "answer": false, "completion": ".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Richard Nixon\", \"Hannah Nixon\").\n.decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Hannah Nixon\", \"Richard Nixon\").\n.decl Answer()\nAnswer() :- Has_parent(\"Richard Nixon\", \"Hannah Nixon\"), Has_parent(\"Richard Nixon\", \"Hannah Nixon\").\n.output Answer\n\n", "completions": [".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Richard Nixon\", \"Hannah Nixon\").\n.decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Hannah Nixon\", \"Richard Nixon\").\n.decl Answer()\nAnswer() :- Has_parent(\"Richard Nixon\", \"Hannah Nixon\"), Has_parent(\"Richard Nixon\", \"Hannah Nixon\").\n.output Answer\n\n"]}
{"id": 507, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Javier Sotomayor\", 1.75).\nHas_height(\"giraffe\", 4).\n.decl Answer()\nAnswer() :- Has_height(\"Javier Sotomayor\", height1), Has_height(\"giraffe\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Javier Sotomayor\", 1.75).\nHas_height(\"giraffe\", 4).\n.decl Answer()\nAnswer() :- Has_height(\"Javier Sotomayor\", height1), Has_height(\"giraffe\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 508, "answer": false, "completion": ".decl Likes(Person:symbol, Movie:symbol)\nLikes(\"Amy Winehouse\", \"Star Wars: Rogue One\").\n.decl Answer()\nAnswer() :- Likes(\"Amy Winehouse\", movie).\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Movie:symbol)\nLikes(\"Amy Winehouse\", \"Star Wars: Rogue One\").\n.decl Answer()\nAnswer() :- Likes(\"Amy Winehouse\", movie).\n.output Answer\n\n"]}
{"id": 509, "answer": false, "completion": ".decl Is_debt(Debtor:symbol, Creditor:symbol)\nIs_debt(\"Christopher Nolan\", \"Bob Kane\").\n.decl Is_creditor(Creditor:symbol, Debtor:symbol)\nIs_creditor(\"Bob Kane\", \"Christopher Nolan\").\n.decl Answer()\nAnswer() :- Is_debt(\"Christopher Nolan\", creditor), Is_creditor(creditor, debtor).\n.output Answer\n\n", "completions": [".decl Is_debt(Debtor:symbol, Creditor:symbol)\nIs_debt(\"Christopher Nolan\", \"Bob Kane\").\n.decl Is_creditor(Creditor:symbol, Debtor:symbol)\nIs_creditor(\"Bob Kane\", \"Christopher Nolan\").\n.decl Answer()\nAnswer() :- Is_debt(\"Christopher Nolan\", creditor), Is_creditor(creditor, debtor).\n.output Answer\n\n"]}
{"id": 510, "answer": true, "completion": ".decl Has_name(Place:symbol, Name:symbol)\nHas_name(\"Morris County\", \"Morris\").\n.decl Has_title(Person:symbol, Title:symbol)\nHas_title(\"Morris\", \"chief justice\").\n.decl Answer()\nAnswer() :- Has_name(\"Morris County\", name), Has_title(person, name).\n.output Answer\n\n", "completions": [".decl Has_name(Place:symbol, Name:symbol)\nHas_name(\"Morris County\", \"Morris\").\n.decl Has_title(Person:symbol, Title:symbol)\nHas_title(\"Morris\", \"chief justice\").\n.decl Answer()\nAnswer() :- Has_name(\"Morris County\", name), Has_title(person, name).\n.output Answer\n\n"]}
{"id": 511, "answer": true, "completion": ".decl Has_status(Person:symbol, Status:float)\nHas_status(\"Japanese serf\", 0.5).\nHas_status(\"English counterpart\", 0.9).\n.decl Answer()\nAnswer() :- Has_status(\"Japanese serf\", status1), Has_status(\"English counterpart\", status2), status1 > status2.\n.output Answer\n\n", "completions": [".decl Has_status(Person:symbol, Status:float)\nHas_status(\"Japanese serf\", 0.5).\nHas_status(\"English counterpart\", 0.9).\n.decl Answer()\nAnswer() :- Has_status(\"Japanese serf\", status1), Has_status(\"English counterpart\", status2), status1 > status2.\n.output Answer\n\n"]}
{"id": 512, "answer": false, "completion": ".decl Has_latitude(Location:symbol, Latitude:float)\nHas_latitude(\"North Pole\", 90).\nHas_latitude(\"South Pole\", -90).\nHas_latitude(\"Cape Town\", -34).\nHas_latitude(\"Cape Town\", -33).\nHas_latitude(\"Cape Town\", -32).\nHas_latitude(\"Cape Town\", -31).\nHas_latitude(\"Cape Town\", -30).\nHas_latitude(\"Cape Town\", -29).\nHas_latitude(\"Cape Town\", -28).\nHas_latitude(\"Cape Town\", -27).\nHas_latitude(\"Cape Town\", -26).\nHas_latitude(\"Cape Town\", -25).\nHas_latitude(\"Cape Town\", -24).\nHas_latitude(\"Cape Town\", -23).\nHas_latitude(\"Cape Town\", -22).\nHas_latitude(\"Cape Town\", -21).\nHas_latitude(\"Cape Town\", -20).\nHas_latitude(\"Cape Town\", -19).\nHas_latitude(\"Cape Town\", -18).\nHas_latitude(\"Cape Town\", -17).\nHas_latitude(\"Cape Town\", -16).\nHas_latitude(\"Cape Town\", -15).\nHas_latitude(\"Cape Town\", -14).\nHas_latitude(\"Cape Town\", -13).\nHas_latitude(\"Cape Town\", -12).\nHas_latitude(\"Cape Town\", -11).\nHas_latitude(\"Cape Town\", -10).\nHas_latitude(\"Cape Town\", -9).\nHas_latitude(\"Cape Town\", -8).\nHas_latitude(\"Cape Town\", -7).\nHas_latitude(\"Cape Town\", -6).\nHas_latitude(\"Cape Town\", -5).\nHas_latitude(\"Cape Town\", -4).\nHas_latitude(\"Cape Town\", -3).\nHas_latitude(\"Cape Town\", -2).\nHas_latitude(\"Cape Town\", -1).\nHas_latitude(\"Cape Town\", 0).\nHas_latitude(\"Cape Town\", 1).\nHas_latitude(\"Cape Town\", 2).\nHas_latitude(\"Cape Town\", 3).\nHas_latitude(\"Cape Town\", 4).\nHas_latitude(\"Cape Town\", 5).\nHas_latitude(\"Cape Town\", 6).\nHas_latitude(\"Cape Town\", 7).\nHas_latitude(\"Cape Town\", 8).\nHas_latitude(\"Cape Town\", 9).\nHas_latitude(\"Cape Town\", 10).\nHas_latitude(\"Cape Town\", 11).\nHas_latitude(\"Cape Town\", 12).\nHas_latitude(\"Cape Town\", 13).\nHas_latitude(\"Cape Town\", 14).\nHas_latitude(\"Cape Town\", 15).\nHas_latitude(\"Cape Town\", 16).\nHas_latitude(\"Cape Town\", 17).\nHas_latitude(\"Cape Town\", 18).\nHas_latitude(\"Cape Town\", 19).\nHas_latitude(\"Cape Town\", 20).\nHas_latitude(\"Cape Town\", 21).\nHas_latitude(\"Cape Town\", 22).\nHas_latitude(\"Cape Town\", 23).\nHas_latitude(\"Cape Town\", 24).\nHas_latitude(\"Cape Town\", 25).\nHas_latitude", "completions": [".decl Has_latitude(Location:symbol, Latitude:float)\nHas_latitude(\"North Pole\", 90).\nHas_latitude(\"South Pole\", -90).\nHas_latitude(\"Cape Town\", -34).\nHas_latitude(\"Cape Town\", -33).\nHas_latitude(\"Cape Town\", -32).\nHas_latitude(\"Cape Town\", -31).\nHas_latitude(\"Cape Town\", -30).\nHas_latitude(\"Cape Town\", -29).\nHas_latitude(\"Cape Town\", -28).\nHas_latitude(\"Cape Town\", -27).\nHas_latitude(\"Cape Town\", -26).\nHas_latitude(\"Cape Town\", -25).\nHas_latitude(\"Cape Town\", -24).\nHas_latitude(\"Cape Town\", -23).\nHas_latitude(\"Cape Town\", -22).\nHas_latitude(\"Cape Town\", -21).\nHas_latitude(\"Cape Town\", -20).\nHas_latitude(\"Cape Town\", -19).\nHas_latitude(\"Cape Town\", -18).\nHas_latitude(\"Cape Town\", -17).\nHas_latitude(\"Cape Town\", -16).\nHas_latitude(\"Cape Town\", -15).\nHas_latitude(\"Cape Town\", -14).\nHas_latitude(\"Cape Town\", -13).\nHas_latitude(\"Cape Town\", -12).\nHas_latitude(\"Cape Town\", -11).\nHas_latitude(\"Cape Town\", -10).\nHas_latitude(\"Cape Town\", -9).\nHas_latitude(\"Cape Town\", -8).\nHas_latitude(\"Cape Town\", -7).\nHas_latitude(\"Cape Town\", -6).\nHas_latitude(\"Cape Town\", -5).\nHas_latitude(\"Cape Town\", -4).\nHas_latitude(\"Cape Town\", -3).\nHas_latitude(\"Cape Town\", -2).\nHas_latitude(\"Cape Town\", -1).\nHas_latitude(\"Cape Town\", 0).\nHas_latitude(\"Cape Town\", 1).\nHas_latitude(\"Cape Town\", 2).\nHas_latitude(\"Cape Town\", 3).\nHas_latitude(\"Cape Town\", 4).\nHas_latitude(\"Cape Town\", 5).\nHas_latitude(\"Cape Town\", 6).\nHas_latitude(\"Cape Town\", 7).\nHas_latitude(\"Cape Town\", 8).\nHas_latitude(\"Cape Town\", 9).\nHas_latitude(\"Cape Town\", 10).\nHas_latitude(\"Cape Town\", 11).\nHas_latitude(\"Cape Town\", 12).\nHas_latitude(\"Cape Town\", 13).\nHas_latitude(\"Cape Town\", 14).\nHas_latitude(\"Cape Town\", 15).\nHas_latitude(\"Cape Town\", 16).\nHas_latitude(\"Cape Town\", 17).\nHas_latitude(\"Cape Town\", 18).\nHas_latitude(\"Cape Town\", 19).\nHas_latitude(\"Cape Town\", 20).\nHas_latitude(\"Cape Town\", 21).\nHas_latitude(\"Cape Town\", 22).\nHas_latitude(\"Cape Town\", 23).\nHas_latitude(\"Cape Town\", 24).\nHas_latitude(\"Cape Town\", 25).\nHas_latitude"]}
{"id": 513, "answer": true, "completion": ".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Swallow\", 15).\nHas_speed(\"American Woodcock\", 3).\n.decl Answer()\nAnswer() :- Has_speed(\"Swallow\", speed1), Has_speed(\"American Woodcock\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Swallow\", 15).\nHas_speed(\"American Woodcock\", 3).\n.decl Answer()\nAnswer() :- Has_speed(\"Swallow\", speed1), Has_speed(\"American Woodcock\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 514, "answer": false, "completion": ".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"cattle farmer\", \"farm\").\nHas_job(\"drum maker\", \"make drums\").\n.decl Answer()\nAnswer() :- Has_job(\"cattle farmer\", job1), Has_job(\"drum maker\", job2), job1 = job2.\n.output Answer\n\n", "completions": [".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"cattle farmer\", \"farm\").\nHas_job(\"drum maker\", \"make drums\").\n.decl Answer()\nAnswer() :- Has_job(\"cattle farmer\", job1), Has_job(\"drum maker\", job2), job1 = job2.\n.output Answer\n\n"]}
{"id": 515, "answer": true, "completion": ".decl Has_strings(Musician:symbol, Strings:float)\nHas_strings(\"drummer\", 3).\n.decl Answer()\nAnswer() :- Has_strings(\"drummer\", strings), strings > 0.\n.output Answer\n\n", "completions": [".decl Has_strings(Musician:symbol, Strings:float)\nHas_strings(\"drummer\", 3).\n.decl Answer()\nAnswer() :- Has_strings(\"drummer\", strings), strings > 0.\n.output Answer\n\n"]}
{"id": 516, "answer": false, "completion": ".decl Is_named_after(Object:symbol, Named_after:symbol)\nIs_named_after(\"Homer\", \"Homer who wrote the Odyssey\").\n.decl Answer()\nAnswer() :- Is_named_after(\"Homer\", named_after), Is_named_after(object, named_after).\n.output Answer\n\n", "completions": [".decl Is_named_after(Object:symbol, Named_after:symbol)\nIs_named_after(\"Homer\", \"Homer who wrote the Odyssey\").\n.decl Answer()\nAnswer() :- Is_named_after(\"Homer\", named_after), Is_named_after(object, named_after).\n.output Answer\n\n"]}
{"id": 517, "answer": false, "completion": ".decl Outlasted(Person:symbol, N_rumbles:float)\nOutlasted(\"Kane\", 6).\nOutlasted(\"Kane\", 7).\nOutlasted(\"Kane\", 8).\nOutlasted(\"Kane\", 9).\nOutlasted(\"Kane\", 10).\nOutlasted(\"Kane\", 11).\nOutlasted(\"Kane\", 12).\nOutlasted(\"Kane\", 13).\nOutlasted(\"Kane\", 14).\nOutlasted(\"Kane\", 15).\nOutlasted(\"Kane\", 16).\nOutlasted(\"Kane\", 17).\nOutlasted(\"Kane\", 18).\nOutlasted(\"Kane\", 19).\nOutlasted(\"Kane\", 20).\nOutlasted(\"Kane\", 21).\nOutlasted(\"Kane\", 22).\nOutlasted(\"Kane\", 23).\nOutlasted(\"Kane\", 24).\nOutlasted(\"Kane\", 25).\nOutlasted(\"Kane\", 26).\nOutlasted(\"Kane\", 27).\nOutlasted(\"Kane\", 28).\nOutlasted(\"Kane\", 29).\nOutlasted(\"Kane\", 30).\nOutlasted(\"Kane\", 31).\nOutlasted(\"Kane\", 32).\nOutlasted(\"Kane\", 33).\nOutlasted(\"Kane\", 34).\nOutlasted(\"Kane\", 35).\nOutlasted(\"Kane\", 36).\nOutlasted(\"Kane\", 37).\nOutlasted(\"Kane\", 38).\nOutlasted(\"Kane\", 39).\nOutlasted(\"Kane\", 40).\nOutlasted(\"Kane\", 41).\nOutlasted(\"Kane\", 42).\nOutlasted(\"Kane\", 43).\nOutlasted(\"Kane\", 44).\nOutlasted(\"Kane\", 45).\nOutlasted(\"Kane\", 46).\nOutlasted(\"Kane\", 47).\nOutlasted(\"Kane\", 48).\nOutlasted(\"Kane\", 49).\nOutlasted(\"Kane\", 50).\nOutlasted(\"Kane\", 51).\nOutlasted(\"Kane\", 52).\nOutlasted(\"Kane\", 53).\nOutlasted(\"Kane\", 54).\nOutlasted(\"Kane\", 55).\nOutlasted(\"Kane\", 56).\nOutlasted(\"Kane\", 57).\nOutlasted(\"Kane\", 58).\nOutlasted(\"Kane\", 59).\nOutlasted(\"Kane\", 60).\nOutlasted(\"Kane\", 61).\nOutlasted(\"Kane\", 62).\nOutlasted(\"Kane\", 63).\nOutlasted(\"Kane\", 64).\nOutlasted(\"Kane\", 65).\nOutlasted(\"Kane\", 66).\nOutlasted(\"Kane\", 67).\nOutlasted(\"Kane\", 68).\nOutlasted(\"Kane\", 69).\nOutlasted(\"Kane\", 70).\nOutlasted(\"Kane\", 71).\nOutlasted(\"Kane\", 72).\nOutlasted(\"Kane\", 73).\nOutlasted(\"Kane\", 74).\nOutlasted(\"Kane\", 75).\nOutlasted(\"Kane\", 76).\nOutlasted(\"Kane\", 77).\nOutlasted(\"Kane\", 78).\nOutlasted(\"Kane\", 79).\nOutlasted(\"Kane\", 80).\nOutlasted(\"Kane\", 81).\nOutlasted(\"Kane\", 82).\nOutlasted(\"Kane\", 83).\n", "completions": [".decl Outlasted(Person:symbol, N_rumbles:float)\nOutlasted(\"Kane\", 6).\nOutlasted(\"Kane\", 7).\nOutlasted(\"Kane\", 8).\nOutlasted(\"Kane\", 9).\nOutlasted(\"Kane\", 10).\nOutlasted(\"Kane\", 11).\nOutlasted(\"Kane\", 12).\nOutlasted(\"Kane\", 13).\nOutlasted(\"Kane\", 14).\nOutlasted(\"Kane\", 15).\nOutlasted(\"Kane\", 16).\nOutlasted(\"Kane\", 17).\nOutlasted(\"Kane\", 18).\nOutlasted(\"Kane\", 19).\nOutlasted(\"Kane\", 20).\nOutlasted(\"Kane\", 21).\nOutlasted(\"Kane\", 22).\nOutlasted(\"Kane\", 23).\nOutlasted(\"Kane\", 24).\nOutlasted(\"Kane\", 25).\nOutlasted(\"Kane\", 26).\nOutlasted(\"Kane\", 27).\nOutlasted(\"Kane\", 28).\nOutlasted(\"Kane\", 29).\nOutlasted(\"Kane\", 30).\nOutlasted(\"Kane\", 31).\nOutlasted(\"Kane\", 32).\nOutlasted(\"Kane\", 33).\nOutlasted(\"Kane\", 34).\nOutlasted(\"Kane\", 35).\nOutlasted(\"Kane\", 36).\nOutlasted(\"Kane\", 37).\nOutlasted(\"Kane\", 38).\nOutlasted(\"Kane\", 39).\nOutlasted(\"Kane\", 40).\nOutlasted(\"Kane\", 41).\nOutlasted(\"Kane\", 42).\nOutlasted(\"Kane\", 43).\nOutlasted(\"Kane\", 44).\nOutlasted(\"Kane\", 45).\nOutlasted(\"Kane\", 46).\nOutlasted(\"Kane\", 47).\nOutlasted(\"Kane\", 48).\nOutlasted(\"Kane\", 49).\nOutlasted(\"Kane\", 50).\nOutlasted(\"Kane\", 51).\nOutlasted(\"Kane\", 52).\nOutlasted(\"Kane\", 53).\nOutlasted(\"Kane\", 54).\nOutlasted(\"Kane\", 55).\nOutlasted(\"Kane\", 56).\nOutlasted(\"Kane\", 57).\nOutlasted(\"Kane\", 58).\nOutlasted(\"Kane\", 59).\nOutlasted(\"Kane\", 60).\nOutlasted(\"Kane\", 61).\nOutlasted(\"Kane\", 62).\nOutlasted(\"Kane\", 63).\nOutlasted(\"Kane\", 64).\nOutlasted(\"Kane\", 65).\nOutlasted(\"Kane\", 66).\nOutlasted(\"Kane\", 67).\nOutlasted(\"Kane\", 68).\nOutlasted(\"Kane\", 69).\nOutlasted(\"Kane\", 70).\nOutlasted(\"Kane\", 71).\nOutlasted(\"Kane\", 72).\nOutlasted(\"Kane\", 73).\nOutlasted(\"Kane\", 74).\nOutlasted(\"Kane\", 75).\nOutlasted(\"Kane\", 76).\nOutlasted(\"Kane\", 77).\nOutlasted(\"Kane\", 78).\nOutlasted(\"Kane\", 79).\nOutlasted(\"Kane\", 80).\nOutlasted(\"Kane\", 81).\nOutlasted(\"Kane\", 82).\nOutlasted(\"Kane\", 83).\n"]}
{"id": 518, "answer": true, "completion": ".decl Located_in_ocean(Location:symbol, Ocean:symbol)\nLocated_in_ocean(\"Mariana Trench\", \"Pacific Ocean\").\n.decl Located_in_ocean(Location:symbol, Ocean:symbol)\nLocated_in_ocean(\"Mariana Trench\", \"Atlantic Ocean\").\n.decl Answer()\nAnswer() :- Located_in_ocean(\"Rick and Morty\", \"Mariana Trench\").\n.output Answer\n\n", "completions": [".decl Located_in_ocean(Location:symbol, Ocean:symbol)\nLocated_in_ocean(\"Mariana Trench\", \"Pacific Ocean\").\n.decl Located_in_ocean(Location:symbol, Ocean:symbol)\nLocated_in_ocean(\"Mariana Trench\", \"Atlantic Ocean\").\n.decl Answer()\nAnswer() :- Located_in_ocean(\"Rick and Morty\", \"Mariana Trench\").\n.output Answer\n\n"]}
{"id": 519, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"winged statuette\", \"winged\").\nHas_property(\"Law & Order\", \"creator\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"home\", \"creator\").\n.decl Answer()\nAnswer() :- Has_property(\"winged statuette\", property), Has_property(\"Law & Order\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"winged statuette\", \"winged\").\nHas_property(\"Law & Order\", \"creator\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"home\", \"creator\").\n.decl Answer()\nAnswer() :- Has_property(\"winged statuette\", property), Has_property(\"Law & Order\", property).\n.output Answer\n\n"]}
{"id": 520, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"clouded leopard\", 2).\nHas_n_members(\"pangolin\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"clouded leopard\", n_members1), Has_n_members(\"pangolin\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"clouded leopard\", 2).\nHas_n_members(\"pangolin\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"clouded leopard\", n_members1), Has_n_members(\"pangolin\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 521, "answer": true, "completion": ".decl Has_name(Creature:symbol, Name:symbol)\nHas_name(\"chimera\", \"Chiron\").\nHas_name(\"chimera\", \"Ceres\").\nHas_name(\"chimera\", \"Pluto\").\n.decl Has_name(Small_Solar_System_Body:symbol, Name:symbol)\nHas_name(\"Ceres\", \"Ceres\").\nHas_name(\"Pluto\", \"Pluto\").\n.decl Answer()\nAnswer() :- Has_name(\"chimera\", name), Has_name(Small_Solar_System_Body, name).\n.output Answer\n\n", "completions": [".decl Has_name(Creature:symbol, Name:symbol)\nHas_name(\"chimera\", \"Chiron\").\nHas_name(\"chimera\", \"Ceres\").\nHas_name(\"chimera\", \"Pluto\").\n.decl Has_name(Small_Solar_System_Body:symbol, Name:symbol)\nHas_name(\"Ceres\", \"Ceres\").\nHas_name(\"Pluto\", \"Pluto\").\n.decl Answer()\nAnswer() :- Has_name(\"chimera\", name), Has_name(Small_Solar_System_Body, name).\n.output Answer\n\n"]}
{"id": 522, "answer": true, "completion": ".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Lionel Richie\", \"holistic medicine\").\n.decl Answer()\nAnswer() :- Believes_in(\"Lionel Richie\", belief).\n.output Answer\n\n", "completions": [".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Lionel Richie\", \"holistic medicine\").\n.decl Answer()\nAnswer() :- Believes_in(\"Lionel Richie\", belief).\n.output Answer\n\n"]}
{"id": 523, "answer": true, "completion": ".decl Has_n_hosts(Show:symbol, N_hosts:float)\nHas_n_hosts(\"Dancing With The Stars\", 2).\n.decl Answer()\nAnswer() :- Has_n_hosts(\"Dancing With The Stars\", n_hosts), n_hosts = 2.\n.output Answer\n\n", "completions": [".decl Has_n_hosts(Show:symbol, N_hosts:float)\nHas_n_hosts(\"Dancing With The Stars\", 2).\n.decl Answer()\nAnswer() :- Has_n_hosts(\"Dancing With The Stars\", n_hosts), n_hosts = 2.\n.output Answer\n\n"]}
{"id": 524, "answer": false, "completion": ".decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Caspian Sea\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Atlantic Ocean\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Pacific Ocean\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Indian Ocean\").\n.decl Answer()\nAnswer() :- Is_in_area(\"salmon\", area1), Is_in_area(\"salmon\", area2), area1 != area2.\n.output Answer\n\n", "completions": [".decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Caspian Sea\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Atlantic Ocean\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Pacific Ocean\").\n.decl Is_in_area(Animal:symbol, Area:symbol)\nIs_in_area(\"salmon\", \"Indian Ocean\").\n.decl Answer()\nAnswer() :- Is_in_area(\"salmon\", area1), Is_in_area(\"salmon\", area2), area1 != area2.\n.output Answer\n\n"]}
{"id": 525, "answer": true, "completion": ".decl Has_route(Train:symbol, Route:symbol)\nHas_route(\"Amtrak\", \"underworld\").\n.decl Answer()\nAnswer() :- Has_route(\"Amtrak\", route), route = \"underworld\".\n.output Answer\n\n", "completions": [".decl Has_route(Train:symbol, Route:symbol)\nHas_route(\"Amtrak\", \"underworld\").\n.decl Answer()\nAnswer() :- Has_route(\"Amtrak\", route), route = \"underworld\".\n.output Answer\n\n"]}
{"id": 526, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ryan Reynolds\", \"Chinook salmon\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Chinook salmon\", 6).\n.decl Answer()\nAnswer() :- Eats(\"Ryan Reynolds\", salmon), Has_n_members(\"Chinook salmon\", n_members), n_members > 6.\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ryan Reynolds\", \"Chinook salmon\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Chinook salmon\", 6).\n.decl Answer()\nAnswer() :- Eats(\"Ryan Reynolds\", salmon), Has_n_members(\"Chinook salmon\", n_members), n_members > 6.\n.output Answer\n\n"]}
{"id": 527, "answer": true, "completion": ".decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Nicholas II\", \"Alexander III\").\nHas_father(\"Nicholas II\", \"Alexander IV\").\nHas_father(\"Nicholas II\", \"Nicholas I\").\n.decl Has_daredevil_son(Person:symbol, Daredevil_son:symbol)\nHas_daredevil_son(\"Nicholas II\", \"Alexander IV\").\n.decl Answer()\nAnswer() :- Has_father(\"Nicholas II\", father), Has_daredevil_son(\"Nicholas II\", daredevil_son), daredevil_son = father.\n.output Answer\n\n", "completions": [".decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Nicholas II\", \"Alexander III\").\nHas_father(\"Nicholas II\", \"Alexander IV\").\nHas_father(\"Nicholas II\", \"Nicholas I\").\n.decl Has_daredevil_son(Person:symbol, Daredevil_son:symbol)\nHas_daredevil_son(\"Nicholas II\", \"Alexander IV\").\n.decl Answer()\nAnswer() :- Has_father(\"Nicholas II\", father), Has_daredevil_son(\"Nicholas II\", daredevil_son), daredevil_son = father.\n.output Answer\n\n"]}
{"id": 528, "answer": true, "completion": ".decl Has_vowel(Letter:symbol)\nHas_vowel(\"a\").\nHas_vowel(\"e\").\nHas_vowel(\"i\").\nHas_vowel(\"o\").\nHas_vowel(\"u\").\n.decl Has_row(Keyboard_row:symbol)\nHas_row(\"qwerty\").\n.decl Has_column(Keyboard_column:symbol)\nHas_column(\"qwerty\").\n.decl Answer()\nAnswer() :- Has_vowel(letter), Has_row(row), Has_column(column), row = \"qwerty\", column = letter.\n.output Answer\n\n", "completions": [".decl Has_vowel(Letter:symbol)\nHas_vowel(\"a\").\nHas_vowel(\"e\").\nHas_vowel(\"i\").\nHas_vowel(\"o\").\nHas_vowel(\"u\").\n.decl Has_row(Keyboard_row:symbol)\nHas_row(\"qwerty\").\n.decl Has_column(Keyboard_column:symbol)\nHas_column(\"qwerty\").\n.decl Answer()\nAnswer() :- Has_vowel(letter), Has_row(row), Has_column(column), row = \"qwerty\", column = letter.\n.output Answer\n\n"]}
{"id": 529, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pacific War\", \"1941-45\").\nHappens_in_time(\"musket\", \"1941-45\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"musket\", time), Happens_in_time(\"Pacific War\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pacific War\", \"1941-45\").\nHappens_in_time(\"musket\", \"1941-45\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"musket\", time), Happens_in_time(\"Pacific War\", time).\n.output Answer\n\n"]}
{"id": 530, "answer": false, "completion": ".decl Associated_with(Person:symbol, Animal:symbol)\nAssociated_with(\"Noah\", \"dove\").\n.decl Answer()\nAnswer() :- Associated_with(\"Noah\", animal).\n.output Answer\n\n", "completions": [".decl Associated_with(Person:symbol, Animal:symbol)\nAssociated_with(\"Noah\", \"dove\").\n.decl Answer()\nAnswer() :- Associated_with(\"Noah\", animal).\n.output Answer\n\n"]}
{"id": 531, "answer": true, "completion": ".decl Has_diagnosis(Person:symbol, Diagnosis:symbol)\nHas_diagnosis(\"Britney Spears\", \"bipolar disorder\").\n.decl Has_symptom(Diagnosis:symbol, Symptom:symbol)\nHas_symptom(\"bipolar disorder\", \"depression\").\nHas_symptom(\"bipolar disorder\", \"mania\").\n.decl Answer()\nAnswer() :- Has_diagnosis(\"Britney Spears\", diagnosis), Has_symptom(diagnosis, symptom), symptom = \"mania\".\n.output Answer\n\n", "completions": [".decl Has_diagnosis(Person:symbol, Diagnosis:symbol)\nHas_diagnosis(\"Britney Spears\", \"bipolar disorder\").\n.decl Has_symptom(Diagnosis:symbol, Symptom:symbol)\nHas_symptom(\"bipolar disorder\", \"depression\").\nHas_symptom(\"bipolar disorder\", \"mania\").\n.decl Answer()\nAnswer() :- Has_diagnosis(\"Britney Spears\", diagnosis), Has_symptom(diagnosis, symptom), symptom = \"mania\".\n.output Answer\n\n"]}
{"id": 532, "answer": true, "completion": ".decl Has_danger(Animal:symbol, Danger:float)\nHas_danger(\"Cassowary\", 0.5).\nHas_danger(\"crane\", 0.2).\n.decl Answer()\nAnswer() :- Has_danger(\"Cassowary\", danger1), Has_danger(\"crane\", danger2), danger1 > danger2.\n.output Answer\n\n", "completions": [".decl Has_danger(Animal:symbol, Danger:float)\nHas_danger(\"Cassowary\", 0.5).\nHas_danger(\"crane\", 0.2).\n.decl Answer()\nAnswer() :- Has_danger(\"Cassowary\", danger1), Has_danger(\"crane\", danger2), danger1 > danger2.\n.output Answer\n\n"]}
{"id": 533, "answer": false, "completion": ".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Mark Twain\", \"Missouri\").\n.decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Thomas Edison\", \"New York\").\n.decl Answer()\nAnswer() :- Was_born(\"Mark Twain\", place), Was_born(\"Thomas Edison\", place).\n.output Answer\n\n", "completions": [".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Mark Twain\", \"Missouri\").\n.decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Thomas Edison\", \"New York\").\n.decl Answer()\nAnswer() :- Was_born(\"Mark Twain\", place), Was_born(\"Thomas Edison\", place).\n.output Answer\n\n"]}
{"id": 534, "answer": false, "completion": ".decl Used_as_symbol(Event:symbol, Symbol:symbol)\nUsed_as_symbol(\"French Revolution\", \"Eiffel tower\").\n.decl Answer()\nAnswer() :- Used_as_symbol(\"French Revolution\", symbol1), Used_as_symbol(\"Eiffel tower\", symbol2), symbol1 = symbol2.\n.output Answer\n\n", "completions": [".decl Used_as_symbol(Event:symbol, Symbol:symbol)\nUsed_as_symbol(\"French Revolution\", \"Eiffel tower\").\n.decl Answer()\nAnswer() :- Used_as_symbol(\"French Revolution\", symbol1), Used_as_symbol(\"Eiffel tower\", symbol2), symbol1 = symbol2.\n.output Answer\n\n"]}
{"id": 535, "answer": false, "completion": ".decl Is_period(Period:symbol)\nIs_period(\"Baroque\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"art\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"music\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"dance\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"literature\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"architecture\").\n.decl Answer()\nAnswer() :- Is_period(\"Baroque\"), Is_period_of(\"Baroque\", \"art\"), Is_period_of(\"Baroque\", \"music\"), Is_period_of(\"Baroque\", \"dance\"), Is_period_of(\"Baroque\", \"literature\"), Is_period_of(\"Baroque\", \"architecture\").\n.output Answer\n\n", "completions": [".decl Is_period(Period:symbol)\nIs_period(\"Baroque\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"art\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"music\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"dance\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"literature\").\n.decl Is_period_of(Period:symbol, Style:symbol)\nIs_period_of(\"Baroque\", \"architecture\").\n.decl Answer()\nAnswer() :- Is_period(\"Baroque\"), Is_period_of(\"Baroque\", \"art\"), Is_period_of(\"Baroque\", \"music\"), Is_period_of(\"Baroque\", \"dance\"), Is_period_of(\"Baroque\", \"literature\"), Is_period_of(\"Baroque\", \"architecture\").\n.output Answer\n\n"]}
{"id": 536, "answer": false, "completion": ".decl Has_publisher(Comic:symbol, Publisher:symbol)\nHas_publisher(\"Avengers Comics\", \"Marvel\").\nHas_publisher(\"DC Comics\", \"DC\").\n.decl Answer()\nAnswer() :- Has_publisher(\"Avengers Comics\", publisher1), Has_publisher(\"DC Comics\", publisher2), publisher1 \\= publisher2.\n.output Answer\n\n", "completions": [".decl Has_publisher(Comic:symbol, Publisher:symbol)\nHas_publisher(\"Avengers Comics\", \"Marvel\").\nHas_publisher(\"DC Comics\", \"DC\").\n.decl Answer()\nAnswer() :- Has_publisher(\"Avengers Comics\", publisher1), Has_publisher(\"DC Comics\", publisher2), publisher1 \\= publisher2.\n.output Answer\n\n"]}
{"id": 537, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name(\"Queen Elizabeth The Queen Mother\", \"Elizabeth The Queen Mother\").\nHas_name"]}
{"id": 538, "answer": false, "completion": ".decl Has_effect(Drug:symbol, Effect:symbol)\nHas_effect(\"Cuba Libre\", \"insomnia\").\n.decl Has_ingredient(Drug:symbol, Ingredient:symbol)\nHas_ingredient(\"Cuba Libre\", \"rum\").\n.decl Answer()\nAnswer() :- Has_effect(\"Cuba Libre\", effect), Has_ingredient(\"Cuba Libre\", ingredient), effect == \"insomnia\", ingredient == \"rum\".\n.output Answer\n\n", "completions": [".decl Has_effect(Drug:symbol, Effect:symbol)\nHas_effect(\"Cuba Libre\", \"insomnia\").\n.decl Has_ingredient(Drug:symbol, Ingredient:symbol)\nHas_ingredient(\"Cuba Libre\", \"rum\").\n.decl Answer()\nAnswer() :- Has_effect(\"Cuba Libre\", effect), Has_ingredient(\"Cuba Libre\", ingredient), effect == \"insomnia\", ingredient == \"rum\".\n.output Answer\n\n"]}
{"id": 539, "answer": true, "completion": ".decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"United Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"American Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Delta Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"USAir\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Southwest Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Alaska Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Frontier Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"JetBlue Airways\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Spirit Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"SkyWest Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"United Parcel Service\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Target\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Kroger\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Target\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Kroger\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_", "completions": [".decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"United Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"American Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Delta Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"USAir\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Southwest Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Alaska Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Frontier Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"JetBlue Airways\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Spirit Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"SkyWest Airlines\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"United Parcel Service\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Target\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Kroger\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Target\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Kroger\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Amazon.com\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Walmart\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_by(\"Glycol\", \"Costco\").\n.decl Bought_by(Object:symbol, Buyer:symbol)\nBought_"]}
{"id": 540, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Swiss Guard\", 5).\n.decl Has_n_chairs(Group:symbol, N_chairs:float)\nHas_n_chairs(\"Virginia General Assembly\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"Swiss Guard\", n_members), Has_n_chairs(\"Virginia General Assembly\", n_chairs), n_members > n_chairs.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Swiss Guard\", 5).\n.decl Has_n_chairs(Group:symbol, N_chairs:float)\nHas_n_chairs(\"Virginia General Assembly\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"Swiss Guard\", n_members), Has_n_chairs(\"Virginia General Assembly\", n_chairs), n_members > n_chairs.\n.output Answer\n\n"]}
{"id": 541, "answer": true, "completion": ".decl Likes(Person:symbol, Object:symbol)\nLikes(\"Julio Gonzalez\", \"acetylene\").\n.decl Answer()\nAnswer() :- Likes(\"Julio Gonzalez\", object).\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Object:symbol)\nLikes(\"Julio Gonzalez\", \"acetylene\").\n.decl Answer()\nAnswer() :- Likes(\"Julio Gonzalez\", object).\n.output Answer\n\n"]}
{"id": 542, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Frigatebirds\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Ontario\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Frigatebirds\", n_members1), Has_n_members(\"Ontario\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Frigatebirds\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Ontario\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Frigatebirds\", n_members1), Has_n_members(\"Ontario\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 543, "answer": false, "completion": ".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Statue of Liberty\", \"New York\").\nIs_in_location(\"Statue of Freedom\", \"New York\").\nIs_in_location(\"Statue of Liberty\", \"New Jersey\").\nIs_in_location(\"Statue of Freedom\", \"New Jersey\").\n.decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Statue of Liberty\", \"New York\").\nIs_in_location(\"Statue of Freedom\", \"New York\").\nIs_in_location(\"Statue of Liberty\", \"New Jersey\").\nIs_in_location(\"Statue of Freedom\", \"New Jersey\").\n.decl Answer()\nAnswer() :- Is_in_location(\"Statue of Liberty\", \"New York\"), Is_in_location(\"Statue of Freedom\", \"New York\").\nAnswer() :- Is_in_location(\"Statue of Liberty\", \"New Jersey\"), Is_in_location(\"Statue of Freedom\", \"New Jersey\").\n.output Answer\n\n", "completions": [".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Statue of Liberty\", \"New York\").\nIs_in_location(\"Statue of Freedom\", \"New York\").\nIs_in_location(\"Statue of Liberty\", \"New Jersey\").\nIs_in_location(\"Statue of Freedom\", \"New Jersey\").\n.decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"Statue of Liberty\", \"New York\").\nIs_in_location(\"Statue of Freedom\", \"New York\").\nIs_in_location(\"Statue of Liberty\", \"New Jersey\").\nIs_in_location(\"Statue of Freedom\", \"New Jersey\").\n.decl Answer()\nAnswer() :- Is_in_location(\"Statue of Liberty\", \"New York\"), Is_in_location(\"Statue of Freedom\", \"New York\").\nAnswer() :- Is_in_location(\"Statue of Liberty\", \"New Jersey\"), Is_in_location(\"Statue of Freedom\", \"New Jersey\").\n.output Answer\n\n"]}
{"id": 544, "answer": false, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Snickers\", 500).\nHas_calories(\"apple\", 50).\n.decl Has_weight(Food:symbol, Weight:float)\nHas_weight(\"Snickers\", 100).\nHas_weight(\"apple\", 50).\n.decl Answer()\nAnswer() :- Has_calories(\"Snickers\", calories), Has_calories(\"apple\", calories2), calories > calories2.\nAnswer() :- Has_weight(\"Snickers\", weight), Has_weight(\"apple\", weight2), weight > weight2.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Snickers\", 500).\nHas_calories(\"apple\", 50).\n.decl Has_weight(Food:symbol, Weight:float)\nHas_weight(\"Snickers\", 100).\nHas_weight(\"apple\", 50).\n.decl Answer()\nAnswer() :- Has_calories(\"Snickers\", calories), Has_calories(\"apple\", calories2), calories > calories2.\nAnswer() :- Has_weight(\"Snickers\", weight), Has_weight(\"apple\", weight2), weight > weight2.\n.output Answer\n\n"]}
{"id": 545, "answer": true, "completion": ".decl Has_n_parts(Object:symbol, N_parts:float)\nHas_n_parts(\"skull\", 1).\n.decl Answer()\nAnswer() :- Has_n_parts(\"skull\", n_parts), n_parts = 1.\n.output Answer\n\n", "completions": [".decl Has_n_parts(Object:symbol, N_parts:float)\nHas_n_parts(\"skull\", 1).\n.decl Answer()\nAnswer() :- Has_n_parts(\"skull\", n_parts), n_parts = 1.\n.output Answer\n\n"]}
{"id": 546, "answer": false, "completion": ".decl Has_watched(Person:symbol, Event:symbol)\nHas_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\nHas_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\n.decl Answer()\nAnswer() :- Has_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\n.output Answer\n\n", "completions": [".decl Has_watched(Person:symbol, Event:symbol)\nHas_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\nHas_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\n.decl Answer()\nAnswer() :- Has_watched(\"Jack Dempsey\", \"Mayweather vs McGregor\").\n.output Answer\n\n"]}
{"id": 547, "answer": false, "completion": ".decl From(Person:symbol, Country:symbol)\nFrom(\"Rurouni Kenshin\", \"Japan\").\nFrom(\"Nobunaga\", \"Japan\").\n.decl Answer()\nAnswer() :- From(\"Rurouni Kenshin\", country1), From(\"Nobunaga\", country2), country1 = country2.\n.output Answer\n\n", "completions": [".decl From(Person:symbol, Country:symbol)\nFrom(\"Rurouni Kenshin\", \"Japan\").\nFrom(\"Nobunaga\", \"Japan\").\n.decl Answer()\nAnswer() :- From(\"Rurouni Kenshin\", country1), From(\"Nobunaga\", country2), country1 = country2.\n.output Answer\n\n"]}
{"id": 548, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Darth Vader\", 2.03).\nHas_height(\"Bill Walton\", 2.13).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Darth Vader\", 100).\nHas_weight(\"Bill Walton\", 100).\n.decl Has_vertical_reach(Person:symbol, Vertical_reach:float)\nHas_vertical_reach(\"Darth Vader\", 2.03).\nHas_vertical_reach(\"Bill Walton\", 2.13).\n.decl Has_wingspan(Person:symbol, Wingspan:float)\nHas_wingspan(\"Darth Vader\", 2.03).\nHas_wingspan(\"Bill Walton\", 2.13).\n.decl Answer()\nAnswer() :- Has_height(\"Darth Vader\", height1), Has_height(\"Bill Walton\", height2), Has_weight(\"Darth Vader\", weight1), Has_weight(\"Bill Walton\", weight2), Has_vertical_reach(\"Darth Vader\", vertical_reach1), Has_vertical_reach(\"Bill Walton\", vertical_reach2), Has_wingspan(\"Darth Vader\", wingspan1), Has_wingspan(\"Bill Walton\", wingspan2), height1 > height2, weight1 > weight2, vertical_reach1 > vertical_reach2, wingspan1 > wingspan2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Darth Vader\", 2.03).\nHas_height(\"Bill Walton\", 2.13).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Darth Vader\", 100).\nHas_weight(\"Bill Walton\", 100).\n.decl Has_vertical_reach(Person:symbol, Vertical_reach:float)\nHas_vertical_reach(\"Darth Vader\", 2.03).\nHas_vertical_reach(\"Bill Walton\", 2.13).\n.decl Has_wingspan(Person:symbol, Wingspan:float)\nHas_wingspan(\"Darth Vader\", 2.03).\nHas_wingspan(\"Bill Walton\", 2.13).\n.decl Answer()\nAnswer() :- Has_height(\"Darth Vader\", height1), Has_height(\"Bill Walton\", height2), Has_weight(\"Darth Vader\", weight1), Has_weight(\"Bill Walton\", weight2), Has_vertical_reach(\"Darth Vader\", vertical_reach1), Has_vertical_reach(\"Bill Walton\", vertical_reach2), Has_wingspan(\"Darth Vader\", wingspan1), Has_wingspan(\"Bill Walton\", wingspan2), height1 > height2, weight1 > weight2, vertical_reach1 > vertical_reach2, wingspan1 > wingspan2.\n.output Answer\n\n"]}
{"id": 549, "answer": true, "completion": ".decl Is_used_to_peer_review(Tool:symbol)\nIs_used_to_peer_review(\"popular science\").\n.decl Is_used_to_peer_review(Tool:symbol)\nIs_used_to_peer_review(\"scientific method\").\n.decl Answer()\nAnswer() :- Is_used_to_peer_review(\"scientific method\"), Is_used_to_peer_review(\"popular science\").\n.output Answer\n\n", "completions": [".decl Is_used_to_peer_review(Tool:symbol)\nIs_used_to_peer_review(\"popular science\").\n.decl Is_used_to_peer_review(Tool:symbol)\nIs_used_to_peer_review(\"scientific method\").\n.decl Answer()\nAnswer() :- Is_used_to_peer_review(\"scientific method\"), Is_used_to_peer_review(\"popular science\").\n.output Answer\n\n"]}
{"id": 550, "answer": true, "completion": ".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Classical\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Viola\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Viola Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Bass\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Bass Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Viola\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Viola Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Bass\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Bass Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart", "completions": [".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Classical\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Viola\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Viola Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Bass\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Bass Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Viola\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Viola Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Bass\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Bass Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Opera\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Symphony\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Chamber Music\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Piano Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Piano\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"String Quartet\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Cello\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Cello Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Solo Violin\").\nHas_genre(\"Wolfgang Amadeus Mozart\", \"Violin Concerto\").\nHas_genre(\"Wolfgang Amadeus Mozart"]}
{"id": 551, "answer": false, "completion": ".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Snow White\", \"red\").\nHas_hair_color(\"Cinderella\", \"blond\").\nHas_hair_color(\"Rapunzel\", \"brown\").\nHas_hair_color(\"Belle\", \"brown\").\nHas_hair_color(\"Ariel\", \"red\").\nHas_hair_color(\"Mulan\", \"black\").\nHas_hair_color(\"Tiana\", \"brown\").\nHas_hair_color(\"Moana\", \"brown\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Snow White\", hair_color), Has_hair_color(\"Belle\", hair_color).\n.output Answer\n\n", "completions": [".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Snow White\", \"red\").\nHas_hair_color(\"Cinderella\", \"blond\").\nHas_hair_color(\"Rapunzel\", \"brown\").\nHas_hair_color(\"Belle\", \"brown\").\nHas_hair_color(\"Ariel\", \"red\").\nHas_hair_color(\"Mulan\", \"black\").\nHas_hair_color(\"Tiana\", \"brown\").\nHas_hair_color(\"Moana\", \"brown\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Snow White\", hair_color), Has_hair_color(\"Belle\", hair_color).\n.output Answer\n\n"]}
{"id": 552, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"2008 Summer Olympics\", 204).\nHas_n_members(\"women\", 50).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hookup athletes\", 50).\n.decl Answer()\nAnswer() :- Has_n_members(\"2008 Summer Olympics\", n_members1), Has_n_members(\"women\", n_members2), Has_n_members(\"hookup athletes\", n_members3), n_members1 >= n_members2*n_members3.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"2008 Summer Olympics\", 204).\nHas_n_members(\"women\", 50).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hookup athletes\", 50).\n.decl Answer()\nAnswer() :- Has_n_members(\"2008 Summer Olympics\", n_members1), Has_n_members(\"women\", n_members2), Has_n_members(\"hookup athletes\", n_members3), n_members1 >= n_members2*n_members3.\n.output Answer\n\n"]}
{"id": 553, "answer": false, "completion": ".decl War_victory(War:symbol)\nWar_victory(\"World War II\").\n.decl War_victory(War:symbol)\nWar_victory(\"World War I\").\n.decl War_victory(War:symbol)\nWar_victory(\"World War III\").\n.decl Answer()\nAnswer() :- War_victory(\"World War II\"), War_victory(\"World War I\"), War_victory(\"World War III\").\n.output Answer\n\n", "completions": [".decl War_victory(War:symbol)\nWar_victory(\"World War II\").\n.decl War_victory(War:symbol)\nWar_victory(\"World War I\").\n.decl War_victory(War:symbol)\nWar_victory(\"World War III\").\n.decl Answer()\nAnswer() :- War_victory(\"World War II\"), War_victory(\"World War I\"), War_victory(\"World War III\").\n.output Answer\n\n"]}
{"id": 554, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"cat\", 4).\nHas_mass(\"Curiosity (rover)\", 10).\n.decl Answer()\nAnswer() :- Has_mass(\"cat\", mass1), Has_mass(\"Curiosity (rover)\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"cat\", 4).\nHas_mass(\"Curiosity (rover)\", 10).\n.decl Answer()\nAnswer() :- Has_mass(\"cat\", mass1), Has_mass(\"Curiosity (rover)\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 555, "answer": false, "completion": ".decl Has_flavor(Food:symbol, Flavor:symbol)\nHas_flavor(\"lemon\", \"sour\").\nHas_flavor(\"milk\", \"creamy\").\n.decl Has_enhancement(Flavor:symbol, Enhancement:symbol)\nHas_enhancement(\"sour\", \"lemon\").\nHas_enhancement(\"creamy\", \"milk\").\n.decl Answer()\nAnswer() :- Has_flavor(\"lemon\", flavor), Has_enhancement(flavor, enhancement), Has_flavor(\"milk\", flavor2), Has_enhancement(flavor2, enhancement2), flavor != flavor2, enhancement == enhancement2.\n.output Answer\n\n", "completions": [".decl Has_flavor(Food:symbol, Flavor:symbol)\nHas_flavor(\"lemon\", \"sour\").\nHas_flavor(\"milk\", \"creamy\").\n.decl Has_enhancement(Flavor:symbol, Enhancement:symbol)\nHas_enhancement(\"sour\", \"lemon\").\nHas_enhancement(\"creamy\", \"milk\").\n.decl Answer()\nAnswer() :- Has_flavor(\"lemon\", flavor), Has_enhancement(flavor, enhancement), Has_flavor(\"milk\", flavor2), Has_enhancement(flavor2, enhancement2), flavor != flavor2, enhancement == enhancement2.\n.output Answer\n\n"]}
{"id": 556, "answer": true, "completion": ".decl Has_degree(Person:symbol, Degree:symbol)\nHas_degree(\"Oprah Winfrey\", \"Bachelor of Arts\").\n.decl Has_university(Person:symbol, University:symbol)\nHas_university(\"Oprah Winfrey\", \"Harpers Ferry\").\n.decl Has_state(University:symbol, State:symbol)\nHas_state(\"Harpers Ferry\", \"West Virginia\").\n.decl Is_ivy_league(University:symbol)\nIs_ivy_league(\"Princeton University\").\nIs_ivy_league(\"Harvard University\").\nIs_ivy_league(\"Yale University\").\nIs_ivy_league(\"Columbia University\").\nIs_ivy_league(\"University of Pennsylvania\").\nIs_ivy_league(\"Cornell University\").\nIs_ivy_league(\"Brown University\").\nIs_ivy_league(\"Dartmouth College\").\n.decl Answer()\nAnswer() :- Has_degree(\"Oprah Winfrey\", degree), Has_university(\"Oprah Winfrey\", university), Has_state(university, state), Is_ivy_league(university).\n.output Answer\n\n", "completions": [".decl Has_degree(Person:symbol, Degree:symbol)\nHas_degree(\"Oprah Winfrey\", \"Bachelor of Arts\").\n.decl Has_university(Person:symbol, University:symbol)\nHas_university(\"Oprah Winfrey\", \"Harpers Ferry\").\n.decl Has_state(University:symbol, State:symbol)\nHas_state(\"Harpers Ferry\", \"West Virginia\").\n.decl Is_ivy_league(University:symbol)\nIs_ivy_league(\"Princeton University\").\nIs_ivy_league(\"Harvard University\").\nIs_ivy_league(\"Yale University\").\nIs_ivy_league(\"Columbia University\").\nIs_ivy_league(\"University of Pennsylvania\").\nIs_ivy_league(\"Cornell University\").\nIs_ivy_league(\"Brown University\").\nIs_ivy_league(\"Dartmouth College\").\n.decl Answer()\nAnswer() :- Has_degree(\"Oprah Winfrey\", degree), Has_university(\"Oprah Winfrey\", university), Has_state(university, state), Is_ivy_league(university).\n.output Answer\n\n"]}
{"id": 557, "answer": false, "completion": ".decl Is_a_holiday(Holiday:symbol)\nIs_a_holiday(\"New Year's Day\").\nIs_a_holiday(\"Christmas Day\").\nIs_a_holiday(\"Independence Day\").\nIs_a_holiday(\"Labor Day\").\nIs_a_holiday(\"Columbus Day\").\nIs_a_holiday(\"Veterans Day\").\nIs_a_holiday(\"Thanksgiving Day\").\nIs_a_holiday(\"Christmas Day\").\n.decl Is_a_break(Holiday:symbol)\nIs_a_break(\"Christmas Day\").\nIs_a_break(\"Veterans Day\").\n.decl Answer()\nAnswer() :- Is_a_holiday(\"unanimously elected president's birthday\"), Is_a_break(\"unanimously elected president's birthday\").\n.output Answer\n\n", "completions": [".decl Is_a_holiday(Holiday:symbol)\nIs_a_holiday(\"New Year's Day\").\nIs_a_holiday(\"Christmas Day\").\nIs_a_holiday(\"Independence Day\").\nIs_a_holiday(\"Labor Day\").\nIs_a_holiday(\"Columbus Day\").\nIs_a_holiday(\"Veterans Day\").\nIs_a_holiday(\"Thanksgiving Day\").\nIs_a_holiday(\"Christmas Day\").\n.decl Is_a_break(Holiday:symbol)\nIs_a_break(\"Christmas Day\").\nIs_a_break(\"Veterans Day\").\n.decl Answer()\nAnswer() :- Is_a_holiday(\"unanimously elected president's birthday\"), Is_a_break(\"unanimously elected president's birthday\").\n.output Answer\n\n"]}
{"id": 558, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"paprika\", \"spicy\").\nHas_property(\"paprika\", \"colorful\").\nHas_property(\"paprika\", \"tasty\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"dehydrator\", \"dry\").\nHas_property(\"dehydrator\", \"heat\").\nHas_property(\"dehydrator\", \"use\").\n.decl Answer()\nAnswer() :- Has_property(\"paprika\", property1), Has_property(\"dehydrator\", property2), property1 \\= property2.\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"paprika\", \"spicy\").\nHas_property(\"paprika\", \"colorful\").\nHas_property(\"paprika\", \"tasty\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"dehydrator\", \"dry\").\nHas_property(\"dehydrator\", \"heat\").\nHas_property(\"dehydrator\", \"use\").\n.decl Answer()\nAnswer() :- Has_property(\"paprika\", property1), Has_property(\"dehydrator\", property2), property1 \\= property2.\n.output Answer\n\n"]}
{"id": 559, "answer": true, "completion": ".decl Has_craving(Person:symbol, Craving:symbol)\nHas_craving(\"veteran of the Phillippine-American War\", \"SPAM\").\n.decl Answer()\nAnswer() :- Has_craving(\"veteran of the Phillippine-American War\", craving).\n.output Answer\n\n", "completions": [".decl Has_craving(Person:symbol, Craving:symbol)\nHas_craving(\"veteran of the Phillippine-American War\", \"SPAM\").\n.decl Answer()\nAnswer() :- Has_craving(\"veteran of the Phillippine-American War\", craving).\n.output Answer\n\n"]}
{"id": 560, "answer": true, "completion": ".decl Near(Place_A:symbol, Place_B:symbol)\nNear(\"United States Capitol\", \"White House\").\n.decl Answer()\nAnswer() :- Near(\"United States Capitol\", \"White House\").\n.output Answer\n\n", "completions": [".decl Near(Place_A:symbol, Place_B:symbol)\nNear(\"United States Capitol\", \"White House\").\n.decl Answer()\nAnswer() :- Near(\"United States Capitol\", \"White House\").\n.output Answer\n\n"]}
{"id": 561, "answer": false, "completion": ".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Godzilla\", \"frightening\").\n.decl Answer()\nAnswer() :- Has_image(\"Godzilla\", image), image = \"frightening\".\n.output Answer\n\n", "completions": [".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Godzilla\", \"frightening\").\n.decl Answer()\nAnswer() :- Has_image(\"Godzilla\", image), image = \"frightening\".\n.output Answer\n\n"]}
{"id": 562, "answer": false, "completion": ".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\nIs_prime(11).\nIs_prime(13).\nIs_prime(17).\nIs_prime(19).\nIs_prime(23).\nIs_prime(29).\nIs_prime(31).\nIs_prime(37).\nIs_prime(41).\nIs_prime(43).\nIs_prime(47).\nIs_prime(53).\nIs_prime(59).\nIs_prime(61).\nIs_prime(67).\nIs_prime(71).\nIs_prime(73).\nIs_prime(79).\nIs_prime(83).\nIs_prime(89).\nIs_prime(97).\n.decl Answer()\nAnswer() :- Is_prime(number1), Is_prime(number2), number1 > number2.\n.output Answer\n\n", "completions": [".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\nIs_prime(11).\nIs_prime(13).\nIs_prime(17).\nIs_prime(19).\nIs_prime(23).\nIs_prime(29).\nIs_prime(31).\nIs_prime(37).\nIs_prime(41).\nIs_prime(43).\nIs_prime(47).\nIs_prime(53).\nIs_prime(59).\nIs_prime(61).\nIs_prime(67).\nIs_prime(71).\nIs_prime(73).\nIs_prime(79).\nIs_prime(83).\nIs_prime(89).\nIs_prime(97).\n.decl Answer()\nAnswer() :- Is_prime(number1), Is_prime(number2), number1 > number2.\n.output Answer\n\n"]}
{"id": 563, "answer": true, "completion": ".decl Has_emission(Object:symbol, Emission:float)\nHas_emission(\"cow\", 0.5).\nHas_emission(\"car\", 0.8).\n.decl Answer()\nAnswer() :- Has_emission(\"cow\", emission1), Has_emission(\"car\", emission2), emission1 < emission2.\n.output Answer\n\n", "completions": [".decl Has_emission(Object:symbol, Emission:float)\nHas_emission(\"cow\", 0.5).\nHas_emission(\"car\", 0.8).\n.decl Answer()\nAnswer() :- Has_emission(\"cow\", emission1), Has_emission(\"car\", emission2), emission1 < emission2.\n.output Answer\n\n"]}
{"id": 564, "answer": false, "completion": ".decl Has_written(Person:symbol, Song:symbol)\nHas_written(\"Justin Timberlake\", \"Cry me a river\").\nHas_written(\"Justin Timberlake\", \"Rock your body\").\nHas_written(\"Britney Spears\", \"Hit me baby one more time\").\n.decl Answer()\nAnswer() :- Has_written(\"Justin Timberlake\", song), Has_written(\"Britney Spears\", song).\n.output Answer\n\n", "completions": [".decl Has_written(Person:symbol, Song:symbol)\nHas_written(\"Justin Timberlake\", \"Cry me a river\").\nHas_written(\"Justin Timberlake\", \"Rock your body\").\nHas_written(\"Britney Spears\", \"Hit me baby one more time\").\n.decl Answer()\nAnswer() :- Has_written(\"Justin Timberlake\", song), Has_written(\"Britney Spears\", song).\n.output Answer\n\n"]}
{"id": 565, "answer": false, "completion": ".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Clouded leopard\", 60).\nHas_speed(\"Pronghorn antelope\", 40).\n.decl Answer()\nAnswer() :- Has_speed(\"Clouded leopard\", speed1), Has_speed(\"Pronghorn antelope\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Clouded leopard\", 60).\nHas_speed(\"Pronghorn antelope\", 40).\n.decl Answer()\nAnswer() :- Has_speed(\"Clouded leopard\", speed1), Has_speed(\"Pronghorn antelope\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 566, "answer": false, "completion": ".decl Sent_to_friends(Person:symbol, Friends:symbol)\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\",", "completions": [".decl Sent_to_friends(Person:symbol, Friends:symbol)\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\", \"friends\").\nSent_to_friends(\"Ronald Reagan\","]}
{"id": 567, "answer": false, "completion": ".decl Has_ID(Person:symbol)\nHas_ID(\"pharmacist\").\nHas_ID(\"patient\").\n.decl Has_medication(Person:symbol, Medication:symbol)\nHas_medication(\"pharmacist\", \"medication\").\nHas_medication(\"patient\", \"medication\").\n.decl Answer()\nAnswer() :- Has_ID(\"pharmacist\"), Has_medication(\"pharmacist\", \"medication\").\nAnswer() :- Has_ID(\"patient\"), Has_medication(\"patient\", \"medication\").\n.output Answer\n\n", "completions": [".decl Has_ID(Person:symbol)\nHas_ID(\"pharmacist\").\nHas_ID(\"patient\").\n.decl Has_medication(Person:symbol, Medication:symbol)\nHas_medication(\"pharmacist\", \"medication\").\nHas_medication(\"patient\", \"medication\").\n.decl Answer()\nAnswer() :- Has_ID(\"pharmacist\"), Has_medication(\"pharmacist\", \"medication\").\nAnswer() :- Has_ID(\"patient\"), Has_medication(\"patient\", \"medication\").\n.output Answer\n\n"]}
{"id": 568, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Republic of Korea Navy\", 100).\nHas_n_members(\"Eritrea Navy\", 50).\n.decl Answer()\nAnswer() :- Has_n_members(\"Republic of Korea Navy\", n_members1), Has_n_members(\"Eritrea Navy\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Republic of Korea Navy\", 100).\nHas_n_members(\"Eritrea Navy\", 50).\n.decl Answer()\nAnswer() :- Has_n_members(\"Republic of Korea Navy\", n_members1), Has_n_members(\"Eritrea Navy\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 569, "answer": false, "completion": ".decl Inspired_by(Book:symbol, Book_inspired:symbol)\nInspired_by(\"The Great Gatsby\", \"1984\").\n.decl Inspired_by(Book:symbol, Book_inspired:symbol)\nInspired_by(\"1984\", \"The Great Gatsby\").\n.decl Answer()\nAnswer() :- Inspired_by(\"The Great Gatsby\", book_inspired), Inspired_by(book_inspired, \"1984\").\n.output Answer\n\n", "completions": [".decl Inspired_by(Book:symbol, Book_inspired:symbol)\nInspired_by(\"The Great Gatsby\", \"1984\").\n.decl Inspired_by(Book:symbol, Book_inspired:symbol)\nInspired_by(\"1984\", \"The Great Gatsby\").\n.decl Answer()\nAnswer() :- Inspired_by(\"The Great Gatsby\", book_inspired), Inspired_by(book_inspired, \"1984\").\n.output Answer\n\n"]}
{"id": 570, "answer": false, "completion": ".decl Is_a_Fantastic_Four_villain(Character:symbol)\nIs_a_Fantastic_Four_villain(\"Reed Richards\").\nIs_a_Fantastic_Four_villain(\"Ben Grimm\").\nIs_a_Fantastic_Four_villain(\"Johnny Storm\").\nIs_a_Fantastic_Four_villain(\"Susan Storm\").\nIs_a_Fantastic_Four_villain(\"Benjamin Grimm\").\nIs_a_Fantastic_Four_villain(\"Victor Von Doom\").\n.decl Answer()\nAnswer() :- Is_a_Fantastic_Four_villain(\"MF Doom\").\n.output Answer\n\n", "completions": [".decl Is_a_Fantastic_Four_villain(Character:symbol)\nIs_a_Fantastic_Four_villain(\"Reed Richards\").\nIs_a_Fantastic_Four_villain(\"Ben Grimm\").\nIs_a_Fantastic_Four_villain(\"Johnny Storm\").\nIs_a_Fantastic_Four_villain(\"Susan Storm\").\nIs_a_Fantastic_Four_villain(\"Benjamin Grimm\").\nIs_a_Fantastic_Four_villain(\"Victor Von Doom\").\n.decl Answer()\nAnswer() :- Is_a_Fantastic_Four_villain(\"MF Doom\").\n.output Answer\n\n"]}
{"id": 571, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Michael\", \"Michael\").\n.decl Has_popularity(Name:symbol, Popularity:float)\nHas_popularity(\"Michael\", 0.01).\n.decl Answer()\nAnswer() :- Has_name(\"Michael\", name), Has_popularity(name, popularity), popularity < 0.01.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Michael\", \"Michael\").\n.decl Has_popularity(Name:symbol, Popularity:float)\nHas_popularity(\"Michael\", 0.01).\n.decl Answer()\nAnswer() :- Has_name(\"Michael\", name), Has_popularity(name, popularity), popularity < 0.01.\n.output Answer\n\n"]}
{"id": 572, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"flood\", \"June\").\nHappens_in_time(\"flood\", \"July\").\nHappens_in_time(\"flood\", \"August\").\nHappens_in_time(\"flood\", \"September\").\nHappens_in_time(\"flood\", \"October\").\nHappens_in_time(\"flood\", \"November\").\nHappens_in_time(\"flood\", \"December\").\nHappens_in_time(\"flood\", \"January\").\nHappens_in_time(\"flood\", \"February\").\nHappens_in_time(\"flood\", \"March\").\nHappens_in_time(\"flood\", \"April\").\nHappens_in_time(\"flood\", \"May\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"noah's ark\", \"June\").\nHappens_in_time(\"noah's ark\", \"July\").\nHappens_in_time(\"noah's ark\", \"August\").\nHappens_in_time(\"noah's ark\", \"September\").\nHappens_in_time(\"noah's ark\", \"October\").\nHappens_in_time(\"noah's ark\", \"November\").\nHappens_in_time(\"noah's ark\", \"December\").\nHappens_in_time(\"noah's ark\", \"January\").\nHappens_in_time(\"noah's ark\", \"February\").\nHappens_in_time(\"noah's ark\", \"March\").\nHappens_in_time(\"noah's ark\", \"April\").\nHappens_in_time(\"noah's ark\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"flood\", month), Happens_in_time(\"noah's ark\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"flood\", \"June\").\nHappens_in_time(\"flood\", \"July\").\nHappens_in_time(\"flood\", \"August\").\nHappens_in_time(\"flood\", \"September\").\nHappens_in_time(\"flood\", \"October\").\nHappens_in_time(\"flood\", \"November\").\nHappens_in_time(\"flood\", \"December\").\nHappens_in_time(\"flood\", \"January\").\nHappens_in_time(\"flood\", \"February\").\nHappens_in_time(\"flood\", \"March\").\nHappens_in_time(\"flood\", \"April\").\nHappens_in_time(\"flood\", \"May\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"noah's ark\", \"June\").\nHappens_in_time(\"noah's ark\", \"July\").\nHappens_in_time(\"noah's ark\", \"August\").\nHappens_in_time(\"noah's ark\", \"September\").\nHappens_in_time(\"noah's ark\", \"October\").\nHappens_in_time(\"noah's ark\", \"November\").\nHappens_in_time(\"noah's ark\", \"December\").\nHappens_in_time(\"noah's ark\", \"January\").\nHappens_in_time(\"noah's ark\", \"February\").\nHappens_in_time(\"noah's ark\", \"March\").\nHappens_in_time(\"noah's ark\", \"April\").\nHappens_in_time(\"noah's ark\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"flood\", month), Happens_in_time(\"noah's ark\", month).\n.output Answer\n\n"]}
{"id": 573, "answer": false, "completion": ".decl Has_skin_condition(Person:symbol, Condition:symbol)\nHas_skin_condition(\"Barbara\", \"dermatitis\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Barbara\", \"hand model\").\n.decl Answer()\nAnswer() :- Has_skin_condition(\"Barbara\", condition), Has_job(\"Barbara\", job), condition != job.\n.output Answer\n\n", "completions": [".decl Has_skin_condition(Person:symbol, Condition:symbol)\nHas_skin_condition(\"Barbara\", \"dermatitis\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Barbara\", \"hand model\").\n.decl Answer()\nAnswer() :- Has_skin_condition(\"Barbara\", condition), Has_job(\"Barbara\", job), condition != job.\n.output Answer\n\n"]}
{"id": 574, "answer": true, "completion": ".decl Has_disease(Pet:symbol, Disease:symbol)\nHas_disease(\"Goofy\", \"heartworm\").\n.decl Has_vaccine(Disease:symbol, Vaccine:symbol)\nHas_vaccine(\"heartworm\", \"heartworm vaccine\").\n.decl Answer()\nAnswer() :- Has_disease(\"Goofy\", disease), Has_vaccine(disease, vaccine).\n.output Answer\n\n", "completions": [".decl Has_disease(Pet:symbol, Disease:symbol)\nHas_disease(\"Goofy\", \"heartworm\").\n.decl Has_vaccine(Disease:symbol, Vaccine:symbol)\nHas_vaccine(\"heartworm\", \"heartworm vaccine\").\n.decl Answer()\nAnswer() :- Has_disease(\"Goofy\", disease), Has_vaccine(disease, vaccine).\n.output Answer\n\n"]}
{"id": 575, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"mercury\", 80).\n.decl Has_payout(Element:symbol, Payout:float)\nHas_payout(\"nickel\", 1).\nHas_payout(\"mercury\", 0.1).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"nickel\", atomic_number), Has_payout(\"mercury\", payout), atomic_number > payout.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"mercury\", 80).\n.decl Has_payout(Element:symbol, Payout:float)\nHas_payout(\"nickel\", 1).\nHas_payout(\"mercury\", 0.1).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"nickel\", atomic_number), Has_payout(\"mercury\", payout), atomic_number > payout.\n.output Answer\n\n"]}
{"id": 576, "answer": true, "completion": ".decl Celebrates(Person:symbol, Event:symbol)\nCelebrates(\"Cynthia Powell\", \"silver anniversary\").\nCelebrates(\"John Lennon\", \"silver anniversary\").\n.decl Answer()\nAnswer() :- Celebrates(\"Cynthia Powell\", event), Celebrates(\"John Lennon\", event).\n.output Answer\n\n", "completions": [".decl Celebrates(Person:symbol, Event:symbol)\nCelebrates(\"Cynthia Powell\", \"silver anniversary\").\nCelebrates(\"John Lennon\", \"silver anniversary\").\n.decl Answer()\nAnswer() :- Celebrates(\"Cynthia Powell\", event), Celebrates(\"John Lennon\", event).\n.output Answer\n\n"]}
{"id": 577, "answer": false, "completion": ".decl Has_money(Person:symbol, Money:float)\nHas_money(\"Christopher Reeve\", 0).\n.decl Has_money(Person:symbol, Money:float)\nHas_money(\"Christopher Reeve\", 1).\n.decl Answer()\nAnswer() :- Has_money(\"Christopher Reeve\", money), money > 0.\n.output Answer\n\n", "completions": [".decl Has_money(Person:symbol, Money:float)\nHas_money(\"Christopher Reeve\", 0).\n.decl Has_money(Person:symbol, Money:float)\nHas_money(\"Christopher Reeve\", 1).\n.decl Answer()\nAnswer() :- Has_money(\"Christopher Reeve\", money), money > 0.\n.output Answer\n\n"]}
{"id": 578, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Operation Barbarossa\", \"1941\").\nHappens_in_time(\"The Crusades\", \"1096\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Operation Barbarossa\", time1), Happens_in_time(\"The Crusades\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Operation Barbarossa\", \"1941\").\nHappens_in_time(\"The Crusades\", \"1096\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Operation Barbarossa\", time1), Happens_in_time(\"The Crusades\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 579, "answer": true, "completion": ".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"carpenter\", \"geometry\").\n.decl Answer()\nAnswer() :- Has_skill(\"carpenter\", skill), skill = \"geometry\".\n.output Answer\n\n", "completions": [".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"carpenter\", \"geometry\").\n.decl Answer()\nAnswer() :- Has_skill(\"carpenter\", skill), skill = \"geometry\".\n.output Answer\n\n"]}
{"id": 580, "answer": true, "completion": ".decl Has_speed(Reader:symbol, Speed:float)\nHas_speed(\"speed reader\", 1000).\nHas_speed(\"The Great Gatsby\", 100).\nHas_speed(\"The Raven\", 200).\n.decl Answer()\nAnswer() :- Has_speed(\"speed reader\", speed1), Has_speed(\"The Great Gatsby\", speed2), Has_speed(\"The Raven\", speed3), speed1 > speed2, speed1 > speed3.\n.output Answer\n\n", "completions": [".decl Has_speed(Reader:symbol, Speed:float)\nHas_speed(\"speed reader\", 1000).\nHas_speed(\"The Great Gatsby\", 100).\nHas_speed(\"The Raven\", 200).\n.decl Answer()\nAnswer() :- Has_speed(\"speed reader\", speed1), Has_speed(\"The Great Gatsby\", speed2), Has_speed(\"The Raven\", speed3), speed1 > speed2, speed1 > speed3.\n.output Answer\n\n"]}
{"id": 581, "answer": false, "completion": ".decl Has_age_rating(Movie:symbol, Age_rating:symbol)\nHas_age_rating(\"The Dark Knight\", \"PG-13\").\nHas_age_rating(\"The Dark Knight\", \"R\").\n.decl Has_n_actors(Movie:symbol, N_actors:float)\nHas_n_actors(\"The Dark Knight\", 9).\n.decl Answer()\nAnswer() :- Has_age_rating(\"The Dark Knight\", age_rating), Has_n_actors(\"The Dark Knight\", n_actors), n_actors > 10, age_rating = \"PG-13\".\n.output Answer\n\n", "completions": [".decl Has_age_rating(Movie:symbol, Age_rating:symbol)\nHas_age_rating(\"The Dark Knight\", \"PG-13\").\nHas_age_rating(\"The Dark Knight\", \"R\").\n.decl Has_n_actors(Movie:symbol, N_actors:float)\nHas_n_actors(\"The Dark Knight\", 9).\n.decl Answer()\nAnswer() :- Has_age_rating(\"The Dark Knight\", age_rating), Has_n_actors(\"The Dark Knight\", n_actors), n_actors > 10, age_rating = \"PG-13\".\n.output Answer\n\n"]}
{"id": 582, "answer": false, "completion": ".decl Is_boolean(Algebra:symbol)\nIs_boolean(\"Boolean algebra\").\n.decl Answer()\nAnswer() :- Is_boolean(\"Boolean algebra\").\n.output Answer\n\n", "completions": [".decl Is_boolean(Algebra:symbol)\nIs_boolean(\"Boolean algebra\").\n.decl Answer()\nAnswer() :- Is_boolean(\"Boolean algebra\").\n.output Answer\n\n"]}
{"id": 583, "answer": false, "completion": ".decl Has_location(Object:symbol, Location:symbol)\nHas_location(\"brain\", \"torso\").\n.decl Answer()\nAnswer() :- Has_location(\"brain\", location).\n.output Answer\n\n", "completions": [".decl Has_location(Object:symbol, Location:symbol)\nHas_location(\"brain\", \"torso\").\n.decl Answer()\nAnswer() :- Has_location(\"brain\", location).\n.output Answer\n\n"]}
{"id": 584, "answer": true, "completion": ".decl Is_part_of(Object:symbol, Event:symbol)\nIs_part_of(\"Donkeys\", \"Christmas\").\n.decl Is_part_of(Object:symbol, Event:symbol)\nIs_part_of(\"Christmas\", \"Christmas celebrations\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Donkeys\", event1), Is_part_of(event1, event2), Is_part_of(\"Christmas\", event2).\n.output Answer\n\n", "completions": [".decl Is_part_of(Object:symbol, Event:symbol)\nIs_part_of(\"Donkeys\", \"Christmas\").\n.decl Is_part_of(Object:symbol, Event:symbol)\nIs_part_of(\"Christmas\", \"Christmas celebrations\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Donkeys\", event1), Is_part_of(event1, event2), Is_part_of(\"Christmas\", event2).\n.output Answer\n\n"]}
{"id": 585, "answer": false, "completion": ".decl Has_death_cause(Person:symbol, Cause:symbol)\nHas_death_cause(\"Heath Ledger\", \"work on The Dark Knight\").\n.decl Has_death_date(Person:symbol, Date:symbol)\nHas_death_date(\"Heath Ledger\", \"2008-01-22\").\n.decl Answer()\nAnswer() :- Has_death_cause(\"Heath Ledger\", cause), Has_death_date(\"Heath Ledger\", date), Happens_in_time(cause, date).\n.output Answer\n\n", "completions": [".decl Has_death_cause(Person:symbol, Cause:symbol)\nHas_death_cause(\"Heath Ledger\", \"work on The Dark Knight\").\n.decl Has_death_date(Person:symbol, Date:symbol)\nHas_death_date(\"Heath Ledger\", \"2008-01-22\").\n.decl Answer()\nAnswer() :- Has_death_cause(\"Heath Ledger\", cause), Has_death_date(\"Heath Ledger\", date), Happens_in_time(cause, date).\n.output Answer\n\n"]}
{"id": 586, "answer": true, "completion": ".decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"Polar Bear\", \"Quaternary\").\nHas_period(\"Polar Bear\", \"Cenozoic\").\n.decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"Polar Bear\", \"Quaternary\").\nHas_period(\"Polar Bear\", \"Cenozoic\").\n.decl Answer()\nAnswer() :- Has_period(\"Polar Bear\", period1), Has_period(\"Polar Bear\", period2), period1 != period2.\n.output Answer\n\n", "completions": [".decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"Polar Bear\", \"Quaternary\").\nHas_period(\"Polar Bear\", \"Cenozoic\").\n.decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"Polar Bear\", \"Quaternary\").\nHas_period(\"Polar Bear\", \"Cenozoic\").\n.decl Answer()\nAnswer() :- Has_period(\"Polar Bear\", period1), Has_period(\"Polar Bear\", period2), period1 != period2.\n.output Answer\n\n"]}
{"id": 587, "answer": false, "completion": ".decl Completed(Building:symbol, Year:float)\nCompleted(\"World Trade Center\", 1970).\n.decl Resides_in(Person:symbol, Place:symbol)\nResides_in(\"Moon Jae-in\", \"Seoul\").\n.decl Answer()\nAnswer() :- Resides_in(\"Moon Jae-in\", place), Completed(building, year), Completed(building, year2), year < year2.\n.output Answer\n\n", "completions": [".decl Completed(Building:symbol, Year:float)\nCompleted(\"World Trade Center\", 1970).\n.decl Resides_in(Person:symbol, Place:symbol)\nResides_in(\"Moon Jae-in\", \"Seoul\").\n.decl Answer()\nAnswer() :- Resides_in(\"Moon Jae-in\", place), Completed(building, year), Completed(building, year2), year < year2.\n.output Answer\n\n"]}
{"id": 588, "answer": true, "completion": ".decl Is_in_space(Object:symbol)\nIs_in_space(\"paratrooper\").\n.decl Is_in_vacuum(Object:symbol)\nIs_in_vacuum(\"paratrooper\").\n.decl Answer()\nAnswer() :- Is_in_space(\"paratrooper\"), Is_in_vacuum(\"paratrooper\").\n.output Answer\n\n", "completions": [".decl Is_in_space(Object:symbol)\nIs_in_space(\"paratrooper\").\n.decl Is_in_vacuum(Object:symbol)\nIs_in_vacuum(\"paratrooper\").\n.decl Answer()\nAnswer() :- Is_in_space(\"paratrooper\"), Is_in_vacuum(\"paratrooper\").\n.output Answer\n\n"]}
{"id": 589, "answer": false, "completion": ".decl Has_n_seats(Court:symbol, N_seats:float)\nHas_n_seats(\"Supreme Court of the United States\", 9).\nHas_n_seats(\"House of Commons\", 650).\nHas_n_seats(\"House of Lords\", 752).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Prime Ministers of the United Kingdom\", N_members) :- N_members > 0.\n.decl Answer()\nAnswer() :- Has_n_seats(\"Supreme Court of the United States\", n_seats1), Has_n_members(\"Prime Ministers of the United Kingdom\", n_members2), n_seats1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_seats(Court:symbol, N_seats:float)\nHas_n_seats(\"Supreme Court of the United States\", 9).\nHas_n_seats(\"House of Commons\", 650).\nHas_n_seats(\"House of Lords\", 752).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Prime Ministers of the United Kingdom\", N_members) :- N_members > 0.\n.decl Answer()\nAnswer() :- Has_n_seats(\"Supreme Court of the United States\", n_seats1), Has_n_members(\"Prime Ministers of the United Kingdom\", n_members2), n_seats1 >= n_members2.\n.output Answer\n\n"]}
{"id": 590, "answer": false, "completion": ".decl Believed_in_prophet(Person:symbol, Prophet:symbol)\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").", "completions": [".decl Believed_in_prophet(Person:symbol, Prophet:symbol)\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\").\nBelieved_in_prophet(\"Mr. Ross\", \"Heaven's Gate\")."]}
{"id": 591, "answer": false, "completion": ".decl Has_official_language(Region:symbol, Language:symbol)\nHas_official_language(\"Angola\", \"Portuguese\").\nHas_official_language(\"Cape Verde\", \"Portuguese\").\nHas_official_language(\"Mozambique\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\nHas_official_language(\"Angola\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\nHas_official_language(\"Cape Verde\", \"Portuguese\").\nHas_official_language(\"Mozambique\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\n.decl Answer()\nAnswer() :- Has_official_language(\"Angola\", language1), Has_official_language(\"Cape Verde\", language2), Has_official_language(\"Mozambique\", language3), Has_official_language(\"Sao Tome and Principe\", language4), Has_official_language(\"Guinea-Bissau\", language5), Has_official_language(\"Equatorial Guinea\", language6), Has_official_language(\"Gabon\", language7), Has_official_language(\"Angola\", language8), Has_official_language(\"Sao Tome and Principe\", language9), Has_official_language(\"Guinea-Bissau\", language10), Has_official_language(\"Equatorial Guinea\", language11), Has_official_language(\"Gabon\", language12), language1 == language2, language1 == language3, language1 == language4, language1 == language5, language1 == language6, language1 == language7, language1 == language8, language1 == language9, language1 == language10, language1 == language11, language1 == language12, language2 == language3, language2 == language4, language2 == language5, language2 == language6, language2 == language7, language2 == language8, language2 == language9, language2 == language10, language2 == language11, language2 == language12, language3 == language4, language3 == language5, language3 == language6, language3 == language7, language3 == language8, language3 == language9, language3 == language10, language3 == language11, language3 == language12, language4 == language5, language4 == language6, language4 == language7, language4 == language8, language4 == language9, language4 == language10, language4 == language11, language4 == language12, language5 == language6, language5 == language7, language5 == language8, language5 == language9, language5 == language10, language5 == language11, language5 == language12, language6 == language7, language6 == language8, language6 == language9, language6 == language10, language", "completions": [".decl Has_official_language(Region:symbol, Language:symbol)\nHas_official_language(\"Angola\", \"Portuguese\").\nHas_official_language(\"Cape Verde\", \"Portuguese\").\nHas_official_language(\"Mozambique\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\nHas_official_language(\"Angola\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\nHas_official_language(\"Cape Verde\", \"Portuguese\").\nHas_official_language(\"Mozambique\", \"Portuguese\").\nHas_official_language(\"Sao Tome and Principe\", \"Portuguese\").\nHas_official_language(\"Guinea-Bissau\", \"Portuguese\").\nHas_official_language(\"Equatorial Guinea\", \"Portuguese\").\nHas_official_language(\"Gabon\", \"Portuguese\").\n.decl Answer()\nAnswer() :- Has_official_language(\"Angola\", language1), Has_official_language(\"Cape Verde\", language2), Has_official_language(\"Mozambique\", language3), Has_official_language(\"Sao Tome and Principe\", language4), Has_official_language(\"Guinea-Bissau\", language5), Has_official_language(\"Equatorial Guinea\", language6), Has_official_language(\"Gabon\", language7), Has_official_language(\"Angola\", language8), Has_official_language(\"Sao Tome and Principe\", language9), Has_official_language(\"Guinea-Bissau\", language10), Has_official_language(\"Equatorial Guinea\", language11), Has_official_language(\"Gabon\", language12), language1 == language2, language1 == language3, language1 == language4, language1 == language5, language1 == language6, language1 == language7, language1 == language8, language1 == language9, language1 == language10, language1 == language11, language1 == language12, language2 == language3, language2 == language4, language2 == language5, language2 == language6, language2 == language7, language2 == language8, language2 == language9, language2 == language10, language2 == language11, language2 == language12, language3 == language4, language3 == language5, language3 == language6, language3 == language7, language3 == language8, language3 == language9, language3 == language10, language3 == language11, language3 == language12, language4 == language5, language4 == language6, language4 == language7, language4 == language8, language4 == language9, language4 == language10, language4 == language11, language4 == language12, language5 == language6, language5 == language7, language5 == language8, language5 == language9, language5 == language10, language5 == language11, language5 == language12, language6 == language7, language6 == language8, language6 == language9, language6 == language10, language"]}
{"id": 592, "answer": false, "completion": ".decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"Bill Gates\", \"Microsoft\").\nWorks_for(\"Bill Gates\", \"TNT\").\n.decl Answer()\nAnswer() :- Works_for(\"Bill Gates\", company), company = \"TNT\".\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"Bill Gates\", \"Microsoft\").\nWorks_for(\"Bill Gates\", \"TNT\").\n.decl Answer()\nAnswer() :- Works_for(\"Bill Gates\", company), company = \"TNT\".\n.output Answer\n\n"]}
{"id": 593, "answer": true, "completion": ".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"John Poindexter\", \"National Security Agency\").\nWorks_for(\"John Poindexter\", \"Central Intelligence Agency\").\nWorks_for(\"John Poindexter\", \"Department of Defense\").\n.decl Answer()\nAnswer() :- Works_for(\"John Poindexter\", \"Department of Defense\").\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"John Poindexter\", \"National Security Agency\").\nWorks_for(\"John Poindexter\", \"Central Intelligence Agency\").\nWorks_for(\"John Poindexter\", \"Department of Defense\").\n.decl Answer()\nAnswer() :- Works_for(\"John Poindexter\", \"Department of Defense\").\n.output Answer\n\n"]}
{"id": 594, "answer": false, "completion": ".decl Has_n_humps(Animal:symbol, N_humps:float)\nHas_n_humps(\"Bactrian Camel\", 2).\nHas_n_humps(\"African Bush Elephant\", 4).\nHas_n_humps(\"African Bush Elephant\", 2).\n.decl Answer()\nAnswer() :- Has_n_humps(\"Bactrian Camel\", n_humps1), Has_n_humps(\"African Bush Elephant\", n_humps2), n_humps1 > n_humps2.\n.output Answer\n\n", "completions": [".decl Has_n_humps(Animal:symbol, N_humps:float)\nHas_n_humps(\"Bactrian Camel\", 2).\nHas_n_humps(\"African Bush Elephant\", 4).\nHas_n_humps(\"African Bush Elephant\", 2).\n.decl Answer()\nAnswer() :- Has_n_humps(\"Bactrian Camel\", n_humps1), Has_n_humps(\"African Bush Elephant\", n_humps2), n_humps1 > n_humps2.\n.output Answer\n\n"]}
{"id": 595, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"German Shepherd\", \"German Shepherd\").\nHas_name(\"Abitur\", \"Abitur\").\n.decl Answer()\nAnswer() :- Has_name(\"German Shepherd\", name1), Has_name(\"Abitur\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"German Shepherd\", \"German Shepherd\").\nHas_name(\"Abitur\", \"Abitur\").\n.decl Answer()\nAnswer() :- Has_name(\"German Shepherd\", name1), Has_name(\"Abitur\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 596, "answer": true, "completion": ".decl Served_in_military(Person:symbol, Military:symbol)\nServed_in_military(\"George Washington\", \"Confederate States Army\").\nServed_in_military(\"Abraham Lincoln\", \"Confederate States Army\").\nServed_in_military(\"John Wilkes Booth\", \"Confederate States Army\").\n.decl Answer()\nAnswer() :- Served_in_military(\"John Wilkes Booth\", military), Served_in_military(\"George Washington\", military), Served_in_military(\"Abraham Lincoln\", military).\n.output Answer\n\n", "completions": [".decl Served_in_military(Person:symbol, Military:symbol)\nServed_in_military(\"George Washington\", \"Confederate States Army\").\nServed_in_military(\"Abraham Lincoln\", \"Confederate States Army\").\nServed_in_military(\"John Wilkes Booth\", \"Confederate States Army\").\n.decl Answer()\nAnswer() :- Served_in_military(\"John Wilkes Booth\", military), Served_in_military(\"George Washington\", military), Served_in_military(\"Abraham Lincoln\", military).\n.output Answer\n\n"]}
{"id": 597, "answer": false, "completion": ".decl Has_format(Series:symbol, Format:symbol)\nHas_format(\"James Bond\", \"action\").\nHas_format(\"Doctor Who\", \"science fiction\").\n.decl Answer()\nAnswer() :- Has_format(\"James Bond\", format), Has_format(\"Doctor Who\", format).\n.output Answer\n\n", "completions": [".decl Has_format(Series:symbol, Format:symbol)\nHas_format(\"James Bond\", \"action\").\nHas_format(\"Doctor Who\", \"science fiction\").\n.decl Answer()\nAnswer() :- Has_format(\"James Bond\", format), Has_format(\"Doctor Who\", format).\n.output Answer\n\n"]}
{"id": 598, "answer": true, "completion": ".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"computer gaming\", 100).\n.decl Has_n_titles(Company:symbol, N_titles:float)\nHas_n_titles(\"Sony\", 100).\n.decl Has_n_compact_discs(Company:symbol, N_compact_discs:float)\nHas_n_compact_discs(\"Sony\", 100).\n.decl Answer()\nAnswer() :- Has_n_players(\"computer gaming\", n_players), Has_n_titles(\"Sony\", n_titles), Has_n_compact_discs(\"Sony\", n_compact_discs), n_players > n_titles, n_players > n_compact_discs.\n.output Answer\n\n", "completions": [".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"computer gaming\", 100).\n.decl Has_n_titles(Company:symbol, N_titles:float)\nHas_n_titles(\"Sony\", 100).\n.decl Has_n_compact_discs(Company:symbol, N_compact_discs:float)\nHas_n_compact_discs(\"Sony\", 100).\n.decl Answer()\nAnswer() :- Has_n_players(\"computer gaming\", n_players), Has_n_titles(\"Sony\", n_titles), Has_n_compact_discs(\"Sony\", n_compact_discs), n_players > n_titles, n_players > n_compact_discs.\n.output Answer\n\n"]}
{"id": 599, "answer": false, "completion": ".decl Native_to(Plant:symbol, Continent:symbol)\nNative_to(\"potato\", \"Europe\").\nNative_to(\"potato\", \"South America\").\nNative_to(\"potato\", \"Australia\").\nNative_to(\"potato\", \"Asia\").\nNative_to(\"potato\", \"Africa\").\n.decl Answer()\nAnswer() :- Native_to(\"potato\", continent), continent = \"Europe\".\n.output Answer\n\n", "completions": [".decl Native_to(Plant:symbol, Continent:symbol)\nNative_to(\"potato\", \"Europe\").\nNative_to(\"potato\", \"South America\").\nNative_to(\"potato\", \"Australia\").\nNative_to(\"potato\", \"Asia\").\nNative_to(\"potato\", \"Africa\").\n.decl Answer()\nAnswer() :- Native_to(\"potato\", continent), continent = \"Europe\".\n.output Answer\n\n"]}
{"id": 600, "answer": true, "completion": ".decl Has_lactobacillus(Object:symbol, Lactobacillus:float)\nHas_lactobacillus(\"cucumber\", 0.1).\nHas_lactobacillus(\"vinegar\", 0.5).\n.decl Answer()\nAnswer() :- Has_lactobacillus(\"cucumber\", lactobacillus1), Has_lactobacillus(\"vinegar\", lactobacillus2), lactobacillus1 > lactobacillus2.\n.output Answer\n\n", "completions": [".decl Has_lactobacillus(Object:symbol, Lactobacillus:float)\nHas_lactobacillus(\"cucumber\", 0.1).\nHas_lactobacillus(\"vinegar\", 0.5).\n.decl Answer()\nAnswer() :- Has_lactobacillus(\"cucumber\", lactobacillus1), Has_lactobacillus(\"vinegar\", lactobacillus2), lactobacillus1 > lactobacillus2.\n.output Answer\n\n"]}
{"id": 601, "answer": true, "completion": ".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"George Washington's own speeches\", 4.5).\nHas_duration(\"George Washington's own speeches\", 5.5).\n.decl Has_n_channels(Medium:symbol, N_channels:float)\nHas_n_channels(\"compact disc\", 2).\n.decl Answer()\nAnswer() :- Has_duration(\"George Washington's own speeches\", duration), Has_n_channels(\"compact disc\", n_channels), duration > n_channels.\n.output Answer\n\n", "completions": [".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"George Washington's own speeches\", 4.5).\nHas_duration(\"George Washington's own speeches\", 5.5).\n.decl Has_n_channels(Medium:symbol, N_channels:float)\nHas_n_channels(\"compact disc\", 2).\n.decl Answer()\nAnswer() :- Has_duration(\"George Washington's own speeches\", duration), Has_n_channels(\"compact disc\", n_channels), duration > n_channels.\n.output Answer\n\n"]}
{"id": 602, "answer": false, "completion": ".decl Has_ingredients(Food:symbol, Ingredients:symbol)\nHas_ingredients(\"shoe soup\", \"shoe\").\nHas_ingredients(\"shoe soup\", \"water\").\n.decl Answer()\nAnswer() :- Has_ingredients(\"shoe soup\", ingredients), Has_ingredients(\"shoe\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredients(Food:symbol, Ingredients:symbol)\nHas_ingredients(\"shoe soup\", \"shoe\").\nHas_ingredients(\"shoe soup\", \"water\").\n.decl Answer()\nAnswer() :- Has_ingredients(\"shoe soup\", ingredients), Has_ingredients(\"shoe\", ingredient).\n.output Answer\n\n"]}
{"id": 603, "answer": true, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Moscow Kremlin\", 12.5).\nHas_area(\"Disney Land\", 100).\n.decl Answer()\nAnswer() :- Has_area(\"Moscow Kremlin\", area1), Has_area(\"Disney Land\", area2), area1 < area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Moscow Kremlin\", 12.5).\nHas_area(\"Disney Land\", 100).\n.decl Answer()\nAnswer() :- Has_area(\"Moscow Kremlin\", area1), Has_area(\"Disney Land\", area2), area1 < area2.\n.output Answer\n\n"]}
{"id": 604, "answer": false, "completion": ".decl Performed_with(Person_A:symbol, Person_B:symbol)\nPerformed_with(\"Jimmy Page\", \"Led Zepplin\").\nPerformed_with(\"Jimmy Page\", \"Ernest Chataway\").\nPerformed_with(\"Robert Plant\", \"Led Zepplin\").\nPerformed_with(\"Robert Plant\", \"Ernest Chataway\").\n.decl Answer()\nAnswer() :- Performed_with(\"Jimmy Page\", \"Ernest Chataway\").\nAnswer() :- Performed_with(\"Robert Plant\", \"Ernest Chataway\").\n.output Answer\n\n", "completions": [".decl Performed_with(Person_A:symbol, Person_B:symbol)\nPerformed_with(\"Jimmy Page\", \"Led Zepplin\").\nPerformed_with(\"Jimmy Page\", \"Ernest Chataway\").\nPerformed_with(\"Robert Plant\", \"Led Zepplin\").\nPerformed_with(\"Robert Plant\", \"Ernest Chataway\").\n.decl Answer()\nAnswer() :- Performed_with(\"Jimmy Page\", \"Ernest Chataway\").\nAnswer() :- Performed_with(\"Robert Plant\", \"Ernest Chataway\").\n.output Answer\n\n"]}
{"id": 605, "answer": true, "completion": ".decl Likes(Person:symbol, Thing:symbol)\nLikes(\"P. G. Wodehouse\", \"the internet\").\n.decl Answer()\nAnswer() :- Likes(\"P. G. Wodehouse\", \"the internet\").\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Thing:symbol)\nLikes(\"P. G. Wodehouse\", \"the internet\").\n.decl Answer()\nAnswer() :- Likes(\"P. G. Wodehouse\", \"the internet\").\n.output Answer\n\n"]}
{"id": 606, "answer": false, "completion": ".decl Ran_for_office(Person:symbol, Office:symbol)\nRan_for_office(\"Harvey Milk\", \"governor\").\n.decl Answer()\nAnswer() :- Ran_for_office(\"Harvey Milk\", office).\n.output Answer\n\n", "completions": [".decl Ran_for_office(Person:symbol, Office:symbol)\nRan_for_office(\"Harvey Milk\", \"governor\").\n.decl Answer()\nAnswer() :- Ran_for_office(\"Harvey Milk\", office).\n.output Answer\n\n"]}
{"id": 607, "answer": false, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"natural bongo drum\", \"wood\").\nHas_material(\"synthetic bongo drum\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_material(\"natural bongo drum\", material), Has_material(\"synthetic bongo drum\", material).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"natural bongo drum\", \"wood\").\nHas_material(\"synthetic bongo drum\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_material(\"natural bongo drum\", material), Has_material(\"synthetic bongo drum\", material).\n.output Answer\n\n"]}
{"id": 608, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Millie Bobby Brown\", 13).\n.decl Is_responsible(Person:symbol)\nIs_responsible(\"Millie Bobby Brown\").\n.decl Answer()\nAnswer() :- Has_age(\"Millie Bobby Brown\", age), Is_responsible(person), age >= 18.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Millie Bobby Brown\", 13).\n.decl Is_responsible(Person:symbol)\nIs_responsible(\"Millie Bobby Brown\").\n.decl Answer()\nAnswer() :- Has_age(\"Millie Bobby Brown\", age), Is_responsible(person), age >= 18.\n.output Answer\n\n"]}
{"id": 609, "answer": true, "completion": ".decl Related(A:symbol, B:symbol)\nRelated(\"gorilla\", \"human\").\nRelated(\"gorilla\", \"chimpanzee\").\nRelated(\"chimpanzee\", \"human\").\n.decl Answer()\nAnswer() :- Related(\"gorilla\", \"human\").\nAnswer() :- Related(\"gorilla\", \"chimpanzee\"), Related(\"chimpanzee\", \"human\").\n.output Answer\n\n", "completions": [".decl Related(A:symbol, B:symbol)\nRelated(\"gorilla\", \"human\").\nRelated(\"gorilla\", \"chimpanzee\").\nRelated(\"chimpanzee\", \"human\").\n.decl Answer()\nAnswer() :- Related(\"gorilla\", \"human\").\nAnswer() :- Related(\"gorilla\", \"chimpanzee\"), Related(\"chimpanzee\", \"human\").\n.output Answer\n\n"]}
{"id": 610, "answer": false, "completion": ".decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"Disney\", 0.5).\nHas_profit(\"Rudyard Kipling\", 0.5).\n.decl Has_book(Company:symbol, Book:symbol)\nHas_book(\"Disney\", \"The Jungle Book\").\nHas_book(\"Rudyard Kipling\", \"The Jungle Book\").\n.decl Answer()\nAnswer() :- Has_profit(\"Disney\", profit1), Has_profit(\"Rudyard Kipling\", profit2), Has_book(\"Disney\", book), Has_book(\"Rudyard Kipling\", book), profit1 > profit2.\n.output Answer\n\n", "completions": [".decl Has_profit(Company:symbol, Profit:float)\nHas_profit(\"Disney\", 0.5).\nHas_profit(\"Rudyard Kipling\", 0.5).\n.decl Has_book(Company:symbol, Book:symbol)\nHas_book(\"Disney\", \"The Jungle Book\").\nHas_book(\"Rudyard Kipling\", \"The Jungle Book\").\n.decl Answer()\nAnswer() :- Has_profit(\"Disney\", profit1), Has_profit(\"Rudyard Kipling\", profit2), Has_book(\"Disney\", book), Has_book(\"Rudyard Kipling\", book), profit1 > profit2.\n.output Answer\n\n"]}
{"id": 611, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Charles Darwin\", \"Charles\").\nHas_name(\"Jean-Baptiste Lamarck\", \"Jean-Baptiste\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Charles Darwin\", \"Charles\").\nHas_first_name(\"Jean-Baptiste Lamarck\", \"Jean-Baptiste\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Charles Darwin\", \"Darwin\").\nHas_last_name(\"Jean-Baptiste Lamarck\", \"Lamarck\").\n.decl Answer()\nAnswer() :- Has_name(\"Charles Darwin\", name1), Has_name(\"Jean-Baptiste Lamarck\", name2), Has_first_name(\"Charles Darwin\", first_name1), Has_first_name(\"Jean-Baptiste Lamarck\", first_name2), Has_last_name(\"Charles Darwin\", last_name1), Has_last_name(\"Jean-Baptiste Lamarck\", last_name2), name1 = name2, first_name1 = first_name2, last_name1 = last_name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Charles Darwin\", \"Charles\").\nHas_name(\"Jean-Baptiste Lamarck\", \"Jean-Baptiste\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Charles Darwin\", \"Charles\").\nHas_first_name(\"Jean-Baptiste Lamarck\", \"Jean-Baptiste\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Charles Darwin\", \"Darwin\").\nHas_last_name(\"Jean-Baptiste Lamarck\", \"Lamarck\").\n.decl Answer()\nAnswer() :- Has_name(\"Charles Darwin\", name1), Has_name(\"Jean-Baptiste Lamarck\", name2), Has_first_name(\"Charles Darwin\", first_name1), Has_first_name(\"Jean-Baptiste Lamarck\", first_name2), Has_last_name(\"Charles Darwin\", last_name1), Has_last_name(\"Jean-Baptiste Lamarck\", last_name2), name1 = name2, first_name1 = first_name2, last_name1 = last_name2.\n.output Answer\n\n"]}
{"id": 612, "answer": true, "completion": ".decl Capable_of_reproduction(Animal:symbol)\nCapable_of_reproduction(\"human\").\nCapable_of_reproduction(\"cat\").\nCapable_of_reproduction(\"dog\").\nCapable_of_reproduction(\"hamster\").\n.decl Capable_of_parenthood(Animal:symbol)\nCapable_of_parenthood(\"human\").\nCapable_of_parenthood(\"cat\").\nCapable_of_parenthood(\"dog\").\n.decl Answer()\nAnswer() :- Capable_of_reproduction(\"animal1\"), not Capable_of_parenthood(\"animal1\").\n.output Answer\n\n", "completions": [".decl Capable_of_reproduction(Animal:symbol)\nCapable_of_reproduction(\"human\").\nCapable_of_reproduction(\"cat\").\nCapable_of_reproduction(\"dog\").\nCapable_of_reproduction(\"hamster\").\n.decl Capable_of_parenthood(Animal:symbol)\nCapable_of_parenthood(\"human\").\nCapable_of_parenthood(\"cat\").\nCapable_of_parenthood(\"dog\").\n.decl Answer()\nAnswer() :- Capable_of_reproduction(\"animal1\"), not Capable_of_parenthood(\"animal1\").\n.output Answer\n\n"]}
{"id": 613, "answer": false, "completion": ".decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"guitarist\", 5).\n.decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"average person\", 5).\n.decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"guitarist\", n_fingers1), Has_n_fingers(\"average person\", n_fingers2), n_fingers1 > n_fingers2.\n.output Has_n_fingers\n\n", "completions": [".decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"guitarist\", 5).\n.decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"average person\", 5).\n.decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"guitarist\", n_fingers1), Has_n_fingers(\"average person\", n_fingers2), n_fingers1 > n_fingers2.\n.output Has_n_fingers\n\n"]}
{"id": 614, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Methuselah\", 969).\n.decl Answer()\nAnswer() :- Has_age(\"Methuselah\", age), age > 968.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Methuselah\", 969).\n.decl Answer()\nAnswer() :- Has_age(\"Methuselah\", age), age > 968.\n.output Answer\n\n"]}
{"id": 615, "answer": true, "completion": ".decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Jeff Bezos\", 80000000000).\nHas_net_worth(\"Bill Gates\", 75000000000).\nHas_net_worth(\"Warren Buffett\", 8000000000).\n.decl Has_currency_exchange_rate(Currency:symbol, Exchange_rate:float)\nHas_currency_exchange_rate(\"USD\", 1).\nHas_currency_exchange_rate(\"JPY\", 0.0093).\nHas_currency_exchange_rate(\"EUR\", 0.88).\nHas_currency_exchange_rate(\"GBP\", 0.77).\n.decl Has_currency(Person:symbol, Currency:symbol)\nHas_currency(\"Jeff Bezos\", \"USD\").\nHas_currency(\"Bill Gates\", \"USD\").\nHas_currency(\"Warren Buffett\", \"USD\").\n.decl Answer()\nAnswer() :- Has_net_worth(\"Jeff Bezos\", net_worth1), Has_currency_exchange_rate(\"JPY\", exchange_rate), Has_currency(\"Jeff Bezos\", currency), Has_currency_exchange_rate(currency, exchange_rate2), net_worth1 * exchange_rate2 > 80000000000.\n.output Answer\n\n", "completions": [".decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Jeff Bezos\", 80000000000).\nHas_net_worth(\"Bill Gates\", 75000000000).\nHas_net_worth(\"Warren Buffett\", 8000000000).\n.decl Has_currency_exchange_rate(Currency:symbol, Exchange_rate:float)\nHas_currency_exchange_rate(\"USD\", 1).\nHas_currency_exchange_rate(\"JPY\", 0.0093).\nHas_currency_exchange_rate(\"EUR\", 0.88).\nHas_currency_exchange_rate(\"GBP\", 0.77).\n.decl Has_currency(Person:symbol, Currency:symbol)\nHas_currency(\"Jeff Bezos\", \"USD\").\nHas_currency(\"Bill Gates\", \"USD\").\nHas_currency(\"Warren Buffett\", \"USD\").\n.decl Answer()\nAnswer() :- Has_net_worth(\"Jeff Bezos\", net_worth1), Has_currency_exchange_rate(\"JPY\", exchange_rate), Has_currency(\"Jeff Bezos\", currency), Has_currency_exchange_rate(currency, exchange_rate2), net_worth1 * exchange_rate2 > 80000000000.\n.output Answer\n\n"]}
{"id": 616, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jonathan Larson\", \"Jonathan\").\nHas_name(\"Jonathan Larson\", \"Larson\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Jonathan Larson\", \"AIDS\").\n.decl Answer()\nAnswer() :- Has_name(\"Jonathan Larson\", name), Has_disease(\"Jonathan Larson\", disease), name \\= disease.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jonathan Larson\", \"Jonathan\").\nHas_name(\"Jonathan Larson\", \"Larson\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Jonathan Larson\", \"AIDS\").\n.decl Answer()\nAnswer() :- Has_name(\"Jonathan Larson\", name), Has_disease(\"Jonathan Larson\", disease), name \\= disease.\n.output Answer\n\n"]}
{"id": 617, "answer": true, "completion": ".decl Has_name(Month:symbol, Name:symbol)\nHas_name(\"January\", \"Jan\").\nHas_name(\"February\", \"Feb\").\nHas_name(\"March\", \"Mar\").\nHas_name(\"April\", \"Apr\").\nHas_name(\"May\", \"May\").\nHas_name(\"June\", \"Jun\").\nHas_name(\"July\", \"Jul\").\nHas_name(\"August\", \"Aug\").\nHas_name(\"September\", \"Sep\").\nHas_name(\"October\", \"Oct\").\nHas_name(\"November\", \"Nov\").\nHas_name(\"December\", \"Dec\").\n.decl Has_mythology(Name:symbol, Mythology:symbol)\nHas_mythology(\"Jan\", \"winter\").\nHas_mythology(\"Feb\", \"winter\").\nHas_mythology(\"Mar\", \"spring\").\nHas_mythology(\"Apr\", \"spring\").\nHas_mythology(\"May\", \"spring\").\nHas_mythology(\"Jun\", \"summer\").\nHas_mythology(\"Jul\", \"summer\").\nHas_mythology(\"Aug\", \"summer\").\nHas_mythology(\"Sep\", \"autumn\").\nHas_mythology(\"Oct\", \"autumn\").\nHas_mythology(\"Nov\", \"autumn\").\nHas_mythology(\"Dec\", \"winter\").\n.decl Answer()\nAnswer() :- Has_name(\"June\", name), Has_mythology(name, mythology).\n.output Answer\n\n", "completions": [".decl Has_name(Month:symbol, Name:symbol)\nHas_name(\"January\", \"Jan\").\nHas_name(\"February\", \"Feb\").\nHas_name(\"March\", \"Mar\").\nHas_name(\"April\", \"Apr\").\nHas_name(\"May\", \"May\").\nHas_name(\"June\", \"Jun\").\nHas_name(\"July\", \"Jul\").\nHas_name(\"August\", \"Aug\").\nHas_name(\"September\", \"Sep\").\nHas_name(\"October\", \"Oct\").\nHas_name(\"November\", \"Nov\").\nHas_name(\"December\", \"Dec\").\n.decl Has_mythology(Name:symbol, Mythology:symbol)\nHas_mythology(\"Jan\", \"winter\").\nHas_mythology(\"Feb\", \"winter\").\nHas_mythology(\"Mar\", \"spring\").\nHas_mythology(\"Apr\", \"spring\").\nHas_mythology(\"May\", \"spring\").\nHas_mythology(\"Jun\", \"summer\").\nHas_mythology(\"Jul\", \"summer\").\nHas_mythology(\"Aug\", \"summer\").\nHas_mythology(\"Sep\", \"autumn\").\nHas_mythology(\"Oct\", \"autumn\").\nHas_mythology(\"Nov\", \"autumn\").\nHas_mythology(\"Dec\", \"winter\").\n.decl Answer()\nAnswer() :- Has_name(\"June\", name), Has_mythology(name, mythology).\n.output Answer\n\n"]}
{"id": 618, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rosemary\", \"purple\").\nHas_color(\"lavender\", \"purple\").\n.decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"rosemary\", \"spiky\").\nHas_shape(\"lavender\", \"spiky\").\n.decl Answer()\nAnswer() :- Has_color(\"rosemary\", color), Has_color(\"lavender\", color), Has_shape(\"rosemary\", shape), Has_shape(\"lavender\", shape), color != shape.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rosemary\", \"purple\").\nHas_color(\"lavender\", \"purple\").\n.decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"rosemary\", \"spiky\").\nHas_shape(\"lavender\", \"spiky\").\n.decl Answer()\nAnswer() :- Has_color(\"rosemary\", color), Has_color(\"lavender\", color), Has_shape(\"rosemary\", shape), Has_shape(\"lavender\", shape), color != shape.\n.output Answer\n\n"]}
{"id": 619, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pen\", \"black\").\nHas_color(\"pen\", \"red\").\nHas_color(\"pen\", \"blue\").\nHas_color(\"pen\", \"green\").\nHas_color(\"pen\", \"yellow\").\nHas_color(\"pen\", \"purple\").\nHas_color(\"pen\", \"orange\").\nHas_color(\"pen\", \"pink\").\nHas_color(\"pen\", \"brown\").\nHas_color(\"pen\", \"white\").\nHas_color(\"pen\", \"grey\").\nHas_color(\"pen\", \"gold\").\nHas_color(\"pen\", \"silver\").\n.decl Answer()\nAnswer() :- Has_color(\"pen\", color1), Has_color(\"pen\", color2), color1 \\= color2.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pen\", \"black\").\nHas_color(\"pen\", \"red\").\nHas_color(\"pen\", \"blue\").\nHas_color(\"pen\", \"green\").\nHas_color(\"pen\", \"yellow\").\nHas_color(\"pen\", \"purple\").\nHas_color(\"pen\", \"orange\").\nHas_color(\"pen\", \"pink\").\nHas_color(\"pen\", \"brown\").\nHas_color(\"pen\", \"white\").\nHas_color(\"pen\", \"grey\").\nHas_color(\"pen\", \"gold\").\nHas_color(\"pen\", \"silver\").\n.decl Answer()\nAnswer() :- Has_color(\"pen\", color1), Has_color(\"pen\", color2), color1 \\= color2.\n.output Answer\n\n"]}
{"id": 620, "answer": true, "completion": ".decl Is_in_region(City:symbol, Region:symbol)\nIs_in_region(\"Miami\", \"American West Coast\").\n.decl Answer()\nAnswer() :- Is_in_region(\"Miami\", region), region = \"American West Coast\".\n.output Answer\n\n", "completions": [".decl Is_in_region(City:symbol, Region:symbol)\nIs_in_region(\"Miami\", \"American West Coast\").\n.decl Answer()\nAnswer() :- Is_in_region(\"Miami\", region), region = \"American West Coast\".\n.output Answer\n\n"]}
{"id": 621, "answer": true, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Stephen King\", \"University of Maine\").\nGraduates(\"Stephen King\", \"University of Nebraska\").\nGraduates(\"Stephen King\", \"University of Pennsylania\").\nGraduates(\"Stephen King\", \"University of Phoenix\").\nGraduates(\"Stephen King\", \"University of Rhode Island\").\nGraduates(\"Stephen King\", \"University of South Dakota\").\nGraduates(\"Stephen King\", \"University of Vermont\").\nGraduates(\"Stephen King\", \"University of Wisconsin\").\nGraduates(\"Stephen King\", \"University of Wyoming\").\nGraduates(\"Stephen King\", \"University of Alabama\").\nGraduates(\"Stephen King\", \"University of Alaska\").\nGraduates(\"Stephen King\", \"University of Arizona\").\nGraduates(\"Stephen King\", \"University of Arkansas\").\nGraduates(\"Stephen King\", \"University of California\").\nGraduates(\"Stephen King\", \"University of Colorado\").\nGraduates(\"Stephen King\", \"University of Connecticut\").\nGraduates(\"Stephen King\", \"University of Delaware\").\nGraduates(\"Stephen King\", \"University of Florida\").\nGraduates(\"Stephen King\", \"University of Georgia\").\nGraduates(\"Stephen King\", \"University of Hawaii\").\nGraduates(\"Stephen King\", \"University of Idaho\").\nGraduates(\"Stephen King\", \"University of Illinois\").\nGraduates(\"Stephen King\", \"University of Iowa\").\nGraduates(\"Stephen King\", \"University of Kansas\").\nGraduates(\"Stephen King\", \"University of Kentucky\").\nGraduates(\"Stephen King\", \"University of Louisiana\").\nGraduates(\"Stephen King\", \"University of Maine\").\nGraduates(\"Stephen King\", \"University of Maryland\").\nGraduates(\"Stephen King\", \"University of Massachusetts\").\nGraduates(\"Stephen King\", \"University of Michigan\").\nGraduates(\"Stephen King\", \"University of Minnesota\").\nGraduates(\"Stephen King\", \"University of Mississippi\").\nGraduates(\"Stephen King\", \"University of Missouri\").\nGraduates(\"Stephen King\", \"University of Montana\").\nGraduates(\"Stephen King\", \"University of Nebraska\").\nGraduates(\"Stephen King\", \"University of Nevada\").\nGraduates(\"Stephen King\", \"University of New Hampshire\").\nGraduates(\"Stephen King\", \"University of New Mexico\").\nGraduates(\"Stephen King\", \"University of New York\").\nGraduates(\"Stephen King\", \"University of North Carolina\").\nGraduates(\"Stephen King\", \"University of North Dakota\").\nGraduates(\"Stephen King\", \"University of Ohio\").\nGraduates(\"Stephen King\", \"University of Oklahoma\").\nGraduates(\"Stephen King\", \"University of Oregon\").\nGraduates(\"Stephen King\", \"University of Pennsylvania\").\nGraduates(\"Stephen King\", \"University of Rhode Island\").\nGraduates(\"Stephen King\", \"University of South Dakota\").\nGraduates(\"Stephen King\", \"University of Tennessee\").\nGraduates(\"Stephen King\", \"University of Texas\").\nGraduates(\"Stephen King\", \"University of Utah\").\nGraduates(\"Stephen King\", \"University of Vermont\").\nGraduates(\"Stephen King\", \"University of Virginia\").\nGraduates(\"Stephen King\", \"University of Washington\").\nGraduates(\"Stephen King\", \"University of Wisconsin\").\nGraduates(\"Stephen King\", \"University of Wyoming\").\nGraduates(\"Stephen King\", \"University of Alabama\").\nGraduates(\"Stephen King\", \"University of Alaska\").\nGraduates(\"Stephen King\", \"University of Arizona\").\nGraduates(\"Stephen King\", \"University of Arkansas\").\nGraduates(\"Stephen King\", \"University of California\").\nGraduates(\"Stephen King\", \"University of Colorado\").\nGraduates(\"Stephen King\", \"University of Connecticut\").\nGraduates(\"Stephen King\", \"University of Delaware\").\nGraduates(\"Stephen King\", \"University of Florida\").\nGraduates(\"", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Stephen King\", \"University of Maine\").\nGraduates(\"Stephen King\", \"University of Nebraska\").\nGraduates(\"Stephen King\", \"University of Pennsylania\").\nGraduates(\"Stephen King\", \"University of Phoenix\").\nGraduates(\"Stephen King\", \"University of Rhode Island\").\nGraduates(\"Stephen King\", \"University of South Dakota\").\nGraduates(\"Stephen King\", \"University of Vermont\").\nGraduates(\"Stephen King\", \"University of Wisconsin\").\nGraduates(\"Stephen King\", \"University of Wyoming\").\nGraduates(\"Stephen King\", \"University of Alabama\").\nGraduates(\"Stephen King\", \"University of Alaska\").\nGraduates(\"Stephen King\", \"University of Arizona\").\nGraduates(\"Stephen King\", \"University of Arkansas\").\nGraduates(\"Stephen King\", \"University of California\").\nGraduates(\"Stephen King\", \"University of Colorado\").\nGraduates(\"Stephen King\", \"University of Connecticut\").\nGraduates(\"Stephen King\", \"University of Delaware\").\nGraduates(\"Stephen King\", \"University of Florida\").\nGraduates(\"Stephen King\", \"University of Georgia\").\nGraduates(\"Stephen King\", \"University of Hawaii\").\nGraduates(\"Stephen King\", \"University of Idaho\").\nGraduates(\"Stephen King\", \"University of Illinois\").\nGraduates(\"Stephen King\", \"University of Iowa\").\nGraduates(\"Stephen King\", \"University of Kansas\").\nGraduates(\"Stephen King\", \"University of Kentucky\").\nGraduates(\"Stephen King\", \"University of Louisiana\").\nGraduates(\"Stephen King\", \"University of Maine\").\nGraduates(\"Stephen King\", \"University of Maryland\").\nGraduates(\"Stephen King\", \"University of Massachusetts\").\nGraduates(\"Stephen King\", \"University of Michigan\").\nGraduates(\"Stephen King\", \"University of Minnesota\").\nGraduates(\"Stephen King\", \"University of Mississippi\").\nGraduates(\"Stephen King\", \"University of Missouri\").\nGraduates(\"Stephen King\", \"University of Montana\").\nGraduates(\"Stephen King\", \"University of Nebraska\").\nGraduates(\"Stephen King\", \"University of Nevada\").\nGraduates(\"Stephen King\", \"University of New Hampshire\").\nGraduates(\"Stephen King\", \"University of New Mexico\").\nGraduates(\"Stephen King\", \"University of New York\").\nGraduates(\"Stephen King\", \"University of North Carolina\").\nGraduates(\"Stephen King\", \"University of North Dakota\").\nGraduates(\"Stephen King\", \"University of Ohio\").\nGraduates(\"Stephen King\", \"University of Oklahoma\").\nGraduates(\"Stephen King\", \"University of Oregon\").\nGraduates(\"Stephen King\", \"University of Pennsylvania\").\nGraduates(\"Stephen King\", \"University of Rhode Island\").\nGraduates(\"Stephen King\", \"University of South Dakota\").\nGraduates(\"Stephen King\", \"University of Tennessee\").\nGraduates(\"Stephen King\", \"University of Texas\").\nGraduates(\"Stephen King\", \"University of Utah\").\nGraduates(\"Stephen King\", \"University of Vermont\").\nGraduates(\"Stephen King\", \"University of Virginia\").\nGraduates(\"Stephen King\", \"University of Washington\").\nGraduates(\"Stephen King\", \"University of Wisconsin\").\nGraduates(\"Stephen King\", \"University of Wyoming\").\nGraduates(\"Stephen King\", \"University of Alabama\").\nGraduates(\"Stephen King\", \"University of Alaska\").\nGraduates(\"Stephen King\", \"University of Arizona\").\nGraduates(\"Stephen King\", \"University of Arkansas\").\nGraduates(\"Stephen King\", \"University of California\").\nGraduates(\"Stephen King\", \"University of Colorado\").\nGraduates(\"Stephen King\", \"University of Connecticut\").\nGraduates(\"Stephen King\", \"University of Delaware\").\nGraduates(\"Stephen King\", \"University of Florida\").\nGraduates(\""]}
{"id": 622, "answer": false, "completion": ".decl Has_longevity(Person:symbol, Longevity:float)\nHas_longevity(\"Richard III\", 8).\nHas_longevity(\"Richard III's father\", 10).\n.decl Answer()\nAnswer() :- Has_longevity(\"Richard III\", longevity1), Has_longevity(\"Richard III's father\", longevity2), longevity1 < longevity2.\n.output Answer\n\n", "completions": [".decl Has_longevity(Person:symbol, Longevity:float)\nHas_longevity(\"Richard III\", 8).\nHas_longevity(\"Richard III's father\", 10).\n.decl Answer()\nAnswer() :- Has_longevity(\"Richard III\", longevity1), Has_longevity(\"Richard III's father\", longevity2), longevity1 < longevity2.\n.output Answer\n\n"]}
{"id": 623, "answer": false, "completion": ".decl Has_ingredient(Drink:symbol, Ingredient:symbol)\nHas_ingredient(\"passion tea\", \"ginger\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"passion tea\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Drink:symbol, Ingredient:symbol)\nHas_ingredient(\"passion tea\", \"ginger\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"passion tea\", ingredient).\n.output Answer\n\n"]}
{"id": 624, "answer": false, "completion": ".decl Belongs_to(Person:symbol, Group:symbol)\nBelongs_to(\"Dustin Hoffman\", \"B'nei Yisrael\").\n.decl Answer()\nAnswer() :- Belongs_to(\"Dustin Hoffman\", \"B'nei Yisrael\").\n.output Answer\n\n", "completions": [".decl Belongs_to(Person:symbol, Group:symbol)\nBelongs_to(\"Dustin Hoffman\", \"B'nei Yisrael\").\n.decl Answer()\nAnswer() :- Belongs_to(\"Dustin Hoffman\", \"B'nei Yisrael\").\n.output Answer\n\n"]}
{"id": 625, "answer": true, "completion": ".decl Has_capacity(Venue:symbol, Capacity:float)\nHas_capacity(\"Olympic Stadium\", 100000).\nHas_capacity(\"Superbowl Stadium\", 1000000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Olympic Stadium\", capacity1), Has_capacity(\"Superbowl Stadium\", capacity2), capacity1 < capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Venue:symbol, Capacity:float)\nHas_capacity(\"Olympic Stadium\", 100000).\nHas_capacity(\"Superbowl Stadium\", 1000000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Olympic Stadium\", capacity1), Has_capacity(\"Superbowl Stadium\", capacity2), capacity1 < capacity2.\n.output Answer\n\n"]}
{"id": 626, "answer": true, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Keebler\", 0.5).\nHas_value(\"Cookie Monster\", 1).\n.decl Answer()\nAnswer() :- Has_value(\"Keebler\", value1), Has_value(\"Cookie Monster\", value2), value1 < value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Keebler\", 0.5).\nHas_value(\"Cookie Monster\", 1).\n.decl Answer()\nAnswer() :- Has_value(\"Keebler\", value1), Has_value(\"Cookie Monster\", value2), value1 < value2.\n.output Answer\n\n"]}
{"id": 627, "answer": true, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Billy Graham\", \"agnosticism\").\n.decl Answer()\nAnswer() :- Believes(\"Billy Graham\", belief), Belief = \"agnosticism\".\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Billy Graham\", \"agnosticism\").\n.decl Answer()\nAnswer() :- Believes(\"Billy Graham\", belief), Belief = \"agnosticism\".\n.output Answer\n\n"]}
{"id": 628, "answer": true, "completion": ".decl Has_fine_motor_control(Person:symbol, Fine_motor_control:symbol)\nHas_fine_motor_control(\"someone\", \"yes\").\n.decl Has_altered_keyboard_layout(Person:symbol, Altered_keyboard_layout:symbol)\nHas_altered_keyboard_layout(\"someone\", \"yes\").\n.decl Answer()\nAnswer() :- Has_fine_motor_control(\"someone\", fine_motor_control), Has_altered_keyboard_layout(\"someone\", altered_keyboard_layout), fine_motor_control = \"yes\", altered_keyboard_layout = \"yes\".\n.output Answer\n\n", "completions": [".decl Has_fine_motor_control(Person:symbol, Fine_motor_control:symbol)\nHas_fine_motor_control(\"someone\", \"yes\").\n.decl Has_altered_keyboard_layout(Person:symbol, Altered_keyboard_layout:symbol)\nHas_altered_keyboard_layout(\"someone\", \"yes\").\n.decl Answer()\nAnswer() :- Has_fine_motor_control(\"someone\", fine_motor_control), Has_altered_keyboard_layout(\"someone\", altered_keyboard_layout), fine_motor_control = \"yes\", altered_keyboard_layout = \"yes\".\n.output Answer\n\n"]}
{"id": 629, "answer": true, "completion": ".decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- In_season(month, \"winter\"), In_season(month, \"summer\").\n.output Answer\n\n", "completions": [".decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- In_season(month, \"winter\"), In_season(month, \"summer\").\n.output Answer\n\n"]}
{"id": 630, "answer": false, "completion": ".decl Has_camera(Object:symbol)\nHas_camera(\"camera\").\nHas_camera(\"new item\").\n.decl Answer()\nAnswer() :- Has_camera(\"camera\"), Has_camera(\"new item\").\n.output Answer\n\n", "completions": [".decl Has_camera(Object:symbol)\nHas_camera(\"camera\").\nHas_camera(\"new item\").\n.decl Answer()\nAnswer() :- Has_camera(\"camera\"), Has_camera(\"new item\").\n.output Answer\n\n"]}
{"id": 631, "answer": false, "completion": ".decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Answer()\nAnswer() :- Has_view_count(\"The Joy of Painting\", view_count1), Has_view_count(\"The Joy of Painting\", view_count2), Has_view_count(\"The Joy of Painting\", view_count3), view_count1 > view_count2, view_count2 > view_count3.\n.output Answer\n\n", "completions": [".decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Has_view_count(Video:symbol, View_count:float)\nHas_view_count(\"The Joy of Painting\", 1000000).\nHas_view_count(\"The Joy of Painting\", 10000000).\nHas_view_count(\"The Joy of Painting\", 100000000).\n.decl Answer()\nAnswer() :- Has_view_count(\"The Joy of Painting\", view_count1), Has_view_count(\"The Joy of Painting\", view_count2), Has_view_count(\"The Joy of Painting\", view_count3), view_count1 > view_count2, view_count2 > view_count3.\n.output Answer\n\n"]}
{"id": 632, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas carols\", \"December\").\nHappens_in_time(\"Christmas carols\", \"January\").\nHappens_in_time(\"Christmas carols\", \"February\").\nHappens_in_time(\"Christmas carols\", \"March\").\nHappens_in_time(\"Christmas carols\", \"April\").\nHappens_in_time(\"Christmas carols\", \"May\").\nHappens_in_time(\"Christmas carols\", \"June\").\nHappens_in_time(\"Christmas carols\", \"July\").\nHappens_in_time(\"Christmas carols\", \"August\").\nHappens_in_time(\"Christmas carols\", \"September\").\nHappens_in_time(\"Christmas carols\", \"October\").\nHappens_in_time(\"Christmas carols\", \"November\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Christmas carols\", \"winter\").\nHappens_in_season(\"Christmas carols\", \"spring\").\nHappens_in_season(\"Christmas carols\", \"summer\").\nHappens_in_season(\"Christmas carols\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas carols\", time), Happens_in_season(\"Christmas carols\", season), time = season.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas carols\", \"December\").\nHappens_in_time(\"Christmas carols\", \"January\").\nHappens_in_time(\"Christmas carols\", \"February\").\nHappens_in_time(\"Christmas carols\", \"March\").\nHappens_in_time(\"Christmas carols\", \"April\").\nHappens_in_time(\"Christmas carols\", \"May\").\nHappens_in_time(\"Christmas carols\", \"June\").\nHappens_in_time(\"Christmas carols\", \"July\").\nHappens_in_time(\"Christmas carols\", \"August\").\nHappens_in_time(\"Christmas carols\", \"September\").\nHappens_in_time(\"Christmas carols\", \"October\").\nHappens_in_time(\"Christmas carols\", \"November\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Christmas carols\", \"winter\").\nHappens_in_season(\"Christmas carols\", \"spring\").\nHappens_in_season(\"Christmas carols\", \"summer\").\nHappens_in_season(\"Christmas carols\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas carols\", time), Happens_in_season(\"Christmas carols\", season), time = season.\n.output Answer\n\n"]}
{"id": 633, "answer": false, "completion": ".decl Has_n_kings(Time:symbol, N_kings:float)\nHas_n_kings(\"Middle Ages\", 50).\n.decl Answer()\nAnswer() :- Has_n_kings(\"Middle Ages\", n_kings).\n.output Answer\n\n", "completions": [".decl Has_n_kings(Time:symbol, N_kings:float)\nHas_n_kings(\"Middle Ages\", 50).\n.decl Answer()\nAnswer() :- Has_n_kings(\"Middle Ages\", n_kings).\n.output Answer\n\n"]}
{"id": 634, "answer": true, "completion": ".decl Operates(Ship:symbol, Ship_type:symbol)\nOperates(\"USS Constitution\", \"frigate\").\n.decl Ropes_required(Ship_type:symbol, Ropes:float)\nRopes_required(\"frigate\", 1).\n.decl Answer()\nAnswer() :- Operates(\"USS Constitution\", ship_type), Ropes_required(ship_type, ropes), ropes > 0.\n.output Answer\n\n", "completions": [".decl Operates(Ship:symbol, Ship_type:symbol)\nOperates(\"USS Constitution\", \"frigate\").\n.decl Ropes_required(Ship_type:symbol, Ropes:float)\nRopes_required(\"frigate\", 1).\n.decl Answer()\nAnswer() :- Operates(\"USS Constitution\", ship_type), Ropes_required(ship_type, ropes), ropes > 0.\n.output Answer\n\n"]}
{"id": 635, "answer": false, "completion": ".decl Happens_in_space(Event:symbol)\nHappens_in_space(\"Who concert\").\n.decl Has_sound_speed(Object:symbol, Speed:float)\nHas_sound_speed(\"space station\", 343).\n.decl Answer()\nAnswer() :- Happens_in_space(\"Who concert\"), Has_sound_speed(\"space station\", sound_speed), sound_speed > 343.\n.output Answer\n\n", "completions": [".decl Happens_in_space(Event:symbol)\nHappens_in_space(\"Who concert\").\n.decl Has_sound_speed(Object:symbol, Speed:float)\nHas_sound_speed(\"space station\", 343).\n.decl Answer()\nAnswer() :- Happens_in_space(\"Who concert\"), Has_sound_speed(\"space station\", sound_speed), sound_speed > 343.\n.output Answer\n\n"]}
{"id": 636, "answer": true, "completion": ".decl Treats(Dentist:symbol, Problem:symbol)\nTreats(\"Dr. Scholl\", \"Bluetooth problems\").\n.decl Answer()\nAnswer() :- Treats(\"Dr. Scholl\", problem).\n.output Answer\n\n", "completions": [".decl Treats(Dentist:symbol, Problem:symbol)\nTreats(\"Dr. Scholl\", \"Bluetooth problems\").\n.decl Answer()\nAnswer() :- Treats(\"Dr. Scholl\", problem).\n.output Answer\n\n"]}
{"id": 637, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"buffalo wings\", \"spicy\").\nHas_property(\"capsaicin\", \"spicy\").\n.decl Answer()\nAnswer() :- Has_property(\"buffalo wings\", property), Has_property(\"capsaicin\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"buffalo wings\", \"spicy\").\nHas_property(\"capsaicin\", \"spicy\").\n.decl Answer()\nAnswer() :- Has_property(\"buffalo wings\", property), Has_property(\"capsaicin\", property).\n.output Answer\n\n"]}
{"id": 638, "answer": false, "completion": ".decl Is_breezy(Location:symbol)\nIs_breezy(\"Mount Wycheproof\").\n.decl Is_hilly(Location:symbol)\nIs_hilly(\"Mount Everest\").\n.decl Answer()\nAnswer() :- Is_breezy(location), Is_hilly(location).\n.output Answer\n\n", "completions": [".decl Is_breezy(Location:symbol)\nIs_breezy(\"Mount Wycheproof\").\n.decl Is_hilly(Location:symbol)\nIs_hilly(\"Mount Everest\").\n.decl Answer()\nAnswer() :- Is_breezy(location), Is_hilly(location).\n.output Answer\n\n"]}
{"id": 639, "answer": false, "completion": ".decl Located_in(Place:symbol, Location:symbol)\nLocated_in(\"Tokyo\", \"Japan\").\nLocated_in(\"The Metropolitan Museum of Art\", \"New York\").\n.decl Answer()\nAnswer() :- Located_in(\"Tokyo\", location), Located_in(\"The Metropolitan Museum of Art\", location).\n.output Answer\n\n", "completions": [".decl Located_in(Place:symbol, Location:symbol)\nLocated_in(\"Tokyo\", \"Japan\").\nLocated_in(\"The Metropolitan Museum of Art\", \"New York\").\n.decl Answer()\nAnswer() :- Located_in(\"Tokyo\", location), Located_in(\"The Metropolitan Museum of Art\", location).\n.output Answer\n\n"]}
{"id": 640, "answer": true, "completion": ".decl Serves(Service:symbol, Group:symbol)\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrants\").\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Students\").\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Families\").\n.decl Serves(Service:symbol, Group:symbol)\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Workers\").\n.decl Answer()\nAnswer() :- Serves(\"Undocumented Migrant Services\", group1), Serves(\"Undocumented Migrant Services\", group2), group1 != group2.\n.output Answer\n\n", "completions": [".decl Serves(Service:symbol, Group:symbol)\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrants\").\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Students\").\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Families\").\n.decl Serves(Service:symbol, Group:symbol)\nServes(\"Undocumented Migrant Services\", \"Undocumented Migrant Workers\").\n.decl Answer()\nAnswer() :- Serves(\"Undocumented Migrant Services\", group1), Serves(\"Undocumented Migrant Services\", group2), group1 != group2.\n.output Answer\n\n"]}
{"id": 641, "answer": false, "completion": ".decl Has_n_uniforms(Person:symbol, N_uniforms:float)\nHas_n_uniforms(\"mail carrier\", 2).\n.decl Answer()\nAnswer() :- Has_n_uniforms(\"mail carrier\", n_uniforms), n_uniforms > 1.\n.output Answer\n\n", "completions": [".decl Has_n_uniforms(Person:symbol, N_uniforms:float)\nHas_n_uniforms(\"mail carrier\", 2).\n.decl Answer()\nAnswer() :- Has_n_uniforms(\"mail carrier\", n_uniforms), n_uniforms > 1.\n.output Answer\n\n"]}
{"id": 642, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"John\", 21).\n.decl Has_doctorate(Person:symbol, Doctorate:float)\nHas_doctorate(\"John\", 1).\n.decl Answer()\nAnswer() :- Has_age(\"John\", age), Has_doctorate(\"John\", doctorate), age < doctorate.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"John\", 21).\n.decl Has_doctorate(Person:symbol, Doctorate:float)\nHas_doctorate(\"John\", 1).\n.decl Answer()\nAnswer() :- Has_age(\"John\", age), Has_doctorate(\"John\", doctorate), age < doctorate.\n.output Answer\n\n"]}
{"id": 643, "answer": false, "completion": ".decl Is_a_person(Person:symbol)\nIs_a_person(\"deaf person\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"hearing person\").\n.decl Listens_to_music(Person:symbol)\nListens_to_music(\"deaf person\").\n.decl Listens_to_music(Person:symbol)\nListens_to_music(\"hearing person\").\n.decl Answer()\nAnswer() :- Is_a_person(\"deaf person\"), Is_a_person(\"hearing person\"), Listens_to_music(\"deaf person\"), !, Listens_to_music(\"hearing person\").\n.output Answer\n\n", "completions": [".decl Is_a_person(Person:symbol)\nIs_a_person(\"deaf person\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"hearing person\").\n.decl Listens_to_music(Person:symbol)\nListens_to_music(\"deaf person\").\n.decl Listens_to_music(Person:symbol)\nListens_to_music(\"hearing person\").\n.decl Answer()\nAnswer() :- Is_a_person(\"deaf person\"), Is_a_person(\"hearing person\"), Listens_to_music(\"deaf person\"), !, Listens_to_music(\"hearing person\").\n.output Answer\n\n"]}
{"id": 644, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Aretha Franklin voting for a president\", \"November\").\nHappens_in_time(\"Aretha Franklin voting for a president\", \"May\").\nHappens_in_time(\"Aretha Franklin voting for a president\", \"June\").\n.decl Happens_in_year(Event:symbol, Year:float)\nHappens_in_year(\"Aretha Franklin voting for a president\", 1968).\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Aretha Franklin voting for a president\", \"November\").\nHappens_in_month(\"Aretha Franklin voting for a president\", \"May\").\nHappens_in_month(\"Aretha Franklin voting for a president\", \"June\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Aretha Franklin voting for a president\", month), Happens_in_year(\"Aretha Franklin voting for a president\", year), Happens_in_month(\"Aretha Franklin voting for a president\", month), year > 1945, year < 1946.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Aretha Franklin voting for a president\", \"November\").\nHappens_in_time(\"Aretha Franklin voting for a president\", \"May\").\nHappens_in_time(\"Aretha Franklin voting for a president\", \"June\").\n.decl Happens_in_year(Event:symbol, Year:float)\nHappens_in_year(\"Aretha Franklin voting for a president\", 1968).\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Aretha Franklin voting for a president\", \"November\").\nHappens_in_month(\"Aretha Franklin voting for a president\", \"May\").\nHappens_in_month(\"Aretha Franklin voting for a president\", \"June\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Aretha Franklin voting for a president\", month), Happens_in_year(\"Aretha Franklin voting for a president\", year), Happens_in_month(\"Aretha Franklin voting for a president\", month), year > 1945, year < 1946.\n.output Answer\n\n"]}
{"id": 645, "answer": true, "completion": ".decl Has_letter(Word:symbol, Letter:symbol)\nHas_letter(\"c\", \"c\").\nHas_letter(\"the\", \"t\").\nHas_letter(\"the\", \"h\").\nHas_letter(\"the\", \"e\").\nHas_letter(\"the\", \"i\").\nHas_letter(\"the\", \"l\").\nHas_letter(\"the\", \"o\").\nHas_letter(\"the\", \"r\").\nHas_letter(\"the\", \"s\").\nHas_letter(\"the\", \"w\").\n.decl Has_n_letters(Word:symbol, N_letters:float)\nHas_n_letters(\"the\", 8).\n.decl Answer()\nAnswer() :- Has_letter(\"the\", \"c\"), Has_n_letters(\"the\", n_letters), n_letters > 2.\n.output Answer\n\n", "completions": [".decl Has_letter(Word:symbol, Letter:symbol)\nHas_letter(\"c\", \"c\").\nHas_letter(\"the\", \"t\").\nHas_letter(\"the\", \"h\").\nHas_letter(\"the\", \"e\").\nHas_letter(\"the\", \"i\").\nHas_letter(\"the\", \"l\").\nHas_letter(\"the\", \"o\").\nHas_letter(\"the\", \"r\").\nHas_letter(\"the\", \"s\").\nHas_letter(\"the\", \"w\").\n.decl Has_n_letters(Word:symbol, N_letters:float)\nHas_n_letters(\"the\", 8).\n.decl Answer()\nAnswer() :- Has_letter(\"the\", \"c\"), Has_n_letters(\"the\", n_letters), n_letters > 2.\n.output Answer\n\n"]}
{"id": 646, "answer": true, "completion": ".decl Has_language_ability(Animal:symbol, Language_ability:float)\nHas_language_ability(\"ant\", 1).\nHas_language_ability(\"ape\", 0.5).\n.decl Answer()\nAnswer() :- Has_language_ability(\"ant\", language_ability1), Has_language_ability(\"ape\", language_ability2), language_ability1 > language_ability2.\n.output Answer\n\n", "completions": [".decl Has_language_ability(Animal:symbol, Language_ability:float)\nHas_language_ability(\"ant\", 1).\nHas_language_ability(\"ape\", 0.5).\n.decl Answer()\nAnswer() :- Has_language_ability(\"ant\", language_ability1), Has_language_ability(\"ape\", language_ability2), language_ability1 > language_ability2.\n.output Answer\n\n"]}
{"id": 647, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"cotton ball\", 0.1).\nHas_density(\"small intestine\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"cotton ball\", density1), Has_density(\"small intestine\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"cotton ball\", 0.1).\nHas_density(\"small intestine\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"cotton ball\", density1), Has_density(\"small intestine\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 648, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hippie\", \"1960s\").\nHappens_in_time(\"Augustus's Pax Romana\", \"1st century\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"hippie bumming out\", 10).\n.decl Answer()\nAnswer() :- Happens_in_time(\"hippie bumming out\", time), Happens_every_n_years(\"hippie bumming out\", n_years), Happens_in_time(\"Augustus's Pax Romana\", time), time >= n_years.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hippie\", \"1960s\").\nHappens_in_time(\"Augustus's Pax Romana\", \"1st century\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"hippie bumming out\", 10).\n.decl Answer()\nAnswer() :- Happens_in_time(\"hippie bumming out\", time), Happens_every_n_years(\"hippie bumming out\", n_years), Happens_in_time(\"Augustus's Pax Romana\", time), time >= n_years.\n.output Answer\n\n"]}
{"id": 649, "answer": false, "completion": ".decl Is_knight(Person:symbol)\nIs_knight(\"Elton John\").\nIs_knight(\"Freddie Mercury\").\n.decl Is_musician(Person:symbol)\nIs_musician(\"Elton John\").\nIs_musician(\"Freddie Mercury\").\n.decl Answer()\nAnswer() :- Is_musician(\"Elton John\"), Is_knight(\"Elton John\").\nAnswer() :- Is_musician(\"Freddie Mercury\"), Is_knight(\"Freddie Mercury\").\n.output Answer\n\n", "completions": [".decl Is_knight(Person:symbol)\nIs_knight(\"Elton John\").\nIs_knight(\"Freddie Mercury\").\n.decl Is_musician(Person:symbol)\nIs_musician(\"Elton John\").\nIs_musician(\"Freddie Mercury\").\n.decl Answer()\nAnswer() :- Is_musician(\"Elton John\"), Is_knight(\"Elton John\").\nAnswer() :- Is_musician(\"Freddie Mercury\"), Is_knight(\"Freddie Mercury\").\n.output Answer\n\n"]}
{"id": 650, "answer": false, "completion": ".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"winter\", \"winter\").\nHappens_in_season(\"summer\", \"summer\").\n.decl Has_temperature(Season:symbol, Temperature:float)\nHas_temperature(\"winter\", -10).\nHas_temperature(\"summer\", 30).\n.decl Answer()\nAnswer() :- Happens_in_season(\"winter\", season), Has_temperature(season, temperature), temperature > 0.\n.output Answer\n\n", "completions": [".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"winter\", \"winter\").\nHappens_in_season(\"summer\", \"summer\").\n.decl Has_temperature(Season:symbol, Temperature:float)\nHas_temperature(\"winter\", -10).\nHas_temperature(\"summer\", 30).\n.decl Answer()\nAnswer() :- Happens_in_season(\"winter\", season), Has_temperature(season, temperature), temperature > 0.\n.output Answer\n\n"]}
{"id": 651, "answer": true, "completion": ".decl Allergen(Allergen:symbol)\nAllergen(\"gluten\").\n.decl Allergen_free(Ingredient:symbol)\nAllergen_free(\"All Purpose Flour\").\n.decl Answer()\nAnswer() :- Allergen_free(ingredient), Allergen(allergen), ingredient != allergen.\n.output Answer\n\n", "completions": [".decl Allergen(Allergen:symbol)\nAllergen(\"gluten\").\n.decl Allergen_free(Ingredient:symbol)\nAllergen_free(\"All Purpose Flour\").\n.decl Answer()\nAnswer() :- Allergen_free(ingredient), Allergen(allergen), ingredient != allergen.\n.output Answer\n\n"]}
{"id": 652, "answer": false, "completion": ".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Barack Obama\", \"black\").\nHas_hair_color(\"Barack Obama\", \"red\").\nHas_hair_color(\"Barack Obama\", \"blonde\").\n.decl Has_desired_hair_color(Person:symbol, Hair_color:symbol)\nHas_desired_hair_color(\"Barack Obama\", \"red\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Barack Obama\", hair_color1), Has_desired_hair_color(\"Barack Obama\", hair_color2), hair_color1 != hair_color2.\n.output Answer\n\n", "completions": [".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Barack Obama\", \"black\").\nHas_hair_color(\"Barack Obama\", \"red\").\nHas_hair_color(\"Barack Obama\", \"blonde\").\n.decl Has_desired_hair_color(Person:symbol, Hair_color:symbol)\nHas_desired_hair_color(\"Barack Obama\", \"red\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Barack Obama\", hair_color1), Has_desired_hair_color(\"Barack Obama\", hair_color2), hair_color1 != hair_color2.\n.output Answer\n\n"]}
{"id": 653, "answer": false, "completion": ".decl Near(Object_A:symbol, Object_B:symbol)\nNear(\"water\", \"Marco Polo\").\n.decl Answer()\nAnswer() :- Near(\"water\", object_b), Near(object_b, object_a).\n.output Answer\n\n", "completions": [".decl Near(Object_A:symbol, Object_B:symbol)\nNear(\"water\", \"Marco Polo\").\n.decl Answer()\nAnswer() :- Near(\"water\", object_b), Near(object_b, object_a).\n.output Answer\n\n"]}
{"id": 654, "answer": true, "completion": ".decl Uses(Person:symbol, Software:symbol)\nUses(\"Metallica\", \"Soulseek\").\n.decl Answer()\nAnswer() :- Uses(\"Metallica\", software).\n.output Answer\n\n", "completions": [".decl Uses(Person:symbol, Software:symbol)\nUses(\"Metallica\", \"Soulseek\").\n.decl Answer()\nAnswer() :- Uses(\"Metallica\", software).\n.output Answer\n\n"]}
{"id": 655, "answer": true, "completion": ".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"R. Kelly\", 1978).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"R. Kelly\", 0).\n.decl Answer()\nAnswer() :- Has_birth_year(\"R. Kelly\", birth_year), Has_death_year(\"R. Kelly\", death_year), birth_year < death_year.\n.output Answer\n\n", "completions": [".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"R. Kelly\", 1978).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"R. Kelly\", 0).\n.decl Answer()\nAnswer() :- Has_birth_year(\"R. Kelly\", birth_year), Has_death_year(\"R. Kelly\", death_year), birth_year < death_year.\n.output Answer\n\n"]}
{"id": 656, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Football War\", \"October\").\nHappens_in_time(\"Football War\", \"November\").\n.decl Happens_during_game(Event:symbol, Game:symbol)\nHappens_during_game(\"touchdown\", \"Football War\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Football War\", month), Happens_during_game(\"touchdown\", game), Happens_in_time(game, month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Football War\", \"October\").\nHappens_in_time(\"Football War\", \"November\").\n.decl Happens_during_game(Event:symbol, Game:symbol)\nHappens_during_game(\"touchdown\", \"Football War\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Football War\", month), Happens_during_game(\"touchdown\", game), Happens_in_time(game, month).\n.output Answer\n\n"]}
{"id": 657, "answer": false, "completion": ".decl Is_a(Organization:symbol, Organization_type:symbol)\nIs_a(\"Canon Inc.\", \"Kabushiki gaisha\").\n.decl Answer()\nAnswer() :- Is_a(\"Canon Inc.\", organization_type), organization_type = \"Kabushiki gaisha\".\n.output Answer\n\n", "completions": [".decl Is_a(Organization:symbol, Organization_type:symbol)\nIs_a(\"Canon Inc.\", \"Kabushiki gaisha\").\n.decl Answer()\nAnswer() :- Is_a(\"Canon Inc.\", organization_type), organization_type = \"Kabushiki gaisha\".\n.output Answer\n\n"]}
{"id": 658, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Amy Winehouse's death\", \"July 23, 2011\").\nHappens_in_time(\"paparazzi\", \"July 23, 2011\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Amy Winehouse's death\", time), Happens_in_time(\"paparazzi\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Amy Winehouse's death\", \"July 23, 2011\").\nHappens_in_time(\"paparazzi\", \"July 23, 2011\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Amy Winehouse's death\", time), Happens_in_time(\"paparazzi\", time).\n.output Answer\n\n"]}
{"id": 659, "answer": false, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"giant armadillo\", 1.5).\n.decl Has_n_average_rulers(Object:symbol, N_rulers:float)\nHas_n_average_rulers(\"giant armadillo\", 2).\n.decl Answer()\nAnswer() :- Has_length(\"giant armadillo\", length), Has_n_average_rulers(\"giant armadillo\", n_rulers), length > n_rulers.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"giant armadillo\", 1.5).\n.decl Has_n_average_rulers(Object:symbol, N_rulers:float)\nHas_n_average_rulers(\"giant armadillo\", 2).\n.decl Answer()\nAnswer() :- Has_length(\"giant armadillo\", length), Has_n_average_rulers(\"giant armadillo\", n_rulers), length > n_rulers.\n.output Answer\n\n"]}
{"id": 660, "answer": true, "completion": ".decl Outshines(Person_A:symbol, Person_B:symbol)\nOutshines(\"Drew Carey\", \"Doug Davidson\").\n.decl Was_outshined_by(Person_A:symbol, Person_B:symbol)\nWas_outshined_by(\"Doug Davidson\", \"Drew Carey\").\n.decl Answer()\nAnswer() :- Outshines(\"Drew Carey\", person_b), Was_outshined_by(person_b, \"Doug Davidson\").\n.output Answer\n\n", "completions": [".decl Outshines(Person_A:symbol, Person_B:symbol)\nOutshines(\"Drew Carey\", \"Doug Davidson\").\n.decl Was_outshined_by(Person_A:symbol, Person_B:symbol)\nWas_outshined_by(\"Doug Davidson\", \"Drew Carey\").\n.decl Answer()\nAnswer() :- Outshines(\"Drew Carey\", person_b), Was_outshined_by(person_b, \"Doug Davidson\").\n.output Answer\n\n"]}
{"id": 661, "answer": false, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"body\", 0).\nHas_temperature(\"funeral\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"body\", temperature1), Has_temperature(\"funeral\", temperature2), temperature1 != temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"body\", 0).\nHas_temperature(\"funeral\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"body\", temperature1), Has_temperature(\"funeral\", temperature2), temperature1 != temperature2.\n.output Answer\n\n"]}
{"id": 662, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"October\").\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"November\").\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Naruto escapes the Temple of Doom\", month), month = \"October\" | month = \"November\" | month = \"December\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"October\").\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"November\").\nHappens_in_time(\"Naruto escapes the Temple of Doom\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Naruto escapes the Temple of Doom\", month), month = \"October\" | month = \"November\" | month = \"December\".\n.output Answer\n\n"]}
{"id": 663, "answer": false, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Big Mac\", 540).\nHas_calories(\"McChicken\", 350).\nHas_calories(\"McNuggets\", 400).\nHas_calories(\"French Fries\", 230).\nHas_calories(\"McDouble\", 300).\nHas_calories(\"Sprite\", 150).\nHas_calories(\"Coca Cola\", 150).\nHas_calories(\"Orange Juice\", 120).\n.decl Has_calories_per_serving(Food:symbol, Calories_per_serving:float)\nHas_calories_per_serving(\"Big Mac\", 540).\nHas_calories_per_serving(\"McChicken\", 350).\nHas_calories_per_serving(\"McNuggets\", 400).\nHas_calories_per_serving(\"French Fries\", 230).\nHas_calories_per_serving(\"McDouble\", 300).\nHas_calories_per_serving(\"Sprite\", 150).\nHas_calories_per_serving(\"Coca Cola\", 150).\nHas_calories_per_serving(\"Orange Juice\", 120).\n.decl Has_n_servings(Food:symbol, N_servings:float)\nHas_n_servings(\"Big Mac\", 1).\nHas_n_servings(\"McChicken\", 1).\nHas_n_servings(\"McNuggets\", 1).\nHas_n_servings(\"French Fries\", 1).\nHas_n_servings(\"McDouble\", 2).\nHas_n_servings(\"Sprite\", 1).\nHas_n_servings(\"Coca Cola\", 1).\nHas_n_servings(\"Orange Juice\", 1).\n.decl Answer()\nAnswer() :- Has_calories(\"Big Mac\", calories1), Has_calories_per_serving(\"Big Mac\", calories_per_serving1), Has_n_servings(\"Big Mac\", n_servings1), calories1 / calories_per_serving1 > n_servings1.\n.output Answer\n\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Big Mac\", 540).\nHas_calories(\"McChicken\", 350).\nHas_calories(\"McNuggets\", 400).\nHas_calories(\"French Fries\", 230).\nHas_calories(\"McDouble\", 300).\nHas_calories(\"Sprite\", 150).\nHas_calories(\"Coca Cola\", 150).\nHas_calories(\"Orange Juice\", 120).\n.decl Has_calories_per_serving(Food:symbol, Calories_per_serving:float)\nHas_calories_per_serving(\"Big Mac\", 540).\nHas_calories_per_serving(\"McChicken\", 350).\nHas_calories_per_serving(\"McNuggets\", 400).\nHas_calories_per_serving(\"French Fries\", 230).\nHas_calories_per_serving(\"McDouble\", 300).\nHas_calories_per_serving(\"Sprite\", 150).\nHas_calories_per_serving(\"Coca Cola\", 150).\nHas_calories_per_serving(\"Orange Juice\", 120).\n.decl Has_n_servings(Food:symbol, N_servings:float)\nHas_n_servings(\"Big Mac\", 1).\nHas_n_servings(\"McChicken\", 1).\nHas_n_servings(\"McNuggets\", 1).\nHas_n_servings(\"French Fries\", 1).\nHas_n_servings(\"McDouble\", 2).\nHas_n_servings(\"Sprite\", 1).\nHas_n_servings(\"Coca Cola\", 1).\nHas_n_servings(\"Orange Juice\", 1).\n.decl Answer()\nAnswer() :- Has_calories(\"Big Mac\", calories1), Has_calories_per_serving(\"Big Mac\", calories_per_serving1), Has_n_servings(\"Big Mac\", n_servings1), calories1 / calories_per_serving1 > n_servings1.\n.output Answer\n\n\n"]}
{"id": 664, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Dodo\", 0.6).\nHas_height(\"Ma Petite\", 0.3).\n.decl Answer()\nAnswer() :- Has_height(\"Dodo\", height1), Has_height(\"Ma Petite\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Dodo\", 0.6).\nHas_height(\"Ma Petite\", 0.3).\n.decl Answer()\nAnswer() :- Has_height(\"Dodo\", height1), Has_height(\"Ma Petite\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 665, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"prison uniform\", \"black\").\nHas_color(\"prison uniform\", \"white\").\n.decl Has_pattern(Object:symbol, Pattern:symbol)\nHas_pattern(\"prison uniform\", \"striped\").\n.decl Answer()\nAnswer() :- Has_color(\"prison uniform\", color), Has_pattern(\"prison uniform\", pattern), color != pattern.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"prison uniform\", \"black\").\nHas_color(\"prison uniform\", \"white\").\n.decl Has_pattern(Object:symbol, Pattern:symbol)\nHas_pattern(\"prison uniform\", \"striped\").\n.decl Answer()\nAnswer() :- Has_color(\"prison uniform\", color), Has_pattern(\"prison uniform\", pattern), color != pattern.\n.output Answer\n\n"]}
{"id": 666, "answer": false, "completion": ".decl Has_name(Group:symbol, Name:symbol)\nHas_name(\"Pink Floyd\", \"The French Riviera\").\n.decl Has_song(Group:symbol, Song:symbol)\nHas_song(\"Pink Floyd\", \"The French Riviera\").\n.decl Answer()\nAnswer() :- Has_name(\"Pink Floyd\", name), Has_song(\"Pink Floyd\", song), name = song.\n.output Answer\n\n", "completions": [".decl Has_name(Group:symbol, Name:symbol)\nHas_name(\"Pink Floyd\", \"The French Riviera\").\n.decl Has_song(Group:symbol, Song:symbol)\nHas_song(\"Pink Floyd\", \"The French Riviera\").\n.decl Answer()\nAnswer() :- Has_name(\"Pink Floyd\", name), Has_song(\"Pink Floyd\", song), name = song.\n.output Answer\n\n"]}
{"id": 667, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Drow\", 1.5).\nHas_height(\"The Hobbit's hero\", 1).\n.decl Answer()\nAnswer() :- Has_height(\"Drow\", height1), Has_height(\"The Hobbit's hero\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Drow\", 1.5).\nHas_height(\"The Hobbit's hero\", 1).\n.decl Answer()\nAnswer() :- Has_height(\"Drow\", height1), Has_height(\"The Hobbit's hero\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 668, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"E.T. the Extra-Terrestrial\", \"E.T.\").\nHas_name(\"Friendly's\", \"Friendly's\").\n.decl Answer()\nAnswer() :- Has_name(\"E.T. the Extra-Terrestrial\", name1), Has_name(\"Friendly's\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"E.T. the Extra-Terrestrial\", \"E.T.\").\nHas_name(\"Friendly's\", \"Friendly's\").\n.decl Answer()\nAnswer() :- Has_name(\"E.T. the Extra-Terrestrial\", name1), Has_name(\"Friendly's\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 669, "answer": true, "completion": ".decl Has_memory_capacity(Person:symbol, Memory_capacity:float)\nHas_memory_capacity(\"quadragenarian\", 0.5).\n.decl Answer()\nAnswer() :- Has_memory_capacity(\"quadragenarian\", memory_capacity), memory_capacity < 0.5.\n.output Answer\n\n", "completions": [".decl Has_memory_capacity(Person:symbol, Memory_capacity:float)\nHas_memory_capacity(\"quadragenarian\", 0.5).\n.decl Answer()\nAnswer() :- Has_memory_capacity(\"quadragenarian\", memory_capacity), memory_capacity < 0.5.\n.output Answer\n\n"]}
{"id": 670, "answer": false, "completion": ".decl In_war(Country:symbol, War:symbol)\nIn_war(\"Portugal\", \"Portuguese Colonial War\").\nIn_war(\"Switzerland\", \"World War II\").\n.decl Answer()\nAnswer() :- In_war(\"Portugal\", war), In_war(\"Switzerland\", war).\n.output Answer\n\n", "completions": [".decl In_war(Country:symbol, War:symbol)\nIn_war(\"Portugal\", \"Portuguese Colonial War\").\nIn_war(\"Switzerland\", \"World War II\").\n.decl Answer()\nAnswer() :- In_war(\"Portugal\", war), In_war(\"Switzerland\", war).\n.output Answer\n\n"]}
{"id": 671, "answer": false, "completion": ".decl Has_gender(Group:symbol, Gender:symbol)\nHas_gender(\"ABBA\", \"female\").\nHas_gender(\"The Mamas & The Papas\", \"female\").\n.decl Answer()\nAnswer() :- Has_gender(\"ABBA\", gender1), Has_gender(\"The Mamas & The Papas\", gender2), gender1 == gender2.\n.output Answer\n\n", "completions": [".decl Has_gender(Group:symbol, Gender:symbol)\nHas_gender(\"ABBA\", \"female\").\nHas_gender(\"The Mamas & The Papas\", \"female\").\n.decl Answer()\nAnswer() :- Has_gender(\"ABBA\", gender1), Has_gender(\"The Mamas & The Papas\", gender2), gender1 == gender2.\n.output Answer\n\n"]}
{"id": 672, "answer": true, "completion": ".decl Has_n_emmy_awards(Person:symbol, N_emmy_awards:float)\nHas_n_emmy_awards(\"Brian Cranston\", 6).\nHas_n_emmy_awards(\"Saoirse Ronan\", 3).\n.decl Answer()\nAnswer() :- Has_n_emmy_awards(\"Brian Cranston\", n_emmy_awards1), Has_n_emmy_awards(\"Saoirse Ronan\", n_emmy_awards2), n_emmy_awards1 + n_emmy_awards2 =:= prime(n_emmy_awards1 + n_emmy_awards2).\n.output Answer\n\n", "completions": [".decl Has_n_emmy_awards(Person:symbol, N_emmy_awards:float)\nHas_n_emmy_awards(\"Brian Cranston\", 6).\nHas_n_emmy_awards(\"Saoirse Ronan\", 3).\n.decl Answer()\nAnswer() :- Has_n_emmy_awards(\"Brian Cranston\", n_emmy_awards1), Has_n_emmy_awards(\"Saoirse Ronan\", n_emmy_awards2), n_emmy_awards1 + n_emmy_awards2 =:= prime(n_emmy_awards1 + n_emmy_awards2).\n.output Answer\n\n"]}
{"id": 673, "answer": false, "completion": ".decl Is_anime(Anime:symbol)\nIs_anime(\"Rick and Morty\").\n.decl Answer()\nAnswer() :- Is_anime(\"Rick and Morty\").\n.output Answer\n\n", "completions": [".decl Is_anime(Anime:symbol)\nIs_anime(\"Rick and Morty\").\n.decl Answer()\nAnswer() :- Is_anime(\"Rick and Morty\").\n.output Answer\n\n"]}
{"id": 674, "answer": false, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"circle\", 3.14).\nHas_area(\"square\", 4).\n.decl Answer()\nAnswer() :- Has_area(\"circle\", area1), Has_area(\"square\", area2), area1 > area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"circle\", 3.14).\nHas_area(\"square\", 4).\n.decl Answer()\nAnswer() :- Has_area(\"circle\", area1), Has_area(\"square\", area2), area1 > area2.\n.output Answer\n\n"]}
{"id": 675, "answer": true, "completion": ".decl Is_a(Type:symbol, Thing:symbol)\nIs_a(\"folk music\", \"music\").\nIs_a(\"music\", \"type of music\").\nIs_a(\"type of music\", \"music\").\nIs_a(\"metal\", \"type of music\").\n.decl Answer()\nAnswer() :- Is_a(\"metal\", \"folk music\").\n.output Answer\n\n", "completions": [".decl Is_a(Type:symbol, Thing:symbol)\nIs_a(\"folk music\", \"music\").\nIs_a(\"music\", \"type of music\").\nIs_a(\"type of music\", \"music\").\nIs_a(\"metal\", \"type of music\").\n.decl Answer()\nAnswer() :- Is_a(\"metal\", \"folk music\").\n.output Answer\n\n"]}
{"id": 676, "answer": false, "completion": ".decl Belongs_to(Person:symbol, Group:symbol)\nBelongs_to(\"Muhammed\", \"Uniting Church in Australia\").\n.decl Answer()\nAnswer() :- Belongs_to(\"Muhammed\", \"Uniting Church in Australia\").\n.output Answer\n\n", "completions": [".decl Belongs_to(Person:symbol, Group:symbol)\nBelongs_to(\"Muhammed\", \"Uniting Church in Australia\").\n.decl Answer()\nAnswer() :- Belongs_to(\"Muhammed\", \"Uniting Church in Australia\").\n.output Answer\n\n"]}
{"id": 677, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Hattori Hanzō\", \"Hanzō\").\nHas_name(\"Naruto Uzumaki\", \"Naruto\").\n.decl Answer()\nAnswer() :- Has_name(\"Hattori Hanzō\", name1), Has_name(\"Naruto Uzumaki\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Hattori Hanzō\", \"Hanzō\").\nHas_name(\"Naruto Uzumaki\", \"Naruto\").\n.decl Answer()\nAnswer() :- Has_name(\"Hattori Hanzō\", name1), Has_name(\"Naruto Uzumaki\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 678, "answer": true, "completion": ".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mark Cuban\", \"Northern Mariana Islands\").\n.decl Answer()\nAnswer() :- Visits(\"Mark Cuban\", \"Northern Mariana Islands\").\n.output Answer\n\n", "completions": [".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mark Cuban\", \"Northern Mariana Islands\").\n.decl Answer()\nAnswer() :- Visits(\"Mark Cuban\", \"Northern Mariana Islands\").\n.output Answer\n\n"]}
{"id": 679, "answer": true, "completion": ".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Link\", \"adventurer\").\nHas_job(\"Link\", \"knight\").\nHas_job(\"Link\", \"princess\").\nHas_job(\"Link\", \"wizard\").\nHas_job(\"Link\", \"thief\").\nHas_job(\"Link\", \"sage\").\nHas_job(\"Link\", \"farmer\").\nHas_job(\"Link\", \"pirate\").\nHas_job(\"Link\", \"dancer\").\nHas_job(\"Link\", \"archer\").\nHas_job(\"Link\", \"horseman\").\nHas_job(\"Link\", \"fisherman\").\nHas_job(\"Link\", \"merchant\").\nHas_job(\"Link\", \"musician\").\nHas_job(\"Link\", \"sailor\").\nHas_job(\"Link\", \"student\").\nHas_job(\"Link\", \"teacher\").\nHas_job(\"Link\", \"astronomer\").\n.decl Answer()\nAnswer() :- Has_job(\"Link\", job1), Has_job(\"Link\", job2), job1 != job2.\n.output Answer\n\n", "completions": [".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Link\", \"adventurer\").\nHas_job(\"Link\", \"knight\").\nHas_job(\"Link\", \"princess\").\nHas_job(\"Link\", \"wizard\").\nHas_job(\"Link\", \"thief\").\nHas_job(\"Link\", \"sage\").\nHas_job(\"Link\", \"farmer\").\nHas_job(\"Link\", \"pirate\").\nHas_job(\"Link\", \"dancer\").\nHas_job(\"Link\", \"archer\").\nHas_job(\"Link\", \"horseman\").\nHas_job(\"Link\", \"fisherman\").\nHas_job(\"Link\", \"merchant\").\nHas_job(\"Link\", \"musician\").\nHas_job(\"Link\", \"sailor\").\nHas_job(\"Link\", \"student\").\nHas_job(\"Link\", \"teacher\").\nHas_job(\"Link\", \"astronomer\").\n.decl Answer()\nAnswer() :- Has_job(\"Link\", job1), Has_job(\"Link\", job2), job1 != job2.\n.output Answer\n\n"]}
{"id": 680, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"reddit\", 1000000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"trolls\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"trolls\", n_members1), Has_n_members(\"reddit\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"reddit\", 1000000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"trolls\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"trolls\", n_members1), Has_n_members(\"reddit\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 681, "answer": true, "completion": ".decl Has_value(Currency:symbol, Value:float)\nHas_value(\"pound sterling\", 1.5).\n.decl Answer()\nAnswer() :- Has_value(\"pound sterling\", value).\n.output Answer\n\n", "completions": [".decl Has_value(Currency:symbol, Value:float)\nHas_value(\"pound sterling\", 1.5).\n.decl Answer()\nAnswer() :- Has_value(\"pound sterling\", value).\n.output Answer\n\n"]}
{"id": 682, "answer": false, "completion": ".decl Near(Location_A:symbol, Location_B:symbol)\nNear(\"Space Needle\", \"Federal Reserve\").\nNear(\"Space Needle\", \"Space Needle\").\n.decl Answer()\nAnswer() :- Near(\"Space Needle\", location1), Near(\"Federal Reserve\", location2), location1 != location2.\n.output Answer\n\n", "completions": [".decl Near(Location_A:symbol, Location_B:symbol)\nNear(\"Space Needle\", \"Federal Reserve\").\nNear(\"Space Needle\", \"Space Needle\").\n.decl Answer()\nAnswer() :- Near(\"Space Needle\", location1), Near(\"Federal Reserve\", location2), location1 != location2.\n.output Answer\n\n"]}
{"id": 683, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Zoroaster\", \"Zoroastrianism\").\nBelongs_to_religion(\"Zoroaster\", \"Islam\").\nBelongs_to_religion(\"Zoroaster\", \"Hinduism\").\nBelongs_to_religion(\"Zoroaster\", \"Buddhism\").\nBelongs_to_religion(\"Zoroaster\", \"Judaism\").\nBelongs_to_religion(\"Zoroaster\", \"Christianity\").\nBelongs_to_religion(\"Zoroaster\", \"Sikhism\").\nBelongs_to_religion(\"Zoroaster\", \"Shintoism\").\nBelongs_to_religion(\"Zoroaster\", \"Taoism\").\nBelongs_to_religion(\"Zoroaster\", \"Confucianism\").\nBelongs_to_religion(\"Zoroaster\", \"Jainism\").\nBelongs_to_religion(\"Zoroaster\", \"Folk religion\").\nBelongs_to_religion(\"Zoroaster\", \"Spiritism\").\nBelongs_to_religion(\"Zoroaster\", \"Tenrikyo\").\nBelongs_to_religion(\"Zoroaster\", \"Unitarian Universalism\").\nBelongs_to_religion(\"Zoroaster\", \"Zoroastrianism\").\nBelongs_to_religion(\"Zoroaster\", \"Neo-Paganism\").\nBelongs_to_religion(\"Zoroaster\", \"Atheism\").\nBelongs_to_religion(\"Zoroaster\", \"Agnosticism\").\nBelongs_to_religion(\"Zoroaster\", \"Secularism\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoro", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Zoroaster\", \"Zoroastrianism\").\nBelongs_to_religion(\"Zoroaster\", \"Islam\").\nBelongs_to_religion(\"Zoroaster\", \"Hinduism\").\nBelongs_to_religion(\"Zoroaster\", \"Buddhism\").\nBelongs_to_religion(\"Zoroaster\", \"Judaism\").\nBelongs_to_religion(\"Zoroaster\", \"Christianity\").\nBelongs_to_religion(\"Zoroaster\", \"Sikhism\").\nBelongs_to_religion(\"Zoroaster\", \"Shintoism\").\nBelongs_to_religion(\"Zoroaster\", \"Taoism\").\nBelongs_to_religion(\"Zoroaster\", \"Confucianism\").\nBelongs_to_religion(\"Zoroaster\", \"Jainism\").\nBelongs_to_religion(\"Zoroaster\", \"Folk religion\").\nBelongs_to_religion(\"Zoroaster\", \"Spiritism\").\nBelongs_to_religion(\"Zoroaster\", \"Tenrikyo\").\nBelongs_to_religion(\"Zoroaster\", \"Unitarian Universalism\").\nBelongs_to_religion(\"Zoroaster\", \"Zoroastrianism\").\nBelongs_to_religion(\"Zoroaster\", \"Neo-Paganism\").\nBelongs_to_religion(\"Zoroaster\", \"Atheism\").\nBelongs_to_religion(\"Zoroaster\", \"Agnosticism\").\nBelongs_to_religion(\"Zoroaster\", \"Secularism\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoroaster\", \"Other\").\nBelongs_to_religion(\"Zoro"]}
{"id": 684, "answer": false, "completion": ".decl Is_highest(Mountain:symbol, Height:float)\nIs_highest(\"Mount Everest\", 8848).\nIs_highest(\"K2\", 8611).\nIs_highest(\"Kangchenjunga\", 8586).\nIs_highest(\"Lhotse\", 8516).\nIs_highest(\"Makalu\", 8485).\n.decl Is_visible(Observatory:symbol, Object:symbol)\nIs_visible(\"Very Large Telescope\", \"Mount Everest\").\nIs_visible(\"Very Large Telescope\", \"K2\").\nIs_visible(\"Very Large Telescope\", \"Kangchenjunga\").\nIs_visible(\"Very Large Telescope\", \"Lhotse\").\nIs_visible(\"Very Large Telescope\", \"Makalu\").\n.decl Answer()\nAnswer() :- Is_highest(\"Mount Everest\", height1), Is_highest(\"K2\", height2), Is_highest(\"Kangchenjunga\", height3), Is_highest(\"Lhotse\", height4), Is_highest(\"Makalu\", height5), Is_visible(\"Very Large Telescope\", mountain1), Is_visible(\"Very Large Telescope\", mountain2), Is_visible(\"Very Large Telescope\", mountain3), Is_visible(\"Very Large Telescope\", mountain4), Is_visible(\"Very Large Telescope\", mountain5), height1 > height2, height1 > height3, height1 > height4, height1 > height5, height2 > height3, height2 > height4, height2 > height5, height3 > height4, height3 > height5, height4 > height5.\n.output Answer\n\n", "completions": [".decl Is_highest(Mountain:symbol, Height:float)\nIs_highest(\"Mount Everest\", 8848).\nIs_highest(\"K2\", 8611).\nIs_highest(\"Kangchenjunga\", 8586).\nIs_highest(\"Lhotse\", 8516).\nIs_highest(\"Makalu\", 8485).\n.decl Is_visible(Observatory:symbol, Object:symbol)\nIs_visible(\"Very Large Telescope\", \"Mount Everest\").\nIs_visible(\"Very Large Telescope\", \"K2\").\nIs_visible(\"Very Large Telescope\", \"Kangchenjunga\").\nIs_visible(\"Very Large Telescope\", \"Lhotse\").\nIs_visible(\"Very Large Telescope\", \"Makalu\").\n.decl Answer()\nAnswer() :- Is_highest(\"Mount Everest\", height1), Is_highest(\"K2\", height2), Is_highest(\"Kangchenjunga\", height3), Is_highest(\"Lhotse\", height4), Is_highest(\"Makalu\", height5), Is_visible(\"Very Large Telescope\", mountain1), Is_visible(\"Very Large Telescope\", mountain2), Is_visible(\"Very Large Telescope\", mountain3), Is_visible(\"Very Large Telescope\", mountain4), Is_visible(\"Very Large Telescope\", mountain5), height1 > height2, height1 > height3, height1 > height4, height1 > height5, height2 > height3, height2 > height4, height2 > height5, height3 > height4, height3 > height5, height4 > height5.\n.output Answer\n\n"]}
{"id": 685, "answer": false, "completion": ".decl Has_anticoagulant(Herb:symbol)\nHas_anticoagulant(\"chives\").\n.decl Has_effect(Herb:symbol, Effect:symbol)\nHas_effect(\"chives\", \"anticoagulant\").\n.decl Answer()\nAnswer() :- Has_anticoagulant(\"herb\"), Has_effect(\"herb\", \"effect\").\n.output Answer\n\n", "completions": [".decl Has_anticoagulant(Herb:symbol)\nHas_anticoagulant(\"chives\").\n.decl Has_effect(Herb:symbol, Effect:symbol)\nHas_effect(\"chives\", \"anticoagulant\").\n.decl Answer()\nAnswer() :- Has_anticoagulant(\"herb\"), Has_effect(\"herb\", \"effect\").\n.output Answer\n\n"]}
{"id": 686, "answer": true, "completion": ".decl Has_specialty(Doctor:symbol, Specialty:symbol)\nHas_specialty(\"Dr. John Doe\", \"Homeopathy\").\nHas_specialty(\"Dr. John Doe\", \"Internal Medicine\").\nHas_specialty(\"Dr. Jane Doe\", \"Homeopathy\").\nHas_specialty(\"Dr. Jane Doe\", \"Internal Medicine\").\n.decl Recommends(Doctor:symbol, Treatment:symbol)\nRecommends(\"Dr. John Doe\", \"Quartz\").\nRecommends(\"Dr. Jane Doe\", \"Quartz\").\n.decl Answer()\nAnswer() :- Has_specialty(\"Dr. John Doe\", specialty), Has_specialty(\"Dr. Jane Doe\", specialty), Recommends(\"Dr. John Doe\", treatment), Recommends(\"Dr. Jane Doe\", treatment), specialty != \"Internal Medicine\".\n.output Answer\n\n", "completions": [".decl Has_specialty(Doctor:symbol, Specialty:symbol)\nHas_specialty(\"Dr. John Doe\", \"Homeopathy\").\nHas_specialty(\"Dr. John Doe\", \"Internal Medicine\").\nHas_specialty(\"Dr. Jane Doe\", \"Homeopathy\").\nHas_specialty(\"Dr. Jane Doe\", \"Internal Medicine\").\n.decl Recommends(Doctor:symbol, Treatment:symbol)\nRecommends(\"Dr. John Doe\", \"Quartz\").\nRecommends(\"Dr. Jane Doe\", \"Quartz\").\n.decl Answer()\nAnswer() :- Has_specialty(\"Dr. John Doe\", specialty), Has_specialty(\"Dr. Jane Doe\", specialty), Recommends(\"Dr. John Doe\", treatment), Recommends(\"Dr. Jane Doe\", treatment), specialty != \"Internal Medicine\".\n.output Answer\n\n"]}
{"id": 687, "answer": false, "completion": ".decl Has_virus(Virus:symbol)\nHas_virus(\"banana virus\").\n.decl Has_virus(Virus:symbol, Host:symbol)\nHas_virus(\"monkey virus\", \"monkey\").\n.decl Answer()\nAnswer() :- Has_virus(\"banana virus\", \"banana\").\nAnswer() :- Has_virus(\"monkey virus\", \"banana\").\n.output Answer\n\n", "completions": [".decl Has_virus(Virus:symbol)\nHas_virus(\"banana virus\").\n.decl Has_virus(Virus:symbol, Host:symbol)\nHas_virus(\"monkey virus\", \"monkey\").\n.decl Answer()\nAnswer() :- Has_virus(\"banana virus\", \"banana\").\nAnswer() :- Has_virus(\"monkey virus\", \"banana\").\n.output Answer\n\n"]}
{"id": 688, "answer": false, "completion": ".decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Very Large Telescope\", 4).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Binocular Telescope\", 2).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Synoptic Survey Telescope\", 3).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Space Telescope\", 3).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Millimeter Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large X-ray Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Optical Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Space Infrared Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Telescope\", 1).\n.decl Answer()\nAnswer() :- Has_n_telescopes(\"Very Large Telescope\", n_telescopes1), Has_n_telescopes(\"Large Binocular Telescope\", n_telescopes2), Has_n_telescopes(\"Large Synoptic Survey Telescope\", n_telescopes3), Has_n_telescopes(\"Large Space Telescope\", n_telescopes4), Has_n_telescopes(\"Large Millimeter Telescope\", n_telescopes5), Has_n_telescopes(\"Large X-ray Telescope\", n_telescopes6), Has_n_telescopes(\"Large Optical Telescope\", n_telescopes7), Has_n_telescopes(\"Large Space Infrared Telescope\", n_telescopes8), Has_n_telescopes(\"Large Telescope\", n_telescopes9), n_telescopes1 > n_telescopes2, n_telescopes1 > n_telescopes3, n_telescopes1 > n_telescopes4, n_telescopes1 > n_telescopes5, n_telescopes1 > n_telescopes6, n_telescopes1 > n_telescopes7, n_telescopes1 > n_telescopes8, n_telescopes1 > n_telescopes9.\n.output Answer\n\n", "completions": [".decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Very Large Telescope\", 4).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Binocular Telescope\", 2).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Synoptic Survey Telescope\", 3).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Space Telescope\", 3).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Millimeter Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large X-ray Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Optical Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Space Infrared Telescope\", 1).\n.decl Has_n_telescopes(Project:symbol, N_telescopes:float)\nHas_n_telescopes(\"Large Telescope\", 1).\n.decl Answer()\nAnswer() :- Has_n_telescopes(\"Very Large Telescope\", n_telescopes1), Has_n_telescopes(\"Large Binocular Telescope\", n_telescopes2), Has_n_telescopes(\"Large Synoptic Survey Telescope\", n_telescopes3), Has_n_telescopes(\"Large Space Telescope\", n_telescopes4), Has_n_telescopes(\"Large Millimeter Telescope\", n_telescopes5), Has_n_telescopes(\"Large X-ray Telescope\", n_telescopes6), Has_n_telescopes(\"Large Optical Telescope\", n_telescopes7), Has_n_telescopes(\"Large Space Infrared Telescope\", n_telescopes8), Has_n_telescopes(\"Large Telescope\", n_telescopes9), n_telescopes1 > n_telescopes2, n_telescopes1 > n_telescopes3, n_telescopes1 > n_telescopes4, n_telescopes1 > n_telescopes5, n_telescopes1 > n_telescopes6, n_telescopes1 > n_telescopes7, n_telescopes1 > n_telescopes8, n_telescopes1 > n_telescopes9.\n.output Answer\n\n"]}
{"id": 689, "answer": false, "completion": ".decl Visible_at_height(Object:symbol, Height:float)\nVisible_at_height(\"Statue of Liberty\", 0).\nVisible_at_height(\"Statue of Liberty\", 100).\nVisible_at_height(\"Statue of Liberty\", 200).\nVisible_at_height(\"Statue of Liberty\", 300).\nVisible_at_height(\"Statue of Liberty\", 400).\nVisible_at_height(\"Statue of Liberty\", 500).\nVisible_at_height(\"Statue of Liberty\", 600).\nVisible_at_height(\"Statue of Liberty\", 700).\nVisible_at_height(\"Statue of Liberty\", 800).\nVisible_at_height(\"Statue of Liberty\", 900).\nVisible_at_height(\"Statue of Liberty\", 1000).\n.decl Submerged_at_height(Object:symbol, Height:float)\nSubmerged_at_height(\"Statue of Liberty\", 0).\nSubmerged_at_height(\"Statue of Liberty\", 100).\nSubmerged_at_height(\"Statue of Liberty\", 200).\nSubmerged_at_height(\"Statue of Liberty\", 300).\nSubmerged_at_height(\"Statue of Liberty\", 400).\nSubmerged_at_height(\"Statue of Liberty\", 500).\nSubmerged_at_height(\"Statue of Liberty\", 600).\nSubmerged_at_height(\"Statue of Liberty\", 700).\nSubmerged_at_height(\"Statue of Liberty\", 800).\nSubmerged_at_height(\"Statue of Liberty\", 900).\nSubmerged_at_height(\"Statue of Liberty\", 1000).\n.decl Answer()\nAnswer() :- Visible_at_height(\"Statue of Liberty\", height1), Submerged_at_height(\"Statue of Liberty\", height2), height1 < height2.\n.output Answer\n\n", "completions": [".decl Visible_at_height(Object:symbol, Height:float)\nVisible_at_height(\"Statue of Liberty\", 0).\nVisible_at_height(\"Statue of Liberty\", 100).\nVisible_at_height(\"Statue of Liberty\", 200).\nVisible_at_height(\"Statue of Liberty\", 300).\nVisible_at_height(\"Statue of Liberty\", 400).\nVisible_at_height(\"Statue of Liberty\", 500).\nVisible_at_height(\"Statue of Liberty\", 600).\nVisible_at_height(\"Statue of Liberty\", 700).\nVisible_at_height(\"Statue of Liberty\", 800).\nVisible_at_height(\"Statue of Liberty\", 900).\nVisible_at_height(\"Statue of Liberty\", 1000).\n.decl Submerged_at_height(Object:symbol, Height:float)\nSubmerged_at_height(\"Statue of Liberty\", 0).\nSubmerged_at_height(\"Statue of Liberty\", 100).\nSubmerged_at_height(\"Statue of Liberty\", 200).\nSubmerged_at_height(\"Statue of Liberty\", 300).\nSubmerged_at_height(\"Statue of Liberty\", 400).\nSubmerged_at_height(\"Statue of Liberty\", 500).\nSubmerged_at_height(\"Statue of Liberty\", 600).\nSubmerged_at_height(\"Statue of Liberty\", 700).\nSubmerged_at_height(\"Statue of Liberty\", 800).\nSubmerged_at_height(\"Statue of Liberty\", 900).\nSubmerged_at_height(\"Statue of Liberty\", 1000).\n.decl Answer()\nAnswer() :- Visible_at_height(\"Statue of Liberty\", height1), Submerged_at_height(\"Statue of Liberty\", height2), height1 < height2.\n.output Answer\n\n"]}
{"id": 690, "answer": true, "completion": ".decl Has_eyesight(Animal:symbol, Eyesight:float)\nHas_eyesight(\"flying fish\", 3).\n.decl Answer()\nAnswer() :- Has_eyesight(\"flying fish\", eyesight), eyesight > 2.\n.output Answer\n\n", "completions": [".decl Has_eyesight(Animal:symbol, Eyesight:float)\nHas_eyesight(\"flying fish\", 3).\n.decl Answer()\nAnswer() :- Has_eyesight(\"flying fish\", eyesight), eyesight > 2.\n.output Answer\n\n"]}
{"id": 691, "answer": false, "completion": ".decl Has_resolution(Image:symbol, Resolution:float)\nHas_resolution(\"Da Vinci's Vitruvian Man\", 300).\nHas_resolution(\"JPEG\", 72).\n.decl Answer()\nAnswer() :- Has_resolution(\"Da Vinci's Vitruvian Man\", resolution1), Has_resolution(\"JPEG\", resolution2), resolution1 > resolution2.\n.output Answer\n\n", "completions": [".decl Has_resolution(Image:symbol, Resolution:float)\nHas_resolution(\"Da Vinci's Vitruvian Man\", 300).\nHas_resolution(\"JPEG\", 72).\n.decl Answer()\nAnswer() :- Has_resolution(\"Da Vinci's Vitruvian Man\", resolution1), Has_resolution(\"JPEG\", resolution2), resolution1 > resolution2.\n.output Answer\n\n"]}
{"id": 692, "answer": true, "completion": ".decl Knows(Person:symbol, Language:symbol)\nKnows(\"Pedubastis I\", \"Egyptian\").\nKnows(\"Pedubastis I\", \"Hebrew\").\nKnows(\"Pedubastis I\", \"Aramaic\").\nKnows(\"Pedubastis I\", \"Egyptian\").\nKnows(\"Pedubastis I\", \"Aramaic\").\nKnows(\"Pedubastis I\", \"Japanese\").\n.decl Answer()\nAnswer() :- Knows(\"Pedubastis I\", \"Japanese\").\n.output Answer\n\n", "completions": [".decl Knows(Person:symbol, Language:symbol)\nKnows(\"Pedubastis I\", \"Egyptian\").\nKnows(\"Pedubastis I\", \"Hebrew\").\nKnows(\"Pedubastis I\", \"Aramaic\").\nKnows(\"Pedubastis I\", \"Egyptian\").\nKnows(\"Pedubastis I\", \"Aramaic\").\nKnows(\"Pedubastis I\", \"Japanese\").\n.decl Answer()\nAnswer() :- Knows(\"Pedubastis I\", \"Japanese\").\n.output Answer\n\n"]}
{"id": 693, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Kit & Kaboodle\", \"Kit & Kaboodle\").\nHas_name(\"Underworld gates\", \"Underworld gates\").\n.decl Answer()\nAnswer() :- Has_name(\"Kit & Kaboodle\", name1), Has_name(\"Underworld gates\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Kit & Kaboodle\", \"Kit & Kaboodle\").\nHas_name(\"Underworld gates\", \"Underworld gates\").\n.decl Answer()\nAnswer() :- Has_name(\"Kit & Kaboodle\", name1), Has_name(\"Underworld gates\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 694, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"ten-pin bowling pin\", 0.5).\nHas_mass(\"ten-pin bowling ball\", 0.5).\nHas_mass(\"ten-pin bowling ball\", 0.1).\n.decl Has_length(Object:symbol, Length:float)\nHas_length(\"ten-pin bowling pin\", 0.1).\nHas_length(\"ten-pin bowling ball\", 0.1).\n.decl Has_width(Object:symbol, Width:float)\nHas_width(\"ten-pin bowling pin\", 0.1).\nHas_width(\"ten-pin bowling ball\", 0.1).\n.decl Has_height(Object:symbol, Height:float)\nHas_height(\"ten-pin bowling pin\", 0.1).\nHas_height(\"ten-pin bowling ball\", 0.1).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"ten-pin bowling pin\", 0.0001).\nHas_volume(\"ten-pin bowling ball\", 0.0001).\n.decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"ten-pin bowling pin\", 0.1).\nHas_weight(\"ten-pin bowling ball\", 0.1).\n.decl Answer()\nAnswer() :- Has_mass(\"ten-pin bowling pin\", mass1), Has_mass(\"ten-pin bowling ball\", mass2), Has_length(\"ten-pin bowling pin\", length1), Has_length(\"ten-pin bowling ball\", length2), Has_width(\"ten-pin bowling pin\", width1), Has_width(\"ten-pin bowling ball\", width2), Has_height(\"ten-pin bowling pin\", height1), Has_height(\"ten-pin bowling ball\", height2), Has_volume(\"ten-pin bowling pin\", volume1), Has_volume(\"ten-pin bowling ball\", volume2), Has_weight(\"ten-pin bowling pin\", weight1), Has_weight(\"ten-pin bowling ball\", weight2), mass1 > mass2, length1 > length2, width1 > width2, height1 > height2, volume1 > volume2, weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"ten-pin bowling pin\", 0.5).\nHas_mass(\"ten-pin bowling ball\", 0.5).\nHas_mass(\"ten-pin bowling ball\", 0.1).\n.decl Has_length(Object:symbol, Length:float)\nHas_length(\"ten-pin bowling pin\", 0.1).\nHas_length(\"ten-pin bowling ball\", 0.1).\n.decl Has_width(Object:symbol, Width:float)\nHas_width(\"ten-pin bowling pin\", 0.1).\nHas_width(\"ten-pin bowling ball\", 0.1).\n.decl Has_height(Object:symbol, Height:float)\nHas_height(\"ten-pin bowling pin\", 0.1).\nHas_height(\"ten-pin bowling ball\", 0.1).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"ten-pin bowling pin\", 0.0001).\nHas_volume(\"ten-pin bowling ball\", 0.0001).\n.decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"ten-pin bowling pin\", 0.1).\nHas_weight(\"ten-pin bowling ball\", 0.1).\n.decl Answer()\nAnswer() :- Has_mass(\"ten-pin bowling pin\", mass1), Has_mass(\"ten-pin bowling ball\", mass2), Has_length(\"ten-pin bowling pin\", length1), Has_length(\"ten-pin bowling ball\", length2), Has_width(\"ten-pin bowling pin\", width1), Has_width(\"ten-pin bowling ball\", width2), Has_height(\"ten-pin bowling pin\", height1), Has_height(\"ten-pin bowling ball\", height2), Has_volume(\"ten-pin bowling pin\", volume1), Has_volume(\"ten-pin bowling ball\", volume2), Has_weight(\"ten-pin bowling pin\", weight1), Has_weight(\"ten-pin bowling ball\", weight2), mass1 > mass2, length1 > length2, width1 > width2, height1 > height2, volume1 > volume2, weight1 > weight2.\n.output Answer\n\n"]}
{"id": 695, "answer": false, "completion": ".decl Has_dynasty(Person:symbol, Dynasty:symbol)\nHas_dynasty(\"Jia Sidao\", \"Jin\").\nHas_dynasty(\"origin dynasty of Go\", \"Qin\").\n.decl Answer()\nAnswer() :- Has_dynasty(\"origin dynasty of Go\", dynasty1), Has_dynasty(\"Jia Sidao\", dynasty2), dynasty1 < dynasty2.\n.output Answer\n\n", "completions": [".decl Has_dynasty(Person:symbol, Dynasty:symbol)\nHas_dynasty(\"Jia Sidao\", \"Jin\").\nHas_dynasty(\"origin dynasty of Go\", \"Qin\").\n.decl Answer()\nAnswer() :- Has_dynasty(\"origin dynasty of Go\", dynasty1), Has_dynasty(\"Jia Sidao\", dynasty2), dynasty1 < dynasty2.\n.output Answer\n\n"]}
{"id": 696, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Noah's Ark\", 8).\n.decl Answer()\nAnswer() :- Has_n_members(\"Noah's Ark\", n_members), n_members = 8.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Noah's Ark\", 8).\n.decl Answer()\nAnswer() :- Has_n_members(\"Noah's Ark\", n_members), n_members = 8.\n.output Answer\n\n"]}
{"id": 697, "answer": true, "completion": ".decl Is_a_saint(Person:symbol)\nIs_a_saint(\"John Paul II\").\n.decl Is_a_false_pope(Person:symbol)\nIs_a_false_pope(\"John Paul II\").\n.decl Answer()\nAnswer() :- Is_a_saint(person), Is_a_false_pope(person).\n.output Answer\n\n", "completions": [".decl Is_a_saint(Person:symbol)\nIs_a_saint(\"John Paul II\").\n.decl Is_a_false_pope(Person:symbol)\nIs_a_false_pope(\"John Paul II\").\n.decl Answer()\nAnswer() :- Is_a_saint(person), Is_a_false_pope(person).\n.output Answer\n\n"]}
{"id": 698, "answer": true, "completion": ".decl Has_longevity(Person:symbol, Years:float)\nHas_longevity(\"Betty White\", 94).\nHas_longevity(\"Northwest Airlines\", 50).\n.decl Answer()\nAnswer() :- Has_longevity(\"Northwest Airlines\", longevity), Has_longevity(\"Betty White\", longevity2), longevity > longevity2.\n.output Answer\n\n", "completions": [".decl Has_longevity(Person:symbol, Years:float)\nHas_longevity(\"Betty White\", 94).\nHas_longevity(\"Northwest Airlines\", 50).\n.decl Answer()\nAnswer() :- Has_longevity(\"Northwest Airlines\", longevity), Has_longevity(\"Betty White\", longevity2), longevity > longevity2.\n.output Answer\n\n"]}
{"id": 699, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"bitcoin\", 0.001).\nHas_mass(\"pocket\", 0.5).\n.decl Answer()\nAnswer() :- Has_mass(\"bitcoin\", mass1), Has_mass(\"pocket\", mass2), mass1 <= mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"bitcoin\", 0.001).\nHas_mass(\"pocket\", 0.5).\n.decl Answer()\nAnswer() :- Has_mass(\"bitcoin\", mass1), Has_mass(\"pocket\", mass2), mass1 <= mass2.\n.output Answer\n\n"]}
{"id": 700, "answer": false, "completion": ".decl Reads(Person:symbol, Book:symbol)\nReads(\"Queen Elizabeth I\", \"The Life of Jean-Paul Sartre\").\n.decl Answer()\nAnswer() :- Reads(\"Queen Elizabeth I\", book), Reads(person, book), person != \"Queen Elizabeth I\".\n.output Answer\n\n", "completions": [".decl Reads(Person:symbol, Book:symbol)\nReads(\"Queen Elizabeth I\", \"The Life of Jean-Paul Sartre\").\n.decl Answer()\nAnswer() :- Reads(\"Queen Elizabeth I\", book), Reads(person, book), person != \"Queen Elizabeth I\".\n.output Answer\n\n"]}
{"id": 701, "answer": true, "completion": ".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"heart\", \"anatomical\").\nHas_shape(\"heart\", \"symbolic\").\n.decl Answer()\nAnswer() :- Has_shape(\"heart\", shape1), Has_shape(\"heart\", shape2), shape1 != shape2.\n.output Answer\n\n", "completions": [".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"heart\", \"anatomical\").\nHas_shape(\"heart\", \"symbolic\").\n.decl Answer()\nAnswer() :- Has_shape(\"heart\", shape1), Has_shape(\"heart\", shape2), shape1 != shape2.\n.output Answer\n\n"]}
{"id": 702, "answer": true, "completion": ".decl Is_a_political_entity(Political_entity:symbol)\nIs_a_political_entity(\"Riksdag\").\n.decl Is_a_country(Country:symbol)\nIs_a_country(\"Scandinavia\").\n.decl Answer()\nAnswer() :- Is_a_political_entity(political_entity), Is_a_country(country), political_entity = country.\n.output Answer\n\n", "completions": [".decl Is_a_political_entity(Political_entity:symbol)\nIs_a_political_entity(\"Riksdag\").\n.decl Is_a_country(Country:symbol)\nIs_a_country(\"Scandinavia\").\n.decl Answer()\nAnswer() :- Is_a_political_entity(political_entity), Is_a_country(country), political_entity = country.\n.output Answer\n\n"]}
{"id": 703, "answer": true, "completion": ".decl Is_liquid(Liquid:symbol)\nIs_liquid(\"water\").\nIs_liquid(\"juice\").\nIs_liquid(\"soup\").\n.decl Is_solid(Solid:symbol)\nIs_solid(\"bread\").\nIs_solid(\"meat\").\nIs_solid(\"potato\").\n.decl Answer()\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"bread\").\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"meat\").\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"potato\").\n.output Answer\n\n", "completions": [".decl Is_liquid(Liquid:symbol)\nIs_liquid(\"water\").\nIs_liquid(\"juice\").\nIs_liquid(\"soup\").\n.decl Is_solid(Solid:symbol)\nIs_solid(\"bread\").\nIs_solid(\"meat\").\nIs_solid(\"potato\").\n.decl Answer()\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"bread\").\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"meat\").\nAnswer() :- Is_liquid(\"soup\"), Is_solid(\"potato\").\n.output Answer\n\n"]}
{"id": 704, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mary\", \"Mary\").\nHas_name(\"Jesus\", \"Jesus\").\nHas_name(\"Artemis\", \"Artemis\").\n.decl Is_mother_of(Person_A:symbol, Person_B:symbol)\nIs_mother_of(\"Mary\", \"Jesus\").\n.decl Is_greek(Person:symbol)\nIs_greek(\"Mary\").\n.decl Answer()\nAnswer() :- Has_name(\"Mary\", name), Is_mother_of(\"Mary\", person_b), Is_greek(person_b), Has_name(person_b, name2), name2 != \"Jesus\".\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mary\", \"Mary\").\nHas_name(\"Jesus\", \"Jesus\").\nHas_name(\"Artemis\", \"Artemis\").\n.decl Is_mother_of(Person_A:symbol, Person_B:symbol)\nIs_mother_of(\"Mary\", \"Jesus\").\n.decl Is_greek(Person:symbol)\nIs_greek(\"Mary\").\n.decl Answer()\nAnswer() :- Has_name(\"Mary\", name), Is_mother_of(\"Mary\", person_b), Is_greek(person_b), Has_name(person_b, name2), name2 != \"Jesus\".\n.output Answer\n\n"]}
{"id": 705, "answer": false, "completion": ".decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"Christmas letter\", \"South Pole\").\n.decl Answer()\nAnswer() :- Has_location(\"Christmas letter\", location), location = \"South Pole\".\n.output Answer\n\n", "completions": [".decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"Christmas letter\", \"South Pole\").\n.decl Answer()\nAnswer() :- Has_location(\"Christmas letter\", location), location = \"South Pole\".\n.output Answer\n\n"]}
{"id": 706, "answer": false, "completion": ".decl Is_champion(Person:symbol, Title:symbol)\nIs_champion(\"Jack Dempsey\", \"WBC\").\nIs_champion(\"Joe Louis\", \"WBC\").\nIs_champion(\"Joe Frazier\", \"WBA\").\nIs_champion(\"Muhammad Ali\", \"WBA\").\n.decl Is_champion(Person:symbol, Title:symbol)\nIs_champion(\"Jack Dempsey\", \"WBA\").\nIs_champion(\"Joe Louis\", \"WBA\").\nIs_champion(\"Joe Frazier\", \"IBF\").\nIs_champion(\"Muhammad Ali\", \"IBF\").\n.decl Answer()\nAnswer() :- Is_champion(\"Jack Dempsey\", \"WBC\").\nAnswer() :- Is_champion(\"Jack Dempsey\", \"WBA\").\n.output Answer\n\n", "completions": [".decl Is_champion(Person:symbol, Title:symbol)\nIs_champion(\"Jack Dempsey\", \"WBC\").\nIs_champion(\"Joe Louis\", \"WBC\").\nIs_champion(\"Joe Frazier\", \"WBA\").\nIs_champion(\"Muhammad Ali\", \"WBA\").\n.decl Is_champion(Person:symbol, Title:symbol)\nIs_champion(\"Jack Dempsey\", \"WBA\").\nIs_champion(\"Joe Louis\", \"WBA\").\nIs_champion(\"Joe Frazier\", \"IBF\").\nIs_champion(\"Muhammad Ali\", \"IBF\").\n.decl Answer()\nAnswer() :- Is_champion(\"Jack Dempsey\", \"WBC\").\nAnswer() :- Is_champion(\"Jack Dempsey\", \"WBA\").\n.output Answer\n\n"]}
{"id": 707, "answer": false, "completion": ".decl Is_a_craft(Craft:symbol)\nIs_a_craft(\"brewing\").\n.decl Is_an_expert(Person:symbol, Expertise:symbol)\nIs_an_expert(\"Peter Griffin\", \"brewing\").\n.decl Answer()\nAnswer() :- Is_a_craft(\"craft\"), Is_an_expert(\"Peter Griffin\", expertise), expertise = \"brewing\".\n.output Answer\n\n", "completions": [".decl Is_a_craft(Craft:symbol)\nIs_a_craft(\"brewing\").\n.decl Is_an_expert(Person:symbol, Expertise:symbol)\nIs_an_expert(\"Peter Griffin\", \"brewing\").\n.decl Answer()\nAnswer() :- Is_a_craft(\"craft\"), Is_an_expert(\"Peter Griffin\", expertise), expertise = \"brewing\".\n.output Answer\n\n"]}
{"id": 708, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"primate\", 10).\nHas_weight(\"backpack\", 10).\n.decl Answer()\nAnswer() :- Has_weight(\"primate\", weight1), Has_weight(\"backpack\", weight2), weight1 <= weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"primate\", 10).\nHas_weight(\"backpack\", 10).\n.decl Answer()\nAnswer() :- Has_weight(\"primate\", weight1), Has_weight(\"backpack\", weight2), weight1 <= weight2.\n.output Answer\n\n"]}
{"id": 709, "answer": true, "completion": ".decl Has_album_sales(Artist:symbol, Album_sales:float)\nHas_album_sales(\"AC/DC\", 200000000).\nHas_album_sales(\"Lil Wayne\", 100000000).\n.decl Has_bomber_sales(Artist:symbol, Bomber_sales:float)\nHas_bomber_sales(\"AC/DC\", 0).\nHas_bomber_sales(\"Lil Wayne\", 100000000).\n.decl Answer()\nAnswer() :- Has_album_sales(\"AC/DC\", album_sales), Has_bomber_sales(\"Lil Wayne\", bomber_sales), album_sales > bomber_sales.\n.output Answer\n\n", "completions": [".decl Has_album_sales(Artist:symbol, Album_sales:float)\nHas_album_sales(\"AC/DC\", 200000000).\nHas_album_sales(\"Lil Wayne\", 100000000).\n.decl Has_bomber_sales(Artist:symbol, Bomber_sales:float)\nHas_bomber_sales(\"AC/DC\", 0).\nHas_bomber_sales(\"Lil Wayne\", 100000000).\n.decl Answer()\nAnswer() :- Has_album_sales(\"AC/DC\", album_sales), Has_bomber_sales(\"Lil Wayne\", bomber_sales), album_sales > bomber_sales.\n.output Answer\n\n"]}
{"id": 710, "answer": false, "completion": ".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Ludacris\", \"Hip-Hop\").\nHas_genre(\"2000's Binaural\", \"Hip-Hop\").\n.decl Answer()\nAnswer() :- Has_genre(\"Ludacris\", genre), Has_genre(\"2000's Binaural\", genre).\n.output Answer\n\n", "completions": [".decl Has_genre(Artist:symbol, Genre:symbol)\nHas_genre(\"Ludacris\", \"Hip-Hop\").\nHas_genre(\"2000's Binaural\", \"Hip-Hop\").\n.decl Answer()\nAnswer() :- Has_genre(\"Ludacris\", genre), Has_genre(\"2000's Binaural\", genre).\n.output Answer\n\n"]}
{"id": 711, "answer": false, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Palm Beach\", 0.1).\n.decl Answer()\nAnswer() :- Has_area(\"Palm Beach\", area), area < 0.01.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Palm Beach\", 0.1).\n.decl Answer()\nAnswer() :- Has_area(\"Palm Beach\", area), area < 0.01.\n.output Answer\n\n"]}
{"id": 712, "answer": false, "completion": ".decl Has_age(Object:symbol, Age:float)\nHas_age(\"pickled cucumbers\", 1000).\n.decl Answer()\nAnswer() :- Has_age(\"pickled cucumbers\", age), age > 100.\n.output Answer\n\n", "completions": [".decl Has_age(Object:symbol, Age:float)\nHas_age(\"pickled cucumbers\", 1000).\n.decl Answer()\nAnswer() :- Has_age(\"pickled cucumbers\", age), age > 100.\n.output Answer\n\n"]}
{"id": 713, "answer": false, "completion": ".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"Earth\", 1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"Earth\", magnetic_field), magnetic_field = 0.\n.output Answer\n\n", "completions": [".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"Earth\", 1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"Earth\", magnetic_field), magnetic_field = 0.\n.output Answer\n\n"]}
{"id": 714, "answer": true, "completion": ".decl Has_food(Animal:symbol, Food:symbol)\nHas_food(\"cat\", \"fish\").\nHas_food(\"cat\", \"meat\").\nHas_food(\"cat\", \"milk\").\nHas_food(\"cat\", \"cheese\").\nHas_food(\"cat\", \"bread\").\nHas_food(\"cat\", \"vegetables\").\nHas_food(\"cat\", \"fruit\").\nHas_food(\"cat\", \"eggs\").\nHas_food(\"cat\", \"sugar\").\nHas_food(\"cat\", \"salt\").\nHas_food(\"cat\", \"oil\").\nHas_food(\"cat\", \"water\").\nHas_food(\"cat\", \"honey\").\nHas_food(\"cat\", \"corn\").\nHas_food(\"cat\", \"nuts\").\nHas_food(\"cat\", \"rice\").\nHas_food(\"cat\", \"pasta\").\nHas_food(\"cat\", \"liver\").\nHas_food(\"cat\", \"beef\").\nHas_food(\"cat\", \"chicken\").\nHas_food(\"cat\", \"lamb\").\nHas_food(\"cat\", \"pork\").\nHas_food(\"cat\", \"turkey\").\nHas_food(\"cat\", \"fish\").\nHas_food(\"cat\", \"shrimp\").\nHas_food(\"cat\", \"crab\").\nHas_food(\"cat\", \"lobster\").\nHas_food(\"cat\", \"crayfish\").\nHas_food(\"cat\", \"prawn\").\nHas_food(\"cat\", \"squid\").\nHas_food(\"cat\", \"octopus\").\nHas_food(\"cat\", \"clam\").\nHas_food(\"cat\", \"oyster\").\nHas_food(\"cat\", \"scallop\").\nHas_food(\"cat\", \"mussel\").\nHas_food(\"cat\", \"snail\").\nHas_food(\"cat\", \"slug\").\nHas_food(\"cat\", \"sea urchin\").\nHas_food(\"cat\", \"cuttlefish\").\nHas_food(\"cat\", \"eel\").\nHas_food(\"cat\", \"leech\").\nHas_food(\"cat\", \"frog\").\nHas_food(\"cat\", \"toad\").\nHas_food(\"cat\", \"newt\").\nHas_food(\"cat\", \"tadpole\").\nHas_food(\"cat\", \"salamander\").\nHas_food(\"cat\", \"turtle\").\nHas_food(\"cat\", \"snake\").\nHas_food(\"cat\", \"crocodile\").\nHas_food(\"cat\", \"alligator\").\nHas_food(\"cat\", \"cobra\").\nHas_food(\"cat\", \"viper\").\nHas_food(\"cat\", \"boa\").\nHas_food(\"cat\", \"python\").\nHas_food(\"cat\", \"anaconda\").\nHas_food(\"cat\", \"rattlesnake\").\nHas_food(\"cat\", \"horned viper\").\nHas_food(\"cat\", \"sea snake\").\nHas_food(\"cat\", \"gecko\").\nHas_food(\"cat\", \"iguana\").\nHas_food(\"cat\", \"chameleon\").\nHas_food(\"cat\", \"tarantula\").\nHas_food(\"cat\", \"scorpion\").\nHas_food(\"cat\", \"spider\").\nHas_food(\"cat\", \"centipede\").\nHas_food(\"cat\", \"tick\").\nHas_food(\"cat\", \"flea\").\nHas_food(\"cat\", \"bee\").\nHas_food(\"cat\", \"wasp\").\nHas_food(\"cat\", \"hornet\").\nHas_food(\"cat", "completions": [".decl Has_food(Animal:symbol, Food:symbol)\nHas_food(\"cat\", \"fish\").\nHas_food(\"cat\", \"meat\").\nHas_food(\"cat\", \"milk\").\nHas_food(\"cat\", \"cheese\").\nHas_food(\"cat\", \"bread\").\nHas_food(\"cat\", \"vegetables\").\nHas_food(\"cat\", \"fruit\").\nHas_food(\"cat\", \"eggs\").\nHas_food(\"cat\", \"sugar\").\nHas_food(\"cat\", \"salt\").\nHas_food(\"cat\", \"oil\").\nHas_food(\"cat\", \"water\").\nHas_food(\"cat\", \"honey\").\nHas_food(\"cat\", \"corn\").\nHas_food(\"cat\", \"nuts\").\nHas_food(\"cat\", \"rice\").\nHas_food(\"cat\", \"pasta\").\nHas_food(\"cat\", \"liver\").\nHas_food(\"cat\", \"beef\").\nHas_food(\"cat\", \"chicken\").\nHas_food(\"cat\", \"lamb\").\nHas_food(\"cat\", \"pork\").\nHas_food(\"cat\", \"turkey\").\nHas_food(\"cat\", \"fish\").\nHas_food(\"cat\", \"shrimp\").\nHas_food(\"cat\", \"crab\").\nHas_food(\"cat\", \"lobster\").\nHas_food(\"cat\", \"crayfish\").\nHas_food(\"cat\", \"prawn\").\nHas_food(\"cat\", \"squid\").\nHas_food(\"cat\", \"octopus\").\nHas_food(\"cat\", \"clam\").\nHas_food(\"cat\", \"oyster\").\nHas_food(\"cat\", \"scallop\").\nHas_food(\"cat\", \"mussel\").\nHas_food(\"cat\", \"snail\").\nHas_food(\"cat\", \"slug\").\nHas_food(\"cat\", \"sea urchin\").\nHas_food(\"cat\", \"cuttlefish\").\nHas_food(\"cat\", \"eel\").\nHas_food(\"cat\", \"leech\").\nHas_food(\"cat\", \"frog\").\nHas_food(\"cat\", \"toad\").\nHas_food(\"cat\", \"newt\").\nHas_food(\"cat\", \"tadpole\").\nHas_food(\"cat\", \"salamander\").\nHas_food(\"cat\", \"turtle\").\nHas_food(\"cat\", \"snake\").\nHas_food(\"cat\", \"crocodile\").\nHas_food(\"cat\", \"alligator\").\nHas_food(\"cat\", \"cobra\").\nHas_food(\"cat\", \"viper\").\nHas_food(\"cat\", \"boa\").\nHas_food(\"cat\", \"python\").\nHas_food(\"cat\", \"anaconda\").\nHas_food(\"cat\", \"rattlesnake\").\nHas_food(\"cat\", \"horned viper\").\nHas_food(\"cat\", \"sea snake\").\nHas_food(\"cat\", \"gecko\").\nHas_food(\"cat\", \"iguana\").\nHas_food(\"cat\", \"chameleon\").\nHas_food(\"cat\", \"tarantula\").\nHas_food(\"cat\", \"scorpion\").\nHas_food(\"cat\", \"spider\").\nHas_food(\"cat\", \"centipede\").\nHas_food(\"cat\", \"tick\").\nHas_food(\"cat\", \"flea\").\nHas_food(\"cat\", \"bee\").\nHas_food(\"cat\", \"wasp\").\nHas_food(\"cat\", \"hornet\").\nHas_food(\"cat"]}
{"id": 715, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"nickel\", 8.9).\nHas_density(\"outer core of the earth\", 12).\n.decl Answer()\nAnswer() :- Has_density(\"nickel\", density1), Has_density(\"outer core of the earth\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"nickel\", 8.9).\nHas_density(\"outer core of the earth\", 12).\n.decl Answer()\nAnswer() :- Has_density(\"nickel\", density1), Has_density(\"outer core of the earth\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 716, "answer": false, "completion": ".decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Atlantic Ocean\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\n", "completions": [".decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Atlantic Ocean\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\nIs_in_area(\"brown rock fish\", \"Caribbean Sea\").\n"]}
{"id": 717, "answer": false, "completion": ".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Friday\", \"Friday\").\nHappens_on_day(\"Friday\", \"Saturday\").\nHappens_on_day(\"Friday\", \"Sunday\").\nHappens_on_day(\"Friday\", \"Monday\").\nHappens_on_day(\"Friday\", \"Tuesday\").\nHappens_on_day(\"Friday\", \"Wednesday\").\nHappens_on_day(\"Friday\", \"Thursday\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Friday\", \"January\").\nHappens_in_month(\"Friday\", \"February\").\nHappens_in_month(\"Friday\", \"March\").\nHappens_in_month(\"Friday\", \"April\").\nHappens_in_month(\"Friday\", \"May\").\nHappens_in_month(\"Friday\", \"June\").\nHappens_in_month(\"Friday\", \"July\").\nHappens_in_month(\"Friday\", \"August\").\nHappens_in_month(\"Friday\", \"September\").\nHappens_in_month(\"Friday\", \"October\").\nHappens_in_month(\"Friday\", \"November\").\nHappens_in_month(\"Friday\", \"December\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Friday\", day), Happens_in_month(\"Friday\", month), 2015 = year.\n.output Answer\n\n", "completions": [".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Friday\", \"Friday\").\nHappens_on_day(\"Friday\", \"Saturday\").\nHappens_on_day(\"Friday\", \"Sunday\").\nHappens_on_day(\"Friday\", \"Monday\").\nHappens_on_day(\"Friday\", \"Tuesday\").\nHappens_on_day(\"Friday\", \"Wednesday\").\nHappens_on_day(\"Friday\", \"Thursday\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Friday\", \"January\").\nHappens_in_month(\"Friday\", \"February\").\nHappens_in_month(\"Friday\", \"March\").\nHappens_in_month(\"Friday\", \"April\").\nHappens_in_month(\"Friday\", \"May\").\nHappens_in_month(\"Friday\", \"June\").\nHappens_in_month(\"Friday\", \"July\").\nHappens_in_month(\"Friday\", \"August\").\nHappens_in_month(\"Friday\", \"September\").\nHappens_in_month(\"Friday\", \"October\").\nHappens_in_month(\"Friday\", \"November\").\nHappens_in_month(\"Friday\", \"December\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Friday\", day), Happens_in_month(\"Friday\", month), 2015 = year.\n.output Answer\n\n"]}
{"id": 718, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"cell\", 1).\nHas_volume(\"shoebox\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"cell\", volume1), Has_volume(\"shoebox\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"cell\", 1).\nHas_volume(\"shoebox\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"cell\", volume1), Has_volume(\"shoebox\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 719, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Royal Society\", 0).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Royal Society\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Royal Society\", n_members), n_members > 0.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Royal Society\", 0).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Royal Society\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Royal Society\", n_members), n_members > 0.\n.output Answer\n\n"]}
{"id": 720, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hanging\", \"June\").\nHappens_in_time(\"hanging\", \"July\").\nHappens_in_time(\"hanging\", \"August\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"body movie\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"body movie\", n_months), Happens_in_time(\"hanging\", month), In_season(month, season), n_months <= n_months.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hanging\", \"June\").\nHappens_in_time(\"hanging\", \"July\").\nHappens_in_time(\"hanging\", \"August\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"body movie\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"body movie\", n_months), Happens_in_time(\"hanging\", month), In_season(month, season), n_months <= n_months.\n.output Answer\n\n"]}
{"id": 721, "answer": true, "completion": ".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"moose\", \"Arendelle\").\n.decl Answer()\nAnswer() :- Works_for(\"moose\", organization).\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"moose\", \"Arendelle\").\n.decl Answer()\nAnswer() :- Works_for(\"moose\", organization).\n.output Answer\n\n"]}
{"id": 722, "answer": false, "completion": ".decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"H\", \"XVI\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"I\", \"V\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"V\", \"X\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"X\", \"I\").\n.decl Answer()\nAnswer() :- Has_numerals(\"H\", numerals), Has_numerals(letter1, numerals), Has_numerals(letter2, numerals), letter1 = letter2.\n.output Answer\n\n", "completions": [".decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"H\", \"XVI\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"I\", \"V\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"V\", \"X\").\n.decl Has_numerals(Letter:symbol, Roman_numerals:symbol)\nHas_numerals(\"X\", \"I\").\n.decl Answer()\nAnswer() :- Has_numerals(\"H\", numerals), Has_numerals(letter1, numerals), Has_numerals(letter2, numerals), letter1 = letter2.\n.output Answer\n\n"]}
{"id": 723, "answer": true, "completion": ".decl Is_edible(Food:symbol)\nIs_edible(\"pig meat\").\n.decl Is_cuisine(Cuisine:symbol)\nIs_cuisine(\"Hawaiian\").\n.decl Answer()\nAnswer() :- Is_edible(\"pig meat\"), Is_cuisine(\"Hawaiian\").\n.output Answer\n\n", "completions": [".decl Is_edible(Food:symbol)\nIs_edible(\"pig meat\").\n.decl Is_cuisine(Cuisine:symbol)\nIs_cuisine(\"Hawaiian\").\n.decl Answer()\nAnswer() :- Is_edible(\"pig meat\"), Is_cuisine(\"Hawaiian\").\n.output Answer\n\n"]}
{"id": 724, "answer": true, "completion": ".decl Is_comfortable(Person:symbol, Place:symbol)\nIs_comfortable(\"John\", \"Esperanza Base\").\nIs_comfortable(\"John\", \"outside\").\n.decl Answer()\nAnswer() :- Is_comfortable(\"John\", place), Is_comfortable(\"John\", \"Esperanza Base\").\n.output Answer\n\n", "completions": [".decl Is_comfortable(Person:symbol, Place:symbol)\nIs_comfortable(\"John\", \"Esperanza Base\").\nIs_comfortable(\"John\", \"outside\").\n.decl Answer()\nAnswer() :- Is_comfortable(\"John\", place), Is_comfortable(\"John\", \"Esperanza Base\").\n.output Answer\n\n"]}
{"id": 725, "answer": true, "completion": ".decl Has_allergy(Person:symbol, Allergy:symbol)\nHas_allergy(\"The Little Prince\", \"flowers\").\n.decl Answer()\nAnswer() :- Has_allergy(\"The Little Prince\", allergy), allergy = \"flowers\".\n.output Answer\n\n", "completions": [".decl Has_allergy(Person:symbol, Allergy:symbol)\nHas_allergy(\"The Little Prince\", \"flowers\").\n.decl Answer()\nAnswer() :- Has_allergy(\"The Little Prince\", allergy), allergy = \"flowers\".\n.output Answer\n\n"]}
{"id": 726, "answer": true, "completion": ".decl Has_cell_type(Cell:symbol, Cell_type:symbol)\nHas_cell_type(\"white blood cell\", \"B cell\").\nHas_cell_type(\"white blood cell\", \"T cell\").\nHas_cell_type(\"white blood cell\", \"macrophage\").\nHas_cell_type(\"macrophage\", \"phagocyte\").\nHas_cell_type(\"phagocyte\", \"cell\").\nHas_cell_type(\"cell\", \"cellular\").\nHas_cell_type(\"cellular\", \"cell\").\n.decl Has_cell_type(Cell:symbol, Cell_type:symbol)\nHas_cell_type(\"white blood cell\", \"B cell\").\nHas_cell_type(\"white blood cell\", \"T cell\").\nHas_cell_type(\"white blood cell\", \"macrophage\").\nHas_cell_type(\"macrophage\", \"phagocyte\").\nHas_cell_type(\"phagocyte\", \"cell\").\nHas_cell_type(\"cell\", \"cellular\").\nHas_cell_type(\"cellular\", \"cell\").\n.decl Answer()\nAnswer() :- Has_cell_type(\"white blood cell\", cell_type1), Has_cell_type(\"cell\", cell_type2), cell_type1 = cell_type2.\n.output Answer\n\n", "completions": [".decl Has_cell_type(Cell:symbol, Cell_type:symbol)\nHas_cell_type(\"white blood cell\", \"B cell\").\nHas_cell_type(\"white blood cell\", \"T cell\").\nHas_cell_type(\"white blood cell\", \"macrophage\").\nHas_cell_type(\"macrophage\", \"phagocyte\").\nHas_cell_type(\"phagocyte\", \"cell\").\nHas_cell_type(\"cell\", \"cellular\").\nHas_cell_type(\"cellular\", \"cell\").\n.decl Has_cell_type(Cell:symbol, Cell_type:symbol)\nHas_cell_type(\"white blood cell\", \"B cell\").\nHas_cell_type(\"white blood cell\", \"T cell\").\nHas_cell_type(\"white blood cell\", \"macrophage\").\nHas_cell_type(\"macrophage\", \"phagocyte\").\nHas_cell_type(\"phagocyte\", \"cell\").\nHas_cell_type(\"cell\", \"cellular\").\nHas_cell_type(\"cellular\", \"cell\").\n.decl Answer()\nAnswer() :- Has_cell_type(\"white blood cell\", cell_type1), Has_cell_type(\"cell\", cell_type2), cell_type1 = cell_type2.\n.output Answer\n\n"]}
{"id": 727, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\n.decl Answer()\nAnswer() :- Has_property(\"Coca\", \"caffeine\"), Has_property(\"Coca\", \"sugar\"), Has_property(\"Coca\", \"water\"), Has_property(\"Coca\", \"soda\"), Has_property(\"Coca\", \"alcohol\").\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\nHas_property(\"Coca\", \"caffeine\").\nHas_property(\"Coca\", \"sugar\").\nHas_property(\"Coca\", \"water\").\nHas_property(\"Coca\", \"soda\").\nHas_property(\"Coca\", \"alcohol\").\n.decl Answer()\nAnswer() :- Has_property(\"Coca\", \"caffeine\"), Has_property(\"Coca\", \"sugar\"), Has_property(\"Coca\", \"water\"), Has_property(\"Coca\", \"soda\"), Has_property(\"Coca\", \"alcohol\").\n.output Answer\n\n"]}
{"id": 728, "answer": false, "completion": ".decl Votes(Person:symbol, Month:symbol)\nVotes(\"Justin Bieber\", \"October\").\n.decl Answer()\nAnswer() :- Votes(\"Justin Bieber\", month), month = \"October\".\n.output Answer\n\n", "completions": [".decl Votes(Person:symbol, Month:symbol)\nVotes(\"Justin Bieber\", \"October\").\n.decl Answer()\nAnswer() :- Votes(\"Justin Bieber\", month), month = \"October\".\n.output Answer\n\n"]}
{"id": 729, "answer": false, "completion": ".decl Uses(Person:symbol, Ingredient:symbol)\nUses(\"Gordon Ramsey\", \"salt\").\nUses(\"Gordon Ramsey\", \"pepper\").\nUses(\"Gordon Ramsey\", \"sugar\").\nUses(\"Gordon Ramsey\", \"chili\").\nUses(\"Gordon Ramsey\", \"saffron\").\nUses(\"Gordon Ramsey\", \"uranium\").\n.decl Answer()\nAnswer() :- Uses(\"Gordon Ramsey\", ingredient), ingredient = \"uranium\".\n.output Answer\n\n", "completions": [".decl Uses(Person:symbol, Ingredient:symbol)\nUses(\"Gordon Ramsey\", \"salt\").\nUses(\"Gordon Ramsey\", \"pepper\").\nUses(\"Gordon Ramsey\", \"sugar\").\nUses(\"Gordon Ramsey\", \"chili\").\nUses(\"Gordon Ramsey\", \"saffron\").\nUses(\"Gordon Ramsey\", \"uranium\").\n.decl Answer()\nAnswer() :- Uses(\"Gordon Ramsey\", ingredient), ingredient = \"uranium\".\n.output Answer\n\n"]}
{"id": 730, "answer": false, "completion": ".decl Was_designed_by(Building:symbol, Designer:symbol)\nWas_designed_by(\"Tokyo Tower\", \"Shigeru Ban\").\nWas_designed_by(\"Shigeru Ban\", \"Stephen Sauvestre\").\n.decl Answer()\nAnswer() :- Was_designed_by(\"Tokyo Tower\", designer), Was_designed_by(designer, \"Stephen Sauvestre\").\n.output Answer\n\n", "completions": [".decl Was_designed_by(Building:symbol, Designer:symbol)\nWas_designed_by(\"Tokyo Tower\", \"Shigeru Ban\").\nWas_designed_by(\"Shigeru Ban\", \"Stephen Sauvestre\").\n.decl Answer()\nAnswer() :- Was_designed_by(\"Tokyo Tower\", designer), Was_designed_by(designer, \"Stephen Sauvestre\").\n.output Answer\n\n"]}
{"id": 731, "answer": false, "completion": ".decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"Cerebral palsy\", \"Stumble\").\nHas_symptom(\"Wizard of Oz\", \"Stumble\").\n.decl Answer()\nAnswer() :- Has_symptom(\"Wizard of Oz\", symptom), Has_symptom(\"young Wizard of Oz Scarecrow\", symptom).\n.output Answer\n\n", "completions": [".decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"Cerebral palsy\", \"Stumble\").\nHas_symptom(\"Wizard of Oz\", \"Stumble\").\n.decl Answer()\nAnswer() :- Has_symptom(\"Wizard of Oz\", symptom), Has_symptom(\"young Wizard of Oz Scarecrow\", symptom).\n.output Answer\n\n"]}
{"id": 732, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"January\").\nHappens_in_time(\"leap year\", \"February\").\nHappens_in_time(\"leap year\", \"March\").\nHappens_in_time(\"leap year\", \"April\").\nHappens_in_time(\"leap year\", \"May\").\nHappens_in_time(\"leap year\", \"June\").\nHappens_in_time(\"leap year\", \"July\").\nHappens_in_time(\"leap year\", \"August\").\nHappens_in_time(\"leap year\", \"September\").\nHappens_in_time(\"leap year\", \"October\").\nHappens_in_time(\"leap year\", \"November\").\nHappens_in_time(\"leap year\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"leap year\", month1), Happens_in_time(\"leap year\", month2), month1 != month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"January\").\nHappens_in_time(\"leap year\", \"February\").\nHappens_in_time(\"leap year\", \"March\").\nHappens_in_time(\"leap year\", \"April\").\nHappens_in_time(\"leap year\", \"May\").\nHappens_in_time(\"leap year\", \"June\").\nHappens_in_time(\"leap year\", \"July\").\nHappens_in_time(\"leap year\", \"August\").\nHappens_in_time(\"leap year\", \"September\").\nHappens_in_time(\"leap year\", \"October\").\nHappens_in_time(\"leap year\", \"November\").\nHappens_in_time(\"leap year\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"leap year\", month1), Happens_in_time(\"leap year\", month2), month1 != month2.\n.output Answer\n\n"]}
{"id": 733, "answer": false, "completion": ".decl Married(Person_A:symbol, Person_B:symbol)\nMarried(\"Johann Sebastian Bach\", \"Anna Magdalena Wilcke\").\nMarried(\"Johann Sebastian Bach\", \"Maria Barbara Bach\").\n.decl Answer()\nAnswer() :- Married(\"Johann Sebastian Bach\", person_b), Married(person_a, person_b), person_a != person_b.\n.output Answer\n\n", "completions": [".decl Married(Person_A:symbol, Person_B:symbol)\nMarried(\"Johann Sebastian Bach\", \"Anna Magdalena Wilcke\").\nMarried(\"Johann Sebastian Bach\", \"Maria Barbara Bach\").\n.decl Answer()\nAnswer() :- Married(\"Johann Sebastian Bach\", person_b), Married(person_a, person_b), person_a != person_b.\n.output Answer\n\n"]}
{"id": 734, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"baby gray whale\", 0.00001).\nHas_volume(\"tractor-trailer\", 100000).\n.decl Answer()\nAnswer() :- Has_volume(\"baby gray whale\", volume1), Has_volume(\"tractor-trailer\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"baby gray whale\", 0.00001).\nHas_volume(\"tractor-trailer\", 100000).\n.decl Answer()\nAnswer() :- Has_volume(\"baby gray whale\", volume1), Has_volume(\"tractor-trailer\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 735, "answer": true, "completion": ".decl Has_main_ingredient(Ingredient:symbol, Main_ingredient:symbol)\nHas_main_ingredient(\"black pepper\", \"ground bell peppers\").\n.decl Answer()\nAnswer() :- Has_main_ingredient(\"black pepper\", ingredient), Has_main_ingredient(ingredient, main_ingredient), main_ingredient == \"ground bell peppers\".\n.output Answer\n\n", "completions": [".decl Has_main_ingredient(Ingredient:symbol, Main_ingredient:symbol)\nHas_main_ingredient(\"black pepper\", \"ground bell peppers\").\n.decl Answer()\nAnswer() :- Has_main_ingredient(\"black pepper\", ingredient), Has_main_ingredient(ingredient, main_ingredient), main_ingredient == \"ground bell peppers\".\n.output Answer\n\n"]}
{"id": 736, "answer": true, "completion": ".decl Has_taught(Tribe:symbol, Thing:symbol)\nHas_taught(\"Aztec\", \"maize\").\nHas_taught(\"Inca\", \"maize\").\nHas_taught(\"Maya\", \"maize\").\n.decl Has_cultivated(Tribe:symbol, Thing:symbol)\nHas_cultivated(\"Aztec\", \"maize\").\nHas_cultivated(\"Inca\", \"maize\").\nHas_cultivated(\"Spanish\", \"maize\").\n.decl Answer()\nAnswer() :- Has_taught(tribe, \"maize\"), Has_cultivated(tribe, \"maize\").\n.output Answer\n\n", "completions": [".decl Has_taught(Tribe:symbol, Thing:symbol)\nHas_taught(\"Aztec\", \"maize\").\nHas_taught(\"Inca\", \"maize\").\nHas_taught(\"Maya\", \"maize\").\n.decl Has_cultivated(Tribe:symbol, Thing:symbol)\nHas_cultivated(\"Aztec\", \"maize\").\nHas_cultivated(\"Inca\", \"maize\").\nHas_cultivated(\"Spanish\", \"maize\").\n.decl Answer()\nAnswer() :- Has_taught(tribe, \"maize\"), Has_cultivated(tribe, \"maize\").\n.output Answer\n\n"]}
{"id": 737, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Washington Monument\", 169).\nHas_height(\"Sojourner Truth\", 68).\n.decl Answer()\nAnswer() :- Has_height(\"Sojourner Truth\", height), Has_height(\"Washington Monument\", height).\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Washington Monument\", 169).\nHas_height(\"Sojourner Truth\", 68).\n.decl Answer()\nAnswer() :- Has_height(\"Sojourner Truth\", height), Has_height(\"Washington Monument\", height).\n.output Answer\n\n"]}
{"id": 738, "answer": true, "completion": ".decl Is_at(Person:symbol, Location:symbol)\nIs_at(\"your psychologist\", \"supermarket\").\nIs_at(\"you\", \"supermarket\").\n.decl Answer()\nAnswer() :- Is_at(\"your psychologist\", location), Is_at(\"you\", location).\n.output Answer\n\n", "completions": [".decl Is_at(Person:symbol, Location:symbol)\nIs_at(\"your psychologist\", \"supermarket\").\nIs_at(\"you\", \"supermarket\").\n.decl Answer()\nAnswer() :- Is_at(\"your psychologist\", location), Is_at(\"you\", location).\n.output Answer\n\n"]}
{"id": 739, "answer": false, "completion": ".decl Has_n_ratings(Movie:symbol, N_ratings:float)\nHas_n_ratings(\"Hamlet\", 50000).\nHas_n_ratings(\"Comedy of Errors\", 1000).\n.decl Answer()\nAnswer() :- Has_n_ratings(\"Hamlet\", n_ratings1), Has_n_ratings(\"Comedy of Errors\", n_ratings2), n_ratings1 > n_ratings2.\n.output Answer\n\n", "completions": [".decl Has_n_ratings(Movie:symbol, N_ratings:float)\nHas_n_ratings(\"Hamlet\", 50000).\nHas_n_ratings(\"Comedy of Errors\", 1000).\n.decl Answer()\nAnswer() :- Has_n_ratings(\"Hamlet\", n_ratings1), Has_n_ratings(\"Comedy of Errors\", n_ratings2), n_ratings1 > n_ratings2.\n.output Answer\n\n"]}
{"id": 740, "answer": true, "completion": ".decl Has_historic_graffiti(Location:symbol)\nHas_historic_graffiti(\"Alcatraz\").\n.decl Answer()\nAnswer() :- Has_historic_graffiti(\"Alcatraz\").\n.output Answer\n\n", "completions": [".decl Has_historic_graffiti(Location:symbol)\nHas_historic_graffiti(\"Alcatraz\").\n.decl Answer()\nAnswer() :- Has_historic_graffiti(\"Alcatraz\").\n.output Answer\n\n"]}
{"id": 741, "answer": true, "completion": ".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"running\", \"Elite runner circling the Pyrenees\").\nHas_distance(\"Elite runner circling the Pyrenees\", \"Pyrenees\").\n.decl Has_time(Event:symbol, Time:float)\nHas_time(\"running\", \"Elite runner circling the Pyrenees\").\nHas_time(\"Elite runner circling the Pyrenees\", \"Pyrenees\").\n.decl Answer()\nAnswer() :- Has_distance(\"running\", distance), Has_time(\"running\", time), distance = time.\n.output Answer\n\n", "completions": [".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"running\", \"Elite runner circling the Pyrenees\").\nHas_distance(\"Elite runner circling the Pyrenees\", \"Pyrenees\").\n.decl Has_time(Event:symbol, Time:float)\nHas_time(\"running\", \"Elite runner circling the Pyrenees\").\nHas_time(\"Elite runner circling the Pyrenees\", \"Pyrenees\").\n.decl Answer()\nAnswer() :- Has_distance(\"running\", distance), Has_time(\"running\", time), distance = time.\n.output Answer\n\n"]}
{"id": 742, "answer": false, "completion": ".decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"wembley arena\", 100000).\nHas_capacity(\"moon\", 1).\n.decl Answer()\nAnswer() :- Has_capacity(\"wembley arena\", capacity1), Has_capacity(\"moon\", capacity2), capacity1 > capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"wembley arena\", 100000).\nHas_capacity(\"moon\", 1).\n.decl Answer()\nAnswer() :- Has_capacity(\"wembley arena\", capacity1), Has_capacity(\"moon\", capacity2), capacity1 > capacity2.\n.output Answer\n\n"]}
{"id": 743, "answer": true, "completion": ".decl Has_first_letter(Word:symbol, Letter:symbol)\nHas_first_letter(\"apple\", \"a\").\nHas_first_letter(\"banana\", \"b\").\nHas_first_letter(\"coconut\", \"c\").\nHas_first_letter(\"durian\", \"d\").\nHas_first_letter(\"eel\", \"e\").\nHas_first_letter(\"fig\", \"f\").\nHas_first_letter(\"grape\", \"g\").\nHas_first_letter(\"honeydew\", \"h\").\nHas_first_letter(\"iceberg\", \"i\").\nHas_first_letter(\"jackfruit\", \"j\").\nHas_first_letter(\"kiwi\", \"k\").\nHas_first_letter(\"lemon\", \"l\").\nHas_first_letter(\"mango\", \"m\").\nHas_first_letter(\"nectarine\", \"n\").\nHas_first_letter(\"orange\", \"o\").\nHas_first_letter(\"papaya\", \"p\").\nHas_first_letter(\"quince\", \"q\").\nHas_first_letter(\"raspberry\", \"r\").\nHas_first_letter(\"strawberry\", \"s\").\nHas_first_letter(\"tangerine\", \"t\").\nHas_first_letter(\"ugli\", \"u\").\nHas_first_letter(\"vanilla\", \"v\").\nHas_first_letter(\"watermelon\", \"w\").\nHas_first_letter(\"xylophone\", \"x\").\nHas_first_letter(\"yam\", \"y\").\nHas_first_letter(\"zebra\", \"z\").\n.decl Has_last_letter(Word:symbol, Letter:symbol)\nHas_last_letter(\"apple\", \"p\").\nHas_last_letter(\"banana\", \"a\").\nHas_last_letter(\"coconut\", \"n\").\nHas_last_letter(\"durian\", \"n\").\nHas_last_letter(\"eel\", \"e\").\nHas_last_letter(\"fig\", \"g\").\nHas_last_letter(\"grape\", \"e\").\nHas_last_letter(\"honeydew\", \"e\").\nHas_last_letter(\"iceberg\", \"e\").\nHas_last_letter(\"jackfruit\", \"t\").\nHas_last_letter(\"kiwi\", \"i\").\nHas_last_letter(\"lemon\", \"n\").\nHas_last_letter(\"mango\", \"o\").\nHas_last_letter(\"nectarine\", \"e\").\nHas_last_letter(\"orange\", \"a\").\nHas_last_letter(\"papaya\", \"a\").\nHas_last_letter(\"quince\", \"e\").\nHas_last_letter(\"raspberry\", \"b\").\nHas_last_letter(\"strawberry\", \"r\").\nHas_last_letter(\"tangerine\", \"e\").\nHas_last_letter(\"ugli\", \"i\").\nHas_last_letter(\"vanilla\", \"l\").\nHas_last_letter(\"watermelon\", \"l\").\nHas_last_letter(\"xylophone\", \"n\").\nHas_last_letter(\"yam\", \"m\").\nHas_last_letter(\"zebra\", \"b\").\n.decl Answer()\nAnswer() :- Has_first_letter(word, letter1), Has_last_letter(word, letter2), letter1 == letter2.\n.output Answer\n\n", "completions": [".decl Has_first_letter(Word:symbol, Letter:symbol)\nHas_first_letter(\"apple\", \"a\").\nHas_first_letter(\"banana\", \"b\").\nHas_first_letter(\"coconut\", \"c\").\nHas_first_letter(\"durian\", \"d\").\nHas_first_letter(\"eel\", \"e\").\nHas_first_letter(\"fig\", \"f\").\nHas_first_letter(\"grape\", \"g\").\nHas_first_letter(\"honeydew\", \"h\").\nHas_first_letter(\"iceberg\", \"i\").\nHas_first_letter(\"jackfruit\", \"j\").\nHas_first_letter(\"kiwi\", \"k\").\nHas_first_letter(\"lemon\", \"l\").\nHas_first_letter(\"mango\", \"m\").\nHas_first_letter(\"nectarine\", \"n\").\nHas_first_letter(\"orange\", \"o\").\nHas_first_letter(\"papaya\", \"p\").\nHas_first_letter(\"quince\", \"q\").\nHas_first_letter(\"raspberry\", \"r\").\nHas_first_letter(\"strawberry\", \"s\").\nHas_first_letter(\"tangerine\", \"t\").\nHas_first_letter(\"ugli\", \"u\").\nHas_first_letter(\"vanilla\", \"v\").\nHas_first_letter(\"watermelon\", \"w\").\nHas_first_letter(\"xylophone\", \"x\").\nHas_first_letter(\"yam\", \"y\").\nHas_first_letter(\"zebra\", \"z\").\n.decl Has_last_letter(Word:symbol, Letter:symbol)\nHas_last_letter(\"apple\", \"p\").\nHas_last_letter(\"banana\", \"a\").\nHas_last_letter(\"coconut\", \"n\").\nHas_last_letter(\"durian\", \"n\").\nHas_last_letter(\"eel\", \"e\").\nHas_last_letter(\"fig\", \"g\").\nHas_last_letter(\"grape\", \"e\").\nHas_last_letter(\"honeydew\", \"e\").\nHas_last_letter(\"iceberg\", \"e\").\nHas_last_letter(\"jackfruit\", \"t\").\nHas_last_letter(\"kiwi\", \"i\").\nHas_last_letter(\"lemon\", \"n\").\nHas_last_letter(\"mango\", \"o\").\nHas_last_letter(\"nectarine\", \"e\").\nHas_last_letter(\"orange\", \"a\").\nHas_last_letter(\"papaya\", \"a\").\nHas_last_letter(\"quince\", \"e\").\nHas_last_letter(\"raspberry\", \"b\").\nHas_last_letter(\"strawberry\", \"r\").\nHas_last_letter(\"tangerine\", \"e\").\nHas_last_letter(\"ugli\", \"i\").\nHas_last_letter(\"vanilla\", \"l\").\nHas_last_letter(\"watermelon\", \"l\").\nHas_last_letter(\"xylophone\", \"n\").\nHas_last_letter(\"yam\", \"m\").\nHas_last_letter(\"zebra\", \"b\").\n.decl Answer()\nAnswer() :- Has_first_letter(word, letter1), Has_last_letter(word, letter2), letter1 == letter2.\n.output Answer\n\n"]}
{"id": 744, "answer": true, "completion": ".decl Discovered_on(Object:symbol, Planet:symbol)\nDiscovered_on(\"tumulus\", \"Mars\").\n.decl Answer()\nAnswer() :- Discovered_on(\"tumulus\", planet).\n.output Answer\n\n", "completions": [".decl Discovered_on(Object:symbol, Planet:symbol)\nDiscovered_on(\"tumulus\", \"Mars\").\n.decl Answer()\nAnswer() :- Discovered_on(\"tumulus\", planet).\n.output Answer\n\n"]}
{"id": 745, "answer": true, "completion": ".decl Is_symbol_of(Symbol:symbol, Concept:symbol)\nIs_symbol_of(\"Pan\", \"virtue\").\nIs_symbol_of(\"Pan\", \"virginity\").\n.decl Answer()\nAnswer() :- Is_symbol_of(\"Pan\", concept), Is_symbol_of(\"Pan\", \"virtue\"), Is_symbol_of(\"Pan\", \"virginity\").\n.output Answer\n\n", "completions": [".decl Is_symbol_of(Symbol:symbol, Concept:symbol)\nIs_symbol_of(\"Pan\", \"virtue\").\nIs_symbol_of(\"Pan\", \"virginity\").\n.decl Answer()\nAnswer() :- Is_symbol_of(\"Pan\", concept), Is_symbol_of(\"Pan\", \"virtue\"), Is_symbol_of(\"Pan\", \"virginity\").\n.output Answer\n\n"]}
{"id": 746, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Justin Bieber\", 22).\nHas_age(\"Mike Pence\", 73).\n.decl Answer()\nAnswer() :- Has_age(\"Justin Bieber\", age1), Has_age(\"Mike Pence\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Justin Bieber\", 22).\nHas_age(\"Mike Pence\", 73).\n.decl Answer()\nAnswer() :- Has_age(\"Justin Bieber\", age1), Has_age(\"Mike Pence\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 747, "answer": true, "completion": ".decl Has_title(Song:symbol, Title:symbol)\nHas_title(\"Diamonds Are Forever\", \"Diamonds Are Forever\").\nHas_title(\"Shoot Me\", \"I'm Alive\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming", "completions": [".decl Has_title(Song:symbol, Title:symbol)\nHas_title(\"Diamonds Are Forever\", \"Diamonds Are Forever\").\nHas_title(\"Shoot Me\", \"I'm Alive\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming Back)\").\nHas_title(\"Shoot Me\", \"I'm Alive (And I'm Coming"]}
{"id": 748, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"French Revolution\", \"1789\").\nHappens_in_time(\"French Revolution\", \"1799\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"French Revolution\", \"France\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"French Revolution\", time), Happens_in_place(\"French Revolution\", place), time = \"1789\", place = \"France\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"French Revolution\", \"1789\").\nHappens_in_time(\"French Revolution\", \"1799\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"French Revolution\", \"France\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"French Revolution\", time), Happens_in_place(\"French Revolution\", place), time = \"1789\", place = \"France\".\n.output Answer\n\n"]}
{"id": 749, "answer": true, "completion": ".decl Has_release_year(Game:symbol, Release_year:float)\nHas_release_year(\"Super Mario Bros.\", 1985).\nHas_release_year(\"Super Mario Bros. 2\", 1988).\nHas_release_year(\"Super Mario Bros. 3\", 1988).\nHas_release_year(\"Super Mario Land\", 1989).\nHas_release_year(\"Super Mario World\", 1990).\nHas_release_year(\"Super Mario World 2: Yoshi's Island\", 1991).\nHas_release_year(\"Super Mario Kart\", 1992).\nHas_release_year(\"Super Mario Kart 2\", 1993).\nHas_release_year(\"Super Mario Kart 3\", 1994).\nHas_release_year(\"Super Mario Kart: Super Circuit\", 1995).\nHas_release_year(\"Super Mario World: Yoshi's Island\", 1995).\nHas_release_year(\"Super Mario 64\", 1996).\nHas_release_year(\"Super Mario Sunshine\", 2002).\nHas_release_year(\"Super Mario Galaxy\", 2007).\nHas_release_year(\"Super Mario Galaxy 2\", 2011).\nHas_release_year(\"Super Mario 3D Land\", 2011).\nHas_release_year(\"Super Mario 3D World\", 2013).\nHas_release_year(\"Super Mario Bros. 4\", 2015).\nHas_release_year(\"Super Mario Bros. 5\", 2016).\nHas_release_year(\"Super Mario Bros. 6\", 2017).\nHas_release_year(\"Super Mario Bros. 7\", 2019).\n.decl Answer()\nAnswer() :- Has_release_year(\"Super Mario Bros.\", release_year1), Has_release_year(\"Super Mario Bros. 2\", release_year2), Has_release_year(\"Super Mario Bros. 3\", release_year3), Has_release_year(\"Super Mario Land\", release_year4), Has_release_year(\"Super Mario World\", release_year5), Has_release_year(\"Super Mario World 2: Yoshi's Island\", release_year6), Has_release_year(\"Super Mario Kart\", release_year7), Has_release_year(\"Super Mario Kart 2\", release_year8), Has_release_year(\"Super Mario Kart 3\", release_year9), Has_release_year(\"Super Mario Kart: Super Circuit\", release_year10), Has_release_year(\"Super Mario World: Yoshi's Island\", release_year11), Has_release_year(\"Super Mario 64\", release_year12), Has_release_year(\"Super Mario Sunshine\", release_year13), Has_release_year(\"Super Mario Galaxy\", release_year14), Has_release_year(\"Super Mario Galaxy 2\", release_year15), Has_release_year(\"Super Mario 3D Land\", release_year16), Has_release_year(\"Super Mario 3D World\", release_year17), Has_release_year(\"Super Mario Bros. 4\", release_year18), Has_release_year(\"Super Mario Bros. 5\", release_year19), Has_release_year(\"Super Mario Bros. 6\", release_year20), Has_release_year(\"Super Mario Bros. 7\", release_year21), release_year1 < release_year2, release_year2 < release_year3, release_year3 < release_year4, release_year4 < release_year5, release_year5 < release_year6, release_year6 < release_year7, release_year7 < release_year8, release_year8 < release_year9, release_year9 < release_year10, release_year10 < release_year11, release_year11 < release_year12, release_year12 < release_year13,", "completions": [".decl Has_release_year(Game:symbol, Release_year:float)\nHas_release_year(\"Super Mario Bros.\", 1985).\nHas_release_year(\"Super Mario Bros. 2\", 1988).\nHas_release_year(\"Super Mario Bros. 3\", 1988).\nHas_release_year(\"Super Mario Land\", 1989).\nHas_release_year(\"Super Mario World\", 1990).\nHas_release_year(\"Super Mario World 2: Yoshi's Island\", 1991).\nHas_release_year(\"Super Mario Kart\", 1992).\nHas_release_year(\"Super Mario Kart 2\", 1993).\nHas_release_year(\"Super Mario Kart 3\", 1994).\nHas_release_year(\"Super Mario Kart: Super Circuit\", 1995).\nHas_release_year(\"Super Mario World: Yoshi's Island\", 1995).\nHas_release_year(\"Super Mario 64\", 1996).\nHas_release_year(\"Super Mario Sunshine\", 2002).\nHas_release_year(\"Super Mario Galaxy\", 2007).\nHas_release_year(\"Super Mario Galaxy 2\", 2011).\nHas_release_year(\"Super Mario 3D Land\", 2011).\nHas_release_year(\"Super Mario 3D World\", 2013).\nHas_release_year(\"Super Mario Bros. 4\", 2015).\nHas_release_year(\"Super Mario Bros. 5\", 2016).\nHas_release_year(\"Super Mario Bros. 6\", 2017).\nHas_release_year(\"Super Mario Bros. 7\", 2019).\n.decl Answer()\nAnswer() :- Has_release_year(\"Super Mario Bros.\", release_year1), Has_release_year(\"Super Mario Bros. 2\", release_year2), Has_release_year(\"Super Mario Bros. 3\", release_year3), Has_release_year(\"Super Mario Land\", release_year4), Has_release_year(\"Super Mario World\", release_year5), Has_release_year(\"Super Mario World 2: Yoshi's Island\", release_year6), Has_release_year(\"Super Mario Kart\", release_year7), Has_release_year(\"Super Mario Kart 2\", release_year8), Has_release_year(\"Super Mario Kart 3\", release_year9), Has_release_year(\"Super Mario Kart: Super Circuit\", release_year10), Has_release_year(\"Super Mario World: Yoshi's Island\", release_year11), Has_release_year(\"Super Mario 64\", release_year12), Has_release_year(\"Super Mario Sunshine\", release_year13), Has_release_year(\"Super Mario Galaxy\", release_year14), Has_release_year(\"Super Mario Galaxy 2\", release_year15), Has_release_year(\"Super Mario 3D Land\", release_year16), Has_release_year(\"Super Mario 3D World\", release_year17), Has_release_year(\"Super Mario Bros. 4\", release_year18), Has_release_year(\"Super Mario Bros. 5\", release_year19), Has_release_year(\"Super Mario Bros. 6\", release_year20), Has_release_year(\"Super Mario Bros. 7\", release_year21), release_year1 < release_year2, release_year2 < release_year3, release_year3 < release_year4, release_year4 < release_year5, release_year5 < release_year6, release_year6 < release_year7, release_year7 < release_year8, release_year8 < release_year9, release_year9 < release_year10, release_year10 < release_year11, release_year11 < release_year12, release_year12 < release_year13,"]}
{"id": 750, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Greek heroes\", 12).\nHas_n_members(\"children of Jason\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Greek heroes\", n_members1), Has_n_members(\"children of Jason\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Greek heroes\", 12).\nHas_n_members(\"children of Jason\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Greek heroes\", n_members1), Has_n_members(\"children of Jason\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 751, "answer": true, "completion": ".decl Has_middle_name(Person:symbol, Middle_name:symbol)\nHas_middle_name(\"Tony Bennett\", \"Charles\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Tony Bennett\", \"Bennett\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Tony Bennett\", \"Anthony\").\n.decl Is_UFC_champion(Person:symbol)\nIs_UFC_champion(\"Dan Henderson\").\n.decl Answer()\nAnswer() :- Has_middle_name(\"Tony Bennett\", middle_name), Has_last_name(\"Tony Bennett\", last_name), Has_first_name(\"Tony Bennett\", first_name), Is_UFC_champion(person), middle_name == first_name.\n.output Answer\n\n", "completions": [".decl Has_middle_name(Person:symbol, Middle_name:symbol)\nHas_middle_name(\"Tony Bennett\", \"Charles\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Tony Bennett\", \"Bennett\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Tony Bennett\", \"Anthony\").\n.decl Is_UFC_champion(Person:symbol)\nIs_UFC_champion(\"Dan Henderson\").\n.decl Answer()\nAnswer() :- Has_middle_name(\"Tony Bennett\", middle_name), Has_last_name(\"Tony Bennett\", last_name), Has_first_name(\"Tony Bennett\", first_name), Is_UFC_champion(person), middle_name == first_name.\n.output Answer\n\n"]}
{"id": 752, "answer": false, "completion": ".decl Has_cream_at_top(Milk:symbol)\nHas_cream_at_top(\"store bought milk\").\n.decl Answer()\nAnswer() :- Has_cream_at_top(\"store bought milk\").\n.output Answer\n\n", "completions": [".decl Has_cream_at_top(Milk:symbol)\nHas_cream_at_top(\"store bought milk\").\n.decl Answer()\nAnswer() :- Has_cream_at_top(\"store bought milk\").\n.output Answer\n\n"]}
{"id": 753, "answer": true, "completion": ".decl Is_important(Element:symbol)\nIs_important(\"silicon\").\n.decl Is_in_state(Element:symbol, State:symbol)\nIs_in_state(\"silicon\", \"California\").\n.decl Answer()\nAnswer() :- Is_important(\"silicon\"), Is_in_state(\"silicon\", \"California\").\n.output Answer\n\n", "completions": [".decl Is_important(Element:symbol)\nIs_important(\"silicon\").\n.decl Is_in_state(Element:symbol, State:symbol)\nIs_in_state(\"silicon\", \"California\").\n.decl Answer()\nAnswer() :- Is_important(\"silicon\"), Is_in_state(\"silicon\", \"California\").\n.output Answer\n\n"]}
{"id": 754, "answer": false, "completion": ".decl Has_word(Torah:symbol, Word:symbol)\nHas_word(\"Torah\", \"word\").\n.decl Lives_in(Person:symbol, Town:symbol)\nLives_in(\"Bunkie Louisiana\", \"Bunkie Louisiana\").\n.decl Answer()\nAnswer() :- Has_word(\"Torah\", word), Lives_in(person, town), Lives_in(person, town).\n.output Answer\n\n", "completions": [".decl Has_word(Torah:symbol, Word:symbol)\nHas_word(\"Torah\", \"word\").\n.decl Lives_in(Person:symbol, Town:symbol)\nLives_in(\"Bunkie Louisiana\", \"Bunkie Louisiana\").\n.decl Answer()\nAnswer() :- Has_word(\"Torah\", word), Lives_in(person, town), Lives_in(person, town).\n.output Answer\n\n"]}
{"id": 755, "answer": false, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"celery\", 5).\nHas_calories(\"chocolate\", 500).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"person\", 100).\n.decl Answer()\nAnswer() :- Has_calories(\"celery\", calories), Has_weight(\"person\", weight), calories > weight.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"celery\", 5).\nHas_calories(\"chocolate\", 500).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"person\", 100).\n.decl Answer()\nAnswer() :- Has_calories(\"celery\", calories), Has_weight(\"person\", weight), calories > weight.\n.output Answer\n\n"]}
{"id": 756, "answer": true, "completion": ".decl Has_capacity(Device:symbol, Capacity:float)\nHas_capacity(\"USB device\", 500).\nHas_capacity(\"Netflix shows\", 10).\n.decl Answer()\nAnswer() :- Has_capacity(\"USB device\", capacity1), Has_capacity(\"Netflix shows\", capacity2), capacity1 >= capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Device:symbol, Capacity:float)\nHas_capacity(\"USB device\", 500).\nHas_capacity(\"Netflix shows\", 10).\n.decl Answer()\nAnswer() :- Has_capacity(\"USB device\", capacity1), Has_capacity(\"Netflix shows\", capacity2), capacity1 >= capacity2.\n.output Answer\n\n"]}
{"id": 757, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Arnold Schwarzenegger\", 200).\nHas_weight(\"adult Black rhinoceros\", 2000).\n.decl Answer()\nAnswer() :- Has_weight(\"Arnold Schwarzenegger\", weight1), Has_weight(\"adult Black rhinoceros\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Arnold Schwarzenegger\", 200).\nHas_weight(\"adult Black rhinoceros\", 2000).\n.decl Answer()\nAnswer() :- Has_weight(\"Arnold Schwarzenegger\", weight1), Has_weight(\"adult Black rhinoceros\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 758, "answer": false, "completion": ".decl Has_n_episodes(TV_show:symbol, N_episodes:float)\nHas_n_episodes(\"Star Wars: The Clone Wars\", 52).\nHas_n_episodes(\"Star Wars Rebels\", 100).\nHas_n_episodes(\"Star Wars Resistance\", 24).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Star Wars: The Clone Wars\", n_episodes1), Has_n_episodes(\"Star Wars Rebels\", n_episodes2), Has_n_episodes(\"Star Wars Resistance\", n_episodes3), n_episodes1 > n_episodes2, n_episodes1 > n_episodes3.\n.output Answer\n\n", "completions": [".decl Has_n_episodes(TV_show:symbol, N_episodes:float)\nHas_n_episodes(\"Star Wars: The Clone Wars\", 52).\nHas_n_episodes(\"Star Wars Rebels\", 100).\nHas_n_episodes(\"Star Wars Resistance\", 24).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Star Wars: The Clone Wars\", n_episodes1), Has_n_episodes(\"Star Wars Rebels\", n_episodes2), Has_n_episodes(\"Star Wars Resistance\", n_episodes3), n_episodes1 > n_episodes2, n_episodes1 > n_episodes3.\n.output Answer\n\n"]}
{"id": 759, "answer": true, "completion": ".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Jonas Salk\", \"polio\").\nHas_disease(\"Albert Sabin\", \"polio\").\n.decl Has_medicine(Person:symbol, Medicine:symbol)\nHas_medicine(\"Jonas Salk\", \"polio medicine\").\nHas_medicine(\"Albert Sabin\", \"polio vaccine\").\n.decl Answer()\nAnswer() :- Has_disease(\"Jonas Salk\", disease), Has_medicine(\"Albert Sabin\", medicine), medicine = \"polio vaccine\".\n.output Answer\n\n", "completions": [".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Jonas Salk\", \"polio\").\nHas_disease(\"Albert Sabin\", \"polio\").\n.decl Has_medicine(Person:symbol, Medicine:symbol)\nHas_medicine(\"Jonas Salk\", \"polio medicine\").\nHas_medicine(\"Albert Sabin\", \"polio vaccine\").\n.decl Answer()\nAnswer() :- Has_disease(\"Jonas Salk\", disease), Has_medicine(\"Albert Sabin\", medicine), medicine = \"polio vaccine\".\n.output Answer\n\n"]}
{"id": 760, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"vegan\", \"honey\").\n.decl Answer()\nAnswer() :- Eats(\"vegan\", food).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"vegan\", \"honey\").\n.decl Answer()\nAnswer() :- Eats(\"vegan\", food).\n.output Answer\n\n"]}
{"id": 761, "answer": true, "completion": ".decl Has_annual_production(Port:symbol, Annual_production:float)\nHas_annual_production(\"Port of Baltimore\", 100).\n.decl Has_annual_production(Port:symbol, Annual_production:float)\nHas_annual_production(\"Port of Baltimore\", 100).\n.decl Answer()\nAnswer() :- Has_annual_production(\"Port of Baltimore\", annual_production), Has_annual_production(\"Port of Baltimore\", annual_production2), annual_production > annual_production2.\n.output Answer\n\n", "completions": [".decl Has_annual_production(Port:symbol, Annual_production:float)\nHas_annual_production(\"Port of Baltimore\", 100).\n.decl Has_annual_production(Port:symbol, Annual_production:float)\nHas_annual_production(\"Port of Baltimore\", 100).\n.decl Answer()\nAnswer() :- Has_annual_production(\"Port of Baltimore\", annual_production), Has_annual_production(\"Port of Baltimore\", annual_production2), annual_production > annual_production2.\n.output Answer\n\n"]}
{"id": 762, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"biologist Rachel Carson's birth\", \"1907\").\nHappens_in_time(\"biologist Rachel Carson's death\", \"1964\").\nHappens_in_time(\"biologist Rachel Carson's flight to the moon\", \"1969\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"biologist Rachel Carson's birth\", \"Cincinnati\").\nHappens_in_location(\"biologist Rachel Carson's death\", \"Washington\").\nHappens_in_location(\"biologist Rachel Carson's flight to the moon\", \"the moon\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"biologist Rachel Carson's birth\", time1), Happens_in_time(\"biologist Rachel Carson's death\", time2), Happens_in_time(\"biologist Rachel Carson's flight to the moon\", time3), time1 < time3, time2 > time3.\nAnswer() :- Happens_in_location(\"biologist Rachel Carson's birth\", location1), Happens_in_location(\"biologist Rachel Carson's death\", location2), Happens_in_location(\"biologist Rachel Carson's flight to the moon\", location3), location1 != location3, location2 != location3.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"biologist Rachel Carson's birth\", \"1907\").\nHappens_in_time(\"biologist Rachel Carson's death\", \"1964\").\nHappens_in_time(\"biologist Rachel Carson's flight to the moon\", \"1969\").\n.decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"biologist Rachel Carson's birth\", \"Cincinnati\").\nHappens_in_location(\"biologist Rachel Carson's death\", \"Washington\").\nHappens_in_location(\"biologist Rachel Carson's flight to the moon\", \"the moon\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"biologist Rachel Carson's birth\", time1), Happens_in_time(\"biologist Rachel Carson's death\", time2), Happens_in_time(\"biologist Rachel Carson's flight to the moon\", time3), time1 < time3, time2 > time3.\nAnswer() :- Happens_in_location(\"biologist Rachel Carson's birth\", location1), Happens_in_location(\"biologist Rachel Carson's death\", location2), Happens_in_location(\"biologist Rachel Carson's flight to the moon\", location3), location1 != location3, location2 != location3.\n.output Answer\n\n"]}
{"id": 763, "answer": false, "completion": ".decl Asked(Person_A:symbol, Person_B:symbol)\nAsked(\"J. D. Salinger\", \"his father\").\n.decl Answer()\nAnswer() :- Asked(\"J. D. Salinger\", person_b), Asked(person_b, \"his father\").\n.output Answer\n\n", "completions": [".decl Asked(Person_A:symbol, Person_B:symbol)\nAsked(\"J. D. Salinger\", \"his father\").\n.decl Answer()\nAnswer() :- Asked(\"J. D. Salinger\", person_b), Asked(person_b, \"his father\").\n.output Answer\n\n"]}
{"id": 764, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"ancient Olympics crown\", 0.5).\nHas_height(\"tonsure\", 0.1).\n.decl Answer()\nAnswer() :- Has_height(\"ancient Olympics crown\", height1), Has_height(\"tonsure\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"ancient Olympics crown\", 0.5).\nHas_height(\"tonsure\", 0.1).\n.decl Answer()\nAnswer() :- Has_height(\"ancient Olympics crown\", height1), Has_height(\"tonsure\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 765, "answer": false, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"ocelot\", \"bee hummingbird\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bee hummingbird\", 1).\n.decl Answer()\nAnswer() :- Eats(\"ocelot\", \"bee hummingbird\"), Has_n_members(\"bee hummingbird\", n_members), n_members > 1.\n.output Answer\n\n", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"ocelot\", \"bee hummingbird\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bee hummingbird\", 1).\n.decl Answer()\nAnswer() :- Eats(\"ocelot\", \"bee hummingbird\"), Has_n_members(\"bee hummingbird\", n_members), n_members > 1.\n.output Answer\n\n"]}
{"id": 766, "answer": false, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"koala\", \"eucalyptus\").\nEats(\"koala\", \"meat\").\n.decl Answer()\nAnswer() :- Eats(\"koala\", food), Eats(\"koala\", food2), food != food2.\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"koala\", \"eucalyptus\").\nEats(\"koala\", \"meat\").\n.decl Answer()\nAnswer() :- Eats(\"koala\", food), Eats(\"koala\", food2), food != food2.\n.output Answer\n\n"]}
{"id": 767, "answer": true, "completion": ".decl Has_fetlock(Object:symbol)\nHas_fetlock(\"horseradish\").\n.decl Answer()\nAnswer() :- Has_fetlock(\"horseradish\").\n.output Answer\n\n", "completions": [".decl Has_fetlock(Object:symbol)\nHas_fetlock(\"horseradish\").\n.decl Answer()\nAnswer() :- Has_fetlock(\"horseradish\").\n.output Answer\n\n"]}
{"id": 768, "answer": false, "completion": ".decl Is_absolute(Absolute:symbol)\nIs_absolute(\"no\").\n.decl Answer()\nAnswer() :- Is_absolute(\"no\").\n.output Answer\n\n", "completions": [".decl Is_absolute(Absolute:symbol)\nIs_absolute(\"no\").\n.decl Answer()\nAnswer() :- Is_absolute(\"no\").\n.output Answer\n\n"]}
{"id": 769, "answer": true, "completion": ".decl Plays(Band:symbol, Genre:symbol)\nPlays(\"Rammstein\", \"hard rock\").\nPlays(\"Rammstein\", \"alternative\").\nPlays(\"Rammstein\", \"industrial\").\nPlays(\"Rammstein\", \"electronic\").\nPlays(\"Rammstein\", \"gothic\").\nPlays(\"Rammstein\", \"dance\").\nPlays(\"Rammstein\", \"rap\").\nPlays(\"Rammstein\", \"metal\").\nPlays(\"Rammstein\", \"rock\").\nPlays(\"Rammstein\", \"trance\").\nPlays(\"Rammstein\", \"techno\").\nPlays(\"Rammstein\", \"industrial\").\nPlays(\"Rammstein\", \"hardcore\").\nPlays(\"Rammstein\", \"grunge\").\nPlays(\"Rammstein\", \"punk\").\nPlays(\"Rammstein\", \"alternative rock\").\nPlays(\"Rammstein\", \"nu metal\").\nPlays(\"Rammstein\", \"dubstep\").\nPlays(\"Rammstein\", \"dance-pop\").\nPlays(\"Rammstein\", \"dance-rock\").\nPlays(\"Rammstein\", \"dance-trance\").\nPlays(\"Rammstein\", \"disco\").\nPlays(\"Rammstein\", \"europop\").\nPlays(\"Rammstein\", \"eurodance\").\nPlays(\"Rammstein\", \"euro-house\").\nPlays(\"Rammstein\", \"euro-techno\").\nPlays(\"Rammstein\", \"funk\").\nPlays(\"Rammstein\", \"funk rock\").\nPlays(\"Rammstein\", \"nu-metal\").\nPlays(\"Rammstein\", \"pop\").\nPlays(\"Rammstein\", \"pop-rock\").\nPlays(\"Rammstein\", \"pop-rap\").\nPlays(\"Rammstein\", \"pop-metal\").\nPlays(\"Rammstein\", \"post-grunge\").\nPlays(\"Rammstein\", \"post-punk\").\nPlays(\"Rammstein\", \"post-rock\").\nPlays(\"Rammstein\", \"power pop\").\nPlays(\"Rammstein\", \"progressive rock\").\nPlays(\"Rammstein\", \"progressive trance\").\nPlays(\"Rammstein\", \"psychedelic rock\").\nPlays(\"Rammstein\", \"psychedelic trance\").\nPlays(\"Rammstein\", \"punk rock\").\nPlays(\"Rammstein\", \"rap metal\").\nPlays(\"Rammstein\", \"rap rock\").\nPlays(\"Rammstein\", \"rock and roll\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"", "completions": [".decl Plays(Band:symbol, Genre:symbol)\nPlays(\"Rammstein\", \"hard rock\").\nPlays(\"Rammstein\", \"alternative\").\nPlays(\"Rammstein\", \"industrial\").\nPlays(\"Rammstein\", \"electronic\").\nPlays(\"Rammstein\", \"gothic\").\nPlays(\"Rammstein\", \"dance\").\nPlays(\"Rammstein\", \"rap\").\nPlays(\"Rammstein\", \"metal\").\nPlays(\"Rammstein\", \"rock\").\nPlays(\"Rammstein\", \"trance\").\nPlays(\"Rammstein\", \"techno\").\nPlays(\"Rammstein\", \"industrial\").\nPlays(\"Rammstein\", \"hardcore\").\nPlays(\"Rammstein\", \"grunge\").\nPlays(\"Rammstein\", \"punk\").\nPlays(\"Rammstein\", \"alternative rock\").\nPlays(\"Rammstein\", \"nu metal\").\nPlays(\"Rammstein\", \"dubstep\").\nPlays(\"Rammstein\", \"dance-pop\").\nPlays(\"Rammstein\", \"dance-rock\").\nPlays(\"Rammstein\", \"dance-trance\").\nPlays(\"Rammstein\", \"disco\").\nPlays(\"Rammstein\", \"europop\").\nPlays(\"Rammstein\", \"eurodance\").\nPlays(\"Rammstein\", \"euro-house\").\nPlays(\"Rammstein\", \"euro-techno\").\nPlays(\"Rammstein\", \"funk\").\nPlays(\"Rammstein\", \"funk rock\").\nPlays(\"Rammstein\", \"nu-metal\").\nPlays(\"Rammstein\", \"pop\").\nPlays(\"Rammstein\", \"pop-rock\").\nPlays(\"Rammstein\", \"pop-rap\").\nPlays(\"Rammstein\", \"pop-metal\").\nPlays(\"Rammstein\", \"post-grunge\").\nPlays(\"Rammstein\", \"post-punk\").\nPlays(\"Rammstein\", \"post-rock\").\nPlays(\"Rammstein\", \"power pop\").\nPlays(\"Rammstein\", \"progressive rock\").\nPlays(\"Rammstein\", \"progressive trance\").\nPlays(\"Rammstein\", \"psychedelic rock\").\nPlays(\"Rammstein\", \"psychedelic trance\").\nPlays(\"Rammstein\", \"punk rock\").\nPlays(\"Rammstein\", \"rap metal\").\nPlays(\"Rammstein\", \"rap rock\").\nPlays(\"Rammstein\", \"rock and roll\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \"rock and roll music\").\nPlays(\"Rammstein\", \""]}
{"id": 770, "answer": true, "completion": ".decl Has_children(Person:symbol, Children:symbol)\nHas_children(\"Maya Angelou\", \"Ananya\").\nHas_children(\"Maya Angelou\", \"Mariel\").\nHas_children(\"Maya Angelou\", \"Malcolm\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Maya Angelou\", \"poet\").\nHas_profession(\"Maya Angelou\", \"author\").\nHas_profession(\"Maya Angelou\", \"performer\").\n.decl Answer()\nAnswer() :- Has_children(\"Maya Angelou\", children), Has_profession(children, profession).\n.output Answer\n\n", "completions": [".decl Has_children(Person:symbol, Children:symbol)\nHas_children(\"Maya Angelou\", \"Ananya\").\nHas_children(\"Maya Angelou\", \"Mariel\").\nHas_children(\"Maya Angelou\", \"Malcolm\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Maya Angelou\", \"poet\").\nHas_profession(\"Maya Angelou\", \"author\").\nHas_profession(\"Maya Angelou\", \"performer\").\n.decl Answer()\nAnswer() :- Has_children(\"Maya Angelou\", children), Has_profession(children, profession).\n.output Answer\n\n"]}
{"id": 771, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Alfa Romeo\", 0.5).\nHas_volume(\"barn\", 1.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Alfa Romeo\", volume1), Has_volume(\"barn\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Alfa Romeo\", 0.5).\nHas_volume(\"barn\", 1.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Alfa Romeo\", volume1), Has_volume(\"barn\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 772, "answer": true, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"James Watson\", \"Africans are inferior to Europeans\").\n.decl Answer()\nAnswer() :- Believes(\"James Watson\", belief).\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"James Watson\", \"Africans are inferior to Europeans\").\n.decl Answer()\nAnswer() :- Believes(\"James Watson\", belief).\n.output Answer\n\n"]}
{"id": 773, "answer": false, "completion": ".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"P. G. Wodehouse\", 2).\n.decl Answer()\nAnswer() :- Has_grade(\"P. G. Wodehouse\", grade), grade > 2.\n.output Answer\n\n", "completions": [".decl Has_grade(Person:symbol, Grade:float)\nHas_grade(\"P. G. Wodehouse\", 2).\n.decl Answer()\nAnswer() :- Has_grade(\"P. G. Wodehouse\", grade), grade > 2.\n.output Answer\n\n"]}
{"id": 774, "answer": false, "completion": ".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Richard Wagner\", \"Leipzig\").\n.decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Adolf Hitler\", \"Braunau am Inn\").\n.decl Answer()\nAnswer() :- Was_born(\"Richard Wagner\", place1), Was_born(\"Adolf Hitler\", place2), place1 = place2.\n.output Answer\n\n", "completions": [".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Richard Wagner\", \"Leipzig\").\n.decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Adolf Hitler\", \"Braunau am Inn\").\n.decl Answer()\nAnswer() :- Was_born(\"Richard Wagner\", place1), Was_born(\"Adolf Hitler\", place2), place1 = place2.\n.output Answer\n\n"]}
{"id": 775, "answer": false, "completion": ".decl Has_saint(Church:symbol, Saint:symbol)\nHas_saint(\"Ukrainian Greek Catholic Church\", \"Alexander Nevsky\").\n.decl Answer()\nAnswer() :- Has_saint(\"Ukrainian Greek Catholic Church\", saint).\n.output Answer\n\n", "completions": [".decl Has_saint(Church:symbol, Saint:symbol)\nHas_saint(\"Ukrainian Greek Catholic Church\", \"Alexander Nevsky\").\n.decl Answer()\nAnswer() :- Has_saint(\"Ukrainian Greek Catholic Church\", saint).\n.output Answer\n\n"]}
{"id": 776, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Rock in Rio\", \"June\").\nHappens_in_time(\"Stanley Cup Finals\", \"June\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Stanley Cup Finals\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Stanley Cup Finals\", month), Happens_every_n_months(\"Rock in Rio\", n_months), Happens_every_n_months(\"Stanley Cup Finals\", n_months), month != \"June\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Rock in Rio\", \"June\").\nHappens_in_time(\"Stanley Cup Finals\", \"June\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Stanley Cup Finals\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Stanley Cup Finals\", month), Happens_every_n_months(\"Rock in Rio\", n_months), Happens_every_n_months(\"Stanley Cup Finals\", n_months), month != \"June\".\n.output Answer\n\n"]}
{"id": 777, "answer": false, "completion": ".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Christopher Columbus\", \"Spain\").\n.decl Has_home_country(Person:symbol, Country:symbol)\nHas_home_country(\"Christopher Columbus\", \"Italy\").\n.decl Answer()\nAnswer() :- Has_country(\"Christopher Columbus\", country), Has_home_country(\"Christopher Columbus\", home_country), country != home_country.\n.output Answer\n\n", "completions": [".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Christopher Columbus\", \"Spain\").\n.decl Has_home_country(Person:symbol, Country:symbol)\nHas_home_country(\"Christopher Columbus\", \"Italy\").\n.decl Answer()\nAnswer() :- Has_country(\"Christopher Columbus\", country), Has_home_country(\"Christopher Columbus\", home_country), country != home_country.\n.output Answer\n\n"]}
{"id": 778, "answer": true, "completion": ".decl Has_digit(Number:symbol, Digit:symbol)\nHas_digit(\"3.14159\", \"3\").\nHas_digit(\"3.14159\", \"1\").\nHas_digit(\"3.14159\", \"4\").\nHas_digit(\"3.14159\", \"5\").\nHas_digit(\"3.14159\", \"9\").\nHas_digit(\"3.14159\", \"2\").\n.decl Answer()\nAnswer() :- Has_digit(\"3.14159\", digit1), Has_digit(\"3.14159\", digit2), Has_digit(\"3.14159\", digit3), Has_digit(\"3.14159\", digit4), Has_digit(\"3.14159\", digit5), Has_digit(\"3.14159\", digit6), digit1 != digit2, digit1 != digit3, digit1 != digit4, digit1 != digit5, digit1 != digit6, digit2 != digit3, digit2 != digit4, digit2 != digit5, digit2 != digit6, digit3 != digit4, digit3 != digit5, digit3 != digit6, digit4 != digit5, digit4 != digit6, digit5 != digit6.\n.output Answer\n\n", "completions": [".decl Has_digit(Number:symbol, Digit:symbol)\nHas_digit(\"3.14159\", \"3\").\nHas_digit(\"3.14159\", \"1\").\nHas_digit(\"3.14159\", \"4\").\nHas_digit(\"3.14159\", \"5\").\nHas_digit(\"3.14159\", \"9\").\nHas_digit(\"3.14159\", \"2\").\n.decl Answer()\nAnswer() :- Has_digit(\"3.14159\", digit1), Has_digit(\"3.14159\", digit2), Has_digit(\"3.14159\", digit3), Has_digit(\"3.14159\", digit4), Has_digit(\"3.14159\", digit5), Has_digit(\"3.14159\", digit6), digit1 != digit2, digit1 != digit3, digit1 != digit4, digit1 != digit5, digit1 != digit6, digit2 != digit3, digit2 != digit4, digit2 != digit5, digit2 != digit6, digit3 != digit4, digit3 != digit5, digit3 != digit6, digit4 != digit5, digit4 != digit6, digit5 != digit6.\n.output Answer\n\n"]}
{"id": 779, "answer": false, "completion": ".decl Created(Creator:symbol, Character:symbol)\nCreated(\"Stan Lee\", \"Doctor Strange\").\nCreated(\"Steve Ditko\", \"Doctor Strange\").\nCreated(\"Stan Lee\", \"Batman\").\nCreated(\"Bob Kane\", \"Batman\").\n.decl Answer()\nAnswer() :- Created(\"Stan Lee\", character), Created(\"Bob Kane\", character).\n.output Answer\n\n", "completions": [".decl Created(Creator:symbol, Character:symbol)\nCreated(\"Stan Lee\", \"Doctor Strange\").\nCreated(\"Steve Ditko\", \"Doctor Strange\").\nCreated(\"Stan Lee\", \"Batman\").\nCreated(\"Bob Kane\", \"Batman\").\n.decl Answer()\nAnswer() :- Created(\"Stan Lee\", character), Created(\"Bob Kane\", character).\n.output Answer\n\n"]}
{"id": 780, "answer": false, "completion": ".decl Dangerous_to_humans(Animal:symbol)\nDangerous_to_humans(\"hippo\").\nDangerous_to_humans(\"tiger\").\nDangerous_to_humans(\"snake\").\n.decl Answer()\nAnswer() :- Dangerous_to_humans(\"hippo\").\nAnswer() :- Dangerous_to_humans(\"tiger\").\nAnswer() :- Dangerous_to_humans(\"snake\").\n.output Answer\n\n", "completions": [".decl Dangerous_to_humans(Animal:symbol)\nDangerous_to_humans(\"hippo\").\nDangerous_to_humans(\"tiger\").\nDangerous_to_humans(\"snake\").\n.decl Answer()\nAnswer() :- Dangerous_to_humans(\"hippo\").\nAnswer() :- Dangerous_to_humans(\"tiger\").\nAnswer() :- Dangerous_to_humans(\"snake\").\n.output Answer\n\n"]}
{"id": 781, "answer": false, "completion": ".decl Has_origin(Sport:symbol, Origin:symbol)\nHas_origin(\"Mixed martial arts\", \"Roman Colosseum\").\nHas_origin(\"Roman Colosseum games\", \"Roman Colosseum\").\n.decl Answer()\nAnswer() :- Has_origin(\"Mixed martial arts\", origin), Has_origin(\"Roman Colosseum games\", origin), origin != \"Roman Colosseum\".\n.output Answer\n\n", "completions": [".decl Has_origin(Sport:symbol, Origin:symbol)\nHas_origin(\"Mixed martial arts\", \"Roman Colosseum\").\nHas_origin(\"Roman Colosseum games\", \"Roman Colosseum\").\n.decl Answer()\nAnswer() :- Has_origin(\"Mixed martial arts\", origin), Has_origin(\"Roman Colosseum games\", origin), origin != \"Roman Colosseum\".\n.output Answer\n\n"]}
{"id": 782, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children\", 1000000).\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children\", 1000000).\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New York\", 100000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"school children in New"]}
{"id": 783, "answer": false, "completion": ".decl Has_topic(Event:symbol, Topic:symbol)\nHas_topic(\"post traumatic stress disorder\", \"mental health\").\nHas_topic(\"post traumatic stress disorder\", \"stress\").\nHas_topic(\"post traumatic stress disorder\", \"trauma\").\nHas_topic(\"Ariana Grande\", \"pop music\").\n.decl Answer()\nAnswer() :- Has_topic(\"post traumatic stress disorder\", topic), Has_topic(\"Ariana Grande\", topic).\n.output Answer\n\n", "completions": [".decl Has_topic(Event:symbol, Topic:symbol)\nHas_topic(\"post traumatic stress disorder\", \"mental health\").\nHas_topic(\"post traumatic stress disorder\", \"stress\").\nHas_topic(\"post traumatic stress disorder\", \"trauma\").\nHas_topic(\"Ariana Grande\", \"pop music\").\n.decl Answer()\nAnswer() :- Has_topic(\"post traumatic stress disorder\", topic), Has_topic(\"Ariana Grande\", topic).\n.output Answer\n\n"]}
{"id": 784, "answer": false, "completion": ".decl Near(Location_A:symbol, Location_B:symbol)\nNear(\"Tokyo\", \"Osaka\").\nNear(\"Osaka\", \"Kyoto\").\nNear(\"Kyoto\", \"Hiroshima\").\nNear(\"Hiroshima\", \"Shikoku\").\nNear(\"Shikoku\", \"Tokushima\").\nNear(\"Tokushima\", \"Kochi\").\nNear(\"Kochi\", \"Miyazaki\").\nNear(\"Miyazaki\", \"Naha\").\nNear(\"Naha\", \"Okinawa\").\nNear(\"Okinawa\", \"Naha\").\n.decl Answer()\nAnswer() :- Near(\"Tokyo\", location1), Near(location1, location2), Near(location2, location3), Near(location3, location4), Near(location4, location5), Near(location5, location6), Near(location6, location7), Near(location7, location8), Near(location8, location9), Near(location9, location10), Near(location10, location11), Near(location11, location12), Near(location12, location13), Near(location13, location14), Near(location14, location15), Near(location15, location16), Near(location16, location17), Near(location17, location18), Near(location18, location19), Near(location19, location20), Near(location20, location21), Near(location21, location22), Near(location22, location23), Near(location23, location24), Near(location24, location25), Near(location25, location26), Near(location26, location27), Near(location27, location28), Near(location28, location29), Near(location29, location30), Near(location30, location31), Near(location31, location32), Near(location32, location33), Near(location33, location34), Near(location34, location35), Near(location35, location36), Near(location36, location37), Near(location37, location38), Near(location38, location39), Near(location39, location40), Near(location40, location41), Near(location41, location42), Near(location42, location43), Near(location43, location44), Near(location44, location45), Near(location45, location46), Near(location46, location47), Near(location47, location48), Near(location48, location49), Near(location49, location50), Near(location50, location51), Near(location51, location52), Near(location52, location53), Near(location53, location54), Near(location54, location55), Near(location55, location56), Near(location56, location57), Near(location57, location58), Near(location58, location59), Near(location59, location60), Near(location60, location61), Near(location61, location62), Near(location62, location63), Near(location63, location64), Near(location64, location65), Near(location65, location66), Near(location66, location67), Near(location67, location68), Near(location68, location69), Near(location69, location70), Near(location70, location71), Near(location71, location72), Near(location72, location73), Near(location73, location74), Near(location74, location75), Near(location75, location76), Near(location76, location77), Near(location77, location78), Near(location78, location79), Near(location79, location80), Near(location80, location81), Near(location81, location82), Near(location", "completions": [".decl Near(Location_A:symbol, Location_B:symbol)\nNear(\"Tokyo\", \"Osaka\").\nNear(\"Osaka\", \"Kyoto\").\nNear(\"Kyoto\", \"Hiroshima\").\nNear(\"Hiroshima\", \"Shikoku\").\nNear(\"Shikoku\", \"Tokushima\").\nNear(\"Tokushima\", \"Kochi\").\nNear(\"Kochi\", \"Miyazaki\").\nNear(\"Miyazaki\", \"Naha\").\nNear(\"Naha\", \"Okinawa\").\nNear(\"Okinawa\", \"Naha\").\n.decl Answer()\nAnswer() :- Near(\"Tokyo\", location1), Near(location1, location2), Near(location2, location3), Near(location3, location4), Near(location4, location5), Near(location5, location6), Near(location6, location7), Near(location7, location8), Near(location8, location9), Near(location9, location10), Near(location10, location11), Near(location11, location12), Near(location12, location13), Near(location13, location14), Near(location14, location15), Near(location15, location16), Near(location16, location17), Near(location17, location18), Near(location18, location19), Near(location19, location20), Near(location20, location21), Near(location21, location22), Near(location22, location23), Near(location23, location24), Near(location24, location25), Near(location25, location26), Near(location26, location27), Near(location27, location28), Near(location28, location29), Near(location29, location30), Near(location30, location31), Near(location31, location32), Near(location32, location33), Near(location33, location34), Near(location34, location35), Near(location35, location36), Near(location36, location37), Near(location37, location38), Near(location38, location39), Near(location39, location40), Near(location40, location41), Near(location41, location42), Near(location42, location43), Near(location43, location44), Near(location44, location45), Near(location45, location46), Near(location46, location47), Near(location47, location48), Near(location48, location49), Near(location49, location50), Near(location50, location51), Near(location51, location52), Near(location52, location53), Near(location53, location54), Near(location54, location55), Near(location55, location56), Near(location56, location57), Near(location57, location58), Near(location58, location59), Near(location59, location60), Near(location60, location61), Near(location61, location62), Near(location62, location63), Near(location63, location64), Near(location64, location65), Near(location65, location66), Near(location66, location67), Near(location67, location68), Near(location68, location69), Near(location69, location70), Near(location70, location71), Near(location71, location72), Near(location72, location73), Near(location73, location74), Near(location74, location75), Near(location75, location76), Near(location76, location77), Near(location77, location78), Near(location78, location79), Near(location79, location80), Near(location80, location81), Near(location81, location82), Near(location"]}
{"id": 785, "answer": true, "completion": ".decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Gettysburg Battlefield\", 100000).\n.decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Superbowl\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Superbowl\", n_visitors1), Has_n_visitors(\"Gettysburg Battlefield\", n_visitors2), n_visitors1 > n_visitors2.\n.output Answer\n\n", "completions": [".decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Gettysburg Battlefield\", 100000).\n.decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Superbowl\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Superbowl\", n_visitors1), Has_n_visitors(\"Gettysburg Battlefield\", n_visitors2), n_visitors1 > n_visitors2.\n.output Answer\n\n"]}
{"id": 786, "answer": true, "completion": ".decl Likes(Person:symbol, Team:symbol)\nLikes(\"Doctor Strange\", \"Pittsburgh Steelers\").\n.decl Answer()\nAnswer() :- Likes(\"Doctor Strange\", \"Pittsburgh Steelers\").\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Team:symbol)\nLikes(\"Doctor Strange\", \"Pittsburgh Steelers\").\n.decl Answer()\nAnswer() :- Likes(\"Doctor Strange\", \"Pittsburgh Steelers\").\n.output Answer\n\n"]}
{"id": 787, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Yeti\", \"Abominable Snowman\").\nHas_name(\"Yeti\", \"Bigfoot\").\n.decl Has_theme_park(Object:symbol, Theme_park:symbol)\nHas_theme_park(\"Yeti\", \"Disneyland\").\nHas_theme_park(\"Yeti\", \"Disneyworld\").\n.decl Answer()\nAnswer() :- Has_name(\"Yeti\", name), Has_theme_park(name, theme_park).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Yeti\", \"Abominable Snowman\").\nHas_name(\"Yeti\", \"Bigfoot\").\n.decl Has_theme_park(Object:symbol, Theme_park:symbol)\nHas_theme_park(\"Yeti\", \"Disneyland\").\nHas_theme_park(\"Yeti\", \"Disneyworld\").\n.decl Answer()\nAnswer() :- Has_name(\"Yeti\", name), Has_theme_park(name, theme_park).\n.output Answer\n\n"]}
{"id": 788, "answer": true, "completion": ".decl Has_leaves(Tree:symbol, Season:symbol)\nHas_leaves(\"oak tree\", \"winter\").\n.decl Answer()\nAnswer() :- Has_leaves(\"oak tree\", season), season != \"winter\".\n.output Answer\n\n", "completions": [".decl Has_leaves(Tree:symbol, Season:symbol)\nHas_leaves(\"oak tree\", \"winter\").\n.decl Answer()\nAnswer() :- Has_leaves(\"oak tree\", season), season != \"winter\".\n.output Answer\n\n"]}
{"id": 789, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eddie Murphy\", 10).\n.decl Has_phone_number(Person:symbol, Phone_number:float)\nHas_phone_number(\"Eddie Murphy\", 911).\n.decl Answer()\nAnswer() :- Has_age(\"Eddie Murphy\", age), Has_phone_number(\"Eddie Murphy\", phone_number), age < phone_number.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eddie Murphy\", 10).\n.decl Has_phone_number(Person:symbol, Phone_number:float)\nHas_phone_number(\"Eddie Murphy\", 911).\n.decl Answer()\nAnswer() :- Has_age(\"Eddie Murphy\", age), Has_phone_number(\"Eddie Murphy\", phone_number), age < phone_number.\n.output Answer\n\n"]}
{"id": 790, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bananas\", 0.5).\nHas_price(\"tostones\", 0.1).\n.decl Answer()\nAnswer() :- Has_price(\"bananas\", price1), Has_price(\"tostones\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bananas\", 0.5).\nHas_price(\"tostones\", 0.1).\n.decl Answer()\nAnswer() :- Has_price(\"bananas\", price1), Has_price(\"tostones\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 791, "answer": true, "completion": ".decl Has_ethnicity(Bee:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Africanized bee\", \"African\").\nHas_ethnicity(\"European bee\", \"European\").\n.decl Answer()\nAnswer() :- Has_ethnicity(\"Africanized bee\", ethnicity), Has_ethnicity(\"European bee\", ethnicity).\n.output Answer\n\n", "completions": [".decl Has_ethnicity(Bee:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Africanized bee\", \"African\").\nHas_ethnicity(\"European bee\", \"European\").\n.decl Answer()\nAnswer() :- Has_ethnicity(\"Africanized bee\", ethnicity), Has_ethnicity(\"European bee\", ethnicity).\n.output Answer\n\n"]}
{"id": 792, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Eddie Hall\", 400).\nHas_weight(\"cheeseburger\", 1000).\n.decl Answer()\nAnswer() :- Has_weight(\"Eddie Hall\", weight1), Has_weight(\"cheeseburger\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Eddie Hall\", 400).\nHas_weight(\"cheeseburger\", 1000).\n.decl Answer()\nAnswer() :- Has_weight(\"Eddie Hall\", weight1), Has_weight(\"cheeseburger\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 793, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"ocean sunfish\", 100).\nHas_volume(\"goldfish\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"ocean sunfish\", volume1), Has_volume(\"goldfish\", volume2), volume1 > volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"ocean sunfish\", 100).\nHas_volume(\"goldfish\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"ocean sunfish\", volume1), Has_volume(\"goldfish\", volume2), volume1 > volume2.\n.output Answer\n\n"]}
{"id": 794, "answer": false, "completion": ".decl Exports(Country:symbol, Product:symbol)\nExports(\"United States\", \"Fair Trade products\").\n.decl Imports(Country:symbol, Product:symbol)\nImports(\"United States\", \"Fair Trade products\").\n.decl Answer()\nAnswer() :- Exports(\"United States\", product), Imports(\"United States\", product).\n.output Answer\n\n", "completions": [".decl Exports(Country:symbol, Product:symbol)\nExports(\"United States\", \"Fair Trade products\").\n.decl Imports(Country:symbol, Product:symbol)\nImports(\"United States\", \"Fair Trade products\").\n.decl Answer()\nAnswer() :- Exports(\"United States\", product), Imports(\"United States\", product).\n.output Answer\n\n"]}
{"id": 795, "answer": true, "completion": ".decl Has_field(Field:symbol, Object:symbol)\nHas_field(\"Biochemistry\", \"gluons\").\n.decl Answer()\nAnswer() :- Has_field(\"Biochemistry\", field), Has_field(field, object).\n.output Answer\n\n", "completions": [".decl Has_field(Field:symbol, Object:symbol)\nHas_field(\"Biochemistry\", \"gluons\").\n.decl Answer()\nAnswer() :- Has_field(\"Biochemistry\", field), Has_field(field, object).\n.output Answer\n\n"]}
{"id": 796, "answer": true, "completion": ".decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"Phobos\", 0.00071).\nHas_gravity(\"Earth\", 9.81).\n.decl Answer()\nAnswer() :- Has_gravity(\"Phobos\", gravity1), Has_gravity(\"Earth\", gravity2), gravity1 > gravity2.\n.output Answer\n\n", "completions": [".decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"Phobos\", 0.00071).\nHas_gravity(\"Earth\", 9.81).\n.decl Answer()\nAnswer() :- Has_gravity(\"Phobos\", gravity1), Has_gravity(\"Earth\", gravity2), gravity1 > gravity2.\n.output Answer\n\n"]}
{"id": 797, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Star Trek: The Next Generation\", \"history of the world\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Star Trek: The Next Generation\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Star Trek: The Next Generation\", \"history of the world\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Star Trek: The Next Generation\", time).\n.output Answer\n\n"]}
{"id": 798, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Darth Vader\", \"Anakin Skywalker\").\nHas_name(\"Darth Vader\", \"Darth Vader\").\n.decl Has_appearance_in_film(Person:symbol, Film:symbol)\nHas_appearance_in_film(\"Anakin Skywalker\", \"Star Wars\").\nHas_appearance_in_film(\"Darth Vader\", \"Star Wars\").\n.decl Answer()\nAnswer() :- Has_name(\"Darth Vader\", name), Has_appearance_in_film(person, film), name = film.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Darth Vader\", \"Anakin Skywalker\").\nHas_name(\"Darth Vader\", \"Darth Vader\").\n.decl Has_appearance_in_film(Person:symbol, Film:symbol)\nHas_appearance_in_film(\"Anakin Skywalker\", \"Star Wars\").\nHas_appearance_in_film(\"Darth Vader\", \"Star Wars\").\n.decl Answer()\nAnswer() :- Has_name(\"Darth Vader\", name), Has_appearance_in_film(person, film), name = film.\n.output Answer\n\n"]}
{"id": 799, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"laptop\", 1000).\nHas_price(\"fair trade laptop\", 2000).\n.decl Answer()\nAnswer() :- Has_price(\"laptop\", price1), Has_price(\"fair trade laptop\", price2), price1 < price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"laptop\", 1000).\nHas_price(\"fair trade laptop\", 2000).\n.decl Answer()\nAnswer() :- Has_price(\"laptop\", price1), Has_price(\"fair trade laptop\", price2), price1 < price2.\n.output Answer\n\n"]}
{"id": 800, "answer": false, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Brooke Shields\", \"Princeton University\").\nGraduates(\"Brooke Shields\", \"University of Pennsylvania\").\nGraduates(\"Brooke Shields\", \"Columbia University\").\nGraduates(\"Brooke Shields\", \"Harvard University\").\nGraduates(\"Brooke Shields\", \"Stanford University\").\nGraduates(\"Brooke Shields\", \"University of California, Berkeley\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Brooke Shields\", \"Princeton University\").\nGraduates(\"Brooke Shields\", \"University of Pennsylvania\").\nGraduates(\"Brooke Shields\", \"Columbia University\").\nGraduates(\"Brooke Shields\", \"Harvard University\").\nGraduates(\"Brooke Shields\", \"Stanford University\").\nGraduates(\"Brooke Shields\", \"University of California, Berkeley\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles\").\nGraduates(\"Brooke Shields\", \"University of California, Merced\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Cruz\").\nGraduates(\"Brooke Shields\", \"University of California, Santa Barbara\").\nGraduates(\"Brooke Shields\", \"University of California, San Diego\").\nGraduates(\"Brooke Shields\", \"University of California, San Francisco\").\nGraduates(\"Brooke Shields\", \"University of California, Davis\").\nGraduates(\"Brooke Shields\", \"University of California, Irvine\").\nGraduates(\"Brooke Shields\", \"University of California, Riverside\").\nGraduates(\"Brooke Shields\", \"University of California, Los Angeles"]}
{"id": 801, "answer": true, "completion": ".decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"British folklore\").\n.decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"Germanic mythology\").\n.decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"Greek mythology\").\n.decl Answer()\nAnswer() :- Subject_of(\"Parsifal\", subject1), Subject_of(\"Parsifal\", subject2), Subject_of(\"Parsifal\", subject3), subject1 \\= subject2, subject1 \\= subject3, subject2 \\= subject3.\n.output Answer\n\n", "completions": [".decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"British folklore\").\n.decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"Germanic mythology\").\n.decl Subject_of(Book:symbol, Subject:symbol)\nSubject_of(\"Parsifal\", \"Greek mythology\").\n.decl Answer()\nAnswer() :- Subject_of(\"Parsifal\", subject1), Subject_of(\"Parsifal\", subject2), Subject_of(\"Parsifal\", subject3), subject1 \\= subject2, subject1 \\= subject3, subject2 \\= subject3.\n.output Answer\n\n"]}
{"id": 802, "answer": false, "completion": ".decl Has_contraindication(Food:symbol, Condition:symbol)\nHas_contraindication(\"ramen\", \"heart failure\").\n.decl Has_side_effect(Food:symbol, Condition:symbol)\nHas_side_effect(\"ramen\", \"heart attack\").\n.decl Answer()\nAnswer() :- Has_contraindication(\"ramen\", condition), Has_side_effect(\"ramen\", condition).\n.output Answer\n\n", "completions": [".decl Has_contraindication(Food:symbol, Condition:symbol)\nHas_contraindication(\"ramen\", \"heart failure\").\n.decl Has_side_effect(Food:symbol, Condition:symbol)\nHas_side_effect(\"ramen\", \"heart attack\").\n.decl Answer()\nAnswer() :- Has_contraindication(\"ramen\", condition), Has_side_effect(\"ramen\", condition).\n.output Answer\n\n"]}
{"id": 803, "answer": false, "completion": ".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"French Toast\", 0.5).\nHas_strength(\"Lannister\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"French Toast\", strength1), Has_strength(\"Lannister\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"French Toast\", 0.5).\nHas_strength(\"Lannister\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"French Toast\", strength1), Has_strength(\"Lannister\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 804, "answer": true, "completion": ".decl Is_a(Character:symbol, Role:symbol)\nIs_a(\"Elphaba\", \"witch\").\nIs_a(\"Glinda\", \"witch\").\nIs_a(\"Elphaba\", \"missionary\").\nIs_a(\"Glinda\", \"missionary\").\n.decl Answer()\nAnswer() :- Is_a(\"Elphaba\", \"missionary\").\nAnswer() :- Is_a(\"Glinda\", \"missionary\").\n.output Answer\n\n", "completions": [".decl Is_a(Character:symbol, Role:symbol)\nIs_a(\"Elphaba\", \"witch\").\nIs_a(\"Glinda\", \"witch\").\nIs_a(\"Elphaba\", \"missionary\").\nIs_a(\"Glinda\", \"missionary\").\n.decl Answer()\nAnswer() :- Is_a(\"Elphaba\", \"missionary\").\nAnswer() :- Is_a(\"Glinda\", \"missionary\").\n.output Answer\n\n"]}
{"id": 805, "answer": false, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Carmen Electra\", \"junk\").\n.decl Answer()\nAnswer() :- Owns(\"Carmen Electra\", object).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Carmen Electra\", \"junk\").\n.decl Answer()\nAnswer() :- Owns(\"Carmen Electra\", object).\n.output Answer\n\n"]}
{"id": 806, "answer": false, "completion": ".decl Belongs_to_religion(Religion:symbol, Object:symbol)\nBelongs_to_religion(\"Hinduism\", \"swastika\").\nBelongs_to_religion(\"Islam\", \"star and crescent\").\nBelongs_to_religion(\"Christianity\", \"cross\").\nBelongs_to_religion(\"Buddhism\", \"wheel of dharma\").\nBelongs_to_religion(\"Judaism\", \"star of David\").\n.decl Belongs_to_country(Country:symbol, Religion:symbol)\nBelongs_to_country(\"India\", \"Hinduism\").\n.decl Answer()\nAnswer() :- Belongs_to_country(\"India\", religion), Belongs_to_religion(religion, object), object = \"swastika\".\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Religion:symbol, Object:symbol)\nBelongs_to_religion(\"Hinduism\", \"swastika\").\nBelongs_to_religion(\"Islam\", \"star and crescent\").\nBelongs_to_religion(\"Christianity\", \"cross\").\nBelongs_to_religion(\"Buddhism\", \"wheel of dharma\").\nBelongs_to_religion(\"Judaism\", \"star of David\").\n.decl Belongs_to_country(Country:symbol, Religion:symbol)\nBelongs_to_country(\"India\", \"Hinduism\").\n.decl Answer()\nAnswer() :- Belongs_to_country(\"India\", religion), Belongs_to_religion(religion, object), object = \"swastika\".\n.output Answer\n\n"]}
{"id": 807, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Malcolm X\", \"ham\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Malcolm X\", \"ham\").\n.decl Answer()\nAnswer() :- Avoid(\"Malcolm X\", \"ham\").\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Malcolm X\", \"ham\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Malcolm X\", \"ham\").\n.decl Answer()\nAnswer() :- Avoid(\"Malcolm X\", \"ham\").\n.output Answer\n\n"]}
{"id": 808, "answer": false, "completion": ".decl Has_legs(Animal:symbol, N_legs:float)\nHas_legs(\"greyhound\", 4).\nHas_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_legs(\"greyhound\", n_legs), Has_legs(\"human\", n_legs).\n.output Answer\n\n", "completions": [".decl Has_legs(Animal:symbol, N_legs:float)\nHas_legs(\"greyhound\", 4).\nHas_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_legs(\"greyhound\", n_legs), Has_legs(\"human\", n_legs).\n.output Answer\n\n"]}
{"id": 809, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Elementary School student\", \"needs graphing calculators\").\n.decl Answer()\nAnswer() :- Has_property(\"Elementary School student\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Elementary School student\", \"needs graphing calculators\").\n.decl Answer()\nAnswer() :- Has_property(\"Elementary School student\", property).\n.output Answer\n\n"]}
{"id": 810, "answer": true, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"SnapCap\", \"retail store\").\n.decl Answer()\nAnswer() :- Is_a(\"SnapCap\", class).\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"SnapCap\", \"retail store\").\n.decl Answer()\nAnswer() :- Is_a(\"SnapCap\", class).\n.output Answer\n\n"]}
{"id": 811, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Toyota Hilux\", 4).\nHas_weight(\"Big John Studd\", 30).\n.decl Answer()\nAnswer() :- Has_weight(\"Toyota Hilux\", weight1), Has_weight(\"Big John Studd\", weight2), weight1 >= weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Toyota Hilux\", 4).\nHas_weight(\"Big John Studd\", 30).\n.decl Answer()\nAnswer() :- Has_weight(\"Toyota Hilux\", weight1), Has_weight(\"Big John Studd\", weight2), weight1 >= weight2.\n.output Answer\n\n"]}
{"id": 812, "answer": false, "completion": ".decl Has_name(Team:symbol, Name:symbol)\nHas_name(\"New York Mets\", \"Mets\").\nHas_name(\"New York Yankees\", \"Yankees\").\nHas_name(\"San Diego Padres\", \"Padres\").\nHas_name(\"San Francisco Giants\", \"Giants\").\nHas_name(\"Seattle Mariners\", \"Mariners\").\nHas_name(\"Tampa Bay Rays\", \"Rays\").\nHas_name(\"Texas Rangers\", \"Rangers\").\nHas_name(\"Toronto Blue Jays\", \"Blue Jays\").\nHas_name(\"Arizona Diamondbacks\", \"Diamondbacks\").\nHas_name(\"Atlanta Braves\", \"Braves\").\nHas_name(\"Baltimore Orioles\", \"Orioles\").\nHas_name(\"Boston Red Sox\", \"Red Sox\").\nHas_name(\"Chicago Cubs\", \"Cubs\").\nHas_name(\"Chicago White Sox\", \"White Sox\").\nHas_name(\"Cincinnati Reds\", \"Reds\").\nHas_name(\"Cleveland Indians\", \"Indians\").\nHas_name(\"Colorado Rockies\", \"Rockies\").\nHas_name(\"Detroit Tigers\", \"Tigers\").\nHas_name(\"Houston Astros\", \"Astros\").\nHas_name(\"Kansas City Royals\", \"Royals\").\nHas_name(\"Los Angeles Angels\", \"Angels\").\nHas_name(\"Los Angeles Dodgers\", \"Dodgers\").\nHas_name(\"Miami Marlins\", \"Marlins\").\nHas_name(\"Milwaukee Brewers\", \"Brewers\").\nHas_name(\"Minnesota Twins\", \"Twins\").\nHas_name(\"New York Mets\", \"Mets\").\nHas_name(\"Oakland Athletics\", \"Athletics\").\nHas_name(\"Philadelphia Phillies\", \"Phillies\").\nHas_name(\"Pittsburgh Pirates\", \"Pirates\").\nHas_name(\"San Diego Padres\", \"Padres\").\nHas_name(\"San Francisco Giants\", \"Giants\").\nHas_name(\"Seattle Mariners\", \"Mariners\").\nHas_name(\"St. Louis Cardinals\", \"Cardinals\").\nHas_name(\"Tampa Bay Rays\", \"Rays\").\nHas_name(\"Texas Rangers\", \"Rangers\").\nHas_name(\"Toronto Blue Jays\", \"Blue Jays\").\nHas_name(\"Washington Nationals\", \"Nationals\").\n.decl Answer()\nAnswer() :- Has_name(team, name), name = \"Mets\", name = \"Dodgers\", name = \"Cubs\", name = \"White Sox\", name = \"Royals\", name = \"Tigers\", name = \"Astros\", name = \"Marlins\", name = \"Brewers\", name = \"Twins\", name = \"Mets\", name = \"Athletics\", name = \"Phillies\", name = \"Pirates\", name = \"Padres\", name = \"Giants\", name = \"Mariners\", name = \"Cardinals\", name = \"Rays\", name = \"Rangers\", name = \"Blue Jays\", name = \"Nationals\".\n.output Answer\n\n", "completions": [".decl Has_name(Team:symbol, Name:symbol)\nHas_name(\"New York Mets\", \"Mets\").\nHas_name(\"New York Yankees\", \"Yankees\").\nHas_name(\"San Diego Padres\", \"Padres\").\nHas_name(\"San Francisco Giants\", \"Giants\").\nHas_name(\"Seattle Mariners\", \"Mariners\").\nHas_name(\"Tampa Bay Rays\", \"Rays\").\nHas_name(\"Texas Rangers\", \"Rangers\").\nHas_name(\"Toronto Blue Jays\", \"Blue Jays\").\nHas_name(\"Arizona Diamondbacks\", \"Diamondbacks\").\nHas_name(\"Atlanta Braves\", \"Braves\").\nHas_name(\"Baltimore Orioles\", \"Orioles\").\nHas_name(\"Boston Red Sox\", \"Red Sox\").\nHas_name(\"Chicago Cubs\", \"Cubs\").\nHas_name(\"Chicago White Sox\", \"White Sox\").\nHas_name(\"Cincinnati Reds\", \"Reds\").\nHas_name(\"Cleveland Indians\", \"Indians\").\nHas_name(\"Colorado Rockies\", \"Rockies\").\nHas_name(\"Detroit Tigers\", \"Tigers\").\nHas_name(\"Houston Astros\", \"Astros\").\nHas_name(\"Kansas City Royals\", \"Royals\").\nHas_name(\"Los Angeles Angels\", \"Angels\").\nHas_name(\"Los Angeles Dodgers\", \"Dodgers\").\nHas_name(\"Miami Marlins\", \"Marlins\").\nHas_name(\"Milwaukee Brewers\", \"Brewers\").\nHas_name(\"Minnesota Twins\", \"Twins\").\nHas_name(\"New York Mets\", \"Mets\").\nHas_name(\"Oakland Athletics\", \"Athletics\").\nHas_name(\"Philadelphia Phillies\", \"Phillies\").\nHas_name(\"Pittsburgh Pirates\", \"Pirates\").\nHas_name(\"San Diego Padres\", \"Padres\").\nHas_name(\"San Francisco Giants\", \"Giants\").\nHas_name(\"Seattle Mariners\", \"Mariners\").\nHas_name(\"St. Louis Cardinals\", \"Cardinals\").\nHas_name(\"Tampa Bay Rays\", \"Rays\").\nHas_name(\"Texas Rangers\", \"Rangers\").\nHas_name(\"Toronto Blue Jays\", \"Blue Jays\").\nHas_name(\"Washington Nationals\", \"Nationals\").\n.decl Answer()\nAnswer() :- Has_name(team, name), name = \"Mets\", name = \"Dodgers\", name = \"Cubs\", name = \"White Sox\", name = \"Royals\", name = \"Tigers\", name = \"Astros\", name = \"Marlins\", name = \"Brewers\", name = \"Twins\", name = \"Mets\", name = \"Athletics\", name = \"Phillies\", name = \"Pirates\", name = \"Padres\", name = \"Giants\", name = \"Mariners\", name = \"Cardinals\", name = \"Rays\", name = \"Rangers\", name = \"Blue Jays\", name = \"Nationals\".\n.output Answer\n\n"]}
{"id": 813, "answer": true, "completion": ".decl Has_noise(Object:symbol, Noise:float)\nHas_noise(\"telescope\", 0.1).\nHas_noise(\"noise\", 0.1).\n.decl Answer()\nAnswer() :- Has_noise(\"telescope\", noise1), Has_noise(\"noise\", noise2), noise1 > noise2.\n.output Answer\n\n", "completions": [".decl Has_noise(Object:symbol, Noise:float)\nHas_noise(\"telescope\", 0.1).\nHas_noise(\"noise\", 0.1).\n.decl Answer()\nAnswer() :- Has_noise(\"telescope\", noise1), Has_noise(\"noise\", noise2), noise1 > noise2.\n.output Answer\n\n"]}
{"id": 814, "answer": true, "completion": ".decl Is_a_mythical_place(Place:symbol)\nIs_a_mythical_place(\"Pearl Harbor\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Pearl Harbor\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Atlantis\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Shangri-La\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs", "completions": [".decl Is_a_mythical_place(Place:symbol)\nIs_a_mythical_place(\"Pearl Harbor\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Pearl Harbor\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Atlantis\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"Shangri-La\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs_a_place(\"El Dorado\").\n.decl Is_a_place(Place:symbol)\nIs"]}
{"id": 815, "answer": false, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Albany\", 0).\nHas_population(\"New York\", 0).\n.decl Answer()\nAnswer() :- Has_population(\"Albany\", population1), Has_population(\"New York\", population2), population1 < population2.\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Albany\", 0).\nHas_population(\"New York\", 0).\n.decl Answer()\nAnswer() :- Has_population(\"Albany\", population1), Has_population(\"New York\", population2), population1 < population2.\n.output Answer\n\n"]}
{"id": 816, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"sunburn\", \"summer\").\nHappens_in_time(\"Burning Man\", \"August\").\n.decl Has_temperature(Time:symbol, Temperature:float)\nHas_temperature(\"summer\", 100).\nHas_temperature(\"August\", 100).\n.decl Answer()\nAnswer() :- Happens_in_time(\"sunburn\", time), Happens_in_time(\"Burning Man\", time), Has_temperature(time, temperature), temperature > 100.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"sunburn\", \"summer\").\nHappens_in_time(\"Burning Man\", \"August\").\n.decl Has_temperature(Time:symbol, Temperature:float)\nHas_temperature(\"summer\", 100).\nHas_temperature(\"August\", 100).\n.decl Answer()\nAnswer() :- Happens_in_time(\"sunburn\", time), Happens_in_time(\"Burning Man\", time), Has_temperature(time, temperature), temperature > 100.\n.output Answer\n\n"]}
{"id": 817, "answer": true, "completion": ".decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Queen Elizabeth I\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Queen Elizabeth I\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Philip\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Philip\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Charles\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Charles\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Andrew\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Andrew\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Edward\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Edward\", \"Reza Shah\").\n.decl Answer()\nAnswer() :- Related(\"Reza Shah\", \"Queen Elizabeth I\").\nAnswer() :- Related(\"Queen Elizabeth I\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Philip\").\nAnswer() :- Related(\"Prince Philip\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Charles\").\nAnswer() :- Related(\"Prince Charles\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Andrew\").\nAnswer() :- Related(\"Prince Andrew\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Edward\").\nAnswer() :- Related(\"Prince Edward\", \"Reza Shah\").\n.output Answer\n\n", "completions": [".decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Queen Elizabeth I\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Queen Elizabeth I\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Philip\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Philip\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Charles\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Charles\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Andrew\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Andrew\", \"Reza Shah\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Reza Shah\", \"Prince Edward\").\n.decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Prince Edward\", \"Reza Shah\").\n.decl Answer()\nAnswer() :- Related(\"Reza Shah\", \"Queen Elizabeth I\").\nAnswer() :- Related(\"Queen Elizabeth I\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Philip\").\nAnswer() :- Related(\"Prince Philip\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Charles\").\nAnswer() :- Related(\"Prince Charles\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Andrew\").\nAnswer() :- Related(\"Prince Andrew\", \"Reza Shah\").\nAnswer() :- Related(\"Reza Shah\", \"Prince Edward\").\nAnswer() :- Related(\"Prince Edward\", \"Reza Shah\").\n.output Answer\n\n"]}
{"id": 818, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"focal fossa\", \"fossa\").\nHas_name(\"linux\", \"linux\").\n.decl Answer()\nAnswer() :- Has_name(\"focal fossa\", name1), Has_name(\"linux\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"focal fossa\", \"fossa\").\nHas_name(\"linux\", \"linux\").\n.decl Answer()\nAnswer() :- Has_name(\"focal fossa\", name1), Has_name(\"linux\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 819, "answer": false, "completion": ".decl Cures(Medicine:symbol, Disease:symbol)\nCures(\"cast\", \"dementia\").\n.decl Answer()\nAnswer() :- Cures(\"cast\", disease).\n.output Answer\n\n", "completions": [".decl Cures(Medicine:symbol, Disease:symbol)\nCures(\"cast\", \"dementia\").\n.decl Answer()\nAnswer() :- Cures(\"cast\", disease).\n.output Answer\n\n"]}
{"id": 820, "answer": false, "completion": ".decl Uses_keyboard(Person:symbol, Keyboard:symbol)\nUses_keyboard(\"monkey\", \"QWERTY\").\n.decl Answer()\nAnswer() :- Uses_keyboard(\"monkey\", keyboard).\n.output Answer\n\n", "completions": [".decl Uses_keyboard(Person:symbol, Keyboard:symbol)\nUses_keyboard(\"monkey\", \"QWERTY\").\n.decl Answer()\nAnswer() :- Uses_keyboard(\"monkey\", keyboard).\n.output Answer\n\n"]}
{"id": 821, "answer": true, "completion": ".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"groundhog day\", \"winter\").\n.decl Is_season(Month:symbol, Season:symbol)\nIs_season(\"January\", \"winter\").\nIs_season(\"February\", \"winter\").\nIs_season(\"March\", \"spring\").\nIs_season(\"April\", \"spring\").\nIs_season(\"May\", \"spring\").\nIs_season(\"June\", \"summer\").\nIs_season(\"July\", \"summer\").\nIs_season(\"August\", \"summer\").\nIs_season(\"September\", \"fall\").\nIs_season(\"October\", \"fall\").\nIs_season(\"November\", \"fall\").\nIs_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"January\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"February\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"March\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"April\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"May\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"June\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"July\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"August\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"September\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"October\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"November\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"December\", season).\n.output Answer\n\n", "completions": [".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"groundhog day\", \"winter\").\n.decl Is_season(Month:symbol, Season:symbol)\nIs_season(\"January\", \"winter\").\nIs_season(\"February\", \"winter\").\nIs_season(\"March\", \"spring\").\nIs_season(\"April\", \"spring\").\nIs_season(\"May\", \"spring\").\nIs_season(\"June\", \"summer\").\nIs_season(\"July\", \"summer\").\nIs_season(\"August\", \"summer\").\nIs_season(\"September\", \"fall\").\nIs_season(\"October\", \"fall\").\nIs_season(\"November\", \"fall\").\nIs_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"January\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"February\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"March\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"April\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"May\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"June\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"July\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"August\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"September\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"October\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"November\", season).\nAnswer() :- Happens_in_season(\"groundhog day\", season), Is_season(\"December\", season).\n.output Answer\n\n"]}
{"id": 822, "answer": true, "completion": ".decl Has_dependency(Brand:symbol, Dependency:symbol)\nHas_dependency(\"US brand Nice\", \"Western honey bee\").\n.decl Has_dependency(Brand:symbol, Dependency:symbol)\nHas_dependency(\"US brand Nice\", \"Eastern honey bee\").\n.decl Answer()\nAnswer() :- Has_dependency(\"US brand Nice\", dependency), Has_dependency(\"Western honey bee\", dependency).\n.output Answer\n\n", "completions": [".decl Has_dependency(Brand:symbol, Dependency:symbol)\nHas_dependency(\"US brand Nice\", \"Western honey bee\").\n.decl Has_dependency(Brand:symbol, Dependency:symbol)\nHas_dependency(\"US brand Nice\", \"Eastern honey bee\").\n.decl Answer()\nAnswer() :- Has_dependency(\"US brand Nice\", dependency), Has_dependency(\"Western honey bee\", dependency).\n.output Answer\n\n"]}
{"id": 823, "answer": true, "completion": ".decl Has_country(Event:symbol, Country:symbol)\nHas_country(\"karaoke\", \"Japan\").\nHas_country(\"turtle power tiller\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_country(\"karaoke\", country1), Has_country(\"turtle power tiller\", country2), country1 = country2.\n.output Answer\n\n", "completions": [".decl Has_country(Event:symbol, Country:symbol)\nHas_country(\"karaoke\", \"Japan\").\nHas_country(\"turtle power tiller\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_country(\"karaoke\", country1), Has_country(\"turtle power tiller\", country2), country1 = country2.\n.output Answer\n\n"]}
{"id": 824, "answer": true, "completion": ".decl Has_president(University:symbol, President:symbol)\nHas_president(\"Ohio University\", \"Jim Tressel\").\n.decl Answer()\nAnswer() :- Has_president(\"Ohio University\", president), president = \"Jim Tressel\".\n.output Answer\n\n", "completions": [".decl Has_president(University:symbol, President:symbol)\nHas_president(\"Ohio University\", \"Jim Tressel\").\n.decl Answer()\nAnswer() :- Has_president(\"Ohio University\", president), president = \"Jim Tressel\".\n.output Answer\n\n"]}
{"id": 825, "answer": true, "completion": ".decl Is_parent(Person:symbol)\nIs_parent(\"A\").\nIs_parent(\"B\").\nIs_parent(\"C\").\nIs_parent(\"D\").\nIs_parent(\"E\").\nIs_parent(\"F\").\nIs_parent(\"G\").\nIs_parent(\"H\").\nIs_parent(\"I\").\nIs_parent(\"J\").\nIs_parent(\"K\").\nIs_parent(\"L\").\nIs_parent(\"M\").\nIs_parent(\"N\").\nIs_parent(\"O\").\nIs_parent(\"P\").\nIs_parent(\"Q\").\nIs_parent(\"R\").\nIs_parent(\"S\").\nIs_parent(\"T\").\nIs_parent(\"U\").\nIs_parent(\"V\").\nIs_parent(\"W\").\nIs_parent(\"X\").\nIs_parent(\"Y\").\nIs_parent(\"Z\").\n.decl Is_parent_of(Person_A:symbol, Person_B:symbol)\nIs_parent_of(\"A\", \"B\").\nIs_parent_of(\"A\", \"C\").\nIs_parent_of(\"A\", \"D\").\nIs_parent_of(\"B\", \"E\").\nIs_parent_of(\"B\", \"F\").\nIs_parent_of(\"C\", \"G\").\nIs_parent_of(\"C\", \"H\").\nIs_parent_of(\"D\", \"I\").\nIs_parent_of(\"D\", \"J\").\nIs_parent_of(\"E\", \"K\").\nIs_parent_of(\"E\", \"L\").\nIs_parent_of(\"F\", \"M\").\nIs_parent_of(\"F\", \"N\").\nIs_parent_of(\"G\", \"O\").\nIs_parent_of(\"G\", \"P\").\nIs_parent_of(\"H\", \"Q\").\nIs_parent_of(\"H\", \"R\").\nIs_parent_of(\"I\", \"S\").\nIs_parent_of(\"I\", \"T\").\nIs_parent_of(\"J\", \"U\").\nIs_parent_of(\"J\", \"V\").\nIs_parent_of(\"K\", \"W\").\nIs_parent_of(\"K\", \"X\").\nIs_parent_of(\"L\", \"Y\").\nIs_parent_of(\"L\", \"Z\").\n.decl Answer()\nAnswer() :- Is_parent(\"A\"), Is_parent_of(\"A\", \"B\"), Is_parent_of(\"A\", \"C\"), Is_parent_of(\"A\", \"D\"), Is_parent_of(\"B\", \"E\"), Is_parent_of(\"B\", \"F\"), Is_parent_of(\"C\", \"G\"), Is_parent_of(\"C\", \"H\"), Is_parent_of(\"D\", \"I\"), Is_parent_of(\"D\", \"J\"), Is_parent_of(\"E\", \"K\"), Is_parent_of(\"E\", \"L\"), Is_parent_of(\"F\", \"M\"), Is_parent_of(\"F\", \"N\"), Is_parent_of(\"G\", \"O\"), Is_parent_of(\"G\", \"P\"), Is_parent_of(\"H\", \"Q\"), Is_parent_of(\"H\", \"R\"), Is_parent_of(\"I\", \"S\"), Is_parent_of(\"I\", \"T\"), Is_parent_of(\"J\", \"U\"), Is_parent_of(\"J\", \"V\"), Is_parent_of(\"K\", \"W\"), Is_parent_of(\"K\", \"X\"), Is_parent_of(\"L\", \"Y\"), Is_parent", "completions": [".decl Is_parent(Person:symbol)\nIs_parent(\"A\").\nIs_parent(\"B\").\nIs_parent(\"C\").\nIs_parent(\"D\").\nIs_parent(\"E\").\nIs_parent(\"F\").\nIs_parent(\"G\").\nIs_parent(\"H\").\nIs_parent(\"I\").\nIs_parent(\"J\").\nIs_parent(\"K\").\nIs_parent(\"L\").\nIs_parent(\"M\").\nIs_parent(\"N\").\nIs_parent(\"O\").\nIs_parent(\"P\").\nIs_parent(\"Q\").\nIs_parent(\"R\").\nIs_parent(\"S\").\nIs_parent(\"T\").\nIs_parent(\"U\").\nIs_parent(\"V\").\nIs_parent(\"W\").\nIs_parent(\"X\").\nIs_parent(\"Y\").\nIs_parent(\"Z\").\n.decl Is_parent_of(Person_A:symbol, Person_B:symbol)\nIs_parent_of(\"A\", \"B\").\nIs_parent_of(\"A\", \"C\").\nIs_parent_of(\"A\", \"D\").\nIs_parent_of(\"B\", \"E\").\nIs_parent_of(\"B\", \"F\").\nIs_parent_of(\"C\", \"G\").\nIs_parent_of(\"C\", \"H\").\nIs_parent_of(\"D\", \"I\").\nIs_parent_of(\"D\", \"J\").\nIs_parent_of(\"E\", \"K\").\nIs_parent_of(\"E\", \"L\").\nIs_parent_of(\"F\", \"M\").\nIs_parent_of(\"F\", \"N\").\nIs_parent_of(\"G\", \"O\").\nIs_parent_of(\"G\", \"P\").\nIs_parent_of(\"H\", \"Q\").\nIs_parent_of(\"H\", \"R\").\nIs_parent_of(\"I\", \"S\").\nIs_parent_of(\"I\", \"T\").\nIs_parent_of(\"J\", \"U\").\nIs_parent_of(\"J\", \"V\").\nIs_parent_of(\"K\", \"W\").\nIs_parent_of(\"K\", \"X\").\nIs_parent_of(\"L\", \"Y\").\nIs_parent_of(\"L\", \"Z\").\n.decl Answer()\nAnswer() :- Is_parent(\"A\"), Is_parent_of(\"A\", \"B\"), Is_parent_of(\"A\", \"C\"), Is_parent_of(\"A\", \"D\"), Is_parent_of(\"B\", \"E\"), Is_parent_of(\"B\", \"F\"), Is_parent_of(\"C\", \"G\"), Is_parent_of(\"C\", \"H\"), Is_parent_of(\"D\", \"I\"), Is_parent_of(\"D\", \"J\"), Is_parent_of(\"E\", \"K\"), Is_parent_of(\"E\", \"L\"), Is_parent_of(\"F\", \"M\"), Is_parent_of(\"F\", \"N\"), Is_parent_of(\"G\", \"O\"), Is_parent_of(\"G\", \"P\"), Is_parent_of(\"H\", \"Q\"), Is_parent_of(\"H\", \"R\"), Is_parent_of(\"I\", \"S\"), Is_parent_of(\"I\", \"T\"), Is_parent_of(\"J\", \"U\"), Is_parent_of(\"J\", \"V\"), Is_parent_of(\"K\", \"W\"), Is_parent_of(\"K\", \"X\"), Is_parent_of(\"L\", \"Y\"), Is_parent"]}
{"id": 826, "answer": true, "completion": ".decl Has_n_squares(Board:symbol, N_squares:float)\nHas_n_squares(\"chess board\", 64).\nHas_n_squares(\"Shogi board\", 81).\n.decl Answer()\nAnswer() :- Has_n_squares(\"chess board\", n_squares1), Has_n_squares(\"Shogi board\", n_squares2), n_squares1 = n_squares2.\n.output Answer\n\n", "completions": [".decl Has_n_squares(Board:symbol, N_squares:float)\nHas_n_squares(\"chess board\", 64).\nHas_n_squares(\"Shogi board\", 81).\n.decl Answer()\nAnswer() :- Has_n_squares(\"chess board\", n_squares1), Has_n_squares(\"Shogi board\", n_squares2), n_squares1 = n_squares2.\n.output Answer\n\n"]}
{"id": 827, "answer": true, "completion": ".decl Has_virus(Person:symbol, Virus:symbol)\nHas_virus(\"Darth Vader\", \"Coronavirus\").\n.decl Answer()\nAnswer() :- Has_virus(\"Darth Vader\", virus).\n.output Answer\n\n", "completions": [".decl Has_virus(Person:symbol, Virus:symbol)\nHas_virus(\"Darth Vader\", \"Coronavirus\").\n.decl Answer()\nAnswer() :- Has_virus(\"Darth Vader\", virus).\n.output Answer\n\n"]}
{"id": 828, "answer": true, "completion": ".decl Is_part_of_pantheon(God:symbol)\nIs_part_of_pantheon(\"Flying Spaghetti Monster\").\n.decl Answer()\nAnswer() :- Is_part_of_pantheon(\"Flying Spaghetti Monster\").\n.output Answer\n\n", "completions": [".decl Is_part_of_pantheon(God:symbol)\nIs_part_of_pantheon(\"Flying Spaghetti Monster\").\n.decl Answer()\nAnswer() :- Is_part_of_pantheon(\"Flying Spaghetti Monster\").\n.output Answer\n\n"]}
{"id": 829, "answer": true, "completion": ".decl Has_place_in_alphabet(Object:symbol, Place_in_alphabet:float)\nHas_place_in_alphabet(\"B\", 2).\nHas_place_in_alphabet(\"Prince Harry\", 3).\n.decl Answer()\nAnswer() :- Has_place_in_alphabet(\"B\", place1), Has_place_in_alphabet(\"Prince Harry\", place2), place1 = place2.\n.output Answer\n\n", "completions": [".decl Has_place_in_alphabet(Object:symbol, Place_in_alphabet:float)\nHas_place_in_alphabet(\"B\", 2).\nHas_place_in_alphabet(\"Prince Harry\", 3).\n.decl Answer()\nAnswer() :- Has_place_in_alphabet(\"B\", place1), Has_place_in_alphabet(\"Prince Harry\", place2), place1 = place2.\n.output Answer\n\n"]}
{"id": 830, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"snake\", 0.5).\nHas_mass(\"M60 Patton\", 100).\n.decl Answer()\nAnswer() :- Has_mass(\"snake\", mass1), Has_mass(\"M60 Patton\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"snake\", 0.5).\nHas_mass(\"M60 Patton\", 100).\n.decl Answer()\nAnswer() :- Has_mass(\"snake\", mass1), Has_mass(\"M60 Patton\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 831, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"chives\", \"green\").\nHas_color(\"grass\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"chives\", color), Has_color(\"grass\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"chives\", \"green\").\nHas_color(\"grass\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"chives\", color), Has_color(\"grass\", color).\n.output Answer\n\n"]}
{"id": 832, "answer": false, "completion": ".decl Has_body_part(Body_part:symbol, Person:symbol)\nHas_body_part(\"leg\", \"Anorexic\").\nHas_body_part(\"leg\", \"Regular\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Anorexic\", \"Anorexia nervosa\").\nHas_disease(\"Regular\", \"Anorexia nervosa\").\n.decl Has_body_part_with_disease(Body_part:symbol, Disease:symbol)\nHas_body_part_with_disease(\"leg\", \"Anorexia nervosa\").\n.decl Answer()\nAnswer() :- Has_body_part(\"leg\", person), Has_disease(person, disease), Has_body_part_with_disease(\"leg\", disease).\n.output Answer\n\n", "completions": [".decl Has_body_part(Body_part:symbol, Person:symbol)\nHas_body_part(\"leg\", \"Anorexic\").\nHas_body_part(\"leg\", \"Regular\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Anorexic\", \"Anorexia nervosa\").\nHas_disease(\"Regular\", \"Anorexia nervosa\").\n.decl Has_body_part_with_disease(Body_part:symbol, Disease:symbol)\nHas_body_part_with_disease(\"leg\", \"Anorexia nervosa\").\n.decl Answer()\nAnswer() :- Has_body_part(\"leg\", person), Has_disease(person, disease), Has_body_part_with_disease(\"leg\", disease).\n.output Answer\n\n"]}
{"id": 833, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"sharks\", 8).\nHas_n_members(\"bulls\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"sharks\", n_members1), Has_n_members(\"bulls\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"sharks\", 8).\nHas_n_members(\"bulls\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"sharks\", n_members1), Has_n_members(\"bulls\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 834, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Spanish-American War\", \"1898\").\nHappens_in_time(\"Spanish-American War\", \"1899\").\nHappens_in_time(\"Spanish-American War\", \"1900\").\nHappens_in_time(\"Spanish-American War\", \"1901\").\nHappens_in_time(\"Spanish-American War\", \"1902\").\nHappens_in_time(\"Spanish-American War\", \"1903\").\nHappens_in_time(\"Spanish-American War\", \"1904\").\nHappens_in_time(\"Spanish-American War\", \"1905\").\nHappens_in_time(\"Spanish-American War\", \"1906\").\nHappens_in_time(\"Spanish-American War\", \"1907\").\nHappens_in_time(\"Spanish-American War\", \"1908\").\nHappens_in_time(\"Spanish-American War\", \"1909\").\nHappens_in_time(\"Spanish-American War\", \"1910\").\nHappens_in_time(\"Spanish-American War\", \"1911\").\nHappens_in_time(\"Spanish-American War\", \"1912\").\nHappens_in_time(\"Spanish-American War\", \"1913\").\nHappens_in_time(\"Spanish-American War\", \"1914\").\nHappens_in_time(\"Spanish-American War\", \"1915\").\nHappens_in_time(\"Spanish-American War\", \"1916\").\nHappens_in_time(\"Spanish-American War\", \"1917\").\nHappens_in_time(\"Spanish-American War\", \"1918\").\nHappens_in_time(\"Spanish-American War\", \"1919\").\nHappens_in_time(\"Spanish-American War\", \"1920\").\nHappens_in_time(\"Spanish-American War\", \"1921\").\nHappens_in_time(\"Spanish-American War\", \"1922\").\nHappens_in_time(\"Spanish-American War\", \"1923\").\nHappens_in_time(\"Spanish-American War\", \"1924\").\nHappens_in_time(\"Spanish-American War\", \"1925\").\nHappens_in_time(\"Spanish-American War\", \"1926\").\nHappens_in_time(\"Spanish-American War\", \"1927\").\nHappens_in_time(\"Spanish-American War\", \"1928\").\nHappens_in_time(\"Spanish-American War\", \"1929\").\nHappens_in_time(\"Spanish-American War\", \"1930\").\nHappens_in_time(\"Spanish-American War\", \"1931\").\nHappens_in_time(\"Spanish-American War\", \"1932\").\nHappens_in_time(\"Spanish-American War\", \"1933\").\nHappens_in_time(\"Spanish-American War\", \"1934\").\nHappens_in_time(\"Spanish-American War\", \"1935\").\nHappens_in_time(\"Spanish-American War\", \"1936\").\nHappens_in_time(\"Spanish-American War\", \"1937\").\nHappens_in_time(\"Spanish-American War\", \"1938\").\nHappens_in_time(\"Spanish-American War\", \"1939\").\nHappens_in_time(\"Spanish-American War\", \"1940\").\nHappens_in_time", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Spanish-American War\", \"1898\").\nHappens_in_time(\"Spanish-American War\", \"1899\").\nHappens_in_time(\"Spanish-American War\", \"1900\").\nHappens_in_time(\"Spanish-American War\", \"1901\").\nHappens_in_time(\"Spanish-American War\", \"1902\").\nHappens_in_time(\"Spanish-American War\", \"1903\").\nHappens_in_time(\"Spanish-American War\", \"1904\").\nHappens_in_time(\"Spanish-American War\", \"1905\").\nHappens_in_time(\"Spanish-American War\", \"1906\").\nHappens_in_time(\"Spanish-American War\", \"1907\").\nHappens_in_time(\"Spanish-American War\", \"1908\").\nHappens_in_time(\"Spanish-American War\", \"1909\").\nHappens_in_time(\"Spanish-American War\", \"1910\").\nHappens_in_time(\"Spanish-American War\", \"1911\").\nHappens_in_time(\"Spanish-American War\", \"1912\").\nHappens_in_time(\"Spanish-American War\", \"1913\").\nHappens_in_time(\"Spanish-American War\", \"1914\").\nHappens_in_time(\"Spanish-American War\", \"1915\").\nHappens_in_time(\"Spanish-American War\", \"1916\").\nHappens_in_time(\"Spanish-American War\", \"1917\").\nHappens_in_time(\"Spanish-American War\", \"1918\").\nHappens_in_time(\"Spanish-American War\", \"1919\").\nHappens_in_time(\"Spanish-American War\", \"1920\").\nHappens_in_time(\"Spanish-American War\", \"1921\").\nHappens_in_time(\"Spanish-American War\", \"1922\").\nHappens_in_time(\"Spanish-American War\", \"1923\").\nHappens_in_time(\"Spanish-American War\", \"1924\").\nHappens_in_time(\"Spanish-American War\", \"1925\").\nHappens_in_time(\"Spanish-American War\", \"1926\").\nHappens_in_time(\"Spanish-American War\", \"1927\").\nHappens_in_time(\"Spanish-American War\", \"1928\").\nHappens_in_time(\"Spanish-American War\", \"1929\").\nHappens_in_time(\"Spanish-American War\", \"1930\").\nHappens_in_time(\"Spanish-American War\", \"1931\").\nHappens_in_time(\"Spanish-American War\", \"1932\").\nHappens_in_time(\"Spanish-American War\", \"1933\").\nHappens_in_time(\"Spanish-American War\", \"1934\").\nHappens_in_time(\"Spanish-American War\", \"1935\").\nHappens_in_time(\"Spanish-American War\", \"1936\").\nHappens_in_time(\"Spanish-American War\", \"1937\").\nHappens_in_time(\"Spanish-American War\", \"1938\").\nHappens_in_time(\"Spanish-American War\", \"1939\").\nHappens_in_time(\"Spanish-American War\", \"1940\").\nHappens_in_time"]}
{"id": 835, "answer": false, "completion": ".decl Has_collaborated_with(Person:symbol, Suicidal_person:symbol)\nHas_collaborated_with(\"Aretha Franklin\", \"Janis Joplin\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jimi Hendrix\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jim Morrison\").\nHas_collaborated_with(\"Aretha Franklin\", \"Kurt Cobain\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jimi Hendrix\").\n.decl Has_suicidal_person(Suicidal_person:symbol)\nHas_suicidal_person(\"Janis Joplin\").\nHas_suicidal_person(\"Jimi Hendrix\").\nHas_suicidal_person(\"Jim Morrison\").\nHas_suicidal_person(\"Kurt Cobain\").\nHas_suicidal_person(\"Jimi Hendrix\").\n.decl Answer()\nAnswer() :- Has_collaborated_with(\"Aretha Franklin\", suicidal_person), Has_suicidal_person(suicidal_person).\n.output Answer\n\n", "completions": [".decl Has_collaborated_with(Person:symbol, Suicidal_person:symbol)\nHas_collaborated_with(\"Aretha Franklin\", \"Janis Joplin\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jimi Hendrix\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jim Morrison\").\nHas_collaborated_with(\"Aretha Franklin\", \"Kurt Cobain\").\nHas_collaborated_with(\"Aretha Franklin\", \"Jimi Hendrix\").\n.decl Has_suicidal_person(Suicidal_person:symbol)\nHas_suicidal_person(\"Janis Joplin\").\nHas_suicidal_person(\"Jimi Hendrix\").\nHas_suicidal_person(\"Jim Morrison\").\nHas_suicidal_person(\"Kurt Cobain\").\nHas_suicidal_person(\"Jimi Hendrix\").\n.decl Answer()\nAnswer() :- Has_collaborated_with(\"Aretha Franklin\", suicidal_person), Has_suicidal_person(suicidal_person).\n.output Answer\n\n"]}
{"id": 836, "answer": true, "completion": ".decl Has_n_wheels(Object:symbol, N_wheels:float)\nHas_n_wheels(\"bicycle\", 2).\nHas_n_wheels(\"children's bicycle\", 3).\n.decl Answer()\nAnswer() :- Has_n_wheels(\"children's bicycle\", n_wheels), Has_n_wheels(\"bicycle\", n_wheels1), n_wheels > n_wheels1.\n.output Answer\n\n", "completions": [".decl Has_n_wheels(Object:symbol, N_wheels:float)\nHas_n_wheels(\"bicycle\", 2).\nHas_n_wheels(\"children's bicycle\", 3).\n.decl Answer()\nAnswer() :- Has_n_wheels(\"children's bicycle\", n_wheels), Has_n_wheels(\"bicycle\", n_wheels1), n_wheels > n_wheels1.\n.output Answer\n\n"]}
{"id": 837, "answer": false, "completion": ".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"Royal Observatory\", \"circle\").\nHas_shape(\"yield sign\", \"triangle\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Royal Observatory\", \"white\").\nHas_color(\"yield sign\", \"red\").\n.decl Answer()\nAnswer() :- Has_shape(\"Royal Observatory\", shape), Has_shape(\"yield sign\", shape), Has_color(\"Royal Observatory\", color), Has_color(\"yield sign\", color).\n.output Answer\n\n", "completions": [".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"Royal Observatory\", \"circle\").\nHas_shape(\"yield sign\", \"triangle\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Royal Observatory\", \"white\").\nHas_color(\"yield sign\", \"red\").\n.decl Answer()\nAnswer() :- Has_shape(\"Royal Observatory\", shape), Has_shape(\"yield sign\", shape), Has_color(\"Royal Observatory\", color), Has_color(\"yield sign\", color).\n.output Answer\n\n"]}
{"id": 838, "answer": false, "completion": ".decl Is_a_movie(Movie:symbol)\nIs_a_movie(\"Star Wars\").\nIs_a_movie(\"The Matrix\").\n.decl Is_a_nerd(Person:symbol)\nIs_a_nerd(\"Luke Skywalker\").\nIs_a_nerd(\"Neo\").\n.decl Answer()\nAnswer() :- Is_a_movie(movie), Is_a_nerd(person), movie = person.\n.output Answer\n\n", "completions": [".decl Is_a_movie(Movie:symbol)\nIs_a_movie(\"Star Wars\").\nIs_a_movie(\"The Matrix\").\n.decl Is_a_nerd(Person:symbol)\nIs_a_nerd(\"Luke Skywalker\").\nIs_a_nerd(\"Neo\").\n.decl Answer()\nAnswer() :- Is_a_movie(movie), Is_a_nerd(person), movie = person.\n.output Answer\n\n"]}
{"id": 839, "answer": false, "completion": ".decl Has_money(Bank:symbol, Money:float)\nHas_money(\"JPMorgan Chase\", 10000000000).\nHas_money(\"American\", 0).\n.decl Answer()\nAnswer() :- Has_money(\"JPMorgan Chase\", money1), Has_money(\"American\", money2), money1 > money2 + 10.\n.output Answer\n\n", "completions": [".decl Has_money(Bank:symbol, Money:float)\nHas_money(\"JPMorgan Chase\", 10000000000).\nHas_money(\"American\", 0).\n.decl Answer()\nAnswer() :- Has_money(\"JPMorgan Chase\", money1), Has_money(\"American\", money2), money1 > money2 + 10.\n.output Answer\n\n"]}
{"id": 840, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"crustacean\", 0.5).\nHas_length(\"king-sized mattress\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"crustacean\", length1), Has_length(\"king-sized mattress\", length2), length1 > length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"crustacean\", 0.5).\nHas_length(\"king-sized mattress\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"crustacean\", length1), Has_length(\"king-sized mattress\", length2), length1 > length2.\n.output Answer\n\n"]}
{"id": 841, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dante Alighieri\", \"Dante Alighieri\").\nHas_name(\"Rupert Murdoch\", \"Rupert Murdoch\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dante Alighieri\", \"unknown\").\nHas_age(\"Rupert Murdoch\", \"unknown\").\n.decl Has_birthplace(Person:symbol, Birthplace:symbol)\nHas_birthplace(\"Dante Alighieri\", \"unknown\").\nHas_birthplace(\"Rupert Murdoch\", \"unknown\").\n.decl Has_deathplace(Person:symbol, Deathplace:symbol)\nHas_deathplace(\"Dante Alighieri\", \"unknown\").\nHas_deathplace(\"Rupert Murdoch\", \"unknown\").\n.decl Has_birthyear(Person:symbol, Birthyear:float)\nHas_birthyear(\"Dante Alighieri\", \"unknown\").\nHas_birthyear(\"Rupert Murdoch\", \"unknown\").\n.decl Has_deathyear(Person:symbol, Deathyear:float)\nHas_deathyear(\"Dante Alighieri\", \"unknown\").\nHas_deathyear(\"Rupert Murdoch\", \"unknown\").\n.decl Answer()\nAnswer() :- Has_name(\"Dante Alighieri\", name1), Has_name(\"Rupert Murdoch\", name2), name1 = name2.\nAnswer() :- Has_age(\"Dante Alighieri\", age1), Has_age(\"Rupert Murdoch\", age2), age1 = age2.\nAnswer() :- Has_birthplace(\"Dante Alighieri\", birthplace1), Has_birthplace(\"Rupert Murdoch\", birthplace2), birthplace1 = birthplace2.\nAnswer() :- Has_deathplace(\"Dante Alighieri\", deathplace1), Has_deathplace(\"Rupert Murdoch\", deathplace2), deathplace1 = deathplace2.\nAnswer() :- Has_birthyear(\"Dante Alighieri\", birthyear1), Has_birthyear(\"Rupert Murdoch\", birthyear2), birthyear1 = birthyear2.\nAnswer() :- Has_deathyear(\"Dante Alighieri\", deathyear1), Has_deathyear(\"Rupert Murdoch\", deathyear2), deathyear1 = deathyear2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dante Alighieri\", \"Dante Alighieri\").\nHas_name(\"Rupert Murdoch\", \"Rupert Murdoch\").\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dante Alighieri\", \"unknown\").\nHas_age(\"Rupert Murdoch\", \"unknown\").\n.decl Has_birthplace(Person:symbol, Birthplace:symbol)\nHas_birthplace(\"Dante Alighieri\", \"unknown\").\nHas_birthplace(\"Rupert Murdoch\", \"unknown\").\n.decl Has_deathplace(Person:symbol, Deathplace:symbol)\nHas_deathplace(\"Dante Alighieri\", \"unknown\").\nHas_deathplace(\"Rupert Murdoch\", \"unknown\").\n.decl Has_birthyear(Person:symbol, Birthyear:float)\nHas_birthyear(\"Dante Alighieri\", \"unknown\").\nHas_birthyear(\"Rupert Murdoch\", \"unknown\").\n.decl Has_deathyear(Person:symbol, Deathyear:float)\nHas_deathyear(\"Dante Alighieri\", \"unknown\").\nHas_deathyear(\"Rupert Murdoch\", \"unknown\").\n.decl Answer()\nAnswer() :- Has_name(\"Dante Alighieri\", name1), Has_name(\"Rupert Murdoch\", name2), name1 = name2.\nAnswer() :- Has_age(\"Dante Alighieri\", age1), Has_age(\"Rupert Murdoch\", age2), age1 = age2.\nAnswer() :- Has_birthplace(\"Dante Alighieri\", birthplace1), Has_birthplace(\"Rupert Murdoch\", birthplace2), birthplace1 = birthplace2.\nAnswer() :- Has_deathplace(\"Dante Alighieri\", deathplace1), Has_deathplace(\"Rupert Murdoch\", deathplace2), deathplace1 = deathplace2.\nAnswer() :- Has_birthyear(\"Dante Alighieri\", birthyear1), Has_birthyear(\"Rupert Murdoch\", birthyear2), birthyear1 = birthyear2.\nAnswer() :- Has_deathyear(\"Dante Alighieri\", deathyear1), Has_deathyear(\"Rupert Murdoch\", deathyear2), deathyear1 = deathyear2.\n.output Answer\n\n"]}
{"id": 842, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Eastern Orthodox Church\", \"Byzantine Empire\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Eastern Orthodox Church\", \"Byzantine Empire\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Eastern Orthodox Church\", \"Byzantine Empire\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Eastern Orthodox Church\", \"Byzantine Empire\").\n.output Answer\n\n"]}
{"id": 843, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"chlorine gas\", \"green\").\nHas_color(\"neon gas\", \"blue\").\n.decl Has_chromatic_color(Object:symbol, Chromatic_color:symbol)\nHas_chromatic_color(\"chlorine gas\", \"green\").\nHas_chromatic_color(\"neon gas\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"chlorine gas\", color), Has_color(\"neon gas\", color), Has_chromatic_color(\"chlorine gas\", chromatic_color), Has_chromatic_color(\"neon gas\", chromatic_color), color != chromatic_color.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"chlorine gas\", \"green\").\nHas_color(\"neon gas\", \"blue\").\n.decl Has_chromatic_color(Object:symbol, Chromatic_color:symbol)\nHas_chromatic_color(\"chlorine gas\", \"green\").\nHas_chromatic_color(\"neon gas\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"chlorine gas\", color), Has_color(\"neon gas\", color), Has_chromatic_color(\"chlorine gas\", chromatic_color), Has_chromatic_color(\"neon gas\", chromatic_color), color != chromatic_color.\n.output Answer\n\n"]}
{"id": 844, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Augustus\", \"Augustus\").\n.decl Answer()\nAnswer() :- Has_name(\"Augustus\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Augustus\", \"Augustus\").\n.decl Answer()\nAnswer() :- Has_name(\"Augustus\", name).\n.output Answer\n\n"]}
{"id": 845, "answer": true, "completion": ".decl Has_spouse(Person:symbol, Spouse:symbol)\nHas_spouse(\"Darth Vader\", \"Padme Amidala\").\n.decl Answer()\nAnswer() :- Has_spouse(\"Darth Vader\", spouse1), Has_spouse(spouse1, spouse2), spouse1 != spouse2.\n.output Answer\n\n", "completions": [".decl Has_spouse(Person:symbol, Spouse:symbol)\nHas_spouse(\"Darth Vader\", \"Padme Amidala\").\n.decl Answer()\nAnswer() :- Has_spouse(\"Darth Vader\", spouse1), Has_spouse(spouse1, spouse2), spouse1 != spouse2.\n.output Answer\n\n"]}
{"id": 846, "answer": false, "completion": ".decl Met(Person_A:symbol, Person_B:symbol)\nMet(\"Al-Farabi\", \"Mohammed\").\n.decl Answer()\nAnswer() :- Met(\"Al-Farabi\", \"Mohammed\").\n.output Answer\n\n", "completions": [".decl Met(Person_A:symbol, Person_B:symbol)\nMet(\"Al-Farabi\", \"Mohammed\").\n.decl Answer()\nAnswer() :- Met(\"Al-Farabi\", \"Mohammed\").\n.output Answer\n\n"]}
{"id": 847, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dustin Hoffman\", 77).\n.decl Has_political_affiliation(Person:symbol, Affiliation:symbol)\nHas_political_affiliation(\"Dustin Hoffman\", \"Republican\").\n.decl Answer()\nAnswer() :- Has_age(\"Dustin Hoffman\", age), age > 70.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Dustin Hoffman\", 77).\n.decl Has_political_affiliation(Person:symbol, Affiliation:symbol)\nHas_political_affiliation(\"Dustin Hoffman\", \"Republican\").\n.decl Answer()\nAnswer() :- Has_age(\"Dustin Hoffman\", age), age > 70.\n.output Answer\n\n"]}
{"id": 848, "answer": false, "completion": ".decl Is_a(Agency:symbol, Type:symbol)\nIs_a(\"Foreign and Commonwealth Office\", \"political agency\").\nIs_a(\"European Union\", \"political agency\").\n.decl Is_a(Agency:symbol, Type:symbol)\nIs_a(\"European Union\", \"European political agency\").\n.decl Answer()\nAnswer() :- Is_a(\"Foreign and Commonwealth Office\", \"European political agency\").\n.output Answer\n\n", "completions": [".decl Is_a(Agency:symbol, Type:symbol)\nIs_a(\"Foreign and Commonwealth Office\", \"political agency\").\nIs_a(\"European Union\", \"political agency\").\n.decl Is_a(Agency:symbol, Type:symbol)\nIs_a(\"European Union\", \"European political agency\").\n.decl Answer()\nAnswer() :- Is_a(\"Foreign and Commonwealth Office\", \"European political agency\").\n.output Answer\n\n"]}
{"id": 849, "answer": false, "completion": ".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Naruhito\", \"Akihito\").\nHas_ancestor(\"Naruhito\", \"Naruhito\").\nHas_ancestor(\"Akihito\", \"Naruhito\").\nHas_ancestor(\"Akihito\", \"Akihito\").\n.decl Has_book(Person:symbol, Book:symbol)\nHas_book(\"Akihito\", \"Romance of the Three Kingdoms\").\nHas_book(\"Naruhito\", \"Romance of the Three Kingdoms\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Naruhito\", ancestor), Has_book(ancestor, book), book == \"Romance of the Three Kingdoms\".\n.output Answer\n\n", "completions": [".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Naruhito\", \"Akihito\").\nHas_ancestor(\"Naruhito\", \"Naruhito\").\nHas_ancestor(\"Akihito\", \"Naruhito\").\nHas_ancestor(\"Akihito\", \"Akihito\").\n.decl Has_book(Person:symbol, Book:symbol)\nHas_book(\"Akihito\", \"Romance of the Three Kingdoms\").\nHas_book(\"Naruhito\", \"Romance of the Three Kingdoms\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Naruhito\", ancestor), Has_book(ancestor, book), book == \"Romance of the Three Kingdoms\".\n.output Answer\n\n"]}
{"id": 850, "answer": false, "completion": ".decl Has_won_grammy(Person:symbol, Year:symbol)\nHas_won_grammy(\"Johann Sebastian Bach\", \"1976\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1977\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1978\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1979\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1980\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1981\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1982\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1983\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1984\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1985\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1986\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1987\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1988\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1989\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1990\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1991\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1992\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1993\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1994\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1995\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1996\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1997\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1998\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1999\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2000\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2001\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2002\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2003\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2004\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2005\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2006\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2007\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2008\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2009\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2010\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2011\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2012\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2013\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2014\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2015\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2016\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2017\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2018\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2019\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2020\").\n.decl Answer()\nAnswer() :- Has_won_gram", "completions": [".decl Has_won_grammy(Person:symbol, Year:symbol)\nHas_won_grammy(\"Johann Sebastian Bach\", \"1976\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1977\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1978\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1979\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1980\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1981\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1982\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1983\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1984\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1985\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1986\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1987\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1988\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1989\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1990\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1991\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1992\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1993\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1994\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1995\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1996\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1997\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1998\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"1999\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2000\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2001\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2002\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2003\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2004\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2005\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2006\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2007\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2008\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2009\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2010\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2011\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2012\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2013\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2014\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2015\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2016\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2017\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2018\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2019\").\nHas_won_grammy(\"Johann Sebastian Bach\", \"2020\").\n.decl Answer()\nAnswer() :- Has_won_gram"]}
{"id": 851, "answer": false, "completion": ".decl Fibonacci(N:float, Fibonacci_N:float)\nFibonacci(0, 0).\nFibonacci(1, 1).\nFibonacci(N, Fibonacci_N) :- N > 1, N1 is N - 1, N2 is N - 2, Fibonacci(N1, Fibonacci_N1), Fibonacci(N2, Fibonacci_N2), Fibonacci_N is Fibonacci_N1 + Fibonacci_N2.\n.decl Answer()\nAnswer() :- Fibonacci(N, Fibonacci_N), N = 5, Fibonacci_N = 1.\n.output Answer\n\n", "completions": [".decl Fibonacci(N:float, Fibonacci_N:float)\nFibonacci(0, 0).\nFibonacci(1, 1).\nFibonacci(N, Fibonacci_N) :- N > 1, N1 is N - 1, N2 is N - 2, Fibonacci(N1, Fibonacci_N1), Fibonacci(N2, Fibonacci_N2), Fibonacci_N is Fibonacci_N1 + Fibonacci_N2.\n.decl Answer()\nAnswer() :- Fibonacci(N, Fibonacci_N), N = 5, Fibonacci_N = 1.\n.output Answer\n\n"]}
{"id": 852, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Microsoft Excel\", 0).\nHas_value(\"electricity\", 1).\n.decl Answer()\nAnswer() :- Has_value(\"electricity\", value1), Has_value(\"Microsoft Excel\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Microsoft Excel\", 0).\nHas_value(\"electricity\", 1).\n.decl Answer()\nAnswer() :- Has_value(\"electricity\", value1), Has_value(\"Microsoft Excel\", value2), value1 > value2.\n.output Answer\n\n"]}
{"id": 853, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"helium\", 2).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"gold\", 79).\nHas_atomic_number(\"uranium\", 92).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hulk\", 1).\nHas_n_members(\"Thor\", 1).\nHas_n_members(\"Captain America\", 1).\nHas_n_members(\"Iron Man\", 1).\nHas_n_members(\"Black Widow\", 1).\nHas_n_members(\"Hawkeye\", 1).\nHas_n_members(\"Ant-Man\", 1).\nHas_n_members(\"Wasp\", 1).\nHas_n_members(\"Black Panther\", 1).\nHas_n_members(\"Falcon\", 1).\nHas_n_members(\"Scarlet Witch\", 1).\nHas_n_members(\"Vision\", 1).\nHas_n_members(\"War Machine\", 1).\nHas_n_members(\"Spider-Man\", 1).\nHas_n_members(\"Doctor Strange\", 1).\nHas_n_members(\"Captain Marvel\", 1).\nHas_n_members(\"Mantis\", 1).\nHas_n_members(\"Nick Fury\", 1).\nHas_n_members(\"Rocket Raccoon\", 1).\nHas_n_members(\"Groot\", 1).\nHas_n_members(\"Gamora\", 1).\nHas_n_members(\"Drax\", 1).\nHas_n_members(\"Nebula\", 1).\nHas_n_members(\"Star-Lord\", 1).\nHas_n_members(\"Daredevil\", 1).\nHas_n_members(\"Iron Fist\", 1).\nHas_n_members(\"Elektra\", 1).\nHas_n_members(\"Punisher\", 1).\nHas_n_members(\"Jessica Jones\", 1).\nHas_n_members(\"Luke Cage\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"helium\", 2).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"gold\", 79).\nHas_atomic_number(\"uranium\", 92).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hulk\", 1).\nHas_n_members(\"Thor\", 1).\nHas_n_members(\"Captain America\", 1).\nHas_n_members(\"Iron Man\", 1).\nHas_n_members(\"Black Widow\", 1).\nHas_n_members(\"Hawkeye\", 1).\nHas_n_members(\"Ant-Man\", 1).\nHas_n_members(\"Wasp\", 1).\nHas_n_members(\"Black Panther\", 1).\nHas_n_members(\"Falcon\", 1).\nHas_n_members(\"Scarlet Witch\", 1).\nHas_n_members(\"Vision\", 1).\nHas_n_members(\"War Machine\", 1).\nHas_n_members(\"Spider-Man\", 1).\nHas_n_members(\"Doctor Strange\", 1).\nHas_n_members(\"Captain Marvel\", 1).\nHas_n_members(\"Mantis\", 1).\nHas_n_members(\"Nick Fury\", 1).\nHas_n_members(\"Rocket Raccoon\", 1).\nHas_n_members(\"Groot\", 1).\nHas_n_members(\"Gamora\", 1).\nHas_n_members(\"Drax\", 1).\nHas_n_members(\"Nebula\", 1).\nHas_n_members(\"Star-Lord\", 1).\nHas_n_members(\"Daredevil\", 1).\nHas_n_members(\"Iron Fist\", 1).\nHas_n_members(\"Elektra\", 1).\nHas_n_members(\"Punisher\", 1).\nHas_n_members(\"Jessica Jones\", 1).\nHas_n_members(\"Luke Cage\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand Sorceress\", 1).\nHas_n_members(\"Hand Blademaster\", 1).\nHas_n_members(\"Hand Assassin\", 1).\nHas_n_members(\"Hand Beastmaster\", 1).\nHas_n_members(\"Hand Warlord\", 1).\nHas_n_members(\"Hand Archer\", 1).\nHas_n_members(\"Hand Sentry\", 1).\nHas_n_members(\"Hand"]}
{"id": 854, "answer": false, "completion": ".decl Has_n_lines(Book:symbol, N_lines:float)\nHas_n_lines(\"The Road Not Taken\", 2).\nHas_n_lines(\"The Road Not Taken\", 3).\nHas_n_lines(\"The Road Not Taken\", 4).\n.decl Has_n_words(Book:symbol, N_words:float)\nHas_n_words(\"The Road Not Taken\", 5).\nHas_n_words(\"The Road Not Taken\", 6).\nHas_n_words(\"The Road Not Taken\", 7).\n.decl Answer()\nAnswer() :- Has_n_lines(\"The Road Not Taken\", n_lines), Has_n_words(\"The Road Not Taken\", n_words), n_lines = n_words.\n.output Answer\n\n", "completions": [".decl Has_n_lines(Book:symbol, N_lines:float)\nHas_n_lines(\"The Road Not Taken\", 2).\nHas_n_lines(\"The Road Not Taken\", 3).\nHas_n_lines(\"The Road Not Taken\", 4).\n.decl Has_n_words(Book:symbol, N_words:float)\nHas_n_words(\"The Road Not Taken\", 5).\nHas_n_words(\"The Road Not Taken\", 6).\nHas_n_words(\"The Road Not Taken\", 7).\n.decl Answer()\nAnswer() :- Has_n_lines(\"The Road Not Taken\", n_lines), Has_n_words(\"The Road Not Taken\", n_words), n_lines = n_words.\n.output Answer\n\n"]}
{"id": 855, "answer": true, "completion": ".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Frederick II\", \"Prussia\").\nWas_born(\"Frederick II\", \"Germany\").\nWas_born(\"Frederick II\", \"Silesia\").\nWas_born(\"Frederick II\", \"Saxony\").\nWas_born(\"Frederick II\", \"Hesse\").\nWas_born(\"Frederick II\", \"Mecklenburg\").\nWas_born(\"Frederick II\", \"Hanover\").\nWas_born(\"Frederick II\", \"Brunswick\").\nWas_born(\"Frederick II\", \"Duchy of Holstein\").\nWas_born(\"Frederick II\", \"Duchy of Brunswick\").\nWas_born(\"Frederick II\", \"Duchy of Nassau\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg-Lahn\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg-Lahn\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-", "completions": [".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Frederick II\", \"Prussia\").\nWas_born(\"Frederick II\", \"Germany\").\nWas_born(\"Frederick II\", \"Silesia\").\nWas_born(\"Frederick II\", \"Saxony\").\nWas_born(\"Frederick II\", \"Hesse\").\nWas_born(\"Frederick II\", \"Mecklenburg\").\nWas_born(\"Frederick II\", \"Hanover\").\nWas_born(\"Frederick II\", \"Brunswick\").\nWas_born(\"Frederick II\", \"Duchy of Holstein\").\nWas_born(\"Frederick II\", \"Duchy of Brunswick\").\nWas_born(\"Frederick II\", \"Duchy of Nassau\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg-Lahn\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Weilburg-Lahn\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-Usingen\").\nWas_born(\"Frederick II\", \"Duchy of Nassau-"]}
{"id": 856, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Toyota Hilux\", 1.5).\nHas_weight(\"Mr. Ed\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"Toyota Hilux\", weight1), Has_weight(\"Mr. Ed\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Toyota Hilux\", 1.5).\nHas_weight(\"Mr. Ed\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"Toyota Hilux\", weight1), Has_weight(\"Mr. Ed\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 857, "answer": false, "completion": ".decl Is_a_name_origin(Name_origin:symbol)\nIs_a_name_origin(\"Wednesday\").\n.decl Is_a_name_origin(Name_origin:symbol)\nIs_a_name_origin(\"Communion\").\n.decl Answer()\nAnswer() :- Is_a_name_origin(\"Wednesday\"), Is_a_name_origin(\"Communion\").\n.output Answer\n\n", "completions": [".decl Is_a_name_origin(Name_origin:symbol)\nIs_a_name_origin(\"Wednesday\").\n.decl Is_a_name_origin(Name_origin:symbol)\nIs_a_name_origin(\"Communion\").\n.decl Answer()\nAnswer() :- Is_a_name_origin(\"Wednesday\"), Is_a_name_origin(\"Communion\").\n.output Answer\n\n"]}
{"id": 858, "answer": false, "completion": ".decl Has_horoscope(Astronomer:symbol)\nHas_horoscope(\"Edwin Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope", "completions": [".decl Has_horoscope(Astronomer:symbol)\nHas_horoscope(\"Edwin Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope(\"Edwin Powell Hubble\").\nHas_horoscope"]}
{"id": 859, "answer": true, "completion": ".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Edward Snowden\", \"United Nations Conference on Trade and Development\").\n.decl Located_in(Place:symbol, Country:symbol)\nLocated_in(\"United Nations Conference on Trade and Development\", \"Switzerland\").\n.decl Answer()\nAnswer() :- Visited(\"Edward Snowden\", place), Located_in(place, country), country = \"Switzerland\".\n.output Answer\n\n", "completions": [".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Edward Snowden\", \"United Nations Conference on Trade and Development\").\n.decl Located_in(Place:symbol, Country:symbol)\nLocated_in(\"United Nations Conference on Trade and Development\", \"Switzerland\").\n.decl Answer()\nAnswer() :- Visited(\"Edward Snowden\", place), Located_in(place, country), country = \"Switzerland\".\n.output Answer\n\n"]}
{"id": 860, "answer": false, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"spinach\", 200).\nHas_calories(\"chicken\", 400).\n.decl Answer()\nAnswer() :- Has_calories(\"spinach\", calories1), Has_calories(\"chicken\", calories2), calories1 > calories2.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"spinach\", 200).\nHas_calories(\"chicken\", 400).\n.decl Answer()\nAnswer() :- Has_calories(\"spinach\", calories1), Has_calories(\"chicken\", calories2), calories1 > calories2.\n.output Answer\n\n"]}
{"id": 861, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Superbowl\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bengal fox\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Superbowl\", n_members1), Has_n_members(\"bengal fox\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Superbowl\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bengal fox\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Superbowl\", n_members1), Has_n_members(\"bengal fox\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 862, "answer": false, "completion": ".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Jehovah's witness\", \"God\").\nBelieves_in(\"Jehovah's witness\", \"the devil\").\nBelieves_in(\"Alice\", \"the magic of Wonderland\").\n.decl Answer()\nAnswer() :- Believes_in(\"Jehovah's witness\", belief), Believes_in(\"Alice\", belief).\n.output Answer\n\n", "completions": [".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Jehovah's witness\", \"God\").\nBelieves_in(\"Jehovah's witness\", \"the devil\").\nBelieves_in(\"Alice\", \"the magic of Wonderland\").\n.decl Answer()\nAnswer() :- Believes_in(\"Jehovah's witness\", belief), Believes_in(\"Alice\", belief).\n.output Answer\n\n"]}
{"id": 863, "answer": true, "completion": ".decl Has_ability(Person:symbol, Ability:symbol)\nHas_ability(\"Germaphobia\", \"participate in Judo\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Germaphobia\", \"Judo\").\n.decl Answer()\nAnswer() :- Has_ability(\"Germaphobia\", ability), Has_skill(\"Germaphobia\", skill), ability == skill.\n.output Answer\n\n", "completions": [".decl Has_ability(Person:symbol, Ability:symbol)\nHas_ability(\"Germaphobia\", \"participate in Judo\").\n.decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Germaphobia\", \"Judo\").\n.decl Answer()\nAnswer() :- Has_ability(\"Germaphobia\", ability), Has_skill(\"Germaphobia\", skill), ability == skill.\n.output Answer\n\n"]}
{"id": 864, "answer": false, "completion": ".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"lifeboat\", 0.5).\nHas_depth(\"Hooke Sea\", 1000).\n.decl Answer()\nAnswer() :- Has_depth(\"lifeboat\", depth1), Has_depth(\"Hooke Sea\", depth2), depth1 > depth2.\n.output Answer\n\n", "completions": [".decl Has_depth(Object:symbol, Depth:float)\nHas_depth(\"lifeboat\", 0.5).\nHas_depth(\"Hooke Sea\", 1000).\n.decl Answer()\nAnswer() :- Has_depth(\"lifeboat\", depth1), Has_depth(\"Hooke Sea\", depth2), depth1 > depth2.\n.output Answer\n\n"]}
{"id": 865, "answer": true, "completion": ".decl Is_popular(Constitution:symbol)\nIs_popular(\"Eighth Amendment to the United States Constitution\").\n.decl Answer()\nAnswer() :- Is_popular(\"Eighth Amendment to the United States Constitution\").\n.output Answer\n\n", "completions": [".decl Is_popular(Constitution:symbol)\nIs_popular(\"Eighth Amendment to the United States Constitution\").\n.decl Answer()\nAnswer() :- Is_popular(\"Eighth Amendment to the United States Constitution\").\n.output Answer\n\n"]}
{"id": 866, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"food cooking\", \"cosmic microwave background\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"food cooking\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"food cooking\", \"cosmic microwave background\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"food cooking\", time).\n.output Answer\n\n"]}
{"id": 867, "answer": true, "completion": ".decl Has_solubility(Object:symbol, Solubility:float)\nHas_solubility(\"Nigella Lawson\", 0.5).\n.decl Answer()\nAnswer() :- Has_solubility(\"Nigella Lawson\", solubility), solubility > 0.5.\n.output Answer\n\n", "completions": [".decl Has_solubility(Object:symbol, Solubility:float)\nHas_solubility(\"Nigella Lawson\", 0.5).\n.decl Answer()\nAnswer() :- Has_solubility(\"Nigella Lawson\", solubility), solubility > 0.5.\n.output Answer\n\n"]}
{"id": 868, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"field goal kick\", \"June\").\nHappens_in_time(\"field goal kick\", \"July\").\nHappens_in_time(\"field goal kick\", \"August\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Rahul Dravid\", \"June\").\nHappens_in_time(\"Rahul Dravid\", \"July\").\nHappens_in_time(\"Rahul Dravid\", \"August\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"field goal kick\", month), Happens_in_time(\"Rahul Dravid\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"field goal kick\", \"June\").\nHappens_in_time(\"field goal kick\", \"July\").\nHappens_in_time(\"field goal kick\", \"August\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Rahul Dravid\", \"June\").\nHappens_in_time(\"Rahul Dravid\", \"July\").\nHappens_in_time(\"Rahul Dravid\", \"August\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"field goal kick\", month), Happens_in_time(\"Rahul Dravid\", month).\n.output Answer\n\n"]}
{"id": 869, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"U2 concert\", \"June\").\nHappens_in_time(\"U2 concert\", \"July\").\nHappens_in_time(\"U2 concert\", \"August\").\n.decl Happens_at_location(Event:symbol, Location:symbol)\nHappens_at_location(\"U2 concert\", \"Polo Grounds\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"U2 concert\", month), Happens_at_location(\"U2 concert\", location), month = \"June\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"U2 concert\", \"June\").\nHappens_in_time(\"U2 concert\", \"July\").\nHappens_in_time(\"U2 concert\", \"August\").\n.decl Happens_at_location(Event:symbol, Location:symbol)\nHappens_at_location(\"U2 concert\", \"Polo Grounds\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"U2 concert\", month), Happens_at_location(\"U2 concert\", location), month = \"June\".\n.output Answer\n\n"]}
{"id": 870, "answer": true, "completion": ".decl Has_cuisine(Food:symbol, Cuisine:symbol)\nHas_cuisine(\"breakfast\", \"British\").\nHas_cuisine(\"dinner\", \"American\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"breakfast\", cuisine1), Has_cuisine(\"dinner\", cuisine2), cuisine1 = cuisine2.\n.output Answer\n\n", "completions": [".decl Has_cuisine(Food:symbol, Cuisine:symbol)\nHas_cuisine(\"breakfast\", \"British\").\nHas_cuisine(\"dinner\", \"American\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"breakfast\", cuisine1), Has_cuisine(\"dinner\", cuisine2), cuisine1 = cuisine2.\n.output Answer\n\n"]}
{"id": 871, "answer": true, "completion": ".decl Has_n_petals(Flower:symbol, N_petals:float)\nHas_n_petals(\"blooming onion\", 9).\nHas_n_petals(\"shallot\", 6).\n.decl Answer()\nAnswer() :- Has_n_petals(\"blooming onion\", n_petals1), Has_n_petals(\"shallot\", n_petals2), n_petals1 > n_petals2.\n.output Answer\n\n", "completions": [".decl Has_n_petals(Flower:symbol, N_petals:float)\nHas_n_petals(\"blooming onion\", 9).\nHas_n_petals(\"shallot\", 6).\n.decl Answer()\nAnswer() :- Has_n_petals(\"blooming onion\", n_petals1), Has_n_petals(\"shallot\", n_petals2), n_petals1 > n_petals2.\n.output Answer\n\n"]}
{"id": 872, "answer": true, "completion": ".decl Has_solubility(Object:symbol, Solubility:float)\nHas_solubility(\"salt\", 0.1).\nHas_solubility(\"isopropyl alcohol\", 0.9).\n.decl Answer()\nAnswer() :- Has_solubility(\"salt\", solubility1), Has_solubility(\"isopropyl alcohol\", solubility2), solubility1 < solubility2.\n.output Answer\n\n", "completions": [".decl Has_solubility(Object:symbol, Solubility:float)\nHas_solubility(\"salt\", 0.1).\nHas_solubility(\"isopropyl alcohol\", 0.9).\n.decl Answer()\nAnswer() :- Has_solubility(\"salt\", solubility1), Has_solubility(\"isopropyl alcohol\", solubility2), solubility1 < solubility2.\n.output Answer\n\n"]}
{"id": 873, "answer": false, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Mac Truck\", 10).\nHas_length(\"Golden Gate Bridge\", 10).\n.decl Answer()\nAnswer() :- Has_length(\"Mac Truck\", length1), Has_length(\"Golden Gate Bridge\", length2), length1 > length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Mac Truck\", 10).\nHas_length(\"Golden Gate Bridge\", 10).\n.decl Answer()\nAnswer() :- Has_length(\"Mac Truck\", length1), Has_length(\"Golden Gate Bridge\", length2), length1 > length2.\n.output Answer\n\n"]}
{"id": 874, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 875, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 876, "answer": false, "completion": ".decl Has_habitat(Object:symbol, Habitat:symbol)\nHas_habitat(\"cucumber\", \"desert\").\n.decl Answer()\nAnswer() :- Has_habitat(\"cucumber\", habitat), Has_habitat(\"desert\", habitat).\n.output Answer\n\n", "completions": [".decl Has_habitat(Object:symbol, Habitat:symbol)\nHas_habitat(\"cucumber\", \"desert\").\n.decl Answer()\nAnswer() :- Has_habitat(\"cucumber\", habitat), Has_habitat(\"desert\", habitat).\n.output Answer\n\n"]}
{"id": 877, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Borgia's World of Wonders\", \"May\").\nHappens_in_time(\"Ludacris's Release Therapy\", \"June\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Borgia's World of Wonders\", 1).\nHappens_every_n_months(\"Ludacris's Release Therapy\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Borgia's World of Wonders\", month), Happens_in_time(\"Ludacris's Release Therapy\", month), Happens_every_n_months(\"Borgia's World of Wonders\", n_months1), Happens_every_n_months(\"Ludacris's Release Therapy\", n_months2), n_months1 < n_months2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Borgia's World of Wonders\", \"May\").\nHappens_in_time(\"Ludacris's Release Therapy\", \"June\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Borgia's World of Wonders\", 1).\nHappens_every_n_months(\"Ludacris's Release Therapy\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Borgia's World of Wonders\", month), Happens_in_time(\"Ludacris's Release Therapy\", month), Happens_every_n_months(\"Borgia's World of Wonders\", n_months1), Happens_every_n_months(\"Ludacris's Release Therapy\", n_months2), n_months1 < n_months2.\n.output Answer\n\n"]}
{"id": 878, "answer": false, "completion": ".decl Allergic_to(Person:symbol, Allergen:symbol)\nAllergic_to(\"Celiac\", \"gluten\").\nAllergic_to(\"Celiac\", \"lactose\").\n.decl Contains(Ingredient:symbol, Allergen:symbol)\nContains(\"potato vodka\", \"gluten\").\nContains(\"potato vodka\", \"lactose\").\n.decl Answer()\nAnswer() :- Allergic_to(\"Celiac\", allergen), Contains(\"potato vodka\", allergen).\n.output Answer\n\n", "completions": [".decl Allergic_to(Person:symbol, Allergen:symbol)\nAllergic_to(\"Celiac\", \"gluten\").\nAllergic_to(\"Celiac\", \"lactose\").\n.decl Contains(Ingredient:symbol, Allergen:symbol)\nContains(\"potato vodka\", \"gluten\").\nContains(\"potato vodka\", \"lactose\").\n.decl Answer()\nAnswer() :- Allergic_to(\"Celiac\", allergen), Contains(\"potato vodka\", allergen).\n.output Answer\n\n"]}
{"id": 879, "answer": true, "completion": ".decl Is_polyamory_allowed(Religion:symbol)\nIs_polyamory_allowed(\"Catholic Church\").\n.decl Answer()\nAnswer() :- Is_polyamory_allowed(\"Catholic Church\").\n.output Answer\n\n", "completions": [".decl Is_polyamory_allowed(Religion:symbol)\nIs_polyamory_allowed(\"Catholic Church\").\n.decl Answer()\nAnswer() :- Is_polyamory_allowed(\"Catholic Church\").\n.output Answer\n\n"]}
{"id": 880, "answer": false, "completion": ".decl Has_mental_disorder(Person:symbol, Disorder:symbol)\nHas_mental_disorder(\"John\", \"depression\").\nHas_mental_disorder(\"John\", \"schizophrenia\").\nHas_mental_disorder(\"John\", \"bipolar disorder\").\nHas_mental_disorder(\"John\", \"anxiety disorder\").\nHas_mental_disorder(\"John\", \"obsessive-compulsive disorder\").\nHas_mental_disorder(\"John\", \"post-traumatic stress disorder\").\nHas_mental_disorder(\"John\", \"eating disorder\").\nHas_mental_disorder(\"John\", \"personality disorder\").\nHas_mental_disorder(\"John\", \"antisocial personality disorder\").\n.decl Answer()\nAnswer() :- Has_mental_disorder(\"John\", disorder1), Has_mental_disorder(\"John\", disorder2), disorder1 \\= disorder2.\n.output Answer\n\n", "completions": [".decl Has_mental_disorder(Person:symbol, Disorder:symbol)\nHas_mental_disorder(\"John\", \"depression\").\nHas_mental_disorder(\"John\", \"schizophrenia\").\nHas_mental_disorder(\"John\", \"bipolar disorder\").\nHas_mental_disorder(\"John\", \"anxiety disorder\").\nHas_mental_disorder(\"John\", \"obsessive-compulsive disorder\").\nHas_mental_disorder(\"John\", \"post-traumatic stress disorder\").\nHas_mental_disorder(\"John\", \"eating disorder\").\nHas_mental_disorder(\"John\", \"personality disorder\").\nHas_mental_disorder(\"John\", \"antisocial personality disorder\").\n.decl Answer()\nAnswer() :- Has_mental_disorder(\"John\", disorder1), Has_mental_disorder(\"John\", disorder2), disorder1 \\= disorder2.\n.output Answer\n\n"]}
{"id": 881, "answer": true, "completion": ".decl Inspired_by(Brand:symbol, Inspiration:symbol)\nInspired_by(\"Tesla Motors\", \"Nikola Tesla\").\nInspired_by(\"Tesla Motors\", \"Edwin Hubble\").\nInspired_by(\"Tesla Motors\", \"Albert Einstein\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Tesla Motors\", inspiration), Inspired_by(brand2, inspiration), brand2 != \"Tesla Motors\".\n.output Answer\n\n", "completions": [".decl Inspired_by(Brand:symbol, Inspiration:symbol)\nInspired_by(\"Tesla Motors\", \"Nikola Tesla\").\nInspired_by(\"Tesla Motors\", \"Edwin Hubble\").\nInspired_by(\"Tesla Motors\", \"Albert Einstein\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Tesla Motors\", inspiration), Inspired_by(brand2, inspiration), brand2 != \"Tesla Motors\".\n.output Answer\n\n"]}
{"id": 882, "answer": false, "completion": ".decl Age(Person:symbol, Age:float)\nAge(\"eleventh-grader\", 11).\n.decl Age_requirement(Program:symbol, Age_requirement:float)\nAge_requirement(\"Medicare\", 65).\n.decl Answer()\nAnswer() :- Age(\"eleventh-grader\", age), Age_requirement(\"Medicare\", age_requirement), age >= age_requirement.\n.output Answer\n\n", "completions": [".decl Age(Person:symbol, Age:float)\nAge(\"eleventh-grader\", 11).\n.decl Age_requirement(Program:symbol, Age_requirement:float)\nAge_requirement(\"Medicare\", 65).\n.decl Answer()\nAnswer() :- Age(\"eleventh-grader\", age), Age_requirement(\"Medicare\", age_requirement), age >= age_requirement.\n.output Answer\n\n"]}
{"id": 883, "answer": true, "completion": ".decl Has_mood_disorder(Person:symbol)\nHas_mood_disorder(\"John\").\nHas_mood_disorder(\"Mary\").\n.decl Has_institution(Person:symbol)\nHas_institution(\"John\").\nHas_institution(\"Mary\").\n.decl Answer()\nAnswer() :- Has_mood_disorder(person), Has_institution(person).\n.output Answer\n\n", "completions": [".decl Has_mood_disorder(Person:symbol)\nHas_mood_disorder(\"John\").\nHas_mood_disorder(\"Mary\").\n.decl Has_institution(Person:symbol)\nHas_institution(\"John\").\nHas_institution(\"Mary\").\n.decl Answer()\nAnswer() :- Has_mood_disorder(person), Has_institution(person).\n.output Answer\n\n"]}
{"id": 884, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Gabon\", \"green\").\nHas_color(\"Gabon\", \"blue\").\nHas_color(\"Gabon\", \"yellow\").\nHas_color(\"Gabon\", \"red\").\nHas_color(\"Gabon\", \"white\").\nHas_color(\"Gabon\", \"orange\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"orange\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"green\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"indigo\").\nHas_color(\"rainbow\", \"violet\").\n.decl Answer()\nAnswer() :- Has_color(\"Gabon\", color1), Has_color(\"rainbow\", color2), color1 = color2.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Gabon\", \"green\").\nHas_color(\"Gabon\", \"blue\").\nHas_color(\"Gabon\", \"yellow\").\nHas_color(\"Gabon\", \"red\").\nHas_color(\"Gabon\", \"white\").\nHas_color(\"Gabon\", \"orange\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"orange\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"green\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"indigo\").\nHas_color(\"rainbow\", \"violet\").\n.decl Answer()\nAnswer() :- Has_color(\"Gabon\", color1), Has_color(\"rainbow\", color2), color1 = color2.\n.output Answer\n\n"]}
{"id": 885, "answer": false, "completion": ".decl Has_preventive_healthcare(Person:symbol)\nHas_preventive_healthcare(\"John\").\nHas_preventive_healthcare(\"Mary\").\n.decl Has_sickness_visit(Person:symbol)\nHas_sickness_visit(\"John\").\nHas_sickness_visit(\"Mary\").\n.decl Answer()\nAnswer() :- Has_preventive_healthcare(person1), Has_sickness_visit(person1).\n.output Answer\n\n", "completions": [".decl Has_preventive_healthcare(Person:symbol)\nHas_preventive_healthcare(\"John\").\nHas_preventive_healthcare(\"Mary\").\n.decl Has_sickness_visit(Person:symbol)\nHas_sickness_visit(\"John\").\nHas_sickness_visit(\"Mary\").\n.decl Answer()\nAnswer() :- Has_preventive_healthcare(person1), Has_sickness_visit(person1).\n.output Answer\n\n"]}
{"id": 886, "answer": true, "completion": ".decl Has_fat_content(Food:symbol, Fat_content:float)\nHas_fat_content(\"McDonald's hamburger\", 0.1).\nHas_fat_content(\"McDonald's hamburger\", 0.2).\nHas_fat_content(\"McDonald's hamburger\", 0.3).\nHas_fat_content(\"McDonald's hamburger\", 0.4).\nHas_fat_content(\"McDonald's hamburger\", 0.5).\nHas_fat_content(\"McDonald's hamburger\", 0.6).\nHas_fat_content(\"McDonald's hamburger\", 0.7).\n.decl Has_n_fat_contents(Food:symbol, N_fat_contents:float)\nHas_n_fat_contents(\"McDonald's hamburger\", 7).\n.decl Answer()\nAnswer() :- Has_n_fat_contents(\"McDonald's hamburger\", n_fat_contents), Has_fat_content(\"McDonald's hamburger\", fat_content), fat_content > 0.27.\n.output Answer\n\n", "completions": [".decl Has_fat_content(Food:symbol, Fat_content:float)\nHas_fat_content(\"McDonald's hamburger\", 0.1).\nHas_fat_content(\"McDonald's hamburger\", 0.2).\nHas_fat_content(\"McDonald's hamburger\", 0.3).\nHas_fat_content(\"McDonald's hamburger\", 0.4).\nHas_fat_content(\"McDonald's hamburger\", 0.5).\nHas_fat_content(\"McDonald's hamburger\", 0.6).\nHas_fat_content(\"McDonald's hamburger\", 0.7).\n.decl Has_n_fat_contents(Food:symbol, N_fat_contents:float)\nHas_n_fat_contents(\"McDonald's hamburger\", 7).\n.decl Answer()\nAnswer() :- Has_n_fat_contents(\"McDonald's hamburger\", n_fat_contents), Has_fat_content(\"McDonald's hamburger\", fat_content), fat_content > 0.27.\n.output Answer\n\n"]}
{"id": 887, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Vikings\", \"8th century\").\nHappens_in_time(\"Vikings\", \"9th century\").\nHappens_in_time(\"Vikings\", \"10th century\").\nHappens_in_time(\"Vikings\", \"11th century\").\nHappens_in_time(\"Vikings\", \"12th century\").\nHappens_in_time(\"Vikings\", \"13th century\").\nHappens_in_time(\"Vikings\", \"14th century\").\nHappens_in_time(\"Vikings\", \"15th century\").\nHappens_in_time(\"Vikings\", \"16th century\").\nHappens_in_time(\"Vikings\", \"17th century\").\nHappens_in_time(\"Vikings\", \"18th century\").\nHappens_in_time(\"Vikings\", \"19th century\").\nHappens_in_time(\"Vikings\", \"20th century\").\nHappens_in_time(\"Vikings\", \"21st century\").\nHappens_in_time(\"Vikings\", \"22nd century\").\nHappens_in_time(\"Vikings\", \"23rd century\").\nHappens_in_time(\"Vikings\", \"24th century\").\nHappens_in_time(\"Vikings\", \"25th century\").\nHappens_in_time(\"Vikings\", \"26th century\").\nHappens_in_time(\"Vikings\", \"27th century\").\nHappens_in_time(\"Vikings\", \"28th century\").\nHappens_in_time(\"Vikings\", \"29th century\").\nHappens_in_time(\"Vikings\", \"30th century\").\nHappens_in_time(\"Vikings\", \"31st century\").\nHappens_in_time(\"Vikings\", \"32nd century\").\nHappens_in_time(\"Vikings\", \"33rd century\").\nHappens_in_time(\"Vikings\", \"34th century\").\nHappens_in_time(\"Vikings\", \"35th century\").\nHappens_in_time(\"Vikings\", \"36th century\").\nHappens_in_time(\"Vikings\", \"37th century\").\nHappens_in_time(\"Vikings\", \"38th century\").\nHappens_in_time(\"Vikings\", \"39th century\").\nHappens_in_time(\"Vikings\", \"40th century\").\nHappens_in_time(\"Vikings\", \"41st century\").\nHappens_in_time(\"Vikings\", \"42nd century\").\nHappens_in_time(\"Vikings\", \"43rd century\").\nHappens_in_time(\"Vikings\", \"44th century\").\nHappens_in_time(\"Vikings\", \"45th century\").\nHappens_in_time(\"Vikings\", \"46th century\").\nHappens_in_time(\"Vikings\", \"47th century\").\nHappens_in_time(\"Vikings\", \"48th century\").\nHappens_in_time(\"Vikings\", \"49th century\").\nHappens_in_time(\"Vikings\", \"50th century\").\nHappens_in", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Vikings\", \"8th century\").\nHappens_in_time(\"Vikings\", \"9th century\").\nHappens_in_time(\"Vikings\", \"10th century\").\nHappens_in_time(\"Vikings\", \"11th century\").\nHappens_in_time(\"Vikings\", \"12th century\").\nHappens_in_time(\"Vikings\", \"13th century\").\nHappens_in_time(\"Vikings\", \"14th century\").\nHappens_in_time(\"Vikings\", \"15th century\").\nHappens_in_time(\"Vikings\", \"16th century\").\nHappens_in_time(\"Vikings\", \"17th century\").\nHappens_in_time(\"Vikings\", \"18th century\").\nHappens_in_time(\"Vikings\", \"19th century\").\nHappens_in_time(\"Vikings\", \"20th century\").\nHappens_in_time(\"Vikings\", \"21st century\").\nHappens_in_time(\"Vikings\", \"22nd century\").\nHappens_in_time(\"Vikings\", \"23rd century\").\nHappens_in_time(\"Vikings\", \"24th century\").\nHappens_in_time(\"Vikings\", \"25th century\").\nHappens_in_time(\"Vikings\", \"26th century\").\nHappens_in_time(\"Vikings\", \"27th century\").\nHappens_in_time(\"Vikings\", \"28th century\").\nHappens_in_time(\"Vikings\", \"29th century\").\nHappens_in_time(\"Vikings\", \"30th century\").\nHappens_in_time(\"Vikings\", \"31st century\").\nHappens_in_time(\"Vikings\", \"32nd century\").\nHappens_in_time(\"Vikings\", \"33rd century\").\nHappens_in_time(\"Vikings\", \"34th century\").\nHappens_in_time(\"Vikings\", \"35th century\").\nHappens_in_time(\"Vikings\", \"36th century\").\nHappens_in_time(\"Vikings\", \"37th century\").\nHappens_in_time(\"Vikings\", \"38th century\").\nHappens_in_time(\"Vikings\", \"39th century\").\nHappens_in_time(\"Vikings\", \"40th century\").\nHappens_in_time(\"Vikings\", \"41st century\").\nHappens_in_time(\"Vikings\", \"42nd century\").\nHappens_in_time(\"Vikings\", \"43rd century\").\nHappens_in_time(\"Vikings\", \"44th century\").\nHappens_in_time(\"Vikings\", \"45th century\").\nHappens_in_time(\"Vikings\", \"46th century\").\nHappens_in_time(\"Vikings\", \"47th century\").\nHappens_in_time(\"Vikings\", \"48th century\").\nHappens_in_time(\"Vikings\", \"49th century\").\nHappens_in_time(\"Vikings\", \"50th century\").\nHappens_in"]}
{"id": 888, "answer": false, "completion": ".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"earth\", 1).\n.decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"ORIF implant\", 1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"ORIF implant\", magnetic_field), Has_magnetic_field(\"earth\", earth_magnetic_field), magnetic_field > earth_magnetic_field.\n.output Answer\n\n", "completions": [".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"earth\", 1).\n.decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"ORIF implant\", 1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"ORIF implant\", magnetic_field), Has_magnetic_field(\"earth\", earth_magnetic_field), magnetic_field > earth_magnetic_field.\n.output Answer\n\n"]}
{"id": 889, "answer": true, "completion": ".decl Has_n_stars(Galaxy:symbol, N_stars:float)\nHas_n_stars(\"Milky Way\", 1000000000000).\n.decl Has_n_people(Planet:symbol, N_people:float)\nHas_n_people(\"earth\", 7000000000).\n.decl Answer()\nAnswer() :- Has_n_stars(\"Milky Way\", n_stars), Has_n_people(\"earth\", n_people), n_stars >= 10*n_people.\n.output Answer\n\n", "completions": [".decl Has_n_stars(Galaxy:symbol, N_stars:float)\nHas_n_stars(\"Milky Way\", 1000000000000).\n.decl Has_n_people(Planet:symbol, N_people:float)\nHas_n_people(\"earth\", 7000000000).\n.decl Answer()\nAnswer() :- Has_n_stars(\"Milky Way\", n_stars), Has_n_people(\"earth\", n_people), n_stars >= 10*n_people.\n.output Answer\n\n"]}
{"id": 890, "answer": false, "completion": ".decl Is_found_on(Object:symbol, Plate:symbol)\nIs_found_on(\"tibia\", \"holiday plate\").\nIs_found_on(\"parsley\", \"holiday plate\").\n.decl Answer()\nAnswer() :- Is_found_on(\"tibia\", plate), Is_found_on(\"parsley\", plate).\n.output Answer\n\n", "completions": [".decl Is_found_on(Object:symbol, Plate:symbol)\nIs_found_on(\"tibia\", \"holiday plate\").\nIs_found_on(\"parsley\", \"holiday plate\").\n.decl Answer()\nAnswer() :- Is_found_on(\"tibia\", plate), Is_found_on(\"parsley\", plate).\n.output Answer\n\n"]}
{"id": 891, "answer": true, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Ashland, Oregon\", 0).\n.decl Answer()\nAnswer() :- Has_population(\"Ashland, Oregon\", population), population < 10000.\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Ashland, Oregon\", 0).\n.decl Answer()\nAnswer() :- Has_population(\"Ashland, Oregon\", population), population < 10000.\n.output Answer\n\n"]}
{"id": 892, "answer": false, "completion": ".decl Born(Person:symbol, Year:float)\nBorn(\"Peter Fonda\", 1961).\nBorn(\"Danny Glover\", 1946).\nBorn(\"Jack Nicholson\", 1937).\nBorn(\"Tom Hanks\", 1956).\nBorn(\"Sissy Spacek\", 1949).\nBorn(\"Richard Dreyfuss\", 1947).\nBorn(\"George Kennedy\", 1930).\nBorn(\"Kurt Russell\", 1940).\nBorn(\"James Dean\", 1931).\nBorn(\"John Wayne\", 1907).\nBorn(\"Jane Fonda\", 1937).\nBorn(\"Tony Curtis\", 1925).\nBorn(\"Jack Lemmon\", 1925).\nBorn(\"Burt Lancaster\", 1913).\nBorn(\"Lee Marvin\", 1925).\nBorn(\"Cloris Leachman\", 1920).\nBorn(\"Ellen Burstyn\", 1932).\nBorn(\"Michael J. Pollard\", 1940).\nBorn(\"Diane Keaton\", 1946).\nBorn(\"John Cusack\", 1966).\nBorn(\"Rosanna Arquette\", 1959).\nBorn(\"Helen Hunt\", 1963).\nBorn(\"Kathleen Turner\", 1954).\nBorn(\"Dudley Moore\", 1940).\nBorn(\"Cher\", 1946).\nBorn(\"Tom Cruise\", 1962).\nBorn(\"Mel Gibson\", 1956).\nBorn(\"Richard Donner\", 1926).\nBorn(\"Gary Fleder\", 1959).\nBorn(\"Jack Hill\", 1939).\nBorn(\"Roger Spottiswoode\", 1949).\nBorn(\"John Singleton\", 1966).\nBorn(\"Michael Rooker\", 1955).\nBorn(\"James Foley\", 1956).\nBorn(\"Oliver Stone\", 1946).\nBorn(\"Oliver Stone\", 1946).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Bo", "completions": [".decl Born(Person:symbol, Year:float)\nBorn(\"Peter Fonda\", 1961).\nBorn(\"Danny Glover\", 1946).\nBorn(\"Jack Nicholson\", 1937).\nBorn(\"Tom Hanks\", 1956).\nBorn(\"Sissy Spacek\", 1949).\nBorn(\"Richard Dreyfuss\", 1947).\nBorn(\"George Kennedy\", 1930).\nBorn(\"Kurt Russell\", 1940).\nBorn(\"James Dean\", 1931).\nBorn(\"John Wayne\", 1907).\nBorn(\"Jane Fonda\", 1937).\nBorn(\"Tony Curtis\", 1925).\nBorn(\"Jack Lemmon\", 1925).\nBorn(\"Burt Lancaster\", 1913).\nBorn(\"Lee Marvin\", 1925).\nBorn(\"Cloris Leachman\", 1920).\nBorn(\"Ellen Burstyn\", 1932).\nBorn(\"Michael J. Pollard\", 1940).\nBorn(\"Diane Keaton\", 1946).\nBorn(\"John Cusack\", 1966).\nBorn(\"Rosanna Arquette\", 1959).\nBorn(\"Helen Hunt\", 1963).\nBorn(\"Kathleen Turner\", 1954).\nBorn(\"Dudley Moore\", 1940).\nBorn(\"Cher\", 1946).\nBorn(\"Tom Cruise\", 1962).\nBorn(\"Mel Gibson\", 1956).\nBorn(\"Richard Donner\", 1926).\nBorn(\"Gary Fleder\", 1959).\nBorn(\"Jack Hill\", 1939).\nBorn(\"Roger Spottiswoode\", 1949).\nBorn(\"John Singleton\", 1966).\nBorn(\"Michael Rooker\", 1955).\nBorn(\"James Foley\", 1956).\nBorn(\"Oliver Stone\", 1946).\nBorn(\"Oliver Stone\", 1946).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Boorman\", 1940).\nBorn(\"John Bo"]}
{"id": 893, "answer": true, "completion": ".decl Has_aggression(Bee:symbol, Aggression:float)\nHas_aggression(\"aggressive bumblebee\", 1).\n.decl Has_lifespan(Bee:symbol, Lifespan:float)\nHas_lifespan(\"aggressive bumblebee\", 1).\n.decl Answer()\nAnswer() :- Has_aggression(\"aggressive bumblebee\", aggression), Has_lifespan(\"aggressive bumblebee\", lifespan), lifespan < aggression.\n.output Answer\n\n", "completions": [".decl Has_aggression(Bee:symbol, Aggression:float)\nHas_aggression(\"aggressive bumblebee\", 1).\n.decl Has_lifespan(Bee:symbol, Lifespan:float)\nHas_lifespan(\"aggressive bumblebee\", 1).\n.decl Answer()\nAnswer() :- Has_aggression(\"aggressive bumblebee\", aggression), Has_lifespan(\"aggressive bumblebee\", lifespan), lifespan < aggression.\n.output Answer\n\n"]}
{"id": 894, "answer": false, "completion": ".decl Has_surface_tension(Object:symbol, Surface_tension:float)\nHas_surface_tension(\"Mercury\", 0.01).\nHas_surface_tension(\"water\", 0.07).\n.decl Answer()\nAnswer() :- Has_surface_tension(\"Mercury\", surface_tension), Has_surface_tension(\"water\", surface_tension2), surface_tension > surface_tension2.\n.output Answer\n\n", "completions": [".decl Has_surface_tension(Object:symbol, Surface_tension:float)\nHas_surface_tension(\"Mercury\", 0.01).\nHas_surface_tension(\"water\", 0.07).\n.decl Answer()\nAnswer() :- Has_surface_tension(\"Mercury\", surface_tension), Has_surface_tension(\"water\", surface_tension2), surface_tension > surface_tension2.\n.output Answer\n\n"]}
{"id": 895, "answer": false, "completion": ".decl Has_record(Person:symbol, Record:float)\nHas_record(\"Javier Sotomayor\", 9.58).\n.decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Bengal cat\", 12).\n.decl Answer()\nAnswer() :- Has_record(\"Javier Sotomayor\", record), Has_speed(\"Bengal cat\", speed), speed > record.\n.output Answer\n\n", "completions": [".decl Has_record(Person:symbol, Record:float)\nHas_record(\"Javier Sotomayor\", 9.58).\n.decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"Bengal cat\", 12).\n.decl Answer()\nAnswer() :- Has_record(\"Javier Sotomayor\", record), Has_speed(\"Bengal cat\", speed), speed > record.\n.output Answer\n\n"]}
{"id": 896, "answer": true, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"rice\").\nHas_ingredient(\"rice pudding\", \"milk\").\nHas_ingredient(\"rice pudding\", \"sugar\").\n.decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"brown rice\", \"brown rice\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient), Has_ingredient(\"brown rice\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"rice\").\nHas_ingredient(\"rice pudding\", \"milk\").\nHas_ingredient(\"rice pudding\", \"sugar\").\n.decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"brown rice\", \"brown rice\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient), Has_ingredient(\"brown rice\", ingredient).\n.output Answer\n\n"]}
{"id": 897, "answer": false, "completion": ".decl Has_excess_adrenaline(Disease:symbol, Excess_adrenaline:bool)\nHas_excess_adrenaline(\"cancer\", true).\nHas_excess_adrenaline(\"cancer\", false).\n.decl Has_excess_adrenaline(Disease:symbol, Excess_adrenaline:bool)\nHas_excess_adrenaline(\"diabetes\", true).\nHas_excess_adrenaline(\"diabetes\", false).\n.decl Answer()\nAnswer() :- Has_excess_adrenaline(\"cancer\", excess_adrenaline), Has_excess_adrenaline(\"diabetes\", excess_adrenaline).\n.output Answer\n\n", "completions": [".decl Has_excess_adrenaline(Disease:symbol, Excess_adrenaline:bool)\nHas_excess_adrenaline(\"cancer\", true).\nHas_excess_adrenaline(\"cancer\", false).\n.decl Has_excess_adrenaline(Disease:symbol, Excess_adrenaline:bool)\nHas_excess_adrenaline(\"diabetes\", true).\nHas_excess_adrenaline(\"diabetes\", false).\n.decl Answer()\nAnswer() :- Has_excess_adrenaline(\"cancer\", excess_adrenaline), Has_excess_adrenaline(\"diabetes\", excess_adrenaline).\n.output Answer\n\n"]}
{"id": 898, "answer": true, "completion": ".decl Has_n_states(Country:symbol, N_states:float)\nHas_n_states(\"Ancient Greece\", 13).\nHas_n_states(\"United States\", 50).\n.decl Answer()\nAnswer() :- Has_n_states(\"Ancient Greece\", n_states1), Has_n_states(\"United States\", n_states2), n_states1 < n_states2.\n.output Answer\n\n", "completions": [".decl Has_n_states(Country:symbol, N_states:float)\nHas_n_states(\"Ancient Greece\", 13).\nHas_n_states(\"United States\", 50).\n.decl Answer()\nAnswer() :- Has_n_states(\"Ancient Greece\", n_states1), Has_n_states(\"United States\", n_states2), n_states1 < n_states2.\n.output Answer\n\n"]}
{"id": 899, "answer": false, "completion": ".decl Involved_in(Person:symbol, Company:symbol)\nInvolved_in(\"Ben Cohen\", \"Ben & Jerry's\").\nInvolved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.decl Involved_in(Person:symbol, Company:symbol)\nInvolved_in(\"Ben Cohen\", \"Ben & Jerry's\").\nInvolved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.decl Answer()\nAnswer() :- Involved_in(\"Ben Cohen\", \"Ben & Jerry's\"), Involved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.output Answer\n\n", "completions": [".decl Involved_in(Person:symbol, Company:symbol)\nInvolved_in(\"Ben Cohen\", \"Ben & Jerry's\").\nInvolved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.decl Involved_in(Person:symbol, Company:symbol)\nInvolved_in(\"Ben Cohen\", \"Ben & Jerry's\").\nInvolved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.decl Answer()\nAnswer() :- Involved_in(\"Ben Cohen\", \"Ben & Jerry's\"), Involved_in(\"Jerry Greenfield\", \"Ben & Jerry's\").\n.output Answer\n\n"]}
{"id": 900, "answer": false, "completion": ".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"Hillary Clinton\", \"United States Secretary of State\").\nWorks_for(\"Hillary Clinton\", \"White House\").\n.decl Answer()\nAnswer() :- Works_for(\"Hillary Clinton\", \"White House\").\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Organization:symbol)\nWorks_for(\"Hillary Clinton\", \"United States Secretary of State\").\nWorks_for(\"Hillary Clinton\", \"White House\").\n.decl Answer()\nAnswer() :- Works_for(\"Hillary Clinton\", \"White House\").\n.output Answer\n\n"]}
{"id": 901, "answer": true, "completion": ".decl Created(Person:symbol, Product:symbol)\nCreated(\"Bill Gates\", \"Xbox\").\nCreated(\"Bill Gates\", \"Windows\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPad\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPad\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"", "completions": [".decl Created(Person:symbol, Product:symbol)\nCreated(\"Bill Gates\", \"Xbox\").\nCreated(\"Bill Gates\", \"Windows\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPad\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPad\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\"Steve Jobs\", \"Macintosh\").\nCreated(\"Steve Jobs\", \"iPod\").\nCreated(\"Steve Jobs\", \"iPhone\").\nCreated(\""]}
{"id": 902, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"The Atlantic magazine\", \"August\").\nHappens_in_time(\"The Atlantic magazine\", \"September\").\nHappens_in_time(\"The Atlantic magazine\", \"October\").\nHappens_in_time(\"The Atlantic magazine\", \"November\").\nHappens_in_time(\"The Atlantic magazine\", \"December\").\nHappens_in_time(\"The Atlantic magazine\", \"January\").\nHappens_in_time(\"The Atlantic magazine\", \"February\").\nHappens_in_time(\"The Atlantic magazine\", \"March\").\nHappens_in_time(\"The Atlantic magazine\", \"April\").\nHappens_in_time(\"The Atlantic magazine\", \"May\").\nHappens_in_time(\"The Atlantic magazine\", \"June\").\nHappens_in_time(\"The Atlantic magazine\", \"July\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Games of the XXII Olympiad\", \"August\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"September\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"October\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"November\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"December\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"January\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"February\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"March\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"April\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"May\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"June\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"July\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"The Atlantic magazine\", month1), Happens_in_time(\"Games of the XXII Olympiad\", month2), month1 = month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"The Atlantic magazine\", \"August\").\nHappens_in_time(\"The Atlantic magazine\", \"September\").\nHappens_in_time(\"The Atlantic magazine\", \"October\").\nHappens_in_time(\"The Atlantic magazine\", \"November\").\nHappens_in_time(\"The Atlantic magazine\", \"December\").\nHappens_in_time(\"The Atlantic magazine\", \"January\").\nHappens_in_time(\"The Atlantic magazine\", \"February\").\nHappens_in_time(\"The Atlantic magazine\", \"March\").\nHappens_in_time(\"The Atlantic magazine\", \"April\").\nHappens_in_time(\"The Atlantic magazine\", \"May\").\nHappens_in_time(\"The Atlantic magazine\", \"June\").\nHappens_in_time(\"The Atlantic magazine\", \"July\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Games of the XXII Olympiad\", \"August\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"September\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"October\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"November\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"December\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"January\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"February\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"March\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"April\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"May\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"June\").\nHappens_in_time(\"Games of the XXII Olympiad\", \"July\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"The Atlantic magazine\", month1), Happens_in_time(\"Games of the XXII Olympiad\", month2), month1 = month2.\n.output Answer\n\n"]}
{"id": 903, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"James Watson\", 86).\nHas_age(\"Watson's partner\", 90).\n.decl Answer()\nAnswer() :- Has_age(\"James Watson\", age1), Has_age(\"Watson's partner\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"James Watson\", 86).\nHas_age(\"Watson's partner\", 90).\n.decl Answer()\nAnswer() :- Has_age(\"James Watson\", age1), Has_age(\"Watson's partner\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 904, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Alice\", \"Alice's Adventures in Wonderland\").\n.decl Has_masonic_degree(Person:symbol, Degree:symbol)\nHas_masonic_degree(\"Alice\", \"Master Mason\").\n.decl Answer()\nAnswer() :- Has_name(\"Alice\", name), Has_masonic_degree(person, degree), name = person.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Alice\", \"Alice's Adventures in Wonderland\").\n.decl Has_masonic_degree(Person:symbol, Degree:symbol)\nHas_masonic_degree(\"Alice\", \"Master Mason\").\n.decl Answer()\nAnswer() :- Has_name(\"Alice\", name), Has_masonic_degree(person, degree), name = person.\n.output Answer\n\n"]}
{"id": 905, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"asteroid\", \"virginity\").\n.decl Answer()\nAnswer() :- Has_property(\"asteroid\", property), property = \"virginity\".\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"asteroid\", \"virginity\").\n.decl Answer()\nAnswer() :- Has_property(\"asteroid\", property), property = \"virginity\".\n.output Answer\n\n"]}
{"id": 906, "answer": false, "completion": ".decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"Easy Rider\").\nStarred_in(\"Dean Cain\", \"Easy Rider\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\nStarred_in(\"Dean Cain\", \"The Woman in Red\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Dean Cain\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Dean Cain\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Answer()\nAnswer() :- Starred_in(\"Jack Nicholson\", movie1), Starred_in(\"Dean Cain\", movie2), Starred_in(\"Jack Nicholson\", movie3), Starred_in(\"Jack Nicholson\", movie4), Starred_in(\"Jack Nicholson\", movie5), Starred_in(\"Jack Nicholson\", movie6), Starred_in(\"Jack Nicholson\", movie7), Starred_in(\"Jack Nicholson\", movie8), Starred_in(\"Jack Nicholson\", movie9), Starred_in(\"Jack Nicholson\", movie10), Starred_in(\"Jack Nicholson\", movie11), Starred_in(\"Jack Nicholson\", movie12), Starred_in(\"Jack Nicholson\", movie13), Starred_in(\"Jack Nicholson\", movie14), Starred_in(\"Jack Nicholson\", movie15), Starred_in(\"Jack Nicholson\", movie16), Starred_in(\"Jack Nicholson\", movie17), Starred_in(\"Jack Nicholson\", movie18), Starred_in(\"Jack Nicholson\", movie19), Starred_in(\"Jack Nicholson\", movie20), Starred_in(\"Jack Nicholson\", movie21), Starred_in(\"Jack Nicholson\", movie22), Starred_in(\"Jack Nicholson\", movie23), Starred_in(\"Jack Nicholson\", movie24), Starred_in(\"Jack Nicholson\", movie25), Starred_in(\"Jack Nicholson\", movie26), Starred_in(\"Jack Nicholson\", movie27), Starred_in(\"Jack Nicholson\", movie28), Starred_in(\"Jack Nicholson\", movie29), Starred_in(\"Jack Nicholson\", movie30), Starred_in(\"Jack Nicholson\", movie31), Starred_in(\"Jack Nicholson\", movie32), Starred_in(\"Jack Nicholson\", movie33), Starred_in(\"Jack Nicholson\", movie34), Starred_in(\"Jack Nicholson\", movie35), Starred_in(\"Jack Nicholson\", movie36), Starred_in(\"Jack Nicholson\", movie37), Starred_in(\"Jack Nicholson\", movie38), Starred_in(\"Jack Nicholson\", movie39), Starred_in(\"Jack Nicholson\", movie40), Starred_in(\"Jack Nicholson\", movie41), Starred_in(\"Jack Nicholson\", movie42), Starred_in(\"Jack Nicholson\", movie43), Starred_in(\"Jack Nicholson\", movie44), Star", "completions": [".decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"Easy Rider\").\nStarred_in(\"Dean Cain\", \"Easy Rider\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\nStarred_in(\"Dean Cain\", \"The Woman in Red\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Dean Cain\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Dean Cain\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Red\").\n.decl Starred_in(Person:symbol, Movie:symbol)\nStarred_in(\"Jack Nicholson\", \"The Woman in Blue\").\n.decl Answer()\nAnswer() :- Starred_in(\"Jack Nicholson\", movie1), Starred_in(\"Dean Cain\", movie2), Starred_in(\"Jack Nicholson\", movie3), Starred_in(\"Jack Nicholson\", movie4), Starred_in(\"Jack Nicholson\", movie5), Starred_in(\"Jack Nicholson\", movie6), Starred_in(\"Jack Nicholson\", movie7), Starred_in(\"Jack Nicholson\", movie8), Starred_in(\"Jack Nicholson\", movie9), Starred_in(\"Jack Nicholson\", movie10), Starred_in(\"Jack Nicholson\", movie11), Starred_in(\"Jack Nicholson\", movie12), Starred_in(\"Jack Nicholson\", movie13), Starred_in(\"Jack Nicholson\", movie14), Starred_in(\"Jack Nicholson\", movie15), Starred_in(\"Jack Nicholson\", movie16), Starred_in(\"Jack Nicholson\", movie17), Starred_in(\"Jack Nicholson\", movie18), Starred_in(\"Jack Nicholson\", movie19), Starred_in(\"Jack Nicholson\", movie20), Starred_in(\"Jack Nicholson\", movie21), Starred_in(\"Jack Nicholson\", movie22), Starred_in(\"Jack Nicholson\", movie23), Starred_in(\"Jack Nicholson\", movie24), Starred_in(\"Jack Nicholson\", movie25), Starred_in(\"Jack Nicholson\", movie26), Starred_in(\"Jack Nicholson\", movie27), Starred_in(\"Jack Nicholson\", movie28), Starred_in(\"Jack Nicholson\", movie29), Starred_in(\"Jack Nicholson\", movie30), Starred_in(\"Jack Nicholson\", movie31), Starred_in(\"Jack Nicholson\", movie32), Starred_in(\"Jack Nicholson\", movie33), Starred_in(\"Jack Nicholson\", movie34), Starred_in(\"Jack Nicholson\", movie35), Starred_in(\"Jack Nicholson\", movie36), Starred_in(\"Jack Nicholson\", movie37), Starred_in(\"Jack Nicholson\", movie38), Starred_in(\"Jack Nicholson\", movie39), Starred_in(\"Jack Nicholson\", movie40), Starred_in(\"Jack Nicholson\", movie41), Starred_in(\"Jack Nicholson\", movie42), Starred_in(\"Jack Nicholson\", movie43), Starred_in(\"Jack Nicholson\", movie44), Star"]}
{"id": 907, "answer": false, "completion": ".decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Melania Trump\", \"model\").\nHas_profession(\"Olga Kurylenko\", \"model\").\n.decl Answer()\nAnswer() :- Has_profession(\"Melania Trump\", profession), Has_profession(\"Olga Kurylenko\", profession).\n.output Answer\n\n", "completions": [".decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Melania Trump\", \"model\").\nHas_profession(\"Olga Kurylenko\", \"model\").\n.decl Answer()\nAnswer() :- Has_profession(\"Melania Trump\", profession), Has_profession(\"Olga Kurylenko\", profession).\n.output Answer\n\n"]}
{"id": 908, "answer": true, "completion": ".decl Makes_circuit_board(Person:symbol)\nMakes_circuit_board(\"Bill Gates\").\nMakes_circuit_board(\"Steve Jobs\").\n.decl Works_with_electricity(Person:symbol)\nWorks_with_electricity(\"Bill Gates\").\nWorks_with_electricity(\"Steve Jobs\").\n.decl Answer()\nAnswer() :- Makes_circuit_board(person), Works_with_electricity(person).\n.output Answer\n\n", "completions": [".decl Makes_circuit_board(Person:symbol)\nMakes_circuit_board(\"Bill Gates\").\nMakes_circuit_board(\"Steve Jobs\").\n.decl Works_with_electricity(Person:symbol)\nWorks_with_electricity(\"Bill Gates\").\nWorks_with_electricity(\"Steve Jobs\").\n.decl Answer()\nAnswer() :- Makes_circuit_board(person), Works_with_electricity(person).\n.output Answer\n\n"]}
{"id": 909, "answer": true, "completion": ".decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"jumping spider\", 8).\n.decl Has_n_contact_lenses(Person:symbol, N_contact_lenses:float)\nHas_n_contact_lenses(\"jumping spider\", 6).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"jumping spider\", n_eyes), Has_n_contact_lenses(\"jumping spider\", n_contact_lenses), n_eyes > n_contact_lenses.\n.output Answer\n\n", "completions": [".decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"jumping spider\", 8).\n.decl Has_n_contact_lenses(Person:symbol, N_contact_lenses:float)\nHas_n_contact_lenses(\"jumping spider\", 6).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"jumping spider\", n_eyes), Has_n_contact_lenses(\"jumping spider\", n_contact_lenses), n_eyes > n_contact_lenses.\n.output Answer\n\n"]}
{"id": 910, "answer": true, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"bitcoin\", 0.0012).\nHas_value(\"Louisiana Purchase\", 23000000).\n.decl Answer()\nAnswer() :- Has_value(\"bitcoin\", value1), Has_value(\"Louisiana Purchase\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"bitcoin\", 0.0012).\nHas_value(\"Louisiana Purchase\", 23000000).\n.decl Answer()\nAnswer() :- Has_value(\"bitcoin\", value1), Has_value(\"Louisiana Purchase\", value2), value1 > value2.\n.output Answer\n\n"]}
{"id": 911, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"The Hobbit\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"The Hobbit\", length), length <= 4.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"The Hobbit\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"The Hobbit\", length), length <= 4.\n.output Answer\n\n"]}
{"id": 912, "answer": true, "completion": ".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"Boeing 737\", 100).\n.decl Has_revenue(Object:symbol, Revenue:float)\nHas_revenue(\"Wonder Woman (2017 film)\", 500).\n.decl Answer()\nAnswer() :- Has_cost(\"Boeing 737\", cost), Has_revenue(\"Wonder Woman (2017 film)\", revenue), cost < revenue.\n.output Answer\n\n", "completions": [".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"Boeing 737\", 100).\n.decl Has_revenue(Object:symbol, Revenue:float)\nHas_revenue(\"Wonder Woman (2017 film)\", 500).\n.decl Answer()\nAnswer() :- Has_cost(\"Boeing 737\", cost), Has_revenue(\"Wonder Woman (2017 film)\", revenue), cost < revenue.\n.output Answer\n\n"]}
{"id": 913, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"death of a member of the royal family\", \"June\").\nHappens_in_time(\"death of a member of the royal family\", \"July\").\nHappens_in_time(\"death of a member of the royal family\", \"August\").\nHappens_in_time(\"death of a member of the royal family\", \"September\").\nHappens_in_time(\"death of a member of the royal family\", \"October\").\nHappens_in_time(\"death of a member of the royal family\", \"November\").\nHappens_in_time(\"death of a member of the royal family\", \"December\").\nHappens_in_time(\"death of a member of the royal family\", \"January\").\nHappens_in_time(\"death of a member of the royal family\", \"February\").\nHappens_in_time(\"death of a member of the royal family\", \"March\").\nHappens_in_time(\"death of a member of the royal family\", \"April\").\nHappens_in_time(\"death of a member of the royal family\", \"May\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"death of a member of the royal family\", \"June\").\nHappens_in_month(\"death of a member of the royal family\", \"July\").\nHappens_in_month(\"death of a member of the royal family\", \"August\").\nHappens_in_month(\"death of a member of the royal family\", \"September\").\nHappens_in_month(\"death of a member of the royal family\", \"October\").\nHappens_in_month(\"death of a member of the royal family\", \"November\").\nHappens_in_month(\"death of a member of the royal family\", \"December\").\nHappens_in_month(\"death of a member of the royal family\", \"January\").\nHappens_in_month(\"death of a member of the royal family\", \"February\").\nHappens_in_month(\"death of a member of the royal family\", \"March\").\nHappens_in_month(\"death of a member of the royal family\", \"April\").\nHappens_in_month(\"death of a member of the royal family\", \"May\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"death of a member of the royal family\", \"1944\").\nHappens_in_year(\"death of a member of the royal family\", \"1945\").\nHappens_in_year(\"death of a member of the royal family\", \"1946\").\nHappens_in_year(\"death of a member of the royal family\", \"1947\").\nHappens_in_year(\"death of a member of the royal family\", \"1948\").\nHappens_in_year(\"death of a member of the royal family\", \"1949\").\nHappens_in_year(\"death of a member of the royal family\", \"1950\").\nHappens_in_year(\"death of a member of the royal family\", \"1951\").\nHappens_in_year(\"death of a member of the royal family\", \"1952\").\nHappens_in_year(\"death of a member of the royal family\", \"1953\").\nHappens_in_year(\"death of a member of the royal family\",", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"death of a member of the royal family\", \"June\").\nHappens_in_time(\"death of a member of the royal family\", \"July\").\nHappens_in_time(\"death of a member of the royal family\", \"August\").\nHappens_in_time(\"death of a member of the royal family\", \"September\").\nHappens_in_time(\"death of a member of the royal family\", \"October\").\nHappens_in_time(\"death of a member of the royal family\", \"November\").\nHappens_in_time(\"death of a member of the royal family\", \"December\").\nHappens_in_time(\"death of a member of the royal family\", \"January\").\nHappens_in_time(\"death of a member of the royal family\", \"February\").\nHappens_in_time(\"death of a member of the royal family\", \"March\").\nHappens_in_time(\"death of a member of the royal family\", \"April\").\nHappens_in_time(\"death of a member of the royal family\", \"May\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"death of a member of the royal family\", \"June\").\nHappens_in_month(\"death of a member of the royal family\", \"July\").\nHappens_in_month(\"death of a member of the royal family\", \"August\").\nHappens_in_month(\"death of a member of the royal family\", \"September\").\nHappens_in_month(\"death of a member of the royal family\", \"October\").\nHappens_in_month(\"death of a member of the royal family\", \"November\").\nHappens_in_month(\"death of a member of the royal family\", \"December\").\nHappens_in_month(\"death of a member of the royal family\", \"January\").\nHappens_in_month(\"death of a member of the royal family\", \"February\").\nHappens_in_month(\"death of a member of the royal family\", \"March\").\nHappens_in_month(\"death of a member of the royal family\", \"April\").\nHappens_in_month(\"death of a member of the royal family\", \"May\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"death of a member of the royal family\", \"1944\").\nHappens_in_year(\"death of a member of the royal family\", \"1945\").\nHappens_in_year(\"death of a member of the royal family\", \"1946\").\nHappens_in_year(\"death of a member of the royal family\", \"1947\").\nHappens_in_year(\"death of a member of the royal family\", \"1948\").\nHappens_in_year(\"death of a member of the royal family\", \"1949\").\nHappens_in_year(\"death of a member of the royal family\", \"1950\").\nHappens_in_year(\"death of a member of the royal family\", \"1951\").\nHappens_in_year(\"death of a member of the royal family\", \"1952\").\nHappens_in_year(\"death of a member of the royal family\", \"1953\").\nHappens_in_year(\"death of a member of the royal family\","]}
{"id": 914, "answer": false, "completion": ".decl From(Person:symbol, City:symbol)\nFrom(\"John Gall\", \"Stanford\").\nFrom(\"John Gall\", \"Berkeley\").\nFrom(\"John Gall\", \"San Francisco\").\nFrom(\"John Gall\", \"Los Angeles\").\nFrom(\"John Gall\", \"San Diego\").\nFrom(\"John Gall\", \"New York\").\nFrom(\"John Gall\", \"Chicago\").\nFrom(\"John Gall\", \"Boston\").\nFrom(\"John Gall\", \"Washington\").\nFrom(\"John Gall\", \"Philadelphia\").\nFrom(\"John Gall\", \"Atlanta\").\nFrom(\"John Gall\", \"Miami\").\nFrom(\"John Gall\", \"Dallas\").\nFrom(\"John Gall\", \"Houston\").\nFrom(\"John Gall\", \"Phoenix\").\nFrom(\"John Gall\", \"Detroit\").\nFrom(\"John Gall\", \"Seattle\").\nFrom(\"John Gall\", \"Minneapolis\").\nFrom(\"John Gall\", \"Denver\").\nFrom(\"John Gall\", \"Phoenix\").\nFrom(\"John Gall\", \"San Jose\").\nFrom(\"John Gall\", \"Portland\").\nFrom(\"John Gall\", \"San Antonio\").\nFrom(\"John Gall\", \"Oklahoma City\").\nFrom(\"John Gall\", \"Tucson\").\nFrom(\"John Gall\", \"Albuquerque\").\nFrom(\"John Gall\", \"Fresno\").\nFrom(\"John Gall\", \"Sacramento\").\nFrom(\"John Gall\", \"Long Beach\").\nFrom(\"John Gall\", \"Kansas City\").\nFrom(\"John Gall\", \"Mesa\").\nFrom(\"John Gall\", \"Virginia Beach\").\nFrom(\"John Gall\", \"Atlanta\").\nFrom(\"John Gall\", \"Colorado Springs\").\nFrom(\"John Gall\", \"Omaha\").\nFrom(\"John Gall\", \"Raleigh\").\nFrom(\"John Gall\", \"Miami\").\nFrom(\"John Gall\", \"Oakland\").\nFrom(\"John Gall\", \"Minneapolis\").\nFrom(\"John Gall\", \"Tulsa\").\nFrom(\"John Gall\", \"Cleveland\").\nFrom(\"John Gall\", \"Wichita\").\nFrom(\"John Gall\", \"Arlington\").\nFrom(\"John Gall\", \"New Orleans\").\nFrom(\"John Gall\", \"Bakersfield\").\nFrom(\"John Gall\", \"Tampa\").\nFrom(\"John Gall\", \"Honolulu\").\nFrom(\"John Gall\", \"Anaheim\").\nFrom(\"John Gall\", \"Aurora\").\nFrom(\"John Gall\", \"Santa Ana\").\nFrom(\"John Gall\", \"St. Louis\").\nFrom(\"John Gall\", \"Riverside\").\nFrom(\"John Gall\", \"Corpus Christi\").\nFrom(\"John Gall\", \"Pittsburgh\").\nFrom(\"John Gall\", \"Lexington-Fayette\").\nFrom(\"John Gall\", \"Anchorage\").\nFrom(\"John Gall\", \"Stockton\").\nFrom(\"John Gall\", \"Cincinnati\").\nFrom(\"John Gall\", \"St. Paul\").\nFrom(\"John Gall\", \"Toledo\").\nFrom(\"John Gall\", \"Newark\").\nFrom(\"John Gall\", \"Greensboro\").\nFrom(\"John Gall\", \"Plano\").\nFrom(\"John Gall\", \"Henderson\").\nFrom(\"John Gall\", \"Lincoln\").\nFrom(\"John Gall\", \"Buffalo\").\nFrom(\"John Gall\", \"Fort Wayne\").\nFrom(\"John Gall\", \"Jersey City\").\nFrom(\"John Gall\", \"Chula Vista\").\nFrom(\"John Gall\", \"Orlando\").\nFrom(\"John Gall\", \"St. Petersburg\").\nFrom(\"John Gall\", \"Norfolk\").\nFrom(\"John Gall\", \"Chandler\").\nFrom(\"John Gall\", \"Laredo\").\nFrom(\"John Gall\", \"Madison\").\nFrom(\"John Gall\", \"Durham\").\nFrom(\"John Gall\", \"Lubbock\").\nFrom(\"John", "completions": [".decl From(Person:symbol, City:symbol)\nFrom(\"John Gall\", \"Stanford\").\nFrom(\"John Gall\", \"Berkeley\").\nFrom(\"John Gall\", \"San Francisco\").\nFrom(\"John Gall\", \"Los Angeles\").\nFrom(\"John Gall\", \"San Diego\").\nFrom(\"John Gall\", \"New York\").\nFrom(\"John Gall\", \"Chicago\").\nFrom(\"John Gall\", \"Boston\").\nFrom(\"John Gall\", \"Washington\").\nFrom(\"John Gall\", \"Philadelphia\").\nFrom(\"John Gall\", \"Atlanta\").\nFrom(\"John Gall\", \"Miami\").\nFrom(\"John Gall\", \"Dallas\").\nFrom(\"John Gall\", \"Houston\").\nFrom(\"John Gall\", \"Phoenix\").\nFrom(\"John Gall\", \"Detroit\").\nFrom(\"John Gall\", \"Seattle\").\nFrom(\"John Gall\", \"Minneapolis\").\nFrom(\"John Gall\", \"Denver\").\nFrom(\"John Gall\", \"Phoenix\").\nFrom(\"John Gall\", \"San Jose\").\nFrom(\"John Gall\", \"Portland\").\nFrom(\"John Gall\", \"San Antonio\").\nFrom(\"John Gall\", \"Oklahoma City\").\nFrom(\"John Gall\", \"Tucson\").\nFrom(\"John Gall\", \"Albuquerque\").\nFrom(\"John Gall\", \"Fresno\").\nFrom(\"John Gall\", \"Sacramento\").\nFrom(\"John Gall\", \"Long Beach\").\nFrom(\"John Gall\", \"Kansas City\").\nFrom(\"John Gall\", \"Mesa\").\nFrom(\"John Gall\", \"Virginia Beach\").\nFrom(\"John Gall\", \"Atlanta\").\nFrom(\"John Gall\", \"Colorado Springs\").\nFrom(\"John Gall\", \"Omaha\").\nFrom(\"John Gall\", \"Raleigh\").\nFrom(\"John Gall\", \"Miami\").\nFrom(\"John Gall\", \"Oakland\").\nFrom(\"John Gall\", \"Minneapolis\").\nFrom(\"John Gall\", \"Tulsa\").\nFrom(\"John Gall\", \"Cleveland\").\nFrom(\"John Gall\", \"Wichita\").\nFrom(\"John Gall\", \"Arlington\").\nFrom(\"John Gall\", \"New Orleans\").\nFrom(\"John Gall\", \"Bakersfield\").\nFrom(\"John Gall\", \"Tampa\").\nFrom(\"John Gall\", \"Honolulu\").\nFrom(\"John Gall\", \"Anaheim\").\nFrom(\"John Gall\", \"Aurora\").\nFrom(\"John Gall\", \"Santa Ana\").\nFrom(\"John Gall\", \"St. Louis\").\nFrom(\"John Gall\", \"Riverside\").\nFrom(\"John Gall\", \"Corpus Christi\").\nFrom(\"John Gall\", \"Pittsburgh\").\nFrom(\"John Gall\", \"Lexington-Fayette\").\nFrom(\"John Gall\", \"Anchorage\").\nFrom(\"John Gall\", \"Stockton\").\nFrom(\"John Gall\", \"Cincinnati\").\nFrom(\"John Gall\", \"St. Paul\").\nFrom(\"John Gall\", \"Toledo\").\nFrom(\"John Gall\", \"Newark\").\nFrom(\"John Gall\", \"Greensboro\").\nFrom(\"John Gall\", \"Plano\").\nFrom(\"John Gall\", \"Henderson\").\nFrom(\"John Gall\", \"Lincoln\").\nFrom(\"John Gall\", \"Buffalo\").\nFrom(\"John Gall\", \"Fort Wayne\").\nFrom(\"John Gall\", \"Jersey City\").\nFrom(\"John Gall\", \"Chula Vista\").\nFrom(\"John Gall\", \"Orlando\").\nFrom(\"John Gall\", \"St. Petersburg\").\nFrom(\"John Gall\", \"Norfolk\").\nFrom(\"John Gall\", \"Chandler\").\nFrom(\"John Gall\", \"Laredo\").\nFrom(\"John Gall\", \"Madison\").\nFrom(\"John Gall\", \"Durham\").\nFrom(\"John Gall\", \"Lubbock\").\nFrom(\"John"]}
{"id": 915, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pig slaughter\", \"December\").\nHappens_in_time(\"parma ham processing\", \"January\").\nHappens_in_time(\"parma ham processing\", \"February\").\nHappens_in_time(\"parma ham processing\", \"March\").\nHappens_in_time(\"parma ham processing\", \"April\").\nHappens_in_time(\"parma ham processing\", \"May\").\nHappens_in_time(\"parma ham processing\", \"June\").\nHappens_in_time(\"parma ham processing\", \"July\").\nHappens_in_time(\"parma ham processing\", \"August\").\nHappens_in_time(\"parma ham processing\", \"September\").\nHappens_in_time(\"parma ham processing\", \"October\").\nHappens_in_time(\"parma ham processing\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pig slaughter\", month), Happens_in_time(\"parma ham processing\", month), month != \"December\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pig slaughter\", \"December\").\nHappens_in_time(\"parma ham processing\", \"January\").\nHappens_in_time(\"parma ham processing\", \"February\").\nHappens_in_time(\"parma ham processing\", \"March\").\nHappens_in_time(\"parma ham processing\", \"April\").\nHappens_in_time(\"parma ham processing\", \"May\").\nHappens_in_time(\"parma ham processing\", \"June\").\nHappens_in_time(\"parma ham processing\", \"July\").\nHappens_in_time(\"parma ham processing\", \"August\").\nHappens_in_time(\"parma ham processing\", \"September\").\nHappens_in_time(\"parma ham processing\", \"October\").\nHappens_in_time(\"parma ham processing\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pig slaughter\", month), Happens_in_time(\"parma ham processing\", month), month != \"December\".\n.output Answer\n\n"]}
{"id": 916, "answer": false, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Shivambu practitioners\", \"ammonia is unhealthy\").\n.decl Answer()\nAnswer() :- Believes(\"Shivambu practitioners\", belief).\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Shivambu practitioners\", \"ammonia is unhealthy\").\n.decl Answer()\nAnswer() :- Believes(\"Shivambu practitioners\", belief).\n.output Answer\n\n"]}
{"id": 917, "answer": false, "completion": ".decl Is_agent(Agent:symbol)\nIs_agent(\"Hamas\").\n.decl Is_food(Food:symbol)\nIs_food(\"pig\").\n.decl Is_bad(Agent:symbol, Food:symbol)\nIs_bad(\"Hamas\", \"pig\").\n.decl Answer()\nAnswer() :- Is_agent(\"Hamas\"), Is_food(\"pig\"), Is_bad(\"Hamas\", \"pig\").\n.output Answer\n\n", "completions": [".decl Is_agent(Agent:symbol)\nIs_agent(\"Hamas\").\n.decl Is_food(Food:symbol)\nIs_food(\"pig\").\n.decl Is_bad(Agent:symbol, Food:symbol)\nIs_bad(\"Hamas\", \"pig\").\n.decl Answer()\nAnswer() :- Is_agent(\"Hamas\"), Is_food(\"pig\"), Is_bad(\"Hamas\", \"pig\").\n.output Answer\n\n"]}
{"id": 918, "answer": false, "completion": ".decl Has_played(Team:symbol, Location:symbol)\nHas_played(\"Israel\", \"Hammerstein Ballroom\").\n.decl Answer()\nAnswer() :- Has_played(\"Israel\", \"Hammerstein Ballroom\").\n.output Answer\n\n", "completions": [".decl Has_played(Team:symbol, Location:symbol)\nHas_played(\"Israel\", \"Hammerstein Ballroom\").\n.decl Answer()\nAnswer() :- Has_played(\"Israel\", \"Hammerstein Ballroom\").\n.output Answer\n\n"]}
{"id": 919, "answer": true, "completion": ".decl Played_role(Person:symbol, Role:symbol)\nPlayed_role(\"Elle Fanning\", \"Miriam Makeba\").\nPlayed_role(\"Miriam Makeba\", \"Mandela\").\nPlayed_role(\"Mandela\", \"apartheid\").\n.decl Answer()\nAnswer() :- Played_role(\"Elle Fanning\", role1), Played_role(person2, role2), role1 = role2.\n.output Answer\n\n", "completions": [".decl Played_role(Person:symbol, Role:symbol)\nPlayed_role(\"Elle Fanning\", \"Miriam Makeba\").\nPlayed_role(\"Miriam Makeba\", \"Mandela\").\nPlayed_role(\"Mandela\", \"apartheid\").\n.decl Answer()\nAnswer() :- Played_role(\"Elle Fanning\", role1), Played_role(person2, role2), role1 = role2.\n.output Answer\n\n"]}
{"id": 920, "answer": false, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Bubbles\", \"Camden Military Academy\").\nGraduates(\"Blossom\", \"Camden Military Academy\").\nGraduates(\"Buttercup\", \"Camden Military Academy\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Camden Military Academy\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Bubbles\", \"Camden Military Academy\").\nAnswer() :- Graduates(\"Blossom\", \"Camden Military Academy\").\nAnswer() :- Graduates(\"Buttercup\", \"Camden Military Academy\").\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Bubbles\", \"Camden Military Academy\").\nGraduates(\"Blossom\", \"Camden Military Academy\").\nGraduates(\"Buttercup\", \"Camden Military Academy\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"Camden Military Academy\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Bubbles\", \"Camden Military Academy\").\nAnswer() :- Graduates(\"Blossom\", \"Camden Military Academy\").\nAnswer() :- Graduates(\"Buttercup\", \"Camden Military Academy\").\n.output Answer\n\n"]}
{"id": 921, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Chuck Norris\", 2.5).\nHas_height(\"horse\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"Chuck Norris\", height1), Has_height(\"horse\", height2), height1 >= height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Chuck Norris\", 2.5).\nHas_height(\"horse\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"Chuck Norris\", height1), Has_height(\"horse\", height2), height1 >= height2.\n.output Answer\n\n"]}
{"id": 922, "answer": true, "completion": ".decl Relayed(Runner:symbol, Relay:symbol)\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed", "completions": [".decl Relayed(Runner:symbol, Relay:symbol)\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed(\"James Haughton\", \"relay baton\").\nRelayed"]}
{"id": 923, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harvey Milk\", \"Harvey Milk\").\nHas_name(\"Barack Obama\", \"Barack Obama\").\n.decl Answer()\nAnswer() :- Has_name(\"Harvey Milk\", name1), Has_name(\"Barack Obama\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harvey Milk\", \"Harvey Milk\").\nHas_name(\"Barack Obama\", \"Barack Obama\").\n.decl Answer()\nAnswer() :- Has_name(\"Harvey Milk\", name1), Has_name(\"Barack Obama\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 924, "answer": false, "completion": ".decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"human\", n_eyes1), Has_n_eyes(\"spider\", n_eyes2), n_eyes1 > n_eyes2.\n.output Answer\n\n", "completions": [".decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Has_n_eyes(Animal:symbol, N_eyes:float)\nHas_n_eyes(\"human\", 2).\nHas_n_eyes(\"spider\", 8).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"human\", n_eyes1), Has_n_eyes(\"spider\", n_eyes2), n_eyes1 > n_eyes2.\n.output Answer\n\n"]}
{"id": 925, "answer": true, "completion": ".decl Has_state_of_mind(Person:symbol, State_of_mind:symbol)\nHas_state_of_mind(\"Rumi\", \"euphoria\").\n.decl Answer()\nAnswer() :- Has_state_of_mind(\"Rumi\", state_of_mind).\n.output Answer\n\n", "completions": [".decl Has_state_of_mind(Person:symbol, State_of_mind:symbol)\nHas_state_of_mind(\"Rumi\", \"euphoria\").\n.decl Answer()\nAnswer() :- Has_state_of_mind(\"Rumi\", state_of_mind).\n.output Answer\n\n"]}
{"id": 926, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"crab\", 0.1).\nHas_mass(\"human\", 70).\n.decl Has_energy(Object:symbol, Energy:float)\nHas_energy(\"crab\", 0.1).\nHas_energy(\"human\", 70).\n.decl Answer()\nAnswer() :- Has_mass(\"crab\", mass), Has_energy(\"crab\", energy), Has_mass(\"human\", mass2), Has_energy(\"human\", energy2), mass > mass2, energy > energy2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"crab\", 0.1).\nHas_mass(\"human\", 70).\n.decl Has_energy(Object:symbol, Energy:float)\nHas_energy(\"crab\", 0.1).\nHas_energy(\"human\", 70).\n.decl Answer()\nAnswer() :- Has_mass(\"crab\", mass), Has_energy(\"crab\", energy), Has_mass(\"human\", mass2), Has_energy(\"human\", energy2), mass > mass2, energy > energy2.\n.output Answer\n\n"]}
{"id": 927, "answer": true, "completion": ".decl Has_stomata(Plant:symbol, Stomata:symbol)\nHas_stomata(\"cactus\", \"open\").\nHas_stomata(\"cactus\", \"closed\").\n.decl Has_stomata(Plant:symbol, Stomata:symbol)\nHas_stomata(\"aerodynamic cactus\", \"closed\").\n.decl Answer()\nAnswer() :- Has_stomata(\"aerodynamic cactus\", stomata), Has_stomata(\"cactus\", stomata).\n.output Answer\n\n", "completions": [".decl Has_stomata(Plant:symbol, Stomata:symbol)\nHas_stomata(\"cactus\", \"open\").\nHas_stomata(\"cactus\", \"closed\").\n.decl Has_stomata(Plant:symbol, Stomata:symbol)\nHas_stomata(\"aerodynamic cactus\", \"closed\").\n.decl Answer()\nAnswer() :- Has_stomata(\"aerodynamic cactus\", stomata), Has_stomata(\"cactus\", stomata).\n.output Answer\n\n"]}
{"id": 928, "answer": true, "completion": ".decl Has_diet(Animal:symbol, Diet:symbol)\nHas_diet(\"oyster\", \"vegetarian\").\nHas_diet(\"oyster\", \"omnivore\").\n.decl Has_disease(Animal:symbol, Disease:symbol)\nHas_disease(\"oyster\", \"ADHD\").\n.decl Answer()\nAnswer() :- Has_diet(\"oyster\", diet), Has_disease(\"oyster\", disease), diet = \"omnivore\", disease = \"ADHD\".\n.output Answer\n\n", "completions": [".decl Has_diet(Animal:symbol, Diet:symbol)\nHas_diet(\"oyster\", \"vegetarian\").\nHas_diet(\"oyster\", \"omnivore\").\n.decl Has_disease(Animal:symbol, Disease:symbol)\nHas_disease(\"oyster\", \"ADHD\").\n.decl Answer()\nAnswer() :- Has_diet(\"oyster\", diet), Has_disease(\"oyster\", disease), diet = \"omnivore\", disease = \"ADHD\".\n.output Answer\n\n"]}
{"id": 929, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Royal Air Force ensign\", \"red\").\nHas_color(\"moon\", \"black\").\n.decl Answer()\nAnswer() :- Has_color(\"Royal Air Force ensign\", color), Has_color(\"moon\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Royal Air Force ensign\", \"red\").\nHas_color(\"moon\", \"black\").\n.decl Answer()\nAnswer() :- Has_color(\"Royal Air Force ensign\", color), Has_color(\"moon\", color).\n.output Answer\n\n"]}
{"id": 930, "answer": true, "completion": ".decl Has_citizens(Country:symbol, N_citizens:float)\nHas_citizens(\"Samoa\", 200000).\n.decl Has_employees(Company:symbol, N_employees:float)\nHas_employees(\"JPMorgan Chase\", 100000).\n.decl Answer()\nAnswer() :- Has_citizens(\"Samoa\", n_citizens), Has_employees(\"JPMorgan Chase\", n_employees), n_citizens > n_employees.\n.output Answer\n\n", "completions": [".decl Has_citizens(Country:symbol, N_citizens:float)\nHas_citizens(\"Samoa\", 200000).\n.decl Has_employees(Company:symbol, N_employees:float)\nHas_employees(\"JPMorgan Chase\", 100000).\n.decl Answer()\nAnswer() :- Has_citizens(\"Samoa\", n_citizens), Has_employees(\"JPMorgan Chase\", n_employees), n_citizens > n_employees.\n.output Answer\n\n"]}
{"id": 931, "answer": true, "completion": ".decl Worked_on(Person:symbol, Project:symbol)\nWorked_on(\"Rosalind Franklin\", \"DNA structure\").\nWorked_on(\"Franklin\", \"DNA structure\").\nWorked_on(\"Franklin\", \"Whole Genome Sequencing\").\n.decl Answer()\nAnswer() :- Worked_on(\"Rosalind Franklin\", project1), Worked_on(\"Franklin\", project2), project1 = project2.\n.output Answer\n\n", "completions": [".decl Worked_on(Person:symbol, Project:symbol)\nWorked_on(\"Rosalind Franklin\", \"DNA structure\").\nWorked_on(\"Franklin\", \"DNA structure\").\nWorked_on(\"Franklin\", \"Whole Genome Sequencing\").\n.decl Answer()\nAnswer() :- Worked_on(\"Rosalind Franklin\", project1), Worked_on(\"Franklin\", project2), project1 = project2.\n.output Answer\n\n"]}
{"id": 932, "answer": true, "completion": ".decl Has_qualification(Person:symbol, Qualification:symbol)\nHas_qualification(\"Kenny G\", \"tax collector\").\n.decl Answer()\nAnswer() :- Has_qualification(\"Kenny G\", qualification).\n.output Answer\n\n", "completions": [".decl Has_qualification(Person:symbol, Qualification:symbol)\nHas_qualification(\"Kenny G\", \"tax collector\").\n.decl Answer()\nAnswer() :- Has_qualification(\"Kenny G\", qualification).\n.output Answer\n\n"]}
{"id": 933, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Sable\", 0.5).\nHas_weight(\"scale\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"Sable\", weight1), Has_weight(\"scale\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Sable\", 0.5).\nHas_weight(\"scale\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"Sable\", weight1), Has_weight(\"scale\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 934, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"American flag\", \"red\").\nHas_color(\"American flag\", \"white\").\nHas_color(\"American flag\", \"blue\").\nHas_color(\"Mickey Mouse\", \"black\").\nHas_color(\"Mickey Mouse\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"Mickey Mouse\", color1), Has_color(\"American flag\", color2), color1 = color2.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"American flag\", \"red\").\nHas_color(\"American flag\", \"white\").\nHas_color(\"American flag\", \"blue\").\nHas_color(\"Mickey Mouse\", \"black\").\nHas_color(\"Mickey Mouse\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"Mickey Mouse\", color1), Has_color(\"American flag\", color2), color1 = color2.\n.output Answer\n\n"]}
{"id": 935, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Anakin Skywalker\", \"black\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Luke Skywalker\", \"white\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Yoda\", \"green\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Darth Vader\", \"black\").\n.decl Answer()\nAnswer() :- Has_color(\"Anakin Skywalker\", color), Has_color(\"Luke Skywalker\", color), Has_color(\"Yoda\", color), Has_color(\"Darth Vader\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Anakin Skywalker\", \"black\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Luke Skywalker\", \"white\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Yoda\", \"green\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Darth Vader\", \"black\").\n.decl Answer()\nAnswer() :- Has_color(\"Anakin Skywalker\", color), Has_color(\"Luke Skywalker\", color), Has_color(\"Yoda\", color), Has_color(\"Darth Vader\", color).\n.output Answer\n\n"]}
{"id": 936, "answer": false, "completion": ".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Bible\", \"God\").\nHas_author(\"Book of the Dead\", \"Anubis\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"Bible\", \"The Life of Jesus Christ\").\nHas_title(\"Book of the Dead\", \"Story of the Two Brothers\").\n.decl Has_year(Book:symbol, Year:float)\nHas_year(\"Bible\", 0).\nHas_year(\"Book of the Dead\", -2000).\n.decl Answer()\nAnswer() :- Has_author(\"Bible\", author), Has_author(\"Book of the Dead\", author), Has_title(\"Bible\", title), Has_title(\"Book of the Dead\", title), Has_year(\"Bible\", year), Has_year(\"Book of the Dead\", year), author = \"Anubis\", title = \"Story of the Two Brothers\", year = -2000.\n.output Answer\n\n", "completions": [".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Bible\", \"God\").\nHas_author(\"Book of the Dead\", \"Anubis\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"Bible\", \"The Life of Jesus Christ\").\nHas_title(\"Book of the Dead\", \"Story of the Two Brothers\").\n.decl Has_year(Book:symbol, Year:float)\nHas_year(\"Bible\", 0).\nHas_year(\"Book of the Dead\", -2000).\n.decl Answer()\nAnswer() :- Has_author(\"Bible\", author), Has_author(\"Book of the Dead\", author), Has_title(\"Bible\", title), Has_title(\"Book of the Dead\", title), Has_year(\"Bible\", year), Has_year(\"Book of the Dead\", year), author = \"Anubis\", title = \"Story of the Two Brothers\", year = -2000.\n.output Answer\n\n"]}
{"id": 937, "answer": false, "completion": ".decl Has_middle_name(Person:symbol, Middle_name:symbol)\nHas_middle_name(\"Jennifer Lawrence\", \"S\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Jennifer Lawrence\", \"Lawrence\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Jennifer Lawrence\", \"J\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Martin Scorsese\", \"Scorsese\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Martin Scorsese\", \"M\").\n.decl Answer()\nAnswer() :- Has_middle_name(\"Jennifer Lawrence\", middle_name), Has_last_name(\"Martin Scorsese\", last_name), Has_first_name(\"Martin Scorsese\", first_name), middle_name = last_name, last_name = first_name.\n.output Answer\n\n", "completions": [".decl Has_middle_name(Person:symbol, Middle_name:symbol)\nHas_middle_name(\"Jennifer Lawrence\", \"S\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Jennifer Lawrence\", \"Lawrence\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Jennifer Lawrence\", \"J\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Martin Scorsese\", \"Scorsese\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Martin Scorsese\", \"M\").\n.decl Answer()\nAnswer() :- Has_middle_name(\"Jennifer Lawrence\", middle_name), Has_last_name(\"Martin Scorsese\", last_name), Has_first_name(\"Martin Scorsese\", first_name), middle_name = last_name, last_name = first_name.\n.output Answer\n\n"]}
{"id": 938, "answer": true, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"Golden Gate Bridge\", \"steel\").\nHas_material(\"MP3\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_material(\"Golden Gate Bridge\", material), Has_material(\"MP3\", material).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"Golden Gate Bridge\", \"steel\").\nHas_material(\"MP3\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_material(\"Golden Gate Bridge\", material), Has_material(\"MP3\", material).\n.output Answer\n\n"]}
{"id": 939, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Great Depression\", \"1929-1939\").\nHappens_in_time(\"Prozac\", \"1940-present\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Great Depression\", time), Happens_in_time(\"Prozac\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Great Depression\", \"1929-1939\").\nHappens_in_time(\"Prozac\", \"1940-present\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Great Depression\", time), Happens_in_time(\"Prozac\", time).\n.output Answer\n\n"]}
{"id": 940, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Navy\", 60000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Army\", 50000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Air Force\", 50000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Coast Guard\", 5000).\n.decl Answer()\nAnswer() :- Has_n_members(\"United States Navy\", n_members1), Has_n_members(\"United States Army\", n_members2), Has_n_members(\"United States Air Force\", n_members3), Has_n_members(\"United States Coast Guard\", n_members4), n_members1 + n_members2 + n_members3 + n_members4 > 1000000.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Navy\", 60000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Army\", 50000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Air Force\", 50000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Coast Guard\", 5000).\n.decl Answer()\nAnswer() :- Has_n_members(\"United States Navy\", n_members1), Has_n_members(\"United States Army\", n_members2), Has_n_members(\"United States Air Force\", n_members3), Has_n_members(\"United States Coast Guard\", n_members4), n_members1 + n_members2 + n_members3 + n_members4 > 1000000.\n.output Answer\n\n"]}
{"id": 941, "answer": true, "completion": ".decl Has_pith(Clementine:symbol, Pith:symbol)\nHas_pith(\"clementine\", \"pith\").\n.decl Has_pith_value(Pith:symbol, Pith_value:float)\nHas_pith_value(\"pith\", 0.5).\n.decl Answer()\nAnswer() :- Has_pith(\"clementine\", pith), Has_pith_value(pith, pith_value), pith_value > 0.5.\n.output Answer\n\n", "completions": [".decl Has_pith(Clementine:symbol, Pith:symbol)\nHas_pith(\"clementine\", \"pith\").\n.decl Has_pith_value(Pith:symbol, Pith_value:float)\nHas_pith_value(\"pith\", 0.5).\n.decl Answer()\nAnswer() :- Has_pith(\"clementine\", pith), Has_pith_value(pith, pith_value), pith_value > 0.5.\n.output Answer\n\n"]}
{"id": 942, "answer": false, "completion": ".decl Has_rank(Song:symbol, Rank:float)\nHas_rank(\"Lil Jon's top ranked Billboard song\", 1).\n.decl Has_artist(Song:symbol, Artist:symbol)\nHas_artist(\"Lil Jon's top ranked Billboard song\", \"Lil Jon\").\n.decl Has_member(Group:symbol, Member:symbol)\nHas_member(\"The Lox\", \"Lil Kim\").\nHas_member(\"The Lox\", \"DMX\").\nHas_member(\"The Lox\", \"Masego\").\nHas_member(\"The Lox\", \"Styles P\").\nHas_member(\"The Lox\", \"Jadakiss\").\nHas_member(\"The Lox\", \"Nas\").\n.decl Answer()\nAnswer() :- Has_rank(\"Lil Jon's top ranked Billboard song\", rank), Has_artist(\"Lil Jon's top ranked Billboard song\", artist), Has_member(\"The Lox\", member), artist = member.\n.output Answer\n\n", "completions": [".decl Has_rank(Song:symbol, Rank:float)\nHas_rank(\"Lil Jon's top ranked Billboard song\", 1).\n.decl Has_artist(Song:symbol, Artist:symbol)\nHas_artist(\"Lil Jon's top ranked Billboard song\", \"Lil Jon\").\n.decl Has_member(Group:symbol, Member:symbol)\nHas_member(\"The Lox\", \"Lil Kim\").\nHas_member(\"The Lox\", \"DMX\").\nHas_member(\"The Lox\", \"Masego\").\nHas_member(\"The Lox\", \"Styles P\").\nHas_member(\"The Lox\", \"Jadakiss\").\nHas_member(\"The Lox\", \"Nas\").\n.decl Answer()\nAnswer() :- Has_rank(\"Lil Jon's top ranked Billboard song\", rank), Has_artist(\"Lil Jon's top ranked Billboard song\", artist), Has_member(\"The Lox\", member), artist = member.\n.output Answer\n\n"]}
{"id": 943, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"helium\", 2).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nitrogen\", 7).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"oxygen\", 8).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"argon\", 18).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"krypton\", 36).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"xenon\", 54).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"radon\", 86).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"helium\", atomic_number), Has_atomic_number(\"hydrogen\", atomic_number1), Has_atomic_number(\"nitrogen\", atomic_number2), Has_atomic_number(\"oxygen\", atomic_number3), Has_atomic_number(\"argon\", atomic_number4), Has_atomic_number(\"krypton\", atomic_number5), Has_atomic_number(\"xenon\", atomic_number6), Has_atomic_number(\"radon\", atomic_number7), atomic_number > atomic_number1, atomic_number > atomic_number2, atomic_number > atomic_number3, atomic_number > atomic_number4, atomic_number > atomic_number5, atomic_number > atomic_number6, atomic_number > atomic_number7.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"helium\", 2).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"nitrogen\", 7).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"oxygen\", 8).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"argon\", 18).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"krypton\", 36).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"xenon\", 54).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"radon\", 86).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"helium\", atomic_number), Has_atomic_number(\"hydrogen\", atomic_number1), Has_atomic_number(\"nitrogen\", atomic_number2), Has_atomic_number(\"oxygen\", atomic_number3), Has_atomic_number(\"argon\", atomic_number4), Has_atomic_number(\"krypton\", atomic_number5), Has_atomic_number(\"xenon\", atomic_number6), Has_atomic_number(\"radon\", atomic_number7), atomic_number > atomic_number1, atomic_number > atomic_number2, atomic_number > atomic_number3, atomic_number > atomic_number4, atomic_number > atomic_number5, atomic_number > atomic_number6, atomic_number > atomic_number7.\n.output Answer\n\n"]}
{"id": 944, "answer": true, "completion": ".decl Won_Race(Person:symbol, Race:symbol)\nWon_Race(\"Al Unser Jr.\", \"Space Race\").\n.decl Answer()\nAnswer() :- Won_Race(\"Al Unser Jr.\", race).\n.output Answer\n\n", "completions": [".decl Won_Race(Person:symbol, Race:symbol)\nWon_Race(\"Al Unser Jr.\", \"Space Race\").\n.decl Answer()\nAnswer() :- Won_Race(\"Al Unser Jr.\", race).\n.output Answer\n\n"]}
{"id": 945, "answer": false, "completion": ".decl Has_n_wizards(Group:symbol, N_wizards:float)\nHas_n_wizards(\"Muggles\", 100).\nHas_n_wizards(\"Half-bloods\", 50).\nHas_n_wizards(\"Purebloods\", 25).\n.decl Has_n_voldemort_fans(Group:symbol, N_voldemort_fans:float)\nHas_n_voldemort_fans(\"Muggles\", 0).\nHas_n_voldemort_fans(\"Half-bloods\", 25).\nHas_n_voldemort_fans(\"Purebloods\", 50).\n.decl Answer()\nAnswer() :- Has_n_wizards(\"Muggles\", n_wizards1), Has_n_voldemort_fans(\"Muggles\", n_voldemort_fans1), Has_n_wizards(\"Half-bloods\", n_wizards2), Has_n_voldemort_fans(\"Half-bloods\", n_voldemort_fans2), Has_n_wizards(\"Purebloods\", n_wizards3), Has_n_voldemort_fans(\"Purebloods\", n_voldemort_fans3), n_wizards1 > n_voldemort_fans1, n_wizards2 > n_voldemort_fans2, n_wizards3 > n_voldemort_fans3.\n.output Answer\n\n", "completions": [".decl Has_n_wizards(Group:symbol, N_wizards:float)\nHas_n_wizards(\"Muggles\", 100).\nHas_n_wizards(\"Half-bloods\", 50).\nHas_n_wizards(\"Purebloods\", 25).\n.decl Has_n_voldemort_fans(Group:symbol, N_voldemort_fans:float)\nHas_n_voldemort_fans(\"Muggles\", 0).\nHas_n_voldemort_fans(\"Half-bloods\", 25).\nHas_n_voldemort_fans(\"Purebloods\", 50).\n.decl Answer()\nAnswer() :- Has_n_wizards(\"Muggles\", n_wizards1), Has_n_voldemort_fans(\"Muggles\", n_voldemort_fans1), Has_n_wizards(\"Half-bloods\", n_wizards2), Has_n_voldemort_fans(\"Half-bloods\", n_voldemort_fans2), Has_n_wizards(\"Purebloods\", n_wizards3), Has_n_voldemort_fans(\"Purebloods\", n_voldemort_fans3), n_wizards1 > n_voldemort_fans1, n_wizards2 > n_voldemort_fans2, n_wizards3 > n_voldemort_fans3.\n.output Answer\n\n"]}
{"id": 946, "answer": false, "completion": ".decl Has_endowment(University:symbol, Endowment:float)\nHas_endowment(\"Johns Hopkins University\", 1.5).\n.decl Has_debt(Organization:symbol, Debt:float)\nHas_debt(\"MBTA\", 1).\n.decl Answer()\nAnswer() :- Has_endowment(\"Johns Hopkins University\", endowment), Has_debt(\"MBTA\", debt), endowment > debt.\n.output Answer\n\n", "completions": [".decl Has_endowment(University:symbol, Endowment:float)\nHas_endowment(\"Johns Hopkins University\", 1.5).\n.decl Has_debt(Organization:symbol, Debt:float)\nHas_debt(\"MBTA\", 1).\n.decl Answer()\nAnswer() :- Has_endowment(\"Johns Hopkins University\", endowment), Has_debt(\"MBTA\", debt), endowment > debt.\n.output Answer\n\n"]}
{"id": 947, "answer": true, "completion": ".decl Has_modern_trade(Company:symbol, Modern_trade:symbol)\nHas_modern_trade(\"East India Company\", \"China\").\n.decl Answer()\nAnswer() :- Has_modern_trade(\"East India Company\", modern_trade), modern_trade = \"China\".\n.output Answer\n\n", "completions": [".decl Has_modern_trade(Company:symbol, Modern_trade:symbol)\nHas_modern_trade(\"East India Company\", \"China\").\n.decl Answer()\nAnswer() :- Has_modern_trade(\"East India Company\", modern_trade), modern_trade = \"China\".\n.output Answer\n\n"]}
{"id": 948, "answer": false, "completion": ".decl Has_age_range(Game:symbol, Age_range:symbol)\nHas_age_range(\"Guitar Hero\", \"3-5\").\nHas_age_range(\"Guitar Hero\", \"6-8\").\nHas_age_range(\"Guitar Hero\", \"9-12\").\n.decl Has_rating(Game:symbol, Rating:symbol)\nHas_rating(\"Guitar Hero\", \"E\").\nHas_rating(\"Guitar Hero\", \"T\").\nHas_rating(\"Guitar Hero\", \"M\").\n.decl Answer()\nAnswer() :- Has_age_range(\"Guitar Hero\", age_range), Has_rating(\"Guitar Hero\", rating), age_range = \"3-5\", rating = \"M\".\n.output Answer\n\n", "completions": [".decl Has_age_range(Game:symbol, Age_range:symbol)\nHas_age_range(\"Guitar Hero\", \"3-5\").\nHas_age_range(\"Guitar Hero\", \"6-8\").\nHas_age_range(\"Guitar Hero\", \"9-12\").\n.decl Has_rating(Game:symbol, Rating:symbol)\nHas_rating(\"Guitar Hero\", \"E\").\nHas_rating(\"Guitar Hero\", \"T\").\nHas_rating(\"Guitar Hero\", \"M\").\n.decl Answer()\nAnswer() :- Has_age_range(\"Guitar Hero\", age_range), Has_rating(\"Guitar Hero\", rating), age_range = \"3-5\", rating = \"M\".\n.output Answer\n\n"]}
{"id": 949, "answer": true, "completion": ".decl Has_n_feet(Person:symbol, N_feet:float)\nHas_n_feet(\"Larry King\", 2).\n.decl Answer()\nAnswer() :- Has_n_feet(\"Larry King\", n_feet), n_feet = 2.\n.output Answer\n\n", "completions": [".decl Has_n_feet(Person:symbol, N_feet:float)\nHas_n_feet(\"Larry King\", 2).\n.decl Answer()\nAnswer() :- Has_n_feet(\"Larry King\", n_feet), n_feet = 2.\n.output Answer\n\n"]}
{"id": 950, "answer": true, "completion": ".decl Has_odor(Object:symbol, Odor:float)\nHas_odor(\"dog\", 0.5).\nHas_odor(\"ammonia\", 1).\n.decl Answer()\nAnswer() :- Has_odor(\"dog\", odor1), Has_odor(\"ammonia\", odor2), odor1 > odor2.\n.output Answer\n\n", "completions": [".decl Has_odor(Object:symbol, Odor:float)\nHas_odor(\"dog\", 0.5).\nHas_odor(\"ammonia\", 1).\n.decl Answer()\nAnswer() :- Has_odor(\"dog\", odor1), Has_odor(\"ammonia\", odor2), odor1 > odor2.\n.output Answer\n\n"]}
{"id": 951, "answer": true, "completion": ".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Reddit\", 0.01).\nHas_price(\"Walmart\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"Reddit\", price1), Has_price(\"Walmart\", price2), price1 < price2.\n.output Answer\n\n", "completions": [".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Reddit\", 0.01).\nHas_price(\"Walmart\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"Reddit\", price1), Has_price(\"Walmart\", price2), price1 < price2.\n.output Answer\n\n"]}
{"id": 952, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Snowdon\", 1056).\nHas_height(\"Tenzing Norgay\", 8848).\n.decl Answer()\nAnswer() :- Has_height(\"Snowdon\", height1), Has_height(\"Tenzing Norgay\", height2), height1 < height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Snowdon\", 1056).\nHas_height(\"Tenzing Norgay\", 8848).\n.decl Answer()\nAnswer() :- Has_height(\"Snowdon\", height1), Has_height(\"Tenzing Norgay\", height2), height1 < height2.\n.output Answer\n\n"]}
{"id": 953, "answer": true, "completion": ".decl Has_subtext(Book:symbol, Subtext:symbol)\nHas_subtext(\"The Jungle Book\", \"racism\").\n.decl Answer()\nAnswer() :- Has_subtext(\"The Jungle Book\", subtext).\n.output Answer\n\n", "completions": [".decl Has_subtext(Book:symbol, Subtext:symbol)\nHas_subtext(\"The Jungle Book\", \"racism\").\n.decl Answer()\nAnswer() :- Has_subtext(\"The Jungle Book\", subtext).\n.output Answer\n\n"]}
{"id": 954, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"sloth\", 5).\nHas_mass(\"Scrubs\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"sloth\", mass1), Has_mass(\"Scrubs\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"sloth\", 5).\nHas_mass(\"Scrubs\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"sloth\", mass1), Has_mass(\"Scrubs\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 955, "answer": false, "completion": ".decl Has_heat(Object:symbol, Heat:float)\nHas_heat(\"jalapeno\", 1).\nHas_heat(\"Bhut jolokia\", 2).\n.decl Answer()\nAnswer() :- Has_heat(\"jalapeno\", heat1), Has_heat(\"Bhut jolokia\", heat2), heat1 > heat2.\n.output Answer\n\n", "completions": [".decl Has_heat(Object:symbol, Heat:float)\nHas_heat(\"jalapeno\", 1).\nHas_heat(\"Bhut jolokia\", 2).\n.decl Answer()\nAnswer() :- Has_heat(\"jalapeno\", heat1), Has_heat(\"Bhut jolokia\", heat2), heat1 > heat2.\n.output Answer\n\n"]}
{"id": 956, "answer": false, "completion": ".decl Spokesperson(Organization:symbol, Person:symbol)\nSpokesperson(\"Subway\", \"Jerry Sandusky\").\n.decl Convicted_of_sex_offense(Person:symbol)\nConvicted_of_sex_offense(\"Jerry Sandusky\").\n.decl Answer()\nAnswer() :- Spokesperson(\"Subway\", person), Convicted_of_sex_offense(person).\n.output Answer\n\n", "completions": [".decl Spokesperson(Organization:symbol, Person:symbol)\nSpokesperson(\"Subway\", \"Jerry Sandusky\").\n.decl Convicted_of_sex_offense(Person:symbol)\nConvicted_of_sex_offense(\"Jerry Sandusky\").\n.decl Answer()\nAnswer() :- Spokesperson(\"Subway\", person), Convicted_of_sex_offense(person).\n.output Answer\n\n"]}
{"id": 957, "answer": true, "completion": ".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"lullaby\", 3).\nHas_duration(\"Hellen Keller\", 0).\n.decl Answer()\nAnswer() :- Has_duration(\"lullaby\", duration), Has_duration(\"Hellen Keller\", duration2), duration > duration2.\n.output Answer\n\n", "completions": [".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"lullaby\", 3).\nHas_duration(\"Hellen Keller\", 0).\n.decl Answer()\nAnswer() :- Has_duration(\"lullaby\", duration), Has_duration(\"Hellen Keller\", duration2), duration > duration2.\n.output Answer\n\n"]}
{"id": 958, "answer": false, "completion": ".decl Has_n_kills(Team:symbol, N_kills:float)\nHas_n_kills(\"Communist Party of the Soviet Union\", 0).\nHas_n_kills(\"Communist Party of the Soviet Union\", 1).\nHas_n_kills(\"Communist Party of the Soviet Union\", 2).\nHas_n_kills(\"Communist Party of the Soviet Union\", 3).\nHas_n_kills(\"Communist Party of the Soviet Union\", 4).\nHas_n_kills(\"Communist Party of the Soviet Union\", 5).\nHas_n_kills(\"Communist Party of the Soviet Union\", 6).\nHas_n_kills(\"Communist Party of the Soviet Union\", 7).\nHas_n_kills(\"Communist Party of the Soviet Union\", 8).\nHas_n_kills(\"Communist Party of the Soviet Union\", 9).\nHas_n_kills(\"Communist Party of the Soviet Union\", 10).\nHas_n_kills(\"Communist Party of the Soviet Union\", 11).\nHas_n_kills(\"Communist Party of the Soviet Union\", 12).\nHas_n_kills(\"Communist Party of the Soviet Union\", 13).\nHas_n_kills(\"Communist Party of the Soviet Union\", 14).\nHas_n_kills(\"Communist Party of the Soviet Union\", 15).\nHas_n_kills(\"Communist Party of the Soviet Union\", 16).\nHas_n_kills(\"Communist Party of the Soviet Union\", 17).\nHas_n_kills(\"Communist Party of the Soviet Union\", 18).\nHas_n_kills(\"Communist Party of the Soviet Union\", 19).\nHas_n_kills(\"Communist Party of the Soviet Union\", 20).\n.decl Answer()\nAnswer() :- Has_n_kills(\"Communist Party of the Soviet Union\", n_kills), n_kills >= 20.\n.output Answer\n\n", "completions": [".decl Has_n_kills(Team:symbol, N_kills:float)\nHas_n_kills(\"Communist Party of the Soviet Union\", 0).\nHas_n_kills(\"Communist Party of the Soviet Union\", 1).\nHas_n_kills(\"Communist Party of the Soviet Union\", 2).\nHas_n_kills(\"Communist Party of the Soviet Union\", 3).\nHas_n_kills(\"Communist Party of the Soviet Union\", 4).\nHas_n_kills(\"Communist Party of the Soviet Union\", 5).\nHas_n_kills(\"Communist Party of the Soviet Union\", 6).\nHas_n_kills(\"Communist Party of the Soviet Union\", 7).\nHas_n_kills(\"Communist Party of the Soviet Union\", 8).\nHas_n_kills(\"Communist Party of the Soviet Union\", 9).\nHas_n_kills(\"Communist Party of the Soviet Union\", 10).\nHas_n_kills(\"Communist Party of the Soviet Union\", 11).\nHas_n_kills(\"Communist Party of the Soviet Union\", 12).\nHas_n_kills(\"Communist Party of the Soviet Union\", 13).\nHas_n_kills(\"Communist Party of the Soviet Union\", 14).\nHas_n_kills(\"Communist Party of the Soviet Union\", 15).\nHas_n_kills(\"Communist Party of the Soviet Union\", 16).\nHas_n_kills(\"Communist Party of the Soviet Union\", 17).\nHas_n_kills(\"Communist Party of the Soviet Union\", 18).\nHas_n_kills(\"Communist Party of the Soviet Union\", 19).\nHas_n_kills(\"Communist Party of the Soviet Union\", 20).\n.decl Answer()\nAnswer() :- Has_n_kills(\"Communist Party of the Soviet Union\", n_kills), n_kills >= 20.\n.output Answer\n\n"]}
{"id": 959, "answer": true, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Golden Gate Bridge\", 4200).\nHas_length(\"Stanford Linear Accelerator\", 2700).\n.decl Answer()\nAnswer() :- Has_length(\"Golden Gate Bridge\", length1), Has_length(\"Stanford Linear Accelerator\", length2), length1 >= length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Golden Gate Bridge\", 4200).\nHas_length(\"Stanford Linear Accelerator\", 2700).\n.decl Answer()\nAnswer() :- Has_length(\"Golden Gate Bridge\", length1), Has_length(\"Stanford Linear Accelerator\", length2), length1 >= length2.\n.output Answer\n\n"]}
{"id": 960, "answer": false, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Caracal\", 0.5).\n.decl Answer()\nAnswer() :- Has_length(\"Caracal\", length), length > 0.5.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Caracal\", 0.5).\n.decl Answer()\nAnswer() :- Has_length(\"Caracal\", length), length > 0.5.\n.output Answer\n\n"]}
{"id": 961, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Marist\", 3000).\nHas_n_members(\"Rowing team\", 20).\n.decl Answer()\nAnswer() :- Has_n_members(\"Marist\", n_members1), Has_n_members(\"Rowing team\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Marist\", 3000).\nHas_n_members(\"Rowing team\", 20).\n.decl Answer()\nAnswer() :- Has_n_members(\"Marist\", n_members1), Has_n_members(\"Rowing team\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 962, "answer": true, "completion": ".decl Has_preference(Person:symbol, Preference:symbol)\nHas_preference(\"Ibn Saud\", \"salsa music\").\n.decl Answer()\nAnswer() :- Has_preference(\"Ibn Saud\", preference).\n.output Answer\n\n", "completions": [".decl Has_preference(Person:symbol, Preference:symbol)\nHas_preference(\"Ibn Saud\", \"salsa music\").\n.decl Answer()\nAnswer() :- Has_preference(\"Ibn Saud\", preference).\n.output Answer\n\n"]}
{"id": 963, "answer": true, "completion": ".decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"Venus\", 0.9).\nHas_gravity(\"snowboard\", 0.5).\n.decl Answer()\nAnswer() :- Has_gravity(\"Venus\", gravity1), Has_gravity(\"snowboard\", gravity2), gravity1 < gravity2.\n.output Answer\n\n", "completions": [".decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"Venus\", 0.9).\nHas_gravity(\"snowboard\", 0.5).\n.decl Answer()\nAnswer() :- Has_gravity(\"Venus\", gravity1), Has_gravity(\"snowboard\", gravity2), gravity1 < gravity2.\n.output Answer\n\n"]}
{"id": 964, "answer": true, "completion": ".decl Is_a_company(Company:symbol)\nIs_a_company(\"Samsung\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Apple\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Microsoft\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Google\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Facebook\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"IBM\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Oracle\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Intel\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nvidia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"AMD\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Tesla\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Qualcomm\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nokia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Sony\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"LG\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Huawei\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Lenovo\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"ASUS\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Toshiba\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Panasonic\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"HTC\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Motorola\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Huawei\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"ZTE\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Alcatel\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"BlackBerry\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nokia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Amazon\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Google\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Facebook\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Twitter\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Snapchat\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"WhatsApp\").\n.decl Is_a_company(Company:symbol)\nIs_a_company", "completions": [".decl Is_a_company(Company:symbol)\nIs_a_company(\"Samsung\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Apple\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Microsoft\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Google\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Facebook\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"IBM\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Oracle\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Intel\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nvidia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"AMD\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Tesla\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Qualcomm\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nokia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Sony\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"LG\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Huawei\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Lenovo\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"ASUS\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Toshiba\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Panasonic\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"HTC\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Motorola\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Huawei\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"ZTE\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Alcatel\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"BlackBerry\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Nokia\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Amazon\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Google\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Facebook\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Twitter\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"Snapchat\").\n.decl Is_a_company(Company:symbol)\nIs_a_company(\"WhatsApp\").\n.decl Is_a_company(Company:symbol)\nIs_a_company"]}
{"id": 965, "answer": true, "completion": ".decl Tamed(Dog:symbol, Person:symbol)\nTamed(\"dog\", \"Cesar Millan\").\n.decl Answer()\nAnswer() :- Tamed(\"dog\", \"Cesar Millan\").\n.output Answer\n\n", "completions": [".decl Tamed(Dog:symbol, Person:symbol)\nTamed(\"dog\", \"Cesar Millan\").\n.decl Answer()\nAnswer() :- Tamed(\"dog\", \"Cesar Millan\").\n.output Answer\n\n"]}
{"id": 966, "answer": false, "completion": ".decl Has_n_rooms(Hotel:symbol, N_rooms:float)\nHas_n_rooms(\"Grand Hotel\", 100).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Answer()\nAnswer() :- Has_n_rooms(\"Grand Hotel\", n_rooms), Has_n_stars(\"Grand Hotel\", n_stars), n_rooms >= 100, n_stars >= 4.\n.output Answer\n\n", "completions": [".decl Has_n_rooms(Hotel:symbol, N_rooms:float)\nHas_n_rooms(\"Grand Hotel\", 100).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Has_n_stars(Hotel:symbol, N_stars:float)\nHas_n_stars(\"Grand Hotel\", 5).\n.decl Answer()\nAnswer() :- Has_n_rooms(\"Grand Hotel\", n_rooms), Has_n_stars(\"Grand Hotel\", n_stars), n_rooms >= 100, n_stars >= 4.\n.output Answer\n\n"]}
{"id": 967, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Bill Clinton\", \"January 20, 1993\").\nHappens_in_time(\"Bill Clinton\", \"January 20, 2001\").\nHappens_in_time(\"Bill Clinton\", \"January 20, 2009\").\nHappens_in_time(\"impeachment\", \"January 19, 1999\").\nHappens_in_time(\"impeachment\", \"January 19, 2000\").\nHappens_in_time(\"impeachment\", \"January 19, 2001\").\nHappens_in_time(\"impeachment\", \"January 19, 2002\").\nHappens_in_time(\"impeachment\", \"January 19, 2003\").\nHappens_in_time(\"impeachment\", \"January 19, 2004\").\nHappens_in_time(\"impeachment\", \"January 19, 2005\").\nHappens_in_time(\"impeachment\", \"January 19, 2006\").\nHappens_in_time(\"impeachment\", \"January 19, 2007\").\nHappens_in_time(\"impeachment\", \"January 19, 2008\").\nHappens_in_time(\"impeachment\", \"January 19, 2009\").\nHappens_in_time(\"impeachment\", \"January 19, 2010\").\nHappens_in_time(\"impeachment\", \"January 19, 2011\").\nHappens_in_time(\"impeachment\", \"January 19, 2012\").\nHappens_in_time(\"impeachment\", \"January 19, 2013\").\nHappens_in_time(\"impeachment\", \"January 19, 2014\").\nHappens_in_time(\"impeachment\", \"January 19, 2015\").\nHappens_in_time(\"impeachment\", \"January 19, 2016\").\nHappens_in_time(\"impeachment\", \"January 19, 2017\").\nHappens_in_time(\"impeachment\", \"January 19, 2018\").\nHappens_in_time(\"impeachment\", \"January 19, 2019\").\nHappens_in_time(\"impeachment\", \"January 19, 2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Bill Clinton\", time1), Happens_in_time(\"impeachment\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Bill Clinton\", \"January 20, 1993\").\nHappens_in_time(\"Bill Clinton\", \"January 20, 2001\").\nHappens_in_time(\"Bill Clinton\", \"January 20, 2009\").\nHappens_in_time(\"impeachment\", \"January 19, 1999\").\nHappens_in_time(\"impeachment\", \"January 19, 2000\").\nHappens_in_time(\"impeachment\", \"January 19, 2001\").\nHappens_in_time(\"impeachment\", \"January 19, 2002\").\nHappens_in_time(\"impeachment\", \"January 19, 2003\").\nHappens_in_time(\"impeachment\", \"January 19, 2004\").\nHappens_in_time(\"impeachment\", \"January 19, 2005\").\nHappens_in_time(\"impeachment\", \"January 19, 2006\").\nHappens_in_time(\"impeachment\", \"January 19, 2007\").\nHappens_in_time(\"impeachment\", \"January 19, 2008\").\nHappens_in_time(\"impeachment\", \"January 19, 2009\").\nHappens_in_time(\"impeachment\", \"January 19, 2010\").\nHappens_in_time(\"impeachment\", \"January 19, 2011\").\nHappens_in_time(\"impeachment\", \"January 19, 2012\").\nHappens_in_time(\"impeachment\", \"January 19, 2013\").\nHappens_in_time(\"impeachment\", \"January 19, 2014\").\nHappens_in_time(\"impeachment\", \"January 19, 2015\").\nHappens_in_time(\"impeachment\", \"January 19, 2016\").\nHappens_in_time(\"impeachment\", \"January 19, 2017\").\nHappens_in_time(\"impeachment\", \"January 19, 2018\").\nHappens_in_time(\"impeachment\", \"January 19, 2019\").\nHappens_in_time(\"impeachment\", \"January 19, 2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Bill Clinton\", time1), Happens_in_time(\"impeachment\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 968, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Forbidden City\", 4).\nHas_height(\"wooden rollercoaster\", 4).\n.decl Answer()\nAnswer() :- Has_height(\"Forbidden City\", height1), Has_height(\"wooden rollercoaster\", height2), height1 = height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Forbidden City\", 4).\nHas_height(\"wooden rollercoaster\", 4).\n.decl Answer()\nAnswer() :- Has_height(\"Forbidden City\", height1), Has_height(\"wooden rollercoaster\", height2), height1 = height2.\n.output Answer\n\n"]}
{"id": 969, "answer": true, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Magnus Carlsen\", \"KFC\").\n.decl Answer()\nAnswer() :- Eats(\"Magnus Carlsen\", \"KFC\").\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Magnus Carlsen\", \"KFC\").\n.decl Answer()\nAnswer() :- Eats(\"Magnus Carlsen\", \"KFC\").\n.output Answer\n\n"]}
{"id": 970, "answer": false, "completion": ".decl Has_family(Moth:symbol, Family:symbol)\nHas_family(\"moth\", \"Lymantriidae\").\nHas_family(\"sloth\", \"Bradypodidae\").\n.decl Has_family_dinner(Family:symbol)\nHas_family_dinner(\"Lymantriidae\").\n.decl Answer()\nAnswer() :- Has_family(\"moth\", family), Has_family(\"sloth\", family), Has_family_dinner(family).\n.output Answer\n\n", "completions": [".decl Has_family(Moth:symbol, Family:symbol)\nHas_family(\"moth\", \"Lymantriidae\").\nHas_family(\"sloth\", \"Bradypodidae\").\n.decl Has_family_dinner(Family:symbol)\nHas_family_dinner(\"Lymantriidae\").\n.decl Answer()\nAnswer() :- Has_family(\"moth\", family), Has_family(\"sloth\", family), Has_family_dinner(family).\n.output Answer\n\n"]}
{"id": 971, "answer": false, "completion": ".decl Has_outsold(Person:symbol, Season:symbol)\nHas_outsold(\"Kelly Clarkson\", \"season 4\").\n.decl Has_won(Person:symbol, Season:symbol)\nHas_won(\"Kelly Clarkson\", \"season 4\").\n.decl Answer()\nAnswer() :- Has_outsold(\"Kelly Clarkson\", season), Has_won(\"Kelly Clarkson\", season).\n.output Answer\n\n", "completions": [".decl Has_outsold(Person:symbol, Season:symbol)\nHas_outsold(\"Kelly Clarkson\", \"season 4\").\n.decl Has_won(Person:symbol, Season:symbol)\nHas_won(\"Kelly Clarkson\", \"season 4\").\n.decl Answer()\nAnswer() :- Has_outsold(\"Kelly Clarkson\", season), Has_won(\"Kelly Clarkson\", season).\n.output Answer\n\n"]}
{"id": 972, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Javier Sotomayor\", 1.75).\nHas_height(\"caracal\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"caracal\", height1), Has_height(\"Javier Sotomayor\", height2), height1 < height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Javier Sotomayor\", 1.75).\nHas_height(\"caracal\", 1.5).\n.decl Answer()\nAnswer() :- Has_height(\"caracal\", height1), Has_height(\"Javier Sotomayor\", height2), height1 < height2.\n.output Answer\n\n"]}
{"id": 973, "answer": true, "completion": ".decl Has_n_different_values(Variable:symbol, N_values:float)\nHas_n_different_values(\"US President's\", 4).\n.decl Has_n_different_values(Variable:symbol, N_values:float)\nHas_n_different_values(\"Hong Kong\", 3).\n.decl Answer()\nAnswer() :- Has_n_different_values(\"US President's\", n_values1), Has_n_different_values(\"Hong Kong\", n_values2), n_values1 = n_values2.\n.output Answer\n\n", "completions": [".decl Has_n_different_values(Variable:symbol, N_values:float)\nHas_n_different_values(\"US President's\", 4).\n.decl Has_n_different_values(Variable:symbol, N_values:float)\nHas_n_different_values(\"Hong Kong\", 3).\n.decl Answer()\nAnswer() :- Has_n_different_values(\"US President's\", n_values1), Has_n_different_values(\"Hong Kong\", n_values2), n_values1 = n_values2.\n.output Answer\n\n"]}
{"id": 974, "answer": false, "completion": ".decl Was_sentenced(Person:symbol, Sentence:symbol)\nWas_sentenced(\"Oscar Wilde\", \"years in prison\").\n.decl Sentence_length(Sentence:symbol, Length:float)\nSentence_length(\"years in prison\", 18).\n.decl Answer()\nAnswer() :- Was_sentenced(\"Oscar Wilde\", sentence), Sentence_length(sentence, length), length > 18.\n.output Answer\n\n", "completions": [".decl Was_sentenced(Person:symbol, Sentence:symbol)\nWas_sentenced(\"Oscar Wilde\", \"years in prison\").\n.decl Sentence_length(Sentence:symbol, Length:float)\nSentence_length(\"years in prison\", 18).\n.decl Answer()\nAnswer() :- Was_sentenced(\"Oscar Wilde\", sentence), Sentence_length(sentence, length), length > 18.\n.output Answer\n\n"]}
{"id": 975, "answer": false, "completion": ".decl War_in_Vietnam(Year:symbol)\nWar_in_Vietnam(\"1945\").\nWar_in_Vietnam(\"1946\").\n.decl Gave_free_education(Country:symbol, Year:symbol)\nGave_free_education(\"Soviet Union\", \"1945\").\nGave_free_education(\"Soviet Union\", \"1946\").\n.decl Answer()\nAnswer() :- War_in_Vietnam(year), Gave_free_education(\"Soviet Union\", year).\n.output Answer\n\n", "completions": [".decl War_in_Vietnam(Year:symbol)\nWar_in_Vietnam(\"1945\").\nWar_in_Vietnam(\"1946\").\n.decl Gave_free_education(Country:symbol, Year:symbol)\nGave_free_education(\"Soviet Union\", \"1945\").\nGave_free_education(\"Soviet Union\", \"1946\").\n.decl Answer()\nAnswer() :- War_in_Vietnam(year), Gave_free_education(\"Soviet Union\", year).\n.output Answer\n\n"]}
{"id": 976, "answer": true, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"goblin shark\", \"seafood\").\nEats(\"goblin shark\", \"fish\").\nEats(\"goblin shark\", \"shrimp\").\nEats(\"goblin shark\", \"crab\").\nEats(\"goblin shark\", \"lobster\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"gob", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"goblin shark\", \"seafood\").\nEats(\"goblin shark\", \"fish\").\nEats(\"goblin shark\", \"shrimp\").\nEats(\"goblin shark\", \"crab\").\nEats(\"goblin shark\", \"lobster\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"goblin shark\", \"mussel\").\nEats(\"goblin shark\", \"octopus\").\nEats(\"goblin shark\", \"squid\").\nEats(\"goblin shark\", \"clam\").\nEats(\"goblin shark\", \"oyster\").\nEats(\"goblin shark\", \"scallop\").\nEats(\"gob"]}
{"id": 977, "answer": false, "completion": ".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"Hanuman\", \"joy\").\nHas_emotion(\"Hanuman\", \"ecstasy\").\n.decl Answer()\nAnswer() :- Has_emotion(\"Hanuman\", emotion), emotion = \"ecstasy\".\n.output Answer\n\n", "completions": [".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"Hanuman\", \"joy\").\nHas_emotion(\"Hanuman\", \"ecstasy\").\n.decl Answer()\nAnswer() :- Has_emotion(\"Hanuman\", emotion), emotion = \"ecstasy\".\n.output Answer\n\n"]}
{"id": 978, "answer": false, "completion": ".decl Has_form(Object:symbol, Form:symbol)\nHas_form(\"onion\", \"sphere\").\nHas_form(\"tree\", \"sphere\").\n.decl Answer()\nAnswer() :- Has_form(\"onion\", form), Has_form(\"tree\", form).\n.output Answer\n\n", "completions": [".decl Has_form(Object:symbol, Form:symbol)\nHas_form(\"onion\", \"sphere\").\nHas_form(\"tree\", \"sphere\").\n.decl Answer()\nAnswer() :- Has_form(\"onion\", form), Has_form(\"tree\", form).\n.output Answer\n\n"]}
{"id": 979, "answer": false, "completion": ".decl Has_parent(Company:symbol, Parent:symbol)\nHas_parent(\"LinkedIn\", \"Microsoft\").\nHas_parent(\"LeafedIn\", \"LinkedIn\").\n.decl Answer()\nAnswer() :- Has_parent(\"LinkedIn\", parent1), Has_parent(\"LeafedIn\", parent2), parent1 = parent2.\n.output Answer\n\n", "completions": [".decl Has_parent(Company:symbol, Parent:symbol)\nHas_parent(\"LinkedIn\", \"Microsoft\").\nHas_parent(\"LeafedIn\", \"LinkedIn\").\n.decl Answer()\nAnswer() :- Has_parent(\"LinkedIn\", parent1), Has_parent(\"LeafedIn\", parent2), parent1 = parent2.\n.output Answer\n\n"]}
{"id": 980, "answer": true, "completion": ".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"ocelot\", 40).\nHas_speed(\"kindergartner\", 10).\n.decl Answer()\nAnswer() :- Has_speed(\"ocelot\", speed1), Has_speed(\"kindergartner\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"ocelot\", 40).\nHas_speed(\"kindergartner\", 10).\n.decl Answer()\nAnswer() :- Has_speed(\"ocelot\", speed1), Has_speed(\"kindergartner\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 981, "answer": true, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Warsaw\", 1.5e6).\n.decl Has_cell_phones(City:symbol, Cell_phones:float)\nHas_cell_phones(\"Warsaw\", 1e6).\n.decl Answer()\nAnswer() :- Has_population(\"Warsaw\", population), Has_cell_phones(\"Warsaw\", cell_phones), population > cell_phones.\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Warsaw\", 1.5e6).\n.decl Has_cell_phones(City:symbol, Cell_phones:float)\nHas_cell_phones(\"Warsaw\", 1e6).\n.decl Answer()\nAnswer() :- Has_population(\"Warsaw\", population), Has_cell_phones(\"Warsaw\", cell_phones), population > cell_phones.\n.output Answer\n\n"]}
{"id": 982, "answer": true, "completion": ".decl In_galaxy(Planet:symbol, Galaxy:symbol)\nIn_galaxy(\"Ganymede\", \"Milky Way\").\n.decl Answer()\nAnswer() :- In_galaxy(\"Ganymede\", galaxy).\n.output Answer\n\n", "completions": [".decl In_galaxy(Planet:symbol, Galaxy:symbol)\nIn_galaxy(\"Ganymede\", \"Milky Way\").\n.decl Answer()\nAnswer() :- In_galaxy(\"Ganymede\", galaxy).\n.output Answer\n\n"]}
{"id": 983, "answer": false, "completion": ".decl Has_tattoo(Person:symbol, Tattoo:symbol)\nHas_tattoo(\"Harry Potter\", \"snake\").\nHas_tattoo(\"Harry Potter\", \"skull\").\n.decl Has_luck(Person:symbol, Luck:float)\nHas_luck(\"Harry Potter\", 0.9).\n.decl Answer()\nAnswer() :- Has_tattoo(\"Harry Potter\", tattoo), Has_luck(\"Harry Potter\", luck), tattoo = \"snake\".\nAnswer() :- Has_tattoo(\"Harry Potter\", tattoo), Has_luck(\"Harry Potter\", luck), tattoo = \"skull\".\n.output Answer\n\n", "completions": [".decl Has_tattoo(Person:symbol, Tattoo:symbol)\nHas_tattoo(\"Harry Potter\", \"snake\").\nHas_tattoo(\"Harry Potter\", \"skull\").\n.decl Has_luck(Person:symbol, Luck:float)\nHas_luck(\"Harry Potter\", 0.9).\n.decl Answer()\nAnswer() :- Has_tattoo(\"Harry Potter\", tattoo), Has_luck(\"Harry Potter\", luck), tattoo = \"snake\".\nAnswer() :- Has_tattoo(\"Harry Potter\", tattoo), Has_luck(\"Harry Potter\", luck), tattoo = \"skull\".\n.output Answer\n\n"]}
{"id": 984, "answer": true, "completion": ".decl Age(Person:symbol, Age:float)\nAge(\"Alan Alda\", 72).\n.decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"Vietnam War\", 10).\n.decl Answer()\nAnswer() :- Age(\"Alan Alda\", age), Last_n_years(\"Vietnam War\", n_years), age >= n_years.\n.output Answer\n\n", "completions": [".decl Age(Person:symbol, Age:float)\nAge(\"Alan Alda\", 72).\n.decl Last_n_years(Event:symbol, N_years:float)\nLast_n_years(\"Vietnam War\", 10).\n.decl Answer()\nAnswer() :- Age(\"Alan Alda\", age), Last_n_years(\"Vietnam War\", n_years), age >= n_years.\n.output Answer\n\n"]}
{"id": 985, "answer": false, "completion": ".decl Has_title(Song:symbol, Title:symbol)\nHas_title(\"In My Dreams\", \"Most Played Song\").\nHas_title(\"In My Dreams\", \"Most Played Song by a Female Artist\").\n.decl Has_gender(Artist:symbol, Gender:symbol)\nHas_gender(\"Van Morrison\", \"Male\").\nHas_gender(\"Van Morrison\", \"Male\").\n.decl Answer()\nAnswer() :- Has_title(\"In My Dreams\", title), Has_gender(\"Van Morrison\", gender), title \\= gender.\n.output Answer\n\n", "completions": [".decl Has_title(Song:symbol, Title:symbol)\nHas_title(\"In My Dreams\", \"Most Played Song\").\nHas_title(\"In My Dreams\", \"Most Played Song by a Female Artist\").\n.decl Has_gender(Artist:symbol, Gender:symbol)\nHas_gender(\"Van Morrison\", \"Male\").\nHas_gender(\"Van Morrison\", \"Male\").\n.decl Answer()\nAnswer() :- Has_title(\"In My Dreams\", title), Has_gender(\"Van Morrison\", gender), title \\= gender.\n.output Answer\n\n"]}
{"id": 986, "answer": true, "completion": ".decl Has_gang(Gang:symbol)\nHas_gang(\"N.W.A.\").\nHas_gang(\"Diddy\").\nHas_gang(\"The Game\").\n.decl Has_rival(Gang:symbol, Rival:symbol)\nHas_rival(\"N.W.A.\", \"Diddy\").\nHas_rival(\"N.W.A.\", \"The Game\").\nHas_rival(\"Diddy\", \"The Game\").\n.decl Answer()\nAnswer() :- Has_gang(\"Snoop Dogg\"), Has_rival(\"Snoop Dogg\", rival1), Has_rival(gang1, rival2), gang1 != rival1, rival1 != rival2, rival2 != gang1.\n.output Answer\n\n", "completions": [".decl Has_gang(Gang:symbol)\nHas_gang(\"N.W.A.\").\nHas_gang(\"Diddy\").\nHas_gang(\"The Game\").\n.decl Has_rival(Gang:symbol, Rival:symbol)\nHas_rival(\"N.W.A.\", \"Diddy\").\nHas_rival(\"N.W.A.\", \"The Game\").\nHas_rival(\"Diddy\", \"The Game\").\n.decl Answer()\nAnswer() :- Has_gang(\"Snoop Dogg\"), Has_rival(\"Snoop Dogg\", rival1), Has_rival(gang1, rival2), gang1 != rival1, rival1 != rival2, rival2 != gang1.\n.output Answer\n\n"]}
{"id": 987, "answer": true, "completion": ".decl Has_play(Author:symbol, Play:symbol)\nHas_play(\"Shakespeare\", \"Hamlet\").\nHas_play(\"Shakespeare\", \"Othello\").\nHas_play(\"Shakespeare\", \"Macbeth\").\nHas_play(\"Shakespeare\", \"Romeo and Juliet\").\nHas_play(\"Shakespeare\", \"King Lear\").\nHas_play(\"Shakespeare\", \"The Tempest\").\nHas_play(\"Scheherazade\", \"The Arabian Nights\").\n.decl Answer()\nAnswer() :- Has_play(\"Shakespeare\", play1), Has_play(\"Scheherazade\", play2), play1 != play2.\n.output Answer\n\n", "completions": [".decl Has_play(Author:symbol, Play:symbol)\nHas_play(\"Shakespeare\", \"Hamlet\").\nHas_play(\"Shakespeare\", \"Othello\").\nHas_play(\"Shakespeare\", \"Macbeth\").\nHas_play(\"Shakespeare\", \"Romeo and Juliet\").\nHas_play(\"Shakespeare\", \"King Lear\").\nHas_play(\"Shakespeare\", \"The Tempest\").\nHas_play(\"Scheherazade\", \"The Arabian Nights\").\n.decl Answer()\nAnswer() :- Has_play(\"Shakespeare\", play1), Has_play(\"Scheherazade\", play2), play1 != play2.\n.output Answer\n\n"]}
{"id": 988, "answer": false, "completion": ".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"goldfish\", 4).\nHas_n_legs(\"isopods\", 8).\n.decl Answer()\nAnswer() :- Has_n_legs(\"goldfish\", n_legs1), Has_n_legs(\"isopods\", n_legs2), n_legs1 > n_legs2.\n.output Answer\n\n", "completions": [".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"goldfish\", 4).\nHas_n_legs(\"isopods\", 8).\n.decl Answer()\nAnswer() :- Has_n_legs(\"goldfish\", n_legs1), Has_n_legs(\"isopods\", n_legs2), n_legs1 > n_legs2.\n.output Answer\n\n"]}
{"id": 989, "answer": false, "completion": ".decl Has_gross_income(Movie:symbol, Gross_income:float)\nHas_gross_income(\"Easy Rider\", 50000).\n.decl Has_release_date(Movie:symbol, Release_date:symbol)\nHas_release_date(\"Easy Rider\", \"May 1967\").\n.decl Has_release_month(Release_date:symbol, Month:symbol)\nHas_release_month(\"May 1967\", \"May\").\n.decl Has_release_year(Release_date:symbol, Year:float)\nHas_release_year(\"May 1967\", 1967).\n.decl Answer()\nAnswer() :- Has_gross_income(\"Easy Rider\", gross_income), Has_release_date(\"Easy Rider\", release_date), Has_release_month(release_date, month), Has_release_year(release_date, year), gross_income > 0, month = \"May\", year >= 1967.\n.output Answer\n\n", "completions": [".decl Has_gross_income(Movie:symbol, Gross_income:float)\nHas_gross_income(\"Easy Rider\", 50000).\n.decl Has_release_date(Movie:symbol, Release_date:symbol)\nHas_release_date(\"Easy Rider\", \"May 1967\").\n.decl Has_release_month(Release_date:symbol, Month:symbol)\nHas_release_month(\"May 1967\", \"May\").\n.decl Has_release_year(Release_date:symbol, Year:float)\nHas_release_year(\"May 1967\", 1967).\n.decl Answer()\nAnswer() :- Has_gross_income(\"Easy Rider\", gross_income), Has_release_date(\"Easy Rider\", release_date), Has_release_month(release_date, month), Has_release_year(release_date, year), gross_income > 0, month = \"May\", year >= 1967.\n.output Answer\n\n"]}
{"id": 990, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Katharine Hepburn's birth\", \"1907\").\nHappens_in_time(\"Katharine Hepburn's death\", \"2003\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1953\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1957\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1963\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1968\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1972\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1977\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1981\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1985\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1990\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1994\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1998\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2002\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2006\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2010\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2014\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2018\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2022\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2026\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2030\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2034\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2038\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2042\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2046\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2050\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2054\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2058\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2062\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2066\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2070\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2074\").\nHapp", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Katharine Hepburn's birth\", \"1907\").\nHappens_in_time(\"Katharine Hepburn's death\", \"2003\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1953\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1957\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1963\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1968\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1972\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1977\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1981\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1985\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1990\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1994\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"1998\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2002\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2006\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2010\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2014\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2018\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2022\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2026\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2030\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2034\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2038\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2042\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2046\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2050\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2054\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2058\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2062\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2066\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2070\").\nHappens_in_time(\"Katharine Hepburn's visit to the White House\", \"2074\").\nHapp"]}
{"id": 991, "answer": true, "completion": ".decl Has_salary(Person:symbol, Salary:float)\nHas_salary(\"Head Coach at NCSU\", 1000000).\n.decl Has_n_wins(Coach:symbol, N_wins:float)\nHas_n_wins(\"Head Coach at NCSU\", 5).\n.decl Answer()\nAnswer() :- Has_salary(\"Head Coach at NCSU\", salary), Has_n_wins(\"Head Coach at NCSU\", n_wins), Has_n_wins(coach, n_wins2), salary > n_wins2.\n.output Answer\n\n", "completions": [".decl Has_salary(Person:symbol, Salary:float)\nHas_salary(\"Head Coach at NCSU\", 1000000).\n.decl Has_n_wins(Coach:symbol, N_wins:float)\nHas_n_wins(\"Head Coach at NCSU\", 5).\n.decl Answer()\nAnswer() :- Has_salary(\"Head Coach at NCSU\", salary), Has_n_wins(\"Head Coach at NCSU\", n_wins), Has_n_wins(coach, n_wins2), salary > n_wins2.\n.output Answer\n\n"]}
{"id": 992, "answer": true, "completion": ".decl Has_rotation_period(Object:symbol, Period:float)\nHas_rotation_period(\"Indian Ocean garbage patch\", 1).\n.decl Answer()\nAnswer() :- Has_rotation_period(\"Indian Ocean garbage patch\", period), period < 2.\n.output Answer\n\n", "completions": [".decl Has_rotation_period(Object:symbol, Period:float)\nHas_rotation_period(\"Indian Ocean garbage patch\", 1).\n.decl Answer()\nAnswer() :- Has_rotation_period(\"Indian Ocean garbage patch\", period), period < 2.\n.output Answer\n\n"]}
{"id": 993, "answer": false, "completion": ".decl Serves_in_military(Person:symbol, Military:symbol)\nServes_in_military(\"child\", \"US Army\").\n.decl Serves_in_military(Person:symbol, Military:symbol)\nServes_in_military(\"adult\", \"US Army\").\n.decl Answer()\nAnswer() :- Serves_in_military(\"child\", military).\n.output Answer\n\n", "completions": [".decl Serves_in_military(Person:symbol, Military:symbol)\nServes_in_military(\"child\", \"US Army\").\n.decl Serves_in_military(Person:symbol, Military:symbol)\nServes_in_military(\"adult\", \"US Army\").\n.decl Answer()\nAnswer() :- Serves_in_military(\"child\", military).\n.output Answer\n\n"]}
{"id": 994, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"T-Mobile customer\", \"T-Mobile customer\").\nHas_name(\"T-Mobile customer\", \"T-Mobile\").\nHas_name(\"T-Mobile customer\", \"customer\").\n.decl Answer()\nAnswer() :- Has_name(\"T-Mobile tuesdays app\", name1), Has_name(\"T-Mobile customer\", name2), name1 != name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays app\").\nHas_name(\"T-Mobile tuesdays app\", \"Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile Tuesdays\").\nHas_name(\"T-Mobile tuesdays app\", \"T-Mobile\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"T-Mobile customer\", \"T-Mobile customer\").\nHas_name(\"T-Mobile customer\", \"T-Mobile\").\nHas_name(\"T-Mobile customer\", \"customer\").\n.decl Answer()\nAnswer() :- Has_name(\"T-Mobile tuesdays app\", name1), Has_name(\"T-Mobile customer\", name2), name1 != name2.\n.output Answer\n\n"]}
{"id": 995, "answer": false, "completion": ".decl Is_saint(Person:symbol)\nIs_saint(\"Joseph\").\nIs_saint(\"Matthew\").\nIs_saint(\"Luke\").\nIs_saint(\"Mark\").\nIs_saint(\"John\").\nIs_saint(\"James\").\nIs_saint(\"Andrew\").\nIs_saint(\"Philip\").\nIs_saint(\"Bartholomew\").\nIs_saint(\"Thomas\").\nIs_saint(\"Simon\").\nIs_saint(\"Judas\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"", "completions": [".decl Is_saint(Person:symbol)\nIs_saint(\"Joseph\").\nIs_saint(\"Matthew\").\nIs_saint(\"Luke\").\nIs_saint(\"Mark\").\nIs_saint(\"John\").\nIs_saint(\"James\").\nIs_saint(\"Andrew\").\nIs_saint(\"Philip\").\nIs_saint(\"Bartholomew\").\nIs_saint(\"Thomas\").\nIs_saint(\"Simon\").\nIs_saint(\"Judas\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\"Matthew\").\nIs_saint(\""]}
{"id": 996, "answer": false, "completion": ".decl Supports(Person:symbol, Action:symbol)\nSupports(\"George Fox\", \"stoning\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox", "completions": [".decl Supports(Person:symbol, Action:symbol)\nSupports(\"George Fox\", \"stoning\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox\", \"torture\").\nSupports(\"George Fox"]}
{"id": 997, "answer": false, "completion": ".decl Happens_on_date(Event:symbol, Date:symbol)\nHappens_on_date(\"Love Song\", \"November 11, 2000\").\n.decl Answer()\nAnswer() :- Happens_on_date(\"Love Song\", date), date = \"November 11, 2000\".\n.output Answer\n\n", "completions": [".decl Happens_on_date(Event:symbol, Date:symbol)\nHappens_on_date(\"Love Song\", \"November 11, 2000\").\n.decl Answer()\nAnswer() :- Happens_on_date(\"Love Song\", date), date = \"November 11, 2000\".\n.output Answer\n\n"]}
{"id": 998, "answer": true, "completion": ".decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Lionel Richie\", \"Sheila E\").\n.decl Answer()\nAnswer() :- Related(\"Lionel Richie\", person2), Related(\"Sheila E\", person1), person1 = person2.\n.output Answer\n\n", "completions": [".decl Related(Person_A:symbol, Person_B:symbol)\nRelated(\"Lionel Richie\", \"Sheila E\").\n.decl Answer()\nAnswer() :- Related(\"Lionel Richie\", person2), Related(\"Sheila E\", person1), person1 = person2.\n.output Answer\n\n"]}
{"id": 999, "answer": false, "completion": ".decl Is_air_force(Air_force:symbol, Country:symbol)\nIs_air_force(\"Royal Air Force\", \"United Kingdom\").\n.decl Is_airline(Airline:symbol, Country:symbol)\nIs_airline(\"British Airways\", \"United Kingdom\").\n.decl Answer()\nAnswer() :- Is_air_force(\"Royal Air Force\", country), Is_airline(\"British Airways\", country).\n.output Answer\n\n", "completions": [".decl Is_air_force(Air_force:symbol, Country:symbol)\nIs_air_force(\"Royal Air Force\", \"United Kingdom\").\n.decl Is_airline(Airline:symbol, Country:symbol)\nIs_airline(\"British Airways\", \"United Kingdom\").\n.decl Answer()\nAnswer() :- Is_air_force(\"Royal Air Force\", country), Is_airline(\"British Airways\", country).\n.output Answer\n\n"]}
{"id": 1000, "answer": false, "completion": ".decl Has_word(Phrase:symbol, Word:symbol)\nHas_word(\"beam me up\", \"beam\").\nHas_word(\"beam me up\", \"up\").\n.decl Answer()\nAnswer() :- Has_word(\"beam me up\", word), Has_word(\"Star Wars fans\", word).\n.output Answer\n\n", "completions": [".decl Has_word(Phrase:symbol, Word:symbol)\nHas_word(\"beam me up\", \"beam\").\nHas_word(\"beam me up\", \"up\").\n.decl Answer()\nAnswer() :- Has_word(\"beam me up\", word), Has_word(\"Star Wars fans\", word).\n.output Answer\n\n"]}
{"id": 1001, "answer": false, "completion": ".decl Has_os(Computer:symbol, OS:symbol)\nHas_os(\"Chrome OS\", \"Chrome OS\").\nHas_os(\"Chrome OS\", \"Linux\").\nHas_os(\"Chrome OS\", \"Windows\").\n.decl Has_browser(Computer:symbol, Browser:symbol)\nHas_browser(\"Chrome OS\", \"Chrome\").\nHas_browser(\"Chrome OS\", \"Chromium\").\n.decl Has_internet_connection(Computer:symbol, Internet_connection:symbol)\nHas_internet_connection(\"Chrome OS\", \"yes\").\n.decl Answer()\nAnswer() :- Has_os(\"Chrome OS\", os), Has_browser(\"Chrome OS\", browser), Has_internet_connection(\"Chrome OS\", internet_connection), os = \"Chrome OS\", browser = \"Chrome\", internet_connection = \"yes\".\n.output Answer\n\n", "completions": [".decl Has_os(Computer:symbol, OS:symbol)\nHas_os(\"Chrome OS\", \"Chrome OS\").\nHas_os(\"Chrome OS\", \"Linux\").\nHas_os(\"Chrome OS\", \"Windows\").\n.decl Has_browser(Computer:symbol, Browser:symbol)\nHas_browser(\"Chrome OS\", \"Chrome\").\nHas_browser(\"Chrome OS\", \"Chromium\").\n.decl Has_internet_connection(Computer:symbol, Internet_connection:symbol)\nHas_internet_connection(\"Chrome OS\", \"yes\").\n.decl Answer()\nAnswer() :- Has_os(\"Chrome OS\", os), Has_browser(\"Chrome OS\", browser), Has_internet_connection(\"Chrome OS\", internet_connection), os = \"Chrome OS\", browser = \"Chrome\", internet_connection = \"yes\".\n.output Answer\n\n"]}
{"id": 1002, "answer": true, "completion": ".decl Has_gross(Movie:symbol, Gross:float)\nHas_gross(\"The Matrix\", 663.0).\nHas_gross(\"Harry Potter and the Philosopher's Stone\", 774.0).\nHas_gross(\"Harry Potter and the Chamber of Secrets\", 847.0).\nHas_gross(\"Harry Potter and the Prisoner of Azkaban\", 852.0).\nHas_gross(\"Harry Potter and the Goblet of Fire\", 939.0).\nHas_gross(\"Harry Potter and the Order of the Phoenix\", 968.0).\nHas_gross(\"Harry Potter and the Half-Blood Prince\", 993.0).\nHas_gross(\"Harry Potter and the Deathly Hallows - Part 1\", 997.0).\nHas_gross(\"Harry Potter and the Deathly Hallows - Part 2\", 1005.0).\n.decl Answer()\nAnswer() :- Has_gross(\"Harry Potter and the Philosopher's Stone\", gross1), Has_gross(\"The Matrix\", gross2), gross1 > gross2.\n.output Answer\n\n", "completions": [".decl Has_gross(Movie:symbol, Gross:float)\nHas_gross(\"The Matrix\", 663.0).\nHas_gross(\"Harry Potter and the Philosopher's Stone\", 774.0).\nHas_gross(\"Harry Potter and the Chamber of Secrets\", 847.0).\nHas_gross(\"Harry Potter and the Prisoner of Azkaban\", 852.0).\nHas_gross(\"Harry Potter and the Goblet of Fire\", 939.0).\nHas_gross(\"Harry Potter and the Order of the Phoenix\", 968.0).\nHas_gross(\"Harry Potter and the Half-Blood Prince\", 993.0).\nHas_gross(\"Harry Potter and the Deathly Hallows - Part 1\", 997.0).\nHas_gross(\"Harry Potter and the Deathly Hallows - Part 2\", 1005.0).\n.decl Answer()\nAnswer() :- Has_gross(\"Harry Potter and the Philosopher's Stone\", gross1), Has_gross(\"The Matrix\", gross2), gross1 > gross2.\n.output Answer\n\n"]}
{"id": 1003, "answer": false, "completion": ".decl Job_title(Job:symbol)\nJob_title(\"retail\").\n.decl Job_title(Job:symbol)\nJob_title(\"accountant\").\n.decl Job_title(Job:symbol)\nJob_title(\"teacher\").\n.decl Job_title(Job:symbol)\nJob_title(\"salesperson\").\n.decl Job_title(Job:symbol)\nJob_title(\"mechanic\").\n.decl Job_title(Job:symbol)\nJob_title(\"lawyer\").\n.decl Job_title(Job:symbol)\nJob_title(\"doctor\").\n.decl Answer()\nAnswer() :- Job_title(\"retail\"), Job_title(\"accountant\"), Job_title(\"teacher\"), Job_title(\"salesperson\"), Job_title(\"mechanic\"), Job_title(\"lawyer\"), Job_title(\"doctor\").\n.output Answer\n\n", "completions": [".decl Job_title(Job:symbol)\nJob_title(\"retail\").\n.decl Job_title(Job:symbol)\nJob_title(\"accountant\").\n.decl Job_title(Job:symbol)\nJob_title(\"teacher\").\n.decl Job_title(Job:symbol)\nJob_title(\"salesperson\").\n.decl Job_title(Job:symbol)\nJob_title(\"mechanic\").\n.decl Job_title(Job:symbol)\nJob_title(\"lawyer\").\n.decl Job_title(Job:symbol)\nJob_title(\"doctor\").\n.decl Answer()\nAnswer() :- Job_title(\"retail\"), Job_title(\"accountant\"), Job_title(\"teacher\"), Job_title(\"salesperson\"), Job_title(\"mechanic\"), Job_title(\"lawyer\"), Job_title(\"doctor\").\n.output Answer\n\n"]}
{"id": 1004, "answer": false, "completion": ".decl Has_color(Beverage:symbol, Color:symbol)\nHas_color(\"green tea\", \"green\").\nHas_color(\"green tea\", \"yellow\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"blue\").\nHas_color(\"green tea\", \"red\").\nHas_color(\"green tea\", \"orange\").\nHas_color(\"green tea\", \"pink\").\nHas_color(\"green tea\", \"purple\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas", "completions": [".decl Has_color(Beverage:symbol, Color:symbol)\nHas_color(\"green tea\", \"green\").\nHas_color(\"green tea\", \"yellow\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"blue\").\nHas_color(\"green tea\", \"red\").\nHas_color(\"green tea\", \"orange\").\nHas_color(\"green tea\", \"pink\").\nHas_color(\"green tea\", \"purple\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas_color(\"green tea\", \"brown\").\nHas_color(\"green tea\", \"gray\").\nHas_color(\"green tea\", \"silver\").\nHas_color(\"green tea\", \"gold\").\nHas_color(\"green tea\", \"maroon\").\nHas_color(\"green tea\", \"tan\").\nHas_color(\"green tea\", \"navy\").\nHas_color(\"green tea\", \"teal\").\nHas_color(\"green tea\", \"white\").\nHas_color(\"green tea\", \"black\").\nHas"]}
{"id": 1005, "answer": true, "completion": ".decl Has_flag(Country:symbol, Flag:symbol)\nHas_flag(\"Albania\", \"double triangle\").\nHas_flag(\"Belgium\", \"double triangle\").\nHas_flag(\"Bulgaria\", \"double triangle\").\nHas_flag(\"Croatia\", \"double triangle\").\nHas_flag(\"Czech Republic\", \"double triangle\").\nHas_flag(\"Denmark\", \"double triangle\").\nHas_flag(\"Estonia\", \"double triangle\").\nHas_flag(\"Finland\", \"double triangle\").\nHas_flag(\"France\", \"double triangle\").\nHas_flag(\"Germany\", \"double triangle\").\nHas_flag(\"Greece\", \"double triangle\").\nHas_flag(\"Hungary\", \"double triangle\").\nHas_flag(\"Ireland\", \"double triangle\").\nHas_flag(\"Italy\", \"double triangle\").\nHas_flag(\"Latvia\", \"double triangle\").\nHas_flag(\"Lithuania\", \"double triangle\").\nHas_flag(\"Luxembourg\", \"double triangle\").\nHas_flag(\"Malta\", \"double triangle\").\nHas_flag(\"Netherlands\", \"double triangle\").\nHas_flag(\"Norway\", \"double triangle\").\nHas_flag(\"Poland\", \"double triangle\").\nHas_flag(\"Portugal\", \"double triangle\").\nHas_flag(\"Romania\", \"double triangle\").\nHas_flag(\"Slovakia\", \"double triangle\").\nHas_flag(\"Slovenia\", \"double triangle\").\nHas_flag(\"Spain\", \"double triangle\").\nHas_flag(\"Sweden\", \"double triangle\").\nHas_flag(\"Turkey\", \"double triangle\").\nHas_flag(\"United Kingdom\", \"double triangle\").\n.decl Answer()\nAnswer() :- Has_flag(country, \"double triangle\").\n.output Answer\n\n", "completions": [".decl Has_flag(Country:symbol, Flag:symbol)\nHas_flag(\"Albania\", \"double triangle\").\nHas_flag(\"Belgium\", \"double triangle\").\nHas_flag(\"Bulgaria\", \"double triangle\").\nHas_flag(\"Croatia\", \"double triangle\").\nHas_flag(\"Czech Republic\", \"double triangle\").\nHas_flag(\"Denmark\", \"double triangle\").\nHas_flag(\"Estonia\", \"double triangle\").\nHas_flag(\"Finland\", \"double triangle\").\nHas_flag(\"France\", \"double triangle\").\nHas_flag(\"Germany\", \"double triangle\").\nHas_flag(\"Greece\", \"double triangle\").\nHas_flag(\"Hungary\", \"double triangle\").\nHas_flag(\"Ireland\", \"double triangle\").\nHas_flag(\"Italy\", \"double triangle\").\nHas_flag(\"Latvia\", \"double triangle\").\nHas_flag(\"Lithuania\", \"double triangle\").\nHas_flag(\"Luxembourg\", \"double triangle\").\nHas_flag(\"Malta\", \"double triangle\").\nHas_flag(\"Netherlands\", \"double triangle\").\nHas_flag(\"Norway\", \"double triangle\").\nHas_flag(\"Poland\", \"double triangle\").\nHas_flag(\"Portugal\", \"double triangle\").\nHas_flag(\"Romania\", \"double triangle\").\nHas_flag(\"Slovakia\", \"double triangle\").\nHas_flag(\"Slovenia\", \"double triangle\").\nHas_flag(\"Spain\", \"double triangle\").\nHas_flag(\"Sweden\", \"double triangle\").\nHas_flag(\"Turkey\", \"double triangle\").\nHas_flag(\"United Kingdom\", \"double triangle\").\n.decl Answer()\nAnswer() :- Has_flag(country, \"double triangle\").\n.output Answer\n\n"]}
{"id": 1006, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"inauguration\", \"January 20, 2017\").\nHappens_in_time(\"Saddam Hussein's arrest\", \"April 5, 2003\").\nHappens_in_time(\"Saddam Hussein's death\", \"December 30, 2006\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Saddam Hussein's arrest\", time1), Happens_in_time(\"inauguration\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"inauguration\", \"January 20, 2017\").\nHappens_in_time(\"Saddam Hussein's arrest\", \"April 5, 2003\").\nHappens_in_time(\"Saddam Hussein's death\", \"December 30, 2006\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Saddam Hussein's arrest\", time1), Happens_in_time(\"inauguration\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 1007, "answer": true, "completion": ".decl Has_function(Organ:symbol, Function:symbol)\nHas_function(\"heart\", \"properly functioning\").\nHas_function(\"heart\", \"not functioning\").\nHas_function(\"liver\", \"properly functioning\").\nHas_function(\"liver\", \"not functioning\").\nHas_function(\"kidney\", \"properly functioning\").\nHas_function(\"kidney\", \"not functioning\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Alan Rickman\", \"heart disease\").\nHas_disease(\"Alan Rickman\", \"liver disease\").\nHas_disease(\"Alan Rickman\", \"kidney disease\").\n.decl Answer()\nAnswer() :- Has_function(\"heart\", function), Has_disease(\"Alan Rickman\", disease), function = \"not functioning\".\n.output Answer\n\n", "completions": [".decl Has_function(Organ:symbol, Function:symbol)\nHas_function(\"heart\", \"properly functioning\").\nHas_function(\"heart\", \"not functioning\").\nHas_function(\"liver\", \"properly functioning\").\nHas_function(\"liver\", \"not functioning\").\nHas_function(\"kidney\", \"properly functioning\").\nHas_function(\"kidney\", \"not functioning\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Alan Rickman\", \"heart disease\").\nHas_disease(\"Alan Rickman\", \"liver disease\").\nHas_disease(\"Alan Rickman\", \"kidney disease\").\n.decl Answer()\nAnswer() :- Has_function(\"heart\", function), Has_disease(\"Alan Rickman\", disease), function = \"not functioning\".\n.output Answer\n\n"]}
{"id": 1008, "answer": true, "completion": ".decl Has_ethics(Institution:symbol, Ethics:symbol)\nHas_ethics(\"Johns Hopkins University\", \"yes\").\n.decl Answer()\nAnswer() :- Has_ethics(\"Johns Hopkins University\", ethics).\n.output Answer\n\n", "completions": [".decl Has_ethics(Institution:symbol, Ethics:symbol)\nHas_ethics(\"Johns Hopkins University\", \"yes\").\n.decl Answer()\nAnswer() :- Has_ethics(\"Johns Hopkins University\", ethics).\n.output Answer\n\n"]}
{"id": 1009, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"University of Pittsburgh\", 15000).\nHas_n_members(\"FBI\", 10000).\n.decl Answer()\nAnswer() :- Has_n_members(\"University of Pittsburgh\", n_members1), Has_n_members(\"FBI\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"University of Pittsburgh\", 15000).\nHas_n_members(\"FBI\", 10000).\n.decl Answer()\nAnswer() :- Has_n_members(\"University of Pittsburgh\", n_members1), Has_n_members(\"FBI\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 1010, "answer": true, "completion": ".decl Was_member_of_house_of_lords(Person:symbol)\nWas_member_of_house_of_lords(\"Aristotle\").\n.decl Answer()\nAnswer() :- Was_member_of_house_of_lords(\"Aristotle\").\n.output Answer\n\n", "completions": [".decl Was_member_of_house_of_lords(Person:symbol)\nWas_member_of_house_of_lords(\"Aristotle\").\n.decl Answer()\nAnswer() :- Was_member_of_house_of_lords(\"Aristotle\").\n.output Answer\n\n"]}
{"id": 1011, "answer": true, "completion": ".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"John\", \"Uberlandia\").\nLives_in(\"Mary\", \"Uberlandia\").\nLives_in(\"Mitsubishi\", \"Uberlandia\").\n.decl Employs(Company:symbol, Person:symbol)\nEmploys(\"Mitsubishi\", \"John\").\nEmploys(\"Mitsubishi\", \"Mary\").\n.decl Answer()\nAnswer() :- Lives_in(\"John\", city), Lives_in(\"Mary\", city), Employs(\"Mitsubishi\", person), city = \"Uberlandia\".\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"John\", \"Uberlandia\").\nLives_in(\"Mary\", \"Uberlandia\").\nLives_in(\"Mitsubishi\", \"Uberlandia\").\n.decl Employs(Company:symbol, Person:symbol)\nEmploys(\"Mitsubishi\", \"John\").\nEmploys(\"Mitsubishi\", \"Mary\").\n.decl Answer()\nAnswer() :- Lives_in(\"John\", city), Lives_in(\"Mary\", city), Employs(\"Mitsubishi\", person), city = \"Uberlandia\".\n.output Answer\n\n"]}
{"id": 1012, "answer": false, "completion": ".decl Has_genus(Animal:symbol, Genus:symbol)\nHas_genus(\"wolverine\", \"canine\").\nHas_genus(\"lynx\", \"feline\").\n.decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"wolverine\", \"wolverine\").\nHas_species(\"lynx\", \"lynx\").\n.decl Answer()\nAnswer() :- Has_genus(\"wolverine\", genus1), Has_genus(\"lynx\", genus2), Has_species(\"wolverine\", species1), Has_species(\"lynx\", species2), genus1 = genus2, species1 = species2.\n.output Answer\n\n", "completions": [".decl Has_genus(Animal:symbol, Genus:symbol)\nHas_genus(\"wolverine\", \"canine\").\nHas_genus(\"lynx\", \"feline\").\n.decl Has_species(Animal:symbol, Species:symbol)\nHas_species(\"wolverine\", \"wolverine\").\nHas_species(\"lynx\", \"lynx\").\n.decl Answer()\nAnswer() :- Has_genus(\"wolverine\", genus1), Has_genus(\"lynx\", genus2), Has_species(\"wolverine\", species1), Has_species(\"lynx\", species2), genus1 = genus2, species1 = species2.\n.output Answer\n\n"]}
{"id": 1013, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Acela Express\", 160).\nHas_speed(\"sound\", 340).\n.decl Answer()\nAnswer() :- Has_speed(\"Acela Express\", speed1), Has_speed(\"sound\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Acela Express\", 160).\nHas_speed(\"sound\", 340).\n.decl Answer()\nAnswer() :- Has_speed(\"Acela Express\", speed1), Has_speed(\"sound\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1014, "answer": true, "completion": ".decl Has_HIV(Person:symbol)\nHas_HIV(\"HIV positive person\").\n.decl Has_silverware(Person:symbol)\nHas_silverware(\"HIV positive person\").\n.decl Answer()\nAnswer() :- Has_HIV(\"HIV positive person\"), Has_silverware(\"HIV positive person\").\n.output Answer\n\n", "completions": [".decl Has_HIV(Person:symbol)\nHas_HIV(\"HIV positive person\").\n.decl Has_silverware(Person:symbol)\nHas_silverware(\"HIV positive person\").\n.decl Answer()\nAnswer() :- Has_HIV(\"HIV positive person\"), Has_silverware(\"HIV positive person\").\n.output Answer\n\n"]}
{"id": 1015, "answer": false, "completion": ".decl Has_similar_worms(Object:symbol, Similar_worms:symbol)\nHas_similar_worms(\"strawberry\", \"dogs\").\n.decl Has_similar_dogs(Object:symbol, Similar_dogs:symbol)\nHas_similar_dogs(\"dogs\", \"strawberry\").\n.decl Answer()\nAnswer() :- Has_similar_worms(\"strawberry\", similar_worms), Has_similar_dogs(\"dogs\", similar_dogs), similar_worms == similar_dogs.\n.output Answer\n\n", "completions": [".decl Has_similar_worms(Object:symbol, Similar_worms:symbol)\nHas_similar_worms(\"strawberry\", \"dogs\").\n.decl Has_similar_dogs(Object:symbol, Similar_dogs:symbol)\nHas_similar_dogs(\"dogs\", \"strawberry\").\n.decl Answer()\nAnswer() :- Has_similar_worms(\"strawberry\", similar_worms), Has_similar_dogs(\"dogs\", similar_dogs), similar_worms == similar_dogs.\n.output Answer\n\n"]}
{"id": 1016, "answer": true, "completion": ".decl Has_odor(Object:symbol, Odor:symbol)\nHas_odor(\"Durian\", \"delight\").\n.decl Answer()\nAnswer() :- Has_odor(\"Durian\", odor).\n.output Answer\n\n", "completions": [".decl Has_odor(Object:symbol, Odor:symbol)\nHas_odor(\"Durian\", \"delight\").\n.decl Answer()\nAnswer() :- Has_odor(\"Durian\", odor).\n.output Answer\n\n"]}
{"id": 1017, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Gorillaz\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Gorillaz\", n_members1), Has_n_members(\"Gorillaz\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Gorillaz\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Gorillaz\", n_members1), Has_n_members(\"Gorillaz\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1018, "answer": true, "completion": ".decl Has_amendment(Constitution:symbol, Amendment:symbol)\nHas_amendment(\"United States Constitution\", \"Eighth\").\n.decl Protects_freedom(Amendment:symbol, Freedom:symbol)\nProtects_freedom(\"Eighth\", \"speech\").\n.decl Answer()\nAnswer() :- Has_amendment(\"United States Constitution\", amendment), Protects_freedom(amendment, freedom).\n.output Answer\n\n", "completions": [".decl Has_amendment(Constitution:symbol, Amendment:symbol)\nHas_amendment(\"United States Constitution\", \"Eighth\").\n.decl Protects_freedom(Amendment:symbol, Freedom:symbol)\nProtects_freedom(\"Eighth\", \"speech\").\n.decl Answer()\nAnswer() :- Has_amendment(\"United States Constitution\", amendment), Protects_freedom(amendment, freedom).\n.output Answer\n\n"]}
{"id": 1019, "answer": true, "completion": ".decl Has_theme_song(Series:symbol, Theme_song:symbol)\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_", "completions": [".decl Has_theme_song(Series:symbol, Theme_song:symbol)\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_song(\"The A-Team\", \"The A-Team\").\nHas_theme_"]}
{"id": 1020, "answer": false, "completion": ".decl Has_musical_passion(Person:symbol, Musical_passion:symbol)\nHas_musical_passion(\"Squidward Tentacles\", \"classical\").\nHas_musical_passion(\"Alan Greenspan\", \"jazz\").\n.decl Answer()\nAnswer() :- Has_musical_passion(\"Squidward Tentacles\", passion1), Has_musical_passion(\"Alan Greenspan\", passion2), passion1 \\= passion2.\n.output Answer\n\n", "completions": [".decl Has_musical_passion(Person:symbol, Musical_passion:symbol)\nHas_musical_passion(\"Squidward Tentacles\", \"classical\").\nHas_musical_passion(\"Alan Greenspan\", \"jazz\").\n.decl Answer()\nAnswer() :- Has_musical_passion(\"Squidward Tentacles\", passion1), Has_musical_passion(\"Alan Greenspan\", passion2), passion1 \\= passion2.\n.output Answer\n\n"]}
{"id": 1021, "answer": true, "completion": ".decl Is_unbreakable(Object:symbol)\nIs_unbreakable(\"pyramid\").\n.decl Is_in_museum(Object:symbol, Museum:symbol)\nIs_in_museum(\"pyramid\", \"Louvre\").\n.decl Answer()\nAnswer() :- Is_unbreakable(\"pyramid\"), Is_in_museum(\"pyramid\", \"Louvre\").\n.output Answer\n\n", "completions": [".decl Is_unbreakable(Object:symbol)\nIs_unbreakable(\"pyramid\").\n.decl Is_in_museum(Object:symbol, Museum:symbol)\nIs_in_museum(\"pyramid\", \"Louvre\").\n.decl Answer()\nAnswer() :- Is_unbreakable(\"pyramid\"), Is_in_museum(\"pyramid\", \"Louvre\").\n.output Answer\n\n"]}
{"id": 1022, "answer": true, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Evander Holyfield\", \"pork products\").\n.decl Answer()\nAnswer() :- Eats(\"Evander Holyfield\", food).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Evander Holyfield\", \"pork products\").\n.decl Answer()\nAnswer() :- Eats(\"Evander Holyfield\", food).\n.output Answer\n\n"]}
{"id": 1023, "answer": true, "completion": ".decl Directly_involved(Country:symbol, Conflict:symbol)\nDirectly_involved(\"England\", \"Arab-Israeli conflict\").\n.decl Answer()\nAnswer() :- Directly_involved(\"England\", conflict).\n.output Answer\n\n", "completions": [".decl Directly_involved(Country:symbol, Conflict:symbol)\nDirectly_involved(\"England\", \"Arab-Israeli conflict\").\n.decl Answer()\nAnswer() :- Directly_involved(\"England\", conflict).\n.output Answer\n\n"]}
{"id": 1024, "answer": true, "completion": ".decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Dyscalculia\", \"accountant\").\n.decl Has_difficulty(Profession:symbol, Difficulty:symbol)\nHas_difficulty(\"accountant\", \"math\").\n.decl Answer()\nAnswer() :- Has_profession(\"Dyscalculia\", profession), Has_difficulty(profession, difficulty), difficulty == \"math\".\n.output Answer\n\n", "completions": [".decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Dyscalculia\", \"accountant\").\n.decl Has_difficulty(Profession:symbol, Difficulty:symbol)\nHas_difficulty(\"accountant\", \"math\").\n.decl Answer()\nAnswer() :- Has_profession(\"Dyscalculia\", profession), Has_difficulty(profession, difficulty), difficulty == \"math\".\n.output Answer\n\n"]}
{"id": 1025, "answer": false, "completion": ".decl Has_used(Person:symbol, Object:symbol)\nHas_used(\"Donatello\", \"smartphone\").\n.decl Answer()\nAnswer() :- Has_used(\"Donatello\", object).\n.output Answer\n\n", "completions": [".decl Has_used(Person:symbol, Object:symbol)\nHas_used(\"Donatello\", \"smartphone\").\n.decl Answer()\nAnswer() :- Has_used(\"Donatello\", object).\n.output Answer\n\n"]}
{"id": 1026, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"groundhog day\", \"January\").\nHappens_in_time(\"groundhog day\", \"February\").\nHappens_in_time(\"groundhog day\", \"March\").\nHappens_in_time(\"groundhog day\", \"April\").\nHappens_in_time(\"groundhog day\", \"May\").\nHappens_in_time(\"groundhog day\", \"June\").\nHappens_in_time(\"groundhog day\", \"July\").\nHappens_in_time(\"groundhog day\", \"August\").\nHappens_in_time(\"groundhog day\", \"September\").\nHappens_in_time(\"groundhog day\", \"October\").\nHappens_in_time(\"groundhog day\", \"November\").\nHappens_in_time(\"groundhog day\", \"December\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"christmas\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"christmas\", month), Happens_in_time(\"groundhog day\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"groundhog day\", \"January\").\nHappens_in_time(\"groundhog day\", \"February\").\nHappens_in_time(\"groundhog day\", \"March\").\nHappens_in_time(\"groundhog day\", \"April\").\nHappens_in_time(\"groundhog day\", \"May\").\nHappens_in_time(\"groundhog day\", \"June\").\nHappens_in_time(\"groundhog day\", \"July\").\nHappens_in_time(\"groundhog day\", \"August\").\nHappens_in_time(\"groundhog day\", \"September\").\nHappens_in_time(\"groundhog day\", \"October\").\nHappens_in_time(\"groundhog day\", \"November\").\nHappens_in_time(\"groundhog day\", \"December\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"christmas\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"christmas\", month), Happens_in_time(\"groundhog day\", month).\n.output Answer\n\n"]}
{"id": 1027, "answer": false, "completion": ".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"The Lord of the Rings\", 1000).\nHas_n_pages(\"The Little Prince\", 300).\n.decl Has_n_trees_saved(Book:symbol, N_trees_saved:float)\nHas_n_trees_saved(\"The Lord of the Rings\", 100).\nHas_n_trees_saved(\"The Little Prince\", 50).\n.decl Answer()\nAnswer() :- Has_n_pages(\"The Lord of the Rings\", n_pages), Has_n_trees_saved(\"The Lord of the Rings\", n_trees_saved), n_pages > n_trees_saved.\n.output Answer\n\n", "completions": [".decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"The Lord of the Rings\", 1000).\nHas_n_pages(\"The Little Prince\", 300).\n.decl Has_n_trees_saved(Book:symbol, N_trees_saved:float)\nHas_n_trees_saved(\"The Lord of the Rings\", 100).\nHas_n_trees_saved(\"The Little Prince\", 50).\n.decl Answer()\nAnswer() :- Has_n_pages(\"The Lord of the Rings\", n_pages), Has_n_trees_saved(\"The Lord of the Rings\", n_trees_saved), n_pages > n_trees_saved.\n.output Answer\n\n"]}
{"id": 1028, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"pyramid\", 100).\nHas_height(\"pyramid\", 200).\n.decl Has_age(Object:symbol, Age:float)\nHas_age(\"pyramid\", 3000).\nHas_age(\"pyramid\", 4000).\n.decl Answer()\nAnswer() :- Has_height(\"pyramid\", height), Has_age(\"pyramid\", age), height > age.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"pyramid\", 100).\nHas_height(\"pyramid\", 200).\n.decl Has_age(Object:symbol, Age:float)\nHas_age(\"pyramid\", 3000).\nHas_age(\"pyramid\", 4000).\n.decl Answer()\nAnswer() :- Has_height(\"pyramid\", height), Has_age(\"pyramid\", age), height > age.\n.output Answer\n\n"]}
{"id": 1029, "answer": false, "completion": ".decl Has_capacity(Device:symbol, Capacity:float)\nHas_capacity(\"Samsung Galaxy A10e\", 8).\nHas_capacity(\"Samsung Galaxy A10e\", 16).\n.decl Has_resolution(Device:symbol, Resolution:float)\nHas_resolution(\"Samsung Galaxy A10e\", 1080).\nHas_resolution(\"Samsung Galaxy A10e\", 720).\n.decl Has_price(Device:symbol, Price:float)\nHas_price(\"Samsung Galaxy A10e\", 100).\nHas_price(\"Samsung Galaxy A10e\", 200).\n.decl Answer()\nAnswer() :- Has_capacity(\"Samsung Galaxy A10e\", capacity), Has_resolution(\"Samsung Galaxy A10e\", resolution), Has_price(\"Samsung Galaxy A10e\", price), capacity >= resolution, price <= 200.\n.output Answer\n\n", "completions": [".decl Has_capacity(Device:symbol, Capacity:float)\nHas_capacity(\"Samsung Galaxy A10e\", 8).\nHas_capacity(\"Samsung Galaxy A10e\", 16).\n.decl Has_resolution(Device:symbol, Resolution:float)\nHas_resolution(\"Samsung Galaxy A10e\", 1080).\nHas_resolution(\"Samsung Galaxy A10e\", 720).\n.decl Has_price(Device:symbol, Price:float)\nHas_price(\"Samsung Galaxy A10e\", 100).\nHas_price(\"Samsung Galaxy A10e\", 200).\n.decl Answer()\nAnswer() :- Has_capacity(\"Samsung Galaxy A10e\", capacity), Has_resolution(\"Samsung Galaxy A10e\", resolution), Has_price(\"Samsung Galaxy A10e\", price), capacity >= resolution, price <= 200.\n.output Answer\n\n"]}
{"id": 1030, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Aerosmith\", 40).\nHas_speed(\"car\", 40).\n.decl Has_max_speed(Object:symbol, Max_speed:float)\nHas_max_speed(\"car\", 65).\n.decl Answer()\nAnswer() :- Has_speed(\"Aerosmith\", speed), Has_max_speed(\"car\", max_speed), speed <= max_speed.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Aerosmith\", 40).\nHas_speed(\"car\", 40).\n.decl Has_max_speed(Object:symbol, Max_speed:float)\nHas_max_speed(\"car\", 65).\n.decl Answer()\nAnswer() :- Has_speed(\"Aerosmith\", speed), Has_max_speed(\"car\", max_speed), speed <= max_speed.\n.output Answer\n\n"]}
{"id": 1031, "answer": false, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"ostrich\", 10).\nHas_size(\"nest of a swallow\", 5).\n.decl Answer()\nAnswer() :- Has_size(\"ostrich\", size1), Has_size(\"nest of a swallow\", size2), size1 <= size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"ostrich\", 10).\nHas_size(\"nest of a swallow\", 5).\n.decl Answer()\nAnswer() :- Has_size(\"ostrich\", size1), Has_size(\"nest of a swallow\", size2), size1 <= size2.\n.output Answer\n\n"]}
{"id": 1032, "answer": true, "completion": ".decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"Soldier Field\", 100000).\nHas_capacity(\"giant squid\", 1000000).\n.decl Answer()\nAnswer() :- Has_capacity(\"giant squid\", capacity), Has_capacity(\"Soldier Field\", capacity).\n.output Answer\n\n", "completions": [".decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"Soldier Field\", 100000).\nHas_capacity(\"giant squid\", 1000000).\n.decl Answer()\nAnswer() :- Has_capacity(\"giant squid\", capacity), Has_capacity(\"Soldier Field\", capacity).\n.output Answer\n\n"]}
{"id": 1033, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Constitution of the United States\", 0.1).\nHas_density(\"PETA\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"Constitution of the United States\", density1), Has_density(\"PETA\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Constitution of the United States\", 0.1).\nHas_density(\"PETA\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"Constitution of the United States\", density1), Has_density(\"PETA\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1034, "answer": true, "completion": ".decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"minotaur\", \"tibia\").\nHas_body_part(\"minotaur\", \"thigh\").\nHas_body_part(\"minotaur\", \"knee\").\nHas_body_part(\"minotaur\", \"foot\").\n.decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"football player\", \"tibia\").\nHas_body_part(\"football player\", \"thigh\").\nHas_body_part(\"football player\", \"knee\").\nHas_body_part(\"football player\", \"foot\").\n.decl Answer()\nAnswer() :- Has_body_part(\"minotaur\", body_part), Has_body_part(\"football player\", body_part).\n.output Answer\n\n", "completions": [".decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"minotaur\", \"tibia\").\nHas_body_part(\"minotaur\", \"thigh\").\nHas_body_part(\"minotaur\", \"knee\").\nHas_body_part(\"minotaur\", \"foot\").\n.decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"football player\", \"tibia\").\nHas_body_part(\"football player\", \"thigh\").\nHas_body_part(\"football player\", \"knee\").\nHas_body_part(\"football player\", \"foot\").\n.decl Answer()\nAnswer() :- Has_body_part(\"minotaur\", body_part), Has_body_part(\"football player\", body_part).\n.output Answer\n\n"]}
{"id": 1035, "answer": true, "completion": ".decl Is_icon(Icon:symbol)\nIs_icon(\"crucifixion\").\n.decl Is_social_acceptable(Icon:symbol)\nIs_social_acceptable(\"crucifixion\").\n.decl Answer()\nAnswer() :- Is_icon(\"crucifixion\"), Is_social_acceptable(\"crucifixion\").\n.output Answer\n\n", "completions": [".decl Is_icon(Icon:symbol)\nIs_icon(\"crucifixion\").\n.decl Is_social_acceptable(Icon:symbol)\nIs_social_acceptable(\"crucifixion\").\n.decl Answer()\nAnswer() :- Is_icon(\"crucifixion\"), Is_social_acceptable(\"crucifixion\").\n.output Answer\n\n"]}
{"id": 1036, "answer": false, "completion": ".decl Happened_in_time(Event:symbol, Time:symbol)\nHappened_in_time(\"United Airlines flight 191\", \"January\").\nHappened_in_time(\"United Airlines flight 191\", \"February\").\nHappened_in_time(\"United Airlines flight 191\", \"March\").\nHappened_in_time(\"United Airlines flight 191\", \"April\").\nHappened_in_time(\"United Airlines flight 191\", \"May\").\nHappened_in_time(\"United Airlines flight 191\", \"June\").\nHappened_in_time(\"United Airlines flight 191\", \"July\").\nHappened_in_time(\"United Airlines flight 191\", \"August\").\nHappened_in_time(\"United Airlines flight 191\", \"September\").\nHappened_in_time(\"United Airlines flight 191\", \"October\").\nHappened_in_time(\"United Airlines flight 191\", \"November\").\nHappened_in_time(\"United Airlines flight 191\", \"December\").\n.decl Happened_in_year(Event:symbol, Year:symbol)\nHappened_in_year(\"United Airlines flight 191\", \"1958\").\nHappened_in_year(\"United Airlines flight 191\", \"1959\").\nHappened_in_year(\"United Airlines flight 191\", \"1960\").\nHappened_in_year(\"United Airlines flight 191\", \"1961\").\nHappened_in_year(\"United Airlines flight 191\", \"1962\").\nHappened_in_year(\"United Airlines flight 191\", \"1963\").\nHappened_in_year(\"United Airlines flight 191\", \"1964\").\nHappened_in_year(\"United Airlines flight 191\", \"1965\").\nHappened_in_year(\"United Airlines flight 191\", \"1966\").\nHappened_in_year(\"United Airlines flight 191\", \"1967\").\nHappened_in_year(\"United Airlines flight 191\", \"1968\").\nHappened_in_year(\"United Airlines flight 191\", \"1969\").\nHappened_in_year(\"United Airlines flight 191\", \"1970\").\nHappened_in_year(\"United Airlines flight 191\", \"1971\").\nHappened_in_year(\"United Airlines flight 191\", \"1972\").\nHappened_in_year(\"United Airlines flight 191\", \"1973\").\nHappened_in_year(\"United Airlines flight 191\", \"1974\").\nHappened_in_year(\"United Airlines flight 191\", \"1975\").\nHappened_in_year(\"United Airlines flight 191\", \"1976\").\nHappened_in_year(\"United Airlines flight 191\", \"1977\").\nHappened_in_year(\"United Airlines flight 191\", \"1978\").\nHappened_in_year(\"United Airlines flight 191\", \"1979\").\nHappened_in_year(\"United Airlines flight 191\", \"1980\").\nHappened_in_year(\"United Airlines flight 191\", \"1981\").\nHappened_in_year(\"United Airlines flight 191\", \"1982\").\nHappened_in_year(\"United Airlines flight 191\", \"1983\").\nHappened_in_year(\"United Airlines flight 191\", \"1984\").\nHappened_in_year(\"United Airlines flight 191\", \"1985\").\nHappened_in_year(\"United Airlines flight 191\", \"1986\").\nHappened_in_year(\"United Airlines flight 191\", \"1987\").\nHappened_in_year(\"United Airlines flight 191\", \"1988\").\nHappened_in_year(\"United Airlines flight 191\", \"1989\").\nHappened_in_year(\"", "completions": [".decl Happened_in_time(Event:symbol, Time:symbol)\nHappened_in_time(\"United Airlines flight 191\", \"January\").\nHappened_in_time(\"United Airlines flight 191\", \"February\").\nHappened_in_time(\"United Airlines flight 191\", \"March\").\nHappened_in_time(\"United Airlines flight 191\", \"April\").\nHappened_in_time(\"United Airlines flight 191\", \"May\").\nHappened_in_time(\"United Airlines flight 191\", \"June\").\nHappened_in_time(\"United Airlines flight 191\", \"July\").\nHappened_in_time(\"United Airlines flight 191\", \"August\").\nHappened_in_time(\"United Airlines flight 191\", \"September\").\nHappened_in_time(\"United Airlines flight 191\", \"October\").\nHappened_in_time(\"United Airlines flight 191\", \"November\").\nHappened_in_time(\"United Airlines flight 191\", \"December\").\n.decl Happened_in_year(Event:symbol, Year:symbol)\nHappened_in_year(\"United Airlines flight 191\", \"1958\").\nHappened_in_year(\"United Airlines flight 191\", \"1959\").\nHappened_in_year(\"United Airlines flight 191\", \"1960\").\nHappened_in_year(\"United Airlines flight 191\", \"1961\").\nHappened_in_year(\"United Airlines flight 191\", \"1962\").\nHappened_in_year(\"United Airlines flight 191\", \"1963\").\nHappened_in_year(\"United Airlines flight 191\", \"1964\").\nHappened_in_year(\"United Airlines flight 191\", \"1965\").\nHappened_in_year(\"United Airlines flight 191\", \"1966\").\nHappened_in_year(\"United Airlines flight 191\", \"1967\").\nHappened_in_year(\"United Airlines flight 191\", \"1968\").\nHappened_in_year(\"United Airlines flight 191\", \"1969\").\nHappened_in_year(\"United Airlines flight 191\", \"1970\").\nHappened_in_year(\"United Airlines flight 191\", \"1971\").\nHappened_in_year(\"United Airlines flight 191\", \"1972\").\nHappened_in_year(\"United Airlines flight 191\", \"1973\").\nHappened_in_year(\"United Airlines flight 191\", \"1974\").\nHappened_in_year(\"United Airlines flight 191\", \"1975\").\nHappened_in_year(\"United Airlines flight 191\", \"1976\").\nHappened_in_year(\"United Airlines flight 191\", \"1977\").\nHappened_in_year(\"United Airlines flight 191\", \"1978\").\nHappened_in_year(\"United Airlines flight 191\", \"1979\").\nHappened_in_year(\"United Airlines flight 191\", \"1980\").\nHappened_in_year(\"United Airlines flight 191\", \"1981\").\nHappened_in_year(\"United Airlines flight 191\", \"1982\").\nHappened_in_year(\"United Airlines flight 191\", \"1983\").\nHappened_in_year(\"United Airlines flight 191\", \"1984\").\nHappened_in_year(\"United Airlines flight 191\", \"1985\").\nHappened_in_year(\"United Airlines flight 191\", \"1986\").\nHappened_in_year(\"United Airlines flight 191\", \"1987\").\nHappened_in_year(\"United Airlines flight 191\", \"1988\").\nHappened_in_year(\"United Airlines flight 191\", \"1989\").\nHappened_in_year(\""]}
{"id": 1037, "answer": false, "completion": ".decl Appears_in(Person:symbol, Movie:symbol)\nAppears_in(\"Clark Gable\", \"Gone with the Wind\").\nAppears_in(\"Clark Gable\", \"A Farewell to Arms\").\nAppears_in(\"Clark Gable\", \"Mutiny on the Bounty\").\nAppears_in(\"John Williams\", \"Star Wars Episode IV: A New Hope\").\nAppears_in(\"John Williams\", \"Star Wars Episode V: The Empire Strikes Back\").\nAppears_in(\"John Williams\", \"Star Wars Episode VI: Return of the Jedi\").\n.decl Answer()\nAnswer() :- Appears_in(\"Clark Gable\", movie), Appears_in(person, movie), person = \"John Williams\".\n.output Answer\n\n", "completions": [".decl Appears_in(Person:symbol, Movie:symbol)\nAppears_in(\"Clark Gable\", \"Gone with the Wind\").\nAppears_in(\"Clark Gable\", \"A Farewell to Arms\").\nAppears_in(\"Clark Gable\", \"Mutiny on the Bounty\").\nAppears_in(\"John Williams\", \"Star Wars Episode IV: A New Hope\").\nAppears_in(\"John Williams\", \"Star Wars Episode V: The Empire Strikes Back\").\nAppears_in(\"John Williams\", \"Star Wars Episode VI: Return of the Jedi\").\n.decl Answer()\nAnswer() :- Appears_in(\"Clark Gable\", movie), Appears_in(person, movie), person = \"John Williams\".\n.output Answer\n\n"]}
{"id": 1038, "answer": false, "completion": ".decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"pescetarian\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"vegetarian\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"vegan\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"kosher\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"halal\").\n.decl Answer()\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"pescetarian\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"vegetarian\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"vegan\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"kosher\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"halal\").\n.output Answer\n\n", "completions": [".decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"pescetarian\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"vegetarian\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"vegan\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"kosher\").\n.decl Has_dietary_guidelines(Person:symbol, Guidelines:symbol)\nHas_dietary_guidelines(\"David Duchovny\", \"halal\").\n.decl Answer()\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"pescetarian\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"vegetarian\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"vegan\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"kosher\").\nAnswer() :- Has_dietary_guidelines(\"David Duchovny\", \"halal\").\n.output Answer\n\n"]}
{"id": 1039, "answer": true, "completion": ".decl Has_price(Product:symbol, Price:float)\nHas_price(\"General Motors\", 1).\nHas_price(\"movie theater\", 0).\n.decl Answer()\nAnswer() :- Has_price(\"General Motors\", price1), Has_price(\"movie theater\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Product:symbol, Price:float)\nHas_price(\"General Motors\", 1).\nHas_price(\"movie theater\", 0).\n.decl Answer()\nAnswer() :- Has_price(\"General Motors\", price1), Has_price(\"movie theater\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1040, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Halloween cruise\", \"October\").\nHappens_in_time(\"Halloween cruise\", \"November\").\nHappens_in_time(\"Halloween cruise\", \"December\").\n.decl Happens_in_region(Event:symbol, Region:symbol)\nHappens_in_region(\"Halloween cruise\", \"Gulf of Mexico\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Halloween cruise\", \"fall\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Halloween cruise\", \"October\").\nHappens_in_month(\"Halloween cruise\", \"November\").\nHappens_in_month(\"Halloween cruise\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Halloween cruise\", month), Happens_in_month(\"Halloween cruise\", month), Happens_in_season(\"Halloween cruise\", season), Happens_in_region(\"Halloween cruise\", region), season = \"fall\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Halloween cruise\", \"October\").\nHappens_in_time(\"Halloween cruise\", \"November\").\nHappens_in_time(\"Halloween cruise\", \"December\").\n.decl Happens_in_region(Event:symbol, Region:symbol)\nHappens_in_region(\"Halloween cruise\", \"Gulf of Mexico\").\n.decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"Halloween cruise\", \"fall\").\n.decl Happens_in_month(Event:symbol, Month:symbol)\nHappens_in_month(\"Halloween cruise\", \"October\").\nHappens_in_month(\"Halloween cruise\", \"November\").\nHappens_in_month(\"Halloween cruise\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Halloween cruise\", month), Happens_in_month(\"Halloween cruise\", month), Happens_in_season(\"Halloween cruise\", season), Happens_in_region(\"Halloween cruise\", region), season = \"fall\".\n.output Answer\n\n"]}
{"id": 1041, "answer": false, "completion": ".decl Has_money(Person:symbol, Money:float)\nHas_money(\"Billie Eilish\", 100).\n.decl Has_price(Object:symbol, Price:float)\nHas_price(\"Porsche\", 100000).\n.decl Answer()\nAnswer() :- Has_money(\"Billie Eilish\", money), Has_price(\"Porsche\", price), money > price.\n.output Answer\n\n", "completions": [".decl Has_money(Person:symbol, Money:float)\nHas_money(\"Billie Eilish\", 100).\n.decl Has_price(Object:symbol, Price:float)\nHas_price(\"Porsche\", 100000).\n.decl Answer()\nAnswer() :- Has_money(\"Billie Eilish\", money), Has_price(\"Porsche\", price), money > price.\n.output Answer\n\n"]}
{"id": 1042, "answer": false, "completion": ".decl Has_reputation(Doctor:symbol, Reputation:float)\nHas_reputation(\"Dr. Oz\", 5).\nHas_reputation(\"Dr. Phil\", 1).\nHas_reputation(\"Dr. House\", 8).\n.decl Has_reputation(Doctor:symbol, Reputation:float)\nHas_reputation(\"Dr. Oz\", 5).\nHas_reputation(\"Dr. Phil\", 1).\nHas_reputation(\"Dr. House\", 8).\n.decl Answer()\nAnswer() :- Has_reputation(\"Dr. Oz\", reputation1), Has_reputation(\"Dr. House\", reputation2), reputation1 > reputation2.\n.output Answer\n\n", "completions": [".decl Has_reputation(Doctor:symbol, Reputation:float)\nHas_reputation(\"Dr. Oz\", 5).\nHas_reputation(\"Dr. Phil\", 1).\nHas_reputation(\"Dr. House\", 8).\n.decl Has_reputation(Doctor:symbol, Reputation:float)\nHas_reputation(\"Dr. Oz\", 5).\nHas_reputation(\"Dr. Phil\", 1).\nHas_reputation(\"Dr. House\", 8).\n.decl Answer()\nAnswer() :- Has_reputation(\"Dr. Oz\", reputation1), Has_reputation(\"Dr. House\", reputation2), reputation1 > reputation2.\n.output Answer\n\n"]}
{"id": 1043, "answer": false, "completion": ".decl Has_n_tusks(Animal:symbol, N_tusks:float)\nHas_n_tusks(\"common warthog\", 2).\n.decl Has_n_tusks(Animal:symbol, N_tusks:float)\nHas_n_tusks(\"common warthog\", 2).\n.decl Answer()\nAnswer() :- Has_n_tusks(\"common warthog\", n_tusks1), Has_n_tusks(\"common warthog\", n_tusks2), n_tusks1 >= n_tusks2.\n.output Answer\n\n", "completions": [".decl Has_n_tusks(Animal:symbol, N_tusks:float)\nHas_n_tusks(\"common warthog\", 2).\n.decl Has_n_tusks(Animal:symbol, N_tusks:float)\nHas_n_tusks(\"common warthog\", 2).\n.decl Answer()\nAnswer() :- Has_n_tusks(\"common warthog\", n_tusks1), Has_n_tusks(\"common warthog\", n_tusks2), n_tusks1 >= n_tusks2.\n.output Answer\n\n"]}
{"id": 1044, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American\", \"Paris\").\nHappens_in_time(\"American\", \"Disneyland\").\nHappens_in_time(\"language barriers\", \"Disneyland\").\nHappens_in_time(\"language barriers\", \"Paris\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"language barriers\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"American\", time1), Happens_in_time(\"language barriers\", time2), time1 = time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American\", \"Paris\").\nHappens_in_time(\"American\", \"Disneyland\").\nHappens_in_time(\"language barriers\", \"Disneyland\").\nHappens_in_time(\"language barriers\", \"Paris\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"language barriers\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"American\", time1), Happens_in_time(\"language barriers\", time2), time1 = time2.\n.output Answer\n\n"]}
{"id": 1045, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"giraffe\", 4).\nHas_height(\"Eiffel Tower\", 324).\n.decl Answer()\nAnswer() :- Has_height(\"giraffe\", height1), Has_height(\"Eiffel Tower\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"giraffe\", 4).\nHas_height(\"Eiffel Tower\", 324).\n.decl Answer()\nAnswer() :- Has_height(\"giraffe\", height1), Has_height(\"Eiffel Tower\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 1046, "answer": false, "completion": ".decl Has_hardness(Object:symbol, Hardness:float)\nHas_hardness(\"diamond\", 7).\nHas_hardness(\"gladiator's weapon\", 5).\n.decl Answer()\nAnswer() :- Has_hardness(\"gladiator's weapon\", hardness1), Has_hardness(\"diamond\", hardness2), hardness1 > hardness2.\n.output Answer\n\n", "completions": [".decl Has_hardness(Object:symbol, Hardness:float)\nHas_hardness(\"diamond\", 7).\nHas_hardness(\"gladiator's weapon\", 5).\n.decl Answer()\nAnswer() :- Has_hardness(\"gladiator's weapon\", hardness1), Has_hardness(\"diamond\", hardness2), hardness1 > hardness2.\n.output Answer\n\n"]}
{"id": 1047, "answer": true, "completion": ".decl Is_necessary(Tool:symbol, Activity:symbol)\nIs_necessary(\"curling iron\", \"curling\").\n.decl Answer()\nAnswer() :- Is_necessary(\"curling iron\", activity).\n.output Answer\n\n", "completions": [".decl Is_necessary(Tool:symbol, Activity:symbol)\nIs_necessary(\"curling iron\", \"curling\").\n.decl Answer()\nAnswer() :- Is_necessary(\"curling iron\", activity).\n.output Answer\n\n"]}
{"id": 1048, "answer": true, "completion": ".decl Has_antidepressant(Person:symbol)\nHas_antidepressant(\"John\").\n.decl Has_citrus_fruit(Person:symbol, Fruit:symbol)\nHas_citrus_fruit(\"John\", \"orange\").\nHas_citrus_fruit(\"John\", \"lime\").\n.decl Answer()\nAnswer() :- Has_antidepressant(\"John\"), Has_citrus_fruit(\"John\", fruit).\n.output Answer\n\n", "completions": [".decl Has_antidepressant(Person:symbol)\nHas_antidepressant(\"John\").\n.decl Has_citrus_fruit(Person:symbol, Fruit:symbol)\nHas_citrus_fruit(\"John\", \"orange\").\nHas_citrus_fruit(\"John\", \"lime\").\n.decl Answer()\nAnswer() :- Has_antidepressant(\"John\"), Has_citrus_fruit(\"John\", fruit).\n.output Answer\n\n"]}
{"id": 1049, "answer": false, "completion": ".decl Has_numerology(Hotel:symbol, Numerology:symbol)\nHas_numerology(\"Hilton\", \"numerology\").\nHas_numerology(\"Marriott\", \"numerology\").\nHas_numerology(\"Hyatt\", \"numerology\").\n.decl Has_n_floors(Hotel:symbol, N_floors:float)\nHas_n_floors(\"Hilton\", 20).\nHas_n_floors(\"Marriott\", 30).\nHas_n_floors(\"Hyatt\", 40).\n.decl Answer()\nAnswer() :- Has_numerology(hotel, numerology), Has_n_floors(hotel, n_floors), n_floors > 20.\n.output Answer\n\n", "completions": [".decl Has_numerology(Hotel:symbol, Numerology:symbol)\nHas_numerology(\"Hilton\", \"numerology\").\nHas_numerology(\"Marriott\", \"numerology\").\nHas_numerology(\"Hyatt\", \"numerology\").\n.decl Has_n_floors(Hotel:symbol, N_floors:float)\nHas_n_floors(\"Hilton\", 20).\nHas_n_floors(\"Marriott\", 30).\nHas_n_floors(\"Hyatt\", 40).\n.decl Answer()\nAnswer() :- Has_numerology(hotel, numerology), Has_n_floors(hotel, n_floors), n_floors > 20.\n.output Answer\n\n"]}
{"id": 1050, "answer": true, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Michael Phelps\", 25).\nHas_speed(\"pearl\", 0.1).\n.decl Answer()\nAnswer() :- Has_speed(\"Michael Phelps\", speed1), Has_speed(\"pearl\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Michael Phelps\", 25).\nHas_speed(\"pearl\", 0.1).\n.decl Answer()\nAnswer() :- Has_speed(\"Michael Phelps\", speed1), Has_speed(\"pearl\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1051, "answer": true, "completion": ".decl Has_currency(Country:symbol, Currency:symbol)\nHas_currency(\"USA\", \"USD\").\nHas_currency(\"France\", \"EUR\").\nHas_currency(\"Italy\", \"EUR\").\nHas_currency(\"Germany\", \"EUR\").\nHas_currency(\"Netherlands\", \"EUR\").\nHas_currency(\"Belgium\", \"EUR\").\nHas_currency(\"Luxembourg\", \"EUR\").\nHas_currency(\"Andorra\", \"EUR\").\nHas_currency(\"Monaco\", \"EUR\").\nHas_currency(\"Vatican City\", \"EUR\").\nHas_currency(\"San Marino\", \"EUR\").\nHas_currency(\"Spain\", \"EUR\").\nHas_currency(\"Portugal\", \"EUR\").\nHas_currency(\"United Kingdom\", \"GBP\").\nHas_currency(\"Ireland\", \"EUR\").\nHas_currency(\"Iceland\", \"EUR\").\nHas_currency(\"Norway\", \"EUR\").\nHas_currency(\"Sweden\", \"EUR\").\nHas_currency(\"Denmark\", \"EUR\").\nHas_currency(\"Finland\", \"EUR\").\nHas_currency(\"Greenland\", \"EUR\").\nHas_currency(\"Faroe Islands\", \"EUR\").\nHas_currency(\"Estonia\", \"EUR\").\nHas_currency(\"Latvia\", \"EUR\").\nHas_currency(\"Lithuania\", \"EUR\").\nHas_currency(\"Poland\", \"EUR\").\nHas_currency(\"Czech Republic\", \"EUR\").\nHas_currency(\"Slovakia\", \"EUR\").\nHas_currency(\"Hungary\", \"EUR\").\nHas_currency(\"Romania\", \"EUR\").\nHas_currency(\"Bulgaria\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Macedonia\", \"EUR\").\nHas_currency(\"Kosovo\", \"EUR\").\nHas_currency(\"Montenegro\", \"EUR\").\nHas_currency(\"Serbia\", \"EUR\").\nHas_currency(\"Bosnia and Herzegovina\", \"EUR\").\nHas_currency(\"Croatia\", \"EUR\").\nHas_currency(\"Slovenia\", \"EUR\").\nHas_currency(\"Albania\", \"EUR\").\nHas_currency(\"Greece\", \"EUR\").\nHas_currency(\"Turkey\", \"EUR\").\nHas_currency(\"Cyprus\", \"EUR\").\nHas_currency(\"Georgia\", \"EUR\").\nHas_currency(\"Armenia\", \"EUR\").\nHas_currency(\"Azerbaijan\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"E", "completions": [".decl Has_currency(Country:symbol, Currency:symbol)\nHas_currency(\"USA\", \"USD\").\nHas_currency(\"France\", \"EUR\").\nHas_currency(\"Italy\", \"EUR\").\nHas_currency(\"Germany\", \"EUR\").\nHas_currency(\"Netherlands\", \"EUR\").\nHas_currency(\"Belgium\", \"EUR\").\nHas_currency(\"Luxembourg\", \"EUR\").\nHas_currency(\"Andorra\", \"EUR\").\nHas_currency(\"Monaco\", \"EUR\").\nHas_currency(\"Vatican City\", \"EUR\").\nHas_currency(\"San Marino\", \"EUR\").\nHas_currency(\"Spain\", \"EUR\").\nHas_currency(\"Portugal\", \"EUR\").\nHas_currency(\"United Kingdom\", \"GBP\").\nHas_currency(\"Ireland\", \"EUR\").\nHas_currency(\"Iceland\", \"EUR\").\nHas_currency(\"Norway\", \"EUR\").\nHas_currency(\"Sweden\", \"EUR\").\nHas_currency(\"Denmark\", \"EUR\").\nHas_currency(\"Finland\", \"EUR\").\nHas_currency(\"Greenland\", \"EUR\").\nHas_currency(\"Faroe Islands\", \"EUR\").\nHas_currency(\"Estonia\", \"EUR\").\nHas_currency(\"Latvia\", \"EUR\").\nHas_currency(\"Lithuania\", \"EUR\").\nHas_currency(\"Poland\", \"EUR\").\nHas_currency(\"Czech Republic\", \"EUR\").\nHas_currency(\"Slovakia\", \"EUR\").\nHas_currency(\"Hungary\", \"EUR\").\nHas_currency(\"Romania\", \"EUR\").\nHas_currency(\"Bulgaria\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Macedonia\", \"EUR\").\nHas_currency(\"Kosovo\", \"EUR\").\nHas_currency(\"Montenegro\", \"EUR\").\nHas_currency(\"Serbia\", \"EUR\").\nHas_currency(\"Bosnia and Herzegovina\", \"EUR\").\nHas_currency(\"Croatia\", \"EUR\").\nHas_currency(\"Slovenia\", \"EUR\").\nHas_currency(\"Albania\", \"EUR\").\nHas_currency(\"Greece\", \"EUR\").\nHas_currency(\"Turkey\", \"EUR\").\nHas_currency(\"Cyprus\", \"EUR\").\nHas_currency(\"Georgia\", \"EUR\").\nHas_currency(\"Armenia\", \"EUR\").\nHas_currency(\"Azerbaijan\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"EUR\").\nHas_currency(\"Russia\", \"EUR\").\nHas_currency(\"Belarus\", \"EUR\").\nHas_currency(\"Moldova\", \"EUR\").\nHas_currency(\"Ukraine\", \"E"]}
{"id": 1052, "answer": false, "completion": ".decl Plays_for(Player:symbol, Team:symbol)\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Henrik Zetterberg\", \"Anaheim Ducks\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pitt", "completions": [".decl Plays_for(Player:symbol, Team:symbol)\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Henrik Zetterberg\", \"Anaheim Ducks\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pittsburgh Penguins\").\nPlays_for(\"Alexander Ovechkin\", \"Washington Capitals\").\nPlays_for(\"Henrik Zetterberg\", \"Detroit Red Wings\").\nPlays_for(\"Sidney Crosby\", \"Pitt"]}
{"id": 1053, "answer": false, "completion": ".decl Writes(Person:symbol, Text:symbol)\nWrites(\"Monty Python\", \"Who's on First\").\n.decl Answer()\nAnswer() :- Writes(\"Monty Python\", text), Writes(person, text), person != \"Monty Python\".\n.output Answer\n\n", "completions": [".decl Writes(Person:symbol, Text:symbol)\nWrites(\"Monty Python\", \"Who's on First\").\n.decl Answer()\nAnswer() :- Writes(\"Monty Python\", text), Writes(person, text), person != \"Monty Python\".\n.output Answer\n\n"]}
{"id": 1054, "answer": true, "completion": ".decl Is_a_numeral(Symbol:symbol)\nIs_a_numeral(\"B\").\n.decl Is_an_arabic_numeral(Symbol:symbol)\nIs_an_arabic_numeral(\"1\").\nIs_an_arabic_numeral(\"2\").\nIs_an_arabic_numeral(\"3\").\nIs_an_arabic_numeral(\"4\").\nIs_an_arabic_numeral(\"5\").\nIs_an_arabic_numeral(\"6\").\nIs_an_arabic_numeral(\"7\").\nIs_an_arabic_numeral(\"8\").\nIs_an_arabic_numeral(\"9\").\nIs_an_arabic_numeral(\"0\").\n.decl Answer()\nAnswer() :- Is_a_numeral(symbol1), Is_an_arabic_numeral(symbol2), symbol1 = symbol2.\n.output Answer\n\n", "completions": [".decl Is_a_numeral(Symbol:symbol)\nIs_a_numeral(\"B\").\n.decl Is_an_arabic_numeral(Symbol:symbol)\nIs_an_arabic_numeral(\"1\").\nIs_an_arabic_numeral(\"2\").\nIs_an_arabic_numeral(\"3\").\nIs_an_arabic_numeral(\"4\").\nIs_an_arabic_numeral(\"5\").\nIs_an_arabic_numeral(\"6\").\nIs_an_arabic_numeral(\"7\").\nIs_an_arabic_numeral(\"8\").\nIs_an_arabic_numeral(\"9\").\nIs_an_arabic_numeral(\"0\").\n.decl Answer()\nAnswer() :- Is_a_numeral(symbol1), Is_an_arabic_numeral(symbol2), symbol1 = symbol2.\n.output Answer\n\n"]}
{"id": 1055, "answer": false, "completion": ".decl Is_a_singer(Person:symbol)\nIs_a_singer(\"Brian Warner\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smiths\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The New York Dolls\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Voidz\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Cure\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smashing Pumpkins\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Pixies\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Velvet Underground\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Doors\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Beach Boys\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Kinks\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Who\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Rolling Stones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Sex Pistols\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Ramones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Misfits\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Pixies\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Cure\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smashing Pumpkins\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Voidz\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The New York Dolls\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smiths\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Doors\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Beach Boys\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Kinks\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Who\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Rolling Stones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Sex Pistols\").\n.decl Is_a_band(Band:symbol)\nIs", "completions": [".decl Is_a_singer(Person:symbol)\nIs_a_singer(\"Brian Warner\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smiths\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The New York Dolls\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Voidz\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Cure\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smashing Pumpkins\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Pixies\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Velvet Underground\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Doors\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Beach Boys\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Kinks\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Who\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Rolling Stones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Sex Pistols\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Ramones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Misfits\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Pixies\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Cure\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smashing Pumpkins\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Voidz\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The New York Dolls\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Smiths\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Stooges\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Doors\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Beach Boys\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Kinks\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Who\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Rolling Stones\").\n.decl Is_a_band(Band:symbol)\nIs_a_band(\"The Sex Pistols\").\n.decl Is_a_band(Band:symbol)\nIs"]}
{"id": 1056, "answer": true, "completion": ".decl Was_a_teacher(Person:symbol)\nWas_a_teacher(\"Hugh Jackman\").\n.decl Taught(Person:symbol, Book:symbol)\nTaught(\"Hugh Jackman\", \"The Great Gatsby\").\n.decl Answer()\nAnswer() :- Was_a_teacher(\"Hugh Jackman\"), Taught(\"Hugh Jackman\", \"The Great Gatsby\").\n.output Answer\n\n", "completions": [".decl Was_a_teacher(Person:symbol)\nWas_a_teacher(\"Hugh Jackman\").\n.decl Taught(Person:symbol, Book:symbol)\nTaught(\"Hugh Jackman\", \"The Great Gatsby\").\n.decl Answer()\nAnswer() :- Was_a_teacher(\"Hugh Jackman\"), Taught(\"Hugh Jackman\", \"The Great Gatsby\").\n.output Answer\n\n"]}
{"id": 1057, "answer": true, "completion": ".decl Last_n_days(Event:symbol, N_days:float)\nLast_n_days(\"Young and the Restless\", 365).\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"binge watch\", 7).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"binge watch\", n_days1), Last_n_days(\"Young and the Restless\", n_days2),  n_days1 > n_days2.\n.output Answer\n\n", "completions": [".decl Last_n_days(Event:symbol, N_days:float)\nLast_n_days(\"Young and the Restless\", 365).\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"binge watch\", 7).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"binge watch\", n_days1), Last_n_days(\"Young and the Restless\", n_days2),  n_days1 > n_days2.\n.output Answer\n\n"]}
{"id": 1058, "answer": false, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Agnostic\", \"agnosticism\").\nBelieves(\"Agnostic\", \"God\").\nBelieves(\"Agnostic\", \"religion\").\nBelieves(\"Agnostic\", \"pope\").\n.decl Answer()\nAnswer() :- Believes(\"Agnostic\", belief), Believes(\"Agnostic\", \"pope\").\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Agnostic\", \"agnosticism\").\nBelieves(\"Agnostic\", \"God\").\nBelieves(\"Agnostic\", \"religion\").\nBelieves(\"Agnostic\", \"pope\").\n.decl Answer()\nAnswer() :- Believes(\"Agnostic\", belief), Believes(\"Agnostic\", \"pope\").\n.output Answer\n\n"]}
{"id": 1059, "answer": false, "completion": ".decl Has_special_facilities(Zoo:symbol, Special_facilities:symbol)\nHas_special_facilities(\"San Diego Zoo\", \"giraffe\").\nHas_special_facilities(\"San Diego Zoo\", \"elephant\").\nHas_special_facilities(\"San Diego Zoo\", \"monkey\").\nHas_special_facilities(\"San Diego Zoo\", \"tiger\").\nHas_special_facilities(\"San Diego Zoo\", \"bear\").\nHas_special_facilities(\"San Diego Zoo\", \"lion\").\nHas_special_facilities(\"San Diego Zoo\", \"penguin\").\nHas_special_facilities(\"San Diego Zoo\", \"panda\").\nHas_special_facilities(\"San Diego Zoo\", \"kangaroo\").\nHas_special_facilities(\"San Diego Zoo\", \"zebra\").\nHas_special_facilities(\"San Diego Zoo\", \"giraffe\").\nHas_special_facilities(\"San Diego Zoo\", \"elephant\").\nHas_special_facilities(\"San Diego Zoo\", \"monkey\").\nHas_special_facilities(\"San Diego Zoo\", \"tiger\").\nHas_special_facilities(\"San Diego Zoo\", \"bear\").\nHas_special_facilities(\"San Diego Zoo\", \"lion\").\nHas_special_facilities(\"San Diego Zoo\", \"penguin\").\nHas_special_facilities(\"San Diego Zoo\", \"panda\").\nHas_special_facilities(\"San Diego Zoo\", \"kangaroo\").\nHas_special_facilities(\"San Diego Zoo\", \"zebra\").\n.decl Answer()\nAnswer() :- Has_special_facilities(\"San Diego Zoo\", special_facilities), Has_special_facilities(\"San Diego Zoo\", special_facilities).\n.output Answer\n\n", "completions": [".decl Has_special_facilities(Zoo:symbol, Special_facilities:symbol)\nHas_special_facilities(\"San Diego Zoo\", \"giraffe\").\nHas_special_facilities(\"San Diego Zoo\", \"elephant\").\nHas_special_facilities(\"San Diego Zoo\", \"monkey\").\nHas_special_facilities(\"San Diego Zoo\", \"tiger\").\nHas_special_facilities(\"San Diego Zoo\", \"bear\").\nHas_special_facilities(\"San Diego Zoo\", \"lion\").\nHas_special_facilities(\"San Diego Zoo\", \"penguin\").\nHas_special_facilities(\"San Diego Zoo\", \"panda\").\nHas_special_facilities(\"San Diego Zoo\", \"kangaroo\").\nHas_special_facilities(\"San Diego Zoo\", \"zebra\").\nHas_special_facilities(\"San Diego Zoo\", \"giraffe\").\nHas_special_facilities(\"San Diego Zoo\", \"elephant\").\nHas_special_facilities(\"San Diego Zoo\", \"monkey\").\nHas_special_facilities(\"San Diego Zoo\", \"tiger\").\nHas_special_facilities(\"San Diego Zoo\", \"bear\").\nHas_special_facilities(\"San Diego Zoo\", \"lion\").\nHas_special_facilities(\"San Diego Zoo\", \"penguin\").\nHas_special_facilities(\"San Diego Zoo\", \"panda\").\nHas_special_facilities(\"San Diego Zoo\", \"kangaroo\").\nHas_special_facilities(\"San Diego Zoo\", \"zebra\").\n.decl Answer()\nAnswer() :- Has_special_facilities(\"San Diego Zoo\", special_facilities), Has_special_facilities(\"San Diego Zoo\", special_facilities).\n.output Answer\n\n"]}
{"id": 1060, "answer": true, "completion": ".decl Has_disease(Organism:symbol, Disease:symbol)\nHas_disease(\"slime mold\", \"cerebral palsy\").\n.decl Answer()\nAnswer() :- Has_disease(\"slime mold\", disease).\n.output Answer\n\n", "completions": [".decl Has_disease(Organism:symbol, Disease:symbol)\nHas_disease(\"slime mold\", \"cerebral palsy\").\n.decl Answer()\nAnswer() :- Has_disease(\"slime mold\", disease).\n.output Answer\n\n"]}
{"id": 1061, "answer": false, "completion": ".decl Is_city(City:symbol)\nIs_city(\"Milan\").\n.decl Is_contemporary(Person_A:symbol, Person_B:symbol)\nIs_contemporary(\"Leonardo da Vinci\", \"Michelangelo\").\nIs_contemporary(\"Leonardo da Vinci\", \"Donatello\").\nIs_contemporary(\"Michelangelo\", \"Donatello\").\n.decl Answer()\nAnswer() :- Is_city(\"Milan\"), Is_contemporary(\"Leonardo da Vinci\", person_a), Is_contemporary(person_a, person_b), person_a != person_b.\n.output Answer\n\n", "completions": [".decl Is_city(City:symbol)\nIs_city(\"Milan\").\n.decl Is_contemporary(Person_A:symbol, Person_B:symbol)\nIs_contemporary(\"Leonardo da Vinci\", \"Michelangelo\").\nIs_contemporary(\"Leonardo da Vinci\", \"Donatello\").\nIs_contemporary(\"Michelangelo\", \"Donatello\").\n.decl Answer()\nAnswer() :- Is_city(\"Milan\"), Is_contemporary(\"Leonardo da Vinci\", person_a), Is_contemporary(person_a, person_b), person_a != person_b.\n.output Answer\n\n"]}
{"id": 1062, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"laxatives\", \"diarrhea\").\nHas_property(\"people\", \"enjoyment\").\n.decl Answer()\nAnswer() :- Has_property(\"laxatives\", property), Has_property(\"people\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"laxatives\", \"diarrhea\").\nHas_property(\"people\", \"enjoyment\").\n.decl Answer()\nAnswer() :- Has_property(\"laxatives\", property), Has_property(\"people\", property).\n.output Answer\n\n"]}
{"id": 1063, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Ice\", \"winter\").\nHappens_in_time(\"Ice\", \"spring\").\nHappens_in_time(\"Ice\", \"summer\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Ice\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Ice\", time), Happens_every_n_months(\"Ice\", n_months), time = \"winter\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Ice\", \"winter\").\nHappens_in_time(\"Ice\", \"spring\").\nHappens_in_time(\"Ice\", \"summer\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Ice\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Ice\", time), Happens_every_n_months(\"Ice\", n_months), time = \"winter\".\n.output Answer\n\n"]}
{"id": 1064, "answer": true, "completion": ".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Rabbi\", \"Christmas\").\nCelebrates(\"Rabbi\", \"Chanukah\").\nCelebrates(\"Rabbi\", \"Purim\").\nCelebrates(\"Rabbi\", \"Rosh Hashanah\").\nCelebrates(\"Rabbi\", \"Yom Kippur\").\nCelebrates(\"Rabbi\", \"Sukkot\").\nCelebrates(\"Rabbi\", \"Tish'a B'Av\").\nCelebrates(\"Rabbi\", \"Tu B'Shvat\").\nCelebrates(\"Rabbi\", \"Pesach\").\nCelebrates(\"Rabbi\", \"Shavuot\").\nCelebrates(\"Rabbi\", \"Shemini Atzeret\").\nCelebrates(\"Rabbi\", \"Simchat Torah\").\n.decl Answer()\nAnswer() :- Celebrates(\"Rabbi\", holiday).\n.output Answer\n\n", "completions": [".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Rabbi\", \"Christmas\").\nCelebrates(\"Rabbi\", \"Chanukah\").\nCelebrates(\"Rabbi\", \"Purim\").\nCelebrates(\"Rabbi\", \"Rosh Hashanah\").\nCelebrates(\"Rabbi\", \"Yom Kippur\").\nCelebrates(\"Rabbi\", \"Sukkot\").\nCelebrates(\"Rabbi\", \"Tish'a B'Av\").\nCelebrates(\"Rabbi\", \"Tu B'Shvat\").\nCelebrates(\"Rabbi\", \"Pesach\").\nCelebrates(\"Rabbi\", \"Shavuot\").\nCelebrates(\"Rabbi\", \"Shemini Atzeret\").\nCelebrates(\"Rabbi\", \"Simchat Torah\").\n.decl Answer()\nAnswer() :- Celebrates(\"Rabbi\", holiday).\n.output Answer\n\n"]}
{"id": 1065, "answer": false, "completion": ".decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Aurangabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mumbai\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Bangalore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Delhi\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kolkata\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Chennai\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Hyderabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Ahmedabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kanpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Jaipur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Jodhpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Udaipur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Pune\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Surat\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Vadodara\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kolkata\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mangalore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mysore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Nagpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Nashik\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Pimpri\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_", "completions": [".decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Aurangabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mumbai\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Bangalore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Delhi\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kolkata\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Chennai\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Hyderabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Ahmedabad\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kanpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Jaipur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Jodhpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Udaipur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Pune\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Surat\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Vadodara\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Kolkata\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mangalore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Mysore\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Nagpur\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Nashik\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_city(\"Rahul Dravid\", \"Pimpri\").\n.decl Is_in_city(Person:symbol, City:symbol)\nIs_in_"]}
{"id": 1066, "answer": false, "completion": ".decl Is_infinitive_form(Verb:symbol)\nIs_infinitive_form(\"be\").\nIs_infinitive_form(\"go\").\nIs_infinitive_form(\"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"be\", \"be\").\nIs_infinitive_form_of(\"go\", \"go\").\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Ver", "completions": [".decl Is_infinitive_form(Verb:symbol)\nIs_infinitive_form(\"be\").\nIs_infinitive_form(\"go\").\nIs_infinitive_form(\"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"be\", \"be\").\nIs_infinitive_form_of(\"go\", \"go\").\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Verb:symbol, Infinitive_form:symbol)\nIs_infinitive_form_of(\"write\", \"write\").\n.decl Is_infinitive_form_of(Ver"]}
{"id": 1067, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"referee\", 1.8).\nHas_height(\"field\", 10).\n.decl Answer()\nAnswer() :- Has_height(\"referee\", height1), Has_height(\"field\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"referee\", 1.8).\nHas_height(\"field\", 10).\n.decl Answer()\nAnswer() :- Has_height(\"referee\", height1), Has_height(\"field\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 1068, "answer": false, "completion": ".decl Has_scurvy(Person:symbol)\nHas_scurvy(\"Blackbeard\").\nHas_scurvy(\"Captain Kidd\").\n.decl Has_vitamin_C(Person:symbol, Vitamin_C:float)\nHas_vitamin_C(\"Blackbeard\", 0.5).\nHas_vitamin_C(\"Captain Kidd\", 0.5).\n.decl Answer()\nAnswer() :- Has_scurvy(\"Blackbeard\"), Has_vitamin_C(\"Blackbeard\", vitamin_C).\nAnswer() :- Has_scurvy(\"Captain Kidd\"), Has_vitamin_C(\"Captain Kidd\", vitamin_C), vitamin_C > 0.5.\n.output Answer\n\n", "completions": [".decl Has_scurvy(Person:symbol)\nHas_scurvy(\"Blackbeard\").\nHas_scurvy(\"Captain Kidd\").\n.decl Has_vitamin_C(Person:symbol, Vitamin_C:float)\nHas_vitamin_C(\"Blackbeard\", 0.5).\nHas_vitamin_C(\"Captain Kidd\", 0.5).\n.decl Answer()\nAnswer() :- Has_scurvy(\"Blackbeard\"), Has_vitamin_C(\"Blackbeard\", vitamin_C).\nAnswer() :- Has_scurvy(\"Captain Kidd\"), Has_vitamin_C(\"Captain Kidd\", vitamin_C), vitamin_C > 0.5.\n.output Answer\n\n"]}
{"id": 1069, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"ice\", 0.9).\nHas_density(\"person\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"ice\", density1), Has_density(\"person\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"ice\", 0.9).\nHas_density(\"person\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"ice\", density1), Has_density(\"person\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1070, "answer": false, "completion": ".decl Has_altitude(Object:symbol, Altitude:float)\nHas_altitude(\"King Kong\", 100).\nHas_altitude(\"Eiffel Tower visitors\", 50).\n.decl Answer()\nAnswer() :- Has_altitude(\"King Kong\", altitude1), Has_altitude(\"Eiffel Tower visitors\", altitude2), altitude1 > altitude2.\n.output Answer\n\n", "completions": [".decl Has_altitude(Object:symbol, Altitude:float)\nHas_altitude(\"King Kong\", 100).\nHas_altitude(\"Eiffel Tower visitors\", 50).\n.decl Answer()\nAnswer() :- Has_altitude(\"King Kong\", altitude1), Has_altitude(\"Eiffel Tower visitors\", altitude2), altitude1 > altitude2.\n.output Answer\n\n"]}
{"id": 1071, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"children\", 100).\nHas_n_members(\"Conan O'Brien fans\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"children\", n_members1), Has_n_members(\"Conan O'Brien fans\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"children\", 100).\nHas_n_members(\"Conan O'Brien fans\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"children\", n_members1), Has_n_members(\"Conan O'Brien fans\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1072, "answer": true, "completion": ".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"Capital One Venture\", 0.5).\nHas_cost(\"Church of Satan\", 0.1).\n.decl Answer()\nAnswer() :- Has_cost(\"Capital One Venture\", cost1), Has_cost(\"Church of Satan\", cost2), cost1 < cost2.\n.output Answer\n\n", "completions": [".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"Capital One Venture\", 0.5).\nHas_cost(\"Church of Satan\", 0.1).\n.decl Answer()\nAnswer() :- Has_cost(\"Capital One Venture\", cost1), Has_cost(\"Church of Satan\", cost2), cost1 < cost2.\n.output Answer\n\n"]}
{"id": 1073, "answer": false, "completion": ".decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").", "completions": [".decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\").\n.decl Is_in_area(Place:symbol, Area:symbol)\nIs_in_area(\"Morocco\", \"Africa\").\nIs_in_area(\"Morocco\", \"Mediterranean Sea\")."]}
{"id": 1074, "answer": false, "completion": ".decl Has_swim_speed(Animal:symbol, Swim_speed:float)\nHas_swim_speed(\"snow leopard\", 40).\nHas_swim_speed(\"snow leopard\", 50).\n.decl Has_mass(Animal:symbol, Mass:float)\nHas_mass(\"snow leopard\", 80).\nHas_mass(\"snow leopard\", 100).\n.decl Answer()\nAnswer() :- Has_swim_speed(\"snow leopard\", swim_speed), Has_mass(\"snow leopard\", mass), swim_speed > mass.\n.output Answer\n\n", "completions": [".decl Has_swim_speed(Animal:symbol, Swim_speed:float)\nHas_swim_speed(\"snow leopard\", 40).\nHas_swim_speed(\"snow leopard\", 50).\n.decl Has_mass(Animal:symbol, Mass:float)\nHas_mass(\"snow leopard\", 80).\nHas_mass(\"snow leopard\", 100).\n.decl Answer()\nAnswer() :- Has_swim_speed(\"snow leopard\", swim_speed), Has_mass(\"snow leopard\", mass), swim_speed > mass.\n.output Answer\n\n"]}
{"id": 1075, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Avengers\", \"Avengers\").\nHas_name(\"Joker\", \"Joker\").\n.decl Has_relationship(Object_A:symbol, Object_B:symbol, Relationship:symbol)\nHas_relationship(\"Avengers\", \"Joker\", \"enemy\").\n.decl Answer()\nAnswer() :- Has_name(\"Avengers\", avengers), Has_name(\"Joker\", joker), Has_relationship(avengers, joker, relationship).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Avengers\", \"Avengers\").\nHas_name(\"Joker\", \"Joker\").\n.decl Has_relationship(Object_A:symbol, Object_B:symbol, Relationship:symbol)\nHas_relationship(\"Avengers\", \"Joker\", \"enemy\").\n.decl Answer()\nAnswer() :- Has_name(\"Avengers\", avengers), Has_name(\"Joker\", joker), Has_relationship(avengers, joker, relationship).\n.output Answer\n\n"]}
{"id": 1076, "answer": true, "completion": ".decl Job(Person:symbol, Job:symbol)\nJob(\"vegan\", \"sofer\").\nJob(\"vegan\", \"vegetarian\").\nJob(\"vegan\", \"vegan\").\n.decl Answer()\nAnswer() :- Job(\"vegan\", job), Job(\"vegan\", job2), job != job2.\n.output Answer\n\n", "completions": [".decl Job(Person:symbol, Job:symbol)\nJob(\"vegan\", \"sofer\").\nJob(\"vegan\", \"vegetarian\").\nJob(\"vegan\", \"vegan\").\n.decl Answer()\nAnswer() :- Job(\"vegan\", job), Job(\"vegan\", job2), job != job2.\n.output Answer\n\n"]}
{"id": 1077, "answer": false, "completion": ".decl Has_color(State:symbol, Color:symbol)\nHas_color(\"Maine\", \"red\").\nHas_color(\"Vermont\", \"red\").\nHas_color(\"New Hampshire\", \"red\").\nHas_color(\"Massachusetts\", \"blue\").\nHas_color(\"Rhode Island\", \"blue\").\nHas_color(\"Connecticut\", \"blue\").\nHas_color(\"New York\", \"blue\").\nHas_color(\"New Jersey\", \"blue\").\nHas_color(\"Delaware\", \"blue\").\nHas_color(\"Maryland\", \"blue\").\nHas_color(\"Virginia\", \"blue\").\nHas_color(\"North Carolina\", \"blue\").\nHas_color(\"South Carolina\", \"blue\").\nHas_color(\"Georgia\", \"blue\").\nHas_color(\"Florida\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"Maine\", color), Has_color(\"Vermont\", color), Has_color(\"New Hampshire\", color), Has_color(\"Massachusetts\", color), Has_color(\"Rhode Island\", color), Has_color(\"Connecticut\", color), Has_color(\"New York\", color), Has_color(\"New Jersey\", color), Has_color(\"Delaware\", color), Has_color(\"Maryland\", color), Has_color(\"Virginia\", color), Has_color(\"North Carolina\", color), Has_color(\"South Carolina\", color), Has_color(\"Georgia\", color), Has_color(\"Florida\", color), color == \"red\".\n.output Answer\n\n", "completions": [".decl Has_color(State:symbol, Color:symbol)\nHas_color(\"Maine\", \"red\").\nHas_color(\"Vermont\", \"red\").\nHas_color(\"New Hampshire\", \"red\").\nHas_color(\"Massachusetts\", \"blue\").\nHas_color(\"Rhode Island\", \"blue\").\nHas_color(\"Connecticut\", \"blue\").\nHas_color(\"New York\", \"blue\").\nHas_color(\"New Jersey\", \"blue\").\nHas_color(\"Delaware\", \"blue\").\nHas_color(\"Maryland\", \"blue\").\nHas_color(\"Virginia\", \"blue\").\nHas_color(\"North Carolina\", \"blue\").\nHas_color(\"South Carolina\", \"blue\").\nHas_color(\"Georgia\", \"blue\").\nHas_color(\"Florida\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"Maine\", color), Has_color(\"Vermont\", color), Has_color(\"New Hampshire\", color), Has_color(\"Massachusetts\", color), Has_color(\"Rhode Island\", color), Has_color(\"Connecticut\", color), Has_color(\"New York\", color), Has_color(\"New Jersey\", color), Has_color(\"Delaware\", color), Has_color(\"Maryland\", color), Has_color(\"Virginia\", color), Has_color(\"North Carolina\", color), Has_color(\"South Carolina\", color), Has_color(\"Georgia\", color), Has_color(\"Florida\", color), color == \"red\".\n.output Answer\n\n"]}
{"id": 1078, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Napoleonic Wars\", \"1815\").\nHappens_in_time(\"nuclear bomb\", \"1945\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"nuclear bomb\", time), Happens_in_time(\"Napoleonic Wars\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Napoleonic Wars\", \"1815\").\nHappens_in_time(\"nuclear bomb\", \"1945\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"nuclear bomb\", time), Happens_in_time(\"Napoleonic Wars\", time).\n.output Answer\n\n"]}
{"id": 1079, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Marco Rubio\", 1.5).\nHas_height(\"Candymonium roller coaster\", 2).\n.decl Answer()\nAnswer() :- Has_height(\"Marco Rubio\", height1), Has_height(\"Candymonium roller coaster\", height2), height1 >= height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Marco Rubio\", 1.5).\nHas_height(\"Candymonium roller coaster\", 2).\n.decl Answer()\nAnswer() :- Has_height(\"Marco Rubio\", height1), Has_height(\"Candymonium roller coaster\", height2), height1 >= height2.\n.output Answer\n\n"]}
{"id": 1080, "answer": false, "completion": ".decl Has_name(Item:symbol, Name:symbol)\nHas_name(\"Adam\", \"Adam\").\nHas_name(\"Eve\", \"Eve\").\nHas_name(\"Samael\", \"Samael\").\nHas_name(\"Lilith\", \"Lilith\").\n.decl Answer()\nAnswer() :- Has_name(\"Adam\", name1), Has_name(\"Eve\", name2), Has_name(\"Samael\", name3), Has_name(\"Lilith\", name4), name1 = name2, name1 = name3, name1 = name4.\n.output Answer\n\n", "completions": [".decl Has_name(Item:symbol, Name:symbol)\nHas_name(\"Adam\", \"Adam\").\nHas_name(\"Eve\", \"Eve\").\nHas_name(\"Samael\", \"Samael\").\nHas_name(\"Lilith\", \"Lilith\").\n.decl Answer()\nAnswer() :- Has_name(\"Adam\", name1), Has_name(\"Eve\", name2), Has_name(\"Samael\", name3), Has_name(\"Lilith\", name4), name1 = name2, name1 = name3, name1 = name4.\n.output Answer\n\n"]}
{"id": 1081, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Augustine\", \"AD 300\").\nHappens_in_time(\"Augustine\", \"AD 400\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Augustine\", time), time < \"AD 300\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Augustine\", \"AD 300\").\nHappens_in_time(\"Augustine\", \"AD 400\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Augustine\", time), time < \"AD 300\".\n.output Answer\n\n"]}
{"id": 1082, "answer": true, "completion": ".decl Is_parody(Parody:symbol, Target:symbol)\nIs_parody(\"parody of the President of the United States\", \"President of the United States\").\n.decl Answer()\nAnswer() :- Is_parody(\"parody of the President of the United States\", target), Is_parody(parody, target).\n.output Answer\n\n", "completions": [".decl Is_parody(Parody:symbol, Target:symbol)\nIs_parody(\"parody of the President of the United States\", \"President of the United States\").\n.decl Answer()\nAnswer() :- Is_parody(\"parody of the President of the United States\", target), Is_parody(parody, target).\n.output Answer\n\n"]}
{"id": 1083, "answer": false, "completion": ".decl Has_surface_temperature(Planet:symbol, Temperature:float)\nHas_surface_temperature(\"Venus\", 730).\n.decl Answer()\nAnswer() :- Has_surface_temperature(\"Venus\", temperature), temperature > 273.\n.output Answer\n\n", "completions": [".decl Has_surface_temperature(Planet:symbol, Temperature:float)\nHas_surface_temperature(\"Venus\", 730).\n.decl Answer()\nAnswer() :- Has_surface_temperature(\"Venus\", temperature), temperature > 273.\n.output Answer\n\n"]}
{"id": 1084, "answer": false, "completion": ".decl Has_flag(Group:symbol, Flag:symbol)\nHas_flag(\"Nazi Germany\", \"Hammer and sickle\").\n.decl Answer()\nAnswer() :- Has_flag(\"Nazi Germany\", flag).\n.output Answer\n\n", "completions": [".decl Has_flag(Group:symbol, Flag:symbol)\nHas_flag(\"Nazi Germany\", \"Hammer and sickle\").\n.decl Answer()\nAnswer() :- Has_flag(\"Nazi Germany\", flag).\n.output Answer\n\n"]}
{"id": 1085, "answer": false, "completion": ".decl Was_killed_by(Person:symbol, Killer:symbol)\nWas_killed_by(\"Jesus\", \"the Romans\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers", "completions": [".decl Was_killed_by(Person:symbol, Killer:symbol)\nWas_killed_by(\"Jesus\", \"the Romans\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers and the Jewish crowd and Pilate and the Jewish crowd and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders and the Jewish leaders\").\nWas_killed_by(\"Jesus\", \"the Jewish leaders and Roman soldiers"]}
{"id": 1086, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy\").\nHas_name(\"Jenny McCarthy\", \"Jenny McCarthy"]}
{"id": 1087, "answer": true, "completion": ".decl Requires(Event:symbol, Requirement:symbol)\nRequires(\"driver's licence\", \"eleventh grade\").\n.decl Answer()\nAnswer() :- Requires(\"driver's licence\", requirement).\n.output Answer\n\n", "completions": [".decl Requires(Event:symbol, Requirement:symbol)\nRequires(\"driver's licence\", \"eleventh grade\").\n.decl Answer()\nAnswer() :- Requires(\"driver's licence\", requirement).\n.output Answer\n\n"]}
{"id": 1088, "answer": true, "completion": ".decl Influenced(Person_A:symbol, Person_B:symbol)\nInfluenced(\"Albert Einstein\", \"DARPA\").\n.decl Answer()\nAnswer() :- Influenced(\"Albert Einstein\", person_b), Influenced(person_b, \"DARPA\").\n.output Answer\n\n", "completions": [".decl Influenced(Person_A:symbol, Person_B:symbol)\nInfluenced(\"Albert Einstein\", \"DARPA\").\n.decl Answer()\nAnswer() :- Influenced(\"Albert Einstein\", person_b), Influenced(person_b, \"DARPA\").\n.output Answer\n\n"]}
{"id": 1089, "answer": false, "completion": ".decl Has_ingredients(Object:symbol, Ingredients:symbol)\nHas_ingredients(\"menthol cigarettes\", \"menthol\").\nHas_ingredients(\"menthol cigarettes\", \"nicotine\").\n.decl Has_addictive_ingredients(Object:symbol, Addictive_ingredients:symbol)\nHas_addictive_ingredients(\"menthol cigarettes\", \"nicotine\").\n.decl Answer()\nAnswer() :- Has_ingredients(\"menthol cigarettes\", ingredients), Has_addictive_ingredients(\"menthol cigarettes\", addictive_ingredients), ingredients \\= addictive_ingredients.\n.output Answer\n\n", "completions": [".decl Has_ingredients(Object:symbol, Ingredients:symbol)\nHas_ingredients(\"menthol cigarettes\", \"menthol\").\nHas_ingredients(\"menthol cigarettes\", \"nicotine\").\n.decl Has_addictive_ingredients(Object:symbol, Addictive_ingredients:symbol)\nHas_addictive_ingredients(\"menthol cigarettes\", \"nicotine\").\n.decl Answer()\nAnswer() :- Has_ingredients(\"menthol cigarettes\", ingredients), Has_addictive_ingredients(\"menthol cigarettes\", addictive_ingredients), ingredients \\= addictive_ingredients.\n.output Answer\n\n"]}
{"id": 1090, "answer": true, "completion": ".decl Has_creator(Creator:symbol, Century:symbol)\nHas_creator(\"Futurama\", \"21st\").\nHas_creator(\"Futurama\", \"20th\").\nHas_creator(\"Futurama\", \"19th\").\n.decl Answer()\nAnswer() :- Has_creator(\"Futurama\", century1), Has_creator(\"Futurama\", century2), Has_creator(\"Futurama\", century3), century1 != century2, century2 != century3, century1 != century3.\n.output Answer\n\n", "completions": [".decl Has_creator(Creator:symbol, Century:symbol)\nHas_creator(\"Futurama\", \"21st\").\nHas_creator(\"Futurama\", \"20th\").\nHas_creator(\"Futurama\", \"19th\").\n.decl Answer()\nAnswer() :- Has_creator(\"Futurama\", century1), Has_creator(\"Futurama\", century2), Has_creator(\"Futurama\", century3), century1 != century2, century2 != century3, century1 != century3.\n.output Answer\n\n"]}
{"id": 1091, "answer": true, "completion": ".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"psychic\", \"hot reading\").\nHas_property(\"psychic\", \"trustworthy\").\n.decl Answer()\nAnswer() :- Has_property(\"psychic\", property), property = \"hot reading\".\n.output Answer\n\n", "completions": [".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"psychic\", \"hot reading\").\nHas_property(\"psychic\", \"trustworthy\").\n.decl Answer()\nAnswer() :- Has_property(\"psychic\", property), property = \"hot reading\".\n.output Answer\n\n"]}
{"id": 1092, "answer": true, "completion": ".decl Has_country(Brand:symbol, Country:symbol)\nHas_country(\"Poland Spring\", \"USA\").\nHas_country(\"Poland Spring\", \"Canada\").\nHas_country(\"Poland Spring\", \"Mexico\").\nHas_country(\"Poland Spring\", \"Egypt\").\n.decl Has_temperature(Country:symbol, Temperature:float)\nHas_temperature(\"USA\", 70).\nHas_temperature(\"Canada\", 60).\nHas_temperature(\"Mexico\", 80).\nHas_temperature(\"Egypt\", 100).\n.decl Answer()\nAnswer() :- Has_country(\"Poland Spring\", country), Has_temperature(country, temperature), temperature >= 80.\n.output Answer\n\n", "completions": [".decl Has_country(Brand:symbol, Country:symbol)\nHas_country(\"Poland Spring\", \"USA\").\nHas_country(\"Poland Spring\", \"Canada\").\nHas_country(\"Poland Spring\", \"Mexico\").\nHas_country(\"Poland Spring\", \"Egypt\").\n.decl Has_temperature(Country:symbol, Temperature:float)\nHas_temperature(\"USA\", 70).\nHas_temperature(\"Canada\", 60).\nHas_temperature(\"Mexico\", 80).\nHas_temperature(\"Egypt\", 100).\n.decl Answer()\nAnswer() :- Has_country(\"Poland Spring\", country), Has_temperature(country, temperature), temperature >= 80.\n.output Answer\n\n"]}
{"id": 1093, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"jet plane\", \"can fly\").\nHas_property(\"jet plane\", \"can be made without society\").\n.decl Answer()\nAnswer() :- Has_property(\"jet plane\", property1), Has_property(\"jet plane\", property2), property1 == property2.\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"jet plane\", \"can fly\").\nHas_property(\"jet plane\", \"can be made without society\").\n.decl Answer()\nAnswer() :- Has_property(\"jet plane\", property1), Has_property(\"jet plane\", property2), property1 == property2.\n.output Answer\n\n"]}
{"id": 1094, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"human race\", 7.5e9).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chlorophyll\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"human race\", n_members1), Has_n_members(\"chlorophyll\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"human race\", 7.5e9).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chlorophyll\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"human race\", n_members1), Has_n_members(\"chlorophyll\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1095, "answer": true, "completion": ".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"New York Harbor\", \"New York\").\nIs_in_location(\"New York Harbor\", \"New Jersey\").\nIs_in_location(\"New York Harbor\", \"Pennsylvania\").\nIs_in_location(\"New York Harbor\", \"Delaware\").\nIs_in_location(\"New York Harbor\", \"Maryland\").\nIs_in_location(\"New York Harbor\", \"Virginia\").\nIs_in_location(\"New York Harbor\", \"Chesapeake Bay\").\nIs_in_location(\"New York Harbor\", \"Long Island\").\nIs_in_location(\"New York Harbor\", \"Delaware Bay\").\nIs_in_location(\"New York Harbor\", \"Atlantic Ocean\").\n.decl Is_a_giant(Object:symbol)\nIs_a_giant(\"giant green lady\").\n.decl Answer()\nAnswer() :- Is_a_giant(\"giant green lady\"), Is_in_location(\"giant green lady\", location).\n.output Answer\n\n", "completions": [".decl Is_in_location(Object:symbol, Location:symbol)\nIs_in_location(\"New York Harbor\", \"New York\").\nIs_in_location(\"New York Harbor\", \"New Jersey\").\nIs_in_location(\"New York Harbor\", \"Pennsylvania\").\nIs_in_location(\"New York Harbor\", \"Delaware\").\nIs_in_location(\"New York Harbor\", \"Maryland\").\nIs_in_location(\"New York Harbor\", \"Virginia\").\nIs_in_location(\"New York Harbor\", \"Chesapeake Bay\").\nIs_in_location(\"New York Harbor\", \"Long Island\").\nIs_in_location(\"New York Harbor\", \"Delaware Bay\").\nIs_in_location(\"New York Harbor\", \"Atlantic Ocean\").\n.decl Is_a_giant(Object:symbol)\nIs_a_giant(\"giant green lady\").\n.decl Answer()\nAnswer() :- Is_a_giant(\"giant green lady\"), Is_in_location(\"giant green lady\", location).\n.output Answer\n\n"]}
{"id": 1096, "answer": false, "completion": ".decl Borders(Country_A:symbol, Country_B:symbol)\nBorders(\"Japan\", \"Sea of Japan\").\nBorders(\"Japan\", \"Korea\").\nBorders(\"Japan\", \"China\").\nBorders(\"Japan\", \"Russia\").\nBorders(\"Japan\", \"Philippines\").\nBorders(\"Japan\", \"Indonesia\").\nBorders(\"Japan\", \"Vietnam\").\nBorders(\"Japan\", \"North Korea\").\nBorders(\"Japan\", \"South Korea\").\nBorders(\"Japan\", \"Taiwan\").\nBorders(\"Japan\", \"Mongolia\").\nBorders(\"Japan\", \"Hong Kong\").\nBorders(\"Japan\", \"Malaysia\").\nBorders(\"Japan\", \"Singapore\").\nBorders(\"Japan\", \"Thailand\").\nBorders(\"Japan\", \"Cambodia\").\nBorders(\"Japan\", \"Laos\").\nBorders(\"Japan\", \"Burma\").\nBorders(\"Japan\", \"Nepal\").\nBorders(\"Japan\", \"India\").\nBorders(\"Japan\", \"Bhutan\").\nBorders(\"Japan\", \"Bangladesh\").\nBorders(\"Japan\", \"China\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders", "completions": [".decl Borders(Country_A:symbol, Country_B:symbol)\nBorders(\"Japan\", \"Sea of Japan\").\nBorders(\"Japan\", \"Korea\").\nBorders(\"Japan\", \"China\").\nBorders(\"Japan\", \"Russia\").\nBorders(\"Japan\", \"Philippines\").\nBorders(\"Japan\", \"Indonesia\").\nBorders(\"Japan\", \"Vietnam\").\nBorders(\"Japan\", \"North Korea\").\nBorders(\"Japan\", \"South Korea\").\nBorders(\"Japan\", \"Taiwan\").\nBorders(\"Japan\", \"Mongolia\").\nBorders(\"Japan\", \"Hong Kong\").\nBorders(\"Japan\", \"Malaysia\").\nBorders(\"Japan\", \"Singapore\").\nBorders(\"Japan\", \"Thailand\").\nBorders(\"Japan\", \"Cambodia\").\nBorders(\"Japan\", \"Laos\").\nBorders(\"Japan\", \"Burma\").\nBorders(\"Japan\", \"Nepal\").\nBorders(\"Japan\", \"India\").\nBorders(\"Japan\", \"Bhutan\").\nBorders(\"Japan\", \"Bangladesh\").\nBorders(\"Japan\", \"China\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders(\"Japan\", \"Turkey\").\nBorders(\"Japan\", \"Yemen\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Saudi Arabia\").\nBorders(\"Japan\", \"Oman\").\nBorders(\"Japan\", \"United Arab Emirates\").\nBorders(\"Japan\", \"Israel\").\nBorders(\"Japan\", \"Lebanon\").\nBorders(\"Japan\", \"Jordan\").\nBorders(\"Japan\", \"Kuwait\").\nBorders(\"Japan\", \"Bahrain\").\nBorders(\"Japan\", \"Qatar\").\nBorders(\"Japan\", \"Afghanistan\").\nBorders(\"Japan\", \"Pakistan\").\nBorders(\"Japan\", \"Iran\").\nBorders(\"Japan\", \"Iraq\").\nBorders(\"Japan\", \"Syria\").\nBorders"]}
{"id": 1097, "answer": false, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"New York City\", 8.4).\nHas_population(\"Los Angeles\", 3.8).\nHas_population(\"Chicago\", 2.7).\nHas_population(\"Boston\", 6.5).\nHas_population(\"Dallas\", 1.6).\nHas_population(\"Philadelphia\", 6.6).\nHas_population(\"Houston\", 2.1).\nHas_population(\"Detroit\", 6.1).\nHas_population(\"Seattle\", 0.7).\nHas_population(\"Phoenix\", 1.6).\nHas_population(\"Minneapolis\", 3.5).\nHas_population(\"San Francisco\", 0.8).\nHas_population(\"San Diego\", 1.6).\nHas_population(\"San Antonio\", 1.5).\nHas_population(\"San Jose\", 0.9).\nHas_population(\"Indianapolis\", 1.7).\nHas_population(\"Jacksonville\", 1.3).\nHas_population(\"Columbus\", 1.8).\nHas_population(\"Austin\", 1.5).\nHas_population(\"Memphis\", 1.3).\nHas_population(\"Baltimore\", 1.6).\nHas_population(\"Charlotte\", 1.1).\nHas_population(\"El Paso\", 0.6).\nHas_population(\"Milwaukee\", 0.6).\nHas_population(\"Washington\", 0.7).\nHas_population(\"Boston\", 0.6).\nHas_population(\"Nashville\", 1.4).\nHas_population(\"Oklahoma City\", 1.6).\nHas_population(\"Louisville\", 1.3).\nHas_population(\"Portland\", 0.7).\nHas_population(\"Las Vegas\", 2.1).\nHas_population(\"Atlanta\", 2.5).\nHas_population(\"Albuquerque\", 1.1).\nHas_population(\"Fresno\", 1.1).\nHas_population(\"Sacramento\", 1.5).\nHas_population(\"Long Beach\", 1.5).\nHas_population(\"Mesa\", 1.3).\nHas_population(\"Virginia Beach\", 1.5).\nHas_population(\"Omaha\", 1.4).\nHas_population(\"Colorado Springs\", 1.4).\nHas_population(\"Raleigh\", 1.4).\nHas_population(\"Miami\", 2.6).\nHas_population(\"Tucson\", 0.6).\nHas_population(\"Oakland\", 1.4).\nHas_population(\"Minneapolis\", 1.3).\nHas_population(\"Tulsa\", 1.0).\nHas_population(\"Arlington\", 1.6).\nHas_population(\"New Orleans\", 2.3).\nHas_population(\"Wichita\", 1.7).\nHas_population(\"Cleveland\", 1.7).\nHas_population(\"Tampa\", 1.3).\nHas_population(\"Bakersfield\", 1.0).\nHas_population(\"Aurora\", 1.5).\nHas_population(\"Honolulu\", 0.4).\nHas_population(\"Anaheim\", 1.4).\nHas_population(\"San Juan\", 1.1).\nHas_population(\"Santa Ana\", 1.3).\nHas_population(\"Corpus Christi\", 1.6).\nHas_population(\"Riverside\", 1.5).\nHas_population(\"Lexington\", 1.4).\nHas_population(\"St. Louis\", 1.7).\nHas_population(\"Stockton\", 1.5).\nHas_population(\"Pittsburgh\", 1.3).\nHas_population(\"Cincinnati\", 1.6).\nHas_population(\"Anchorage\", 0.6).\nHas", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"New York City\", 8.4).\nHas_population(\"Los Angeles\", 3.8).\nHas_population(\"Chicago\", 2.7).\nHas_population(\"Boston\", 6.5).\nHas_population(\"Dallas\", 1.6).\nHas_population(\"Philadelphia\", 6.6).\nHas_population(\"Houston\", 2.1).\nHas_population(\"Detroit\", 6.1).\nHas_population(\"Seattle\", 0.7).\nHas_population(\"Phoenix\", 1.6).\nHas_population(\"Minneapolis\", 3.5).\nHas_population(\"San Francisco\", 0.8).\nHas_population(\"San Diego\", 1.6).\nHas_population(\"San Antonio\", 1.5).\nHas_population(\"San Jose\", 0.9).\nHas_population(\"Indianapolis\", 1.7).\nHas_population(\"Jacksonville\", 1.3).\nHas_population(\"Columbus\", 1.8).\nHas_population(\"Austin\", 1.5).\nHas_population(\"Memphis\", 1.3).\nHas_population(\"Baltimore\", 1.6).\nHas_population(\"Charlotte\", 1.1).\nHas_population(\"El Paso\", 0.6).\nHas_population(\"Milwaukee\", 0.6).\nHas_population(\"Washington\", 0.7).\nHas_population(\"Boston\", 0.6).\nHas_population(\"Nashville\", 1.4).\nHas_population(\"Oklahoma City\", 1.6).\nHas_population(\"Louisville\", 1.3).\nHas_population(\"Portland\", 0.7).\nHas_population(\"Las Vegas\", 2.1).\nHas_population(\"Atlanta\", 2.5).\nHas_population(\"Albuquerque\", 1.1).\nHas_population(\"Fresno\", 1.1).\nHas_population(\"Sacramento\", 1.5).\nHas_population(\"Long Beach\", 1.5).\nHas_population(\"Mesa\", 1.3).\nHas_population(\"Virginia Beach\", 1.5).\nHas_population(\"Omaha\", 1.4).\nHas_population(\"Colorado Springs\", 1.4).\nHas_population(\"Raleigh\", 1.4).\nHas_population(\"Miami\", 2.6).\nHas_population(\"Tucson\", 0.6).\nHas_population(\"Oakland\", 1.4).\nHas_population(\"Minneapolis\", 1.3).\nHas_population(\"Tulsa\", 1.0).\nHas_population(\"Arlington\", 1.6).\nHas_population(\"New Orleans\", 2.3).\nHas_population(\"Wichita\", 1.7).\nHas_population(\"Cleveland\", 1.7).\nHas_population(\"Tampa\", 1.3).\nHas_population(\"Bakersfield\", 1.0).\nHas_population(\"Aurora\", 1.5).\nHas_population(\"Honolulu\", 0.4).\nHas_population(\"Anaheim\", 1.4).\nHas_population(\"San Juan\", 1.1).\nHas_population(\"Santa Ana\", 1.3).\nHas_population(\"Corpus Christi\", 1.6).\nHas_population(\"Riverside\", 1.5).\nHas_population(\"Lexington\", 1.4).\nHas_population(\"St. Louis\", 1.7).\nHas_population(\"Stockton\", 1.5).\nHas_population(\"Pittsburgh\", 1.3).\nHas_population(\"Cincinnati\", 1.6).\nHas_population(\"Anchorage\", 0.6).\nHas"]}
{"id": 1098, "answer": true, "completion": ".decl Has_pain(Person:symbol, Pain:symbol)\nHas_pain(\"John\", \"back\").\nHas_pain(\"Mary\", \"back\").\nHas_pain(\"Mary\", \"leg\").\n.decl Enjoys(Person:symbol, Activity:symbol)\nEnjoys(\"John\", \"picking strawberries\").\nEnjoys(\"Mary\", \"picking strawberries\").\n.decl Answer()\nAnswer() :- Has_pain(\"John\", pain), Enjoys(\"John\", activity), activity = \"picking strawberries\".\nAnswer() :- Has_pain(\"Mary\", pain), Enjoys(\"Mary\", activity), activity = \"picking strawberries\".\n.output Answer\n\n", "completions": [".decl Has_pain(Person:symbol, Pain:symbol)\nHas_pain(\"John\", \"back\").\nHas_pain(\"Mary\", \"back\").\nHas_pain(\"Mary\", \"leg\").\n.decl Enjoys(Person:symbol, Activity:symbol)\nEnjoys(\"John\", \"picking strawberries\").\nEnjoys(\"Mary\", \"picking strawberries\").\n.decl Answer()\nAnswer() :- Has_pain(\"John\", pain), Enjoys(\"John\", activity), activity = \"picking strawberries\".\nAnswer() :- Has_pain(\"Mary\", pain), Enjoys(\"Mary\", activity), activity = \"picking strawberries\".\n.output Answer\n\n"]}
{"id": 1099, "answer": false, "completion": ".decl Lives_in(Person:symbol, Location:symbol)\nLives_in(\"J. Edgar Hoover\", \"Langley, Virginia\").\n.decl Answer()\nAnswer() :- Lives_in(\"J. Edgar Hoover\", location).\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, Location:symbol)\nLives_in(\"J. Edgar Hoover\", \"Langley, Virginia\").\n.decl Answer()\nAnswer() :- Lives_in(\"J. Edgar Hoover\", location).\n.output Answer\n\n"]}
{"id": 1100, "answer": false, "completion": ".decl Has_won_award(Person:symbol, Award:symbol)\nHas_won_award(\"Christopher Walken\", \"Best Actor\").\nHas_won_award(\"Christopher Walken\", \"Best Supporting Actor\").\nHas_won_award(\"Christopher Walken\", \"Best Director\").\nHas_won_award(\"Christopher Walken\", \"Best Picture\").\n.decl Answer()\nAnswer() :- Has_won_award(\"Christopher Walken\", award).\n.output Answer\n\n", "completions": [".decl Has_won_award(Person:symbol, Award:symbol)\nHas_won_award(\"Christopher Walken\", \"Best Actor\").\nHas_won_award(\"Christopher Walken\", \"Best Supporting Actor\").\nHas_won_award(\"Christopher Walken\", \"Best Director\").\nHas_won_award(\"Christopher Walken\", \"Best Picture\").\n.decl Answer()\nAnswer() :- Has_won_award(\"Christopher Walken\", award).\n.output Answer\n\n"]}
{"id": 1101, "answer": true, "completion": ".decl Has_n_pins(Object:symbol, N_pins:float)\nHas_n_pins(\"bowling alley lane\", 10).\nHas_n_pins(\"Dustin Hoffman's Oscars\", 3).\n.decl Answer()\nAnswer() :- Has_n_pins(\"bowling alley lane\", n_pins1), Has_n_pins(\"Dustin Hoffman's Oscars\", n_pins2), n_pins1 >= n_pins2.\n.output Answer\n\n", "completions": [".decl Has_n_pins(Object:symbol, N_pins:float)\nHas_n_pins(\"bowling alley lane\", 10).\nHas_n_pins(\"Dustin Hoffman's Oscars\", 3).\n.decl Answer()\nAnswer() :- Has_n_pins(\"bowling alley lane\", n_pins1), Has_n_pins(\"Dustin Hoffman's Oscars\", n_pins2), n_pins1 >= n_pins2.\n.output Answer\n\n"]}
{"id": 1102, "answer": false, "completion": ".decl Serialized(Work:symbol, Magazine:symbol)\nSerialized(\"Rumi's work\", \"Writer's Digest\").\n.decl Answer()\nAnswer() :- Serialized(\"Rumi's work\", magazine).\n.output Answer\n\n", "completions": [".decl Serialized(Work:symbol, Magazine:symbol)\nSerialized(\"Rumi's work\", \"Writer's Digest\").\n.decl Answer()\nAnswer() :- Serialized(\"Rumi's work\", magazine).\n.output Answer\n\n"]}
{"id": 1103, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Mercury\", 0.6).\nHas_density(\"Venus\", 0.8).\nHas_density(\"Earth\", 1).\nHas_density(\"Mars\", 0.3).\nHas_density(\"Jupiter\", 1.3).\nHas_density(\"Saturn\", 0.7).\nHas_density(\"Uranus\", 0.8).\nHas_density(\"Neptune\", 1.2).\nHas_density(\"Pluto\", 0.3).\n.decl Answer()\nAnswer() :- Has_density(\"Mercury\", density1), Has_density(\"Venus\", density2), Has_density(\"Earth\", density3), Has_density(\"Mars\", density4), Has_density(\"Jupiter\", density5), Has_density(\"Saturn\", density6), Has_density(\"Uranus\", density7), Has_density(\"Neptune\", density8), Has_density(\"Pluto\", density9), density1 > density2, density1 > density3, density1 > density4, density1 > density5, density1 > density6, density1 > density7, density1 > density8, density1 > density9.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Mercury\", 0.6).\nHas_density(\"Venus\", 0.8).\nHas_density(\"Earth\", 1).\nHas_density(\"Mars\", 0.3).\nHas_density(\"Jupiter\", 1.3).\nHas_density(\"Saturn\", 0.7).\nHas_density(\"Uranus\", 0.8).\nHas_density(\"Neptune\", 1.2).\nHas_density(\"Pluto\", 0.3).\n.decl Answer()\nAnswer() :- Has_density(\"Mercury\", density1), Has_density(\"Venus\", density2), Has_density(\"Earth\", density3), Has_density(\"Mars\", density4), Has_density(\"Jupiter\", density5), Has_density(\"Saturn\", density6), Has_density(\"Uranus\", density7), Has_density(\"Neptune\", density8), Has_density(\"Pluto\", density9), density1 > density2, density1 > density3, density1 > density4, density1 > density5, density1 > density6, density1 > density7, density1 > density8, density1 > density9.\n.output Answer\n\n"]}
{"id": 1104, "answer": false, "completion": ".decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Dusseldorf\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"London\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Paris\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Rome\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"New York\").\n.decl Answer()\nAnswer() :- Is_in_city(\"Stonehenge\", city), Is_in_city(\"window\", city).\n.output Answer\n\n", "completions": [".decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Dusseldorf\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"London\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Paris\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"Rome\").\n.decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"Stonehenge\", \"New York\").\n.decl Answer()\nAnswer() :- Is_in_city(\"Stonehenge\", city), Is_in_city(\"window\", city).\n.output Answer\n\n"]}
{"id": 1105, "answer": true, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Carlos Gracie\", 10).\nHas_n_children(\"Helio Gracie\", 12).\nHas_n_children(\"Rorion Gracie\", 13).\n.decl Answer()\nAnswer() :- Has_n_children(\"Carlos Gracie\", n_children1), Has_n_children(\"Helio Gracie\", n_children2), Has_n_children(\"Rorion Gracie\", n_children3), n_children1 >= 13, n_children2 >= 13, n_children3 >= 13.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Carlos Gracie\", 10).\nHas_n_children(\"Helio Gracie\", 12).\nHas_n_children(\"Rorion Gracie\", 13).\n.decl Answer()\nAnswer() :- Has_n_children(\"Carlos Gracie\", n_children1), Has_n_children(\"Helio Gracie\", n_children2), Has_n_children(\"Rorion Gracie\", n_children3), n_children1 >= 13, n_children2 >= 13, n_children3 >= 13.\n.output Answer\n\n"]}
{"id": 1106, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"monarch butterflies\", 1).\nHas_n_members(\"kingdoms\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"monarch butterflies\", n_members1), Has_n_members(\"kingdoms\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"monarch butterflies\", 1).\nHas_n_members(\"kingdoms\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"monarch butterflies\", n_members1), Has_n_members(\"kingdoms\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1107, "answer": true, "completion": ".decl Hates(Person_A:symbol, Person_B:symbol)\nHates(\"Nicole Kidman\", \"Roman Josi\").\n.decl Answer()\nAnswer() :- Hates(\"Nicole Kidman\", person_b), Hates(person_b, \"Roman Josi\").\n.output Answer\n\n", "completions": [".decl Hates(Person_A:symbol, Person_B:symbol)\nHates(\"Nicole Kidman\", \"Roman Josi\").\n.decl Answer()\nAnswer() :- Hates(\"Nicole Kidman\", person_b), Hates(person_b, \"Roman Josi\").\n.output Answer\n\n"]}
{"id": 1108, "answer": true, "completion": ".decl Interests(Person:symbol, Interest:symbol)\nInterests(\"Apollo\", \"music\").\nInterests(\"Apollo\", \"programming\").\nInterests(\"Baldur\", \"music\").\nInterests(\"Baldur\", \"programming\").\n.decl Answer()\nAnswer() :- Interests(\"Apollo\", interest), Interests(\"Baldur\", interest).\n.output Answer\n\n", "completions": [".decl Interests(Person:symbol, Interest:symbol)\nInterests(\"Apollo\", \"music\").\nInterests(\"Apollo\", \"programming\").\nInterests(\"Baldur\", \"music\").\nInterests(\"Baldur\", \"programming\").\n.decl Answer()\nAnswer() :- Interests(\"Apollo\", interest), Interests(\"Baldur\", interest).\n.output Answer\n\n"]}
{"id": 1109, "answer": true, "completion": ".decl Eats(Animal_A:symbol, Food:symbol)\nEats(\"poodle\", \"Snickers bar\").\nEats(\"poodle\", \"peanut butter\").\nEats(\"poodle\", \"candy\").\nEats(\"poodle\", \"chocolate\").\nEats(\"poodle\", \"cheese\").\nEats(\"poodle\", \"cake\").\nEats(\"poodle\", \"ice cream\").\nEats(\"poodle\", \"sugar\").\nEats(\"poodle\", \"flour\").\nEats(\"poodle\", \"salt\").\nEats(\"poodle\", \"pepper\").\nEats(\"poodle\", \"butter\").\nEats(\"poodle\", \"oil\").\nEats(\"poodle\", \"water\").\nEats(\"poodle\", \"juice\").\nEats(\"poodle\", \"milk\").\nEats(\"poodle\", \"eggs\").\nEats(\"poodle\", \"bread\").\nEats(\"poodle\", \"potatoes\").\nEats(\"poodle\", \"carrots\").\nEats(\"poodle\", \"broccoli\").\nEats(\"poodle\", \"spinach\").\nEats(\"poodle\", \"lettuce\").\nEats(\"poodle\", \"onions\").\nEats(\"poodle\", \"mushrooms\").\nEats(\"poodle\", \"cauliflower\").\nEats(\"poodle\", \"asparagus\").\nEats(\"poodle\", \"corn\").\nEats(\"poodle\", \"beans\").\nEats(\"poodle\", \"avocados\").\nEats(\"poodle\", \"oranges\").\nEats(\"poodle\", \"lemons\").\nEats(\"poodle\", \"limes\").\nEats(\"poodle\", \"grapefruit\").\nEats(\"poodle\", \"pineapple\").\nEats(\"poodle\", \"apples\").\nEats(\"poodle\", \"bananas\").\nEats(\"poodle\", \"grapes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"strawberries\").\nEats(\"poodle\", \"blueberries\").\nEats(\"poodle\", \"blackberries\").\nEats(\"poodle\", \"raspberries\").\nEats(\"poodle\", \"mangos\").\nEats(\"poodle\", \"coconuts\").\nEats(\"poodle\", \"watermelons\").\nEats(\"poodle\", \"cantaloupes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"apricots\").\nEats(\"poodle\", \"plums\").\nEats(\"poodle\", \"oranges\").\nEats(\"poodle\", \"grapefruit\").\nEats(\"poodle\", \"pineapple\").\nEats(\"poodle\", \"apples\").\nEats(\"poodle\", \"bananas\").\nEats(\"poodle\", \"grapes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"strawberries\").\nEats(\"poodle\", \"blueberries\").\nEats(\"poodle\", \"blackberries\").\nEats(\"poodle\", \"raspberries\").\nEats(\"poodle\", \"mangos\").\nEats(\"poodle\", \"coconuts\").\nEats(\"poodle\", \"watermelons\").\nEats(\"poodle\", \"cantaloupes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"apricots\").\nEats(\"poodle\", \"plums\").\nEats(\"poodle\", \"oranges\").\n", "completions": [".decl Eats(Animal_A:symbol, Food:symbol)\nEats(\"poodle\", \"Snickers bar\").\nEats(\"poodle\", \"peanut butter\").\nEats(\"poodle\", \"candy\").\nEats(\"poodle\", \"chocolate\").\nEats(\"poodle\", \"cheese\").\nEats(\"poodle\", \"cake\").\nEats(\"poodle\", \"ice cream\").\nEats(\"poodle\", \"sugar\").\nEats(\"poodle\", \"flour\").\nEats(\"poodle\", \"salt\").\nEats(\"poodle\", \"pepper\").\nEats(\"poodle\", \"butter\").\nEats(\"poodle\", \"oil\").\nEats(\"poodle\", \"water\").\nEats(\"poodle\", \"juice\").\nEats(\"poodle\", \"milk\").\nEats(\"poodle\", \"eggs\").\nEats(\"poodle\", \"bread\").\nEats(\"poodle\", \"potatoes\").\nEats(\"poodle\", \"carrots\").\nEats(\"poodle\", \"broccoli\").\nEats(\"poodle\", \"spinach\").\nEats(\"poodle\", \"lettuce\").\nEats(\"poodle\", \"onions\").\nEats(\"poodle\", \"mushrooms\").\nEats(\"poodle\", \"cauliflower\").\nEats(\"poodle\", \"asparagus\").\nEats(\"poodle\", \"corn\").\nEats(\"poodle\", \"beans\").\nEats(\"poodle\", \"avocados\").\nEats(\"poodle\", \"oranges\").\nEats(\"poodle\", \"lemons\").\nEats(\"poodle\", \"limes\").\nEats(\"poodle\", \"grapefruit\").\nEats(\"poodle\", \"pineapple\").\nEats(\"poodle\", \"apples\").\nEats(\"poodle\", \"bananas\").\nEats(\"poodle\", \"grapes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"strawberries\").\nEats(\"poodle\", \"blueberries\").\nEats(\"poodle\", \"blackberries\").\nEats(\"poodle\", \"raspberries\").\nEats(\"poodle\", \"mangos\").\nEats(\"poodle\", \"coconuts\").\nEats(\"poodle\", \"watermelons\").\nEats(\"poodle\", \"cantaloupes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"apricots\").\nEats(\"poodle\", \"plums\").\nEats(\"poodle\", \"oranges\").\nEats(\"poodle\", \"grapefruit\").\nEats(\"poodle\", \"pineapple\").\nEats(\"poodle\", \"apples\").\nEats(\"poodle\", \"bananas\").\nEats(\"poodle\", \"grapes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"strawberries\").\nEats(\"poodle\", \"blueberries\").\nEats(\"poodle\", \"blackberries\").\nEats(\"poodle\", \"raspberries\").\nEats(\"poodle\", \"mangos\").\nEats(\"poodle\", \"coconuts\").\nEats(\"poodle\", \"watermelons\").\nEats(\"poodle\", \"cantaloupes\").\nEats(\"poodle\", \"peaches\").\nEats(\"poodle\", \"apricots\").\nEats(\"poodle\", \"plums\").\nEats(\"poodle\", \"oranges\").\n"]}
{"id": 1110, "answer": true, "completion": ".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"running a mile\", 1).\n.decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"running a mile\", 10).\n.decl Answer()\nAnswer() :- Has_distance(\"running a mile\", distance), Has_duration(\"running a mile\", duration), distance / duration > 1.\n.output Answer\n\n", "completions": [".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"running a mile\", 1).\n.decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"running a mile\", 10).\n.decl Answer()\nAnswer() :- Has_distance(\"running a mile\", distance), Has_duration(\"running a mile\", duration), distance / duration > 1.\n.output Answer\n\n"]}
{"id": 1111, "answer": false, "completion": ".decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"Pope Francis\", \"Catholic priest\").\nIs_a(\"Pope Francis\", \"man\").\nIs_a(\"Pope Francis\", \"person\").\n.decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"Donald Trump\", \"man\").\nIs_a(\"Donald Trump\", \"person\").\n.decl Answer()\nAnswer() :- Is_a(\"Pope Francis\", \"man\"), Is_a(\"Donald Trump\", \"person\").\n.output Answer\n\n", "completions": [".decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"Pope Francis\", \"Catholic priest\").\nIs_a(\"Pope Francis\", \"man\").\nIs_a(\"Pope Francis\", \"person\").\n.decl Is_a(Person:symbol, Role:symbol)\nIs_a(\"Donald Trump\", \"man\").\nIs_a(\"Donald Trump\", \"person\").\n.decl Answer()\nAnswer() :- Is_a(\"Pope Francis\", \"man\"), Is_a(\"Donald Trump\", \"person\").\n.output Answer\n\n"]}
{"id": 1112, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"white rice\", 0.9).\nHas_density(\"sesame seeds\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"white rice\", density1), Has_density(\"sesame seeds\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"white rice\", 0.9).\nHas_density(\"sesame seeds\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"white rice\", density1), Has_density(\"sesame seeds\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1113, "answer": false, "completion": ".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Harry Potter\", \"fantasy\").\nHas_genre(\"Harry Potter\", \"fiction\").\nHas_genre(\"Harry Potter\", \"children's\").\n.decl Has_shelf(Shelf:symbol, Genre:symbol)\nHas_shelf(\"fantasy\", \"fantasy\").\nHas_shelf(\"fiction\", \"fiction\").\nHas_shelf(\"children's\", \"children's\").\n.decl Answer()\nAnswer() :- Has_genre(\"Harry Potter\", genre), Has_shelf(\"J.K Rowling\", shelf), Has_shelf(shelf, genre).\n.output Answer\n\n", "completions": [".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Harry Potter\", \"fantasy\").\nHas_genre(\"Harry Potter\", \"fiction\").\nHas_genre(\"Harry Potter\", \"children's\").\n.decl Has_shelf(Shelf:symbol, Genre:symbol)\nHas_shelf(\"fantasy\", \"fantasy\").\nHas_shelf(\"fiction\", \"fiction\").\nHas_shelf(\"children's\", \"children's\").\n.decl Answer()\nAnswer() :- Has_genre(\"Harry Potter\", genre), Has_shelf(\"J.K Rowling\", shelf), Has_shelf(shelf, genre).\n.output Answer\n\n"]}
{"id": 1114, "answer": false, "completion": ".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Bern\", \"Switzerland\").\nLocated_in(\"Paris\", \"France\").\n.decl Answer()\nAnswer() :- Located_in(\"Bern\", country), Located_in(\"Paris\", country), country != \"Switzerland\".\n.output Answer\n\n", "completions": [".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Bern\", \"Switzerland\").\nLocated_in(\"Paris\", \"France\").\n.decl Answer()\nAnswer() :- Located_in(\"Bern\", country), Located_in(\"Paris\", country), country != \"Switzerland\".\n.output Answer\n\n"]}
{"id": 1115, "answer": false, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Al-Farabi\", \"Sunni\").\nBelieves(\"ISIS\", \"Shia\").\n.decl Answer()\nAnswer() :- Believes(\"ISIS\", belief), Believes(\"Al-Farabi\", belief).\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Al-Farabi\", \"Sunni\").\nBelieves(\"ISIS\", \"Shia\").\n.decl Answer()\nAnswer() :- Believes(\"ISIS\", belief), Believes(\"Al-Farabi\", belief).\n.output Answer\n\n"]}
{"id": 1116, "answer": false, "completion": ".decl Lives_in(Bird:symbol, Environment:symbol)\nLives_in(\"mollymawk\", \"ocean\").\nLives_in(\"albatross\", \"ocean\").\nLives_in(\"albatross\", \"land\").\n.decl Answer()\nAnswer() :- Lives_in(\"mollymawk\", environment), Lives_in(\"albatross\", environment), environment != \"ocean\".\n.output Answer\n\n", "completions": [".decl Lives_in(Bird:symbol, Environment:symbol)\nLives_in(\"mollymawk\", \"ocean\").\nLives_in(\"albatross\", \"ocean\").\nLives_in(\"albatross\", \"land\").\n.decl Answer()\nAnswer() :- Lives_in(\"mollymawk\", environment), Lives_in(\"albatross\", environment), environment != \"ocean\".\n.output Answer\n\n"]}
{"id": 1117, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"spice grinder\", 10).\nHas_price(\"cinnamon sticks\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"spice grinder\", price1), Has_price(\"cinnamon sticks\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"spice grinder\", 10).\nHas_price(\"cinnamon sticks\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"spice grinder\", price1), Has_price(\"cinnamon sticks\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1118, "answer": true, "completion": ".decl Has_n_units(Product:symbol, N_units:float)\nHas_n_units(\"US salsa\", 100000).\nHas_n_units(\"Carolina Reaper\", 1).\n.decl Has_n_units(Product:symbol, N_units:float)\nHas_n_units(\"US salsa\", 100000).\nHas_n_units(\"Carolina Reaper\", 1).\n.decl Answer()\nAnswer() :- Has_n_units(\"US salsa\", n_units1), Has_n_units(\"Carolina Reaper\", n_units2), n_units1 > n_units2.\n.output Answer\n\n", "completions": [".decl Has_n_units(Product:symbol, N_units:float)\nHas_n_units(\"US salsa\", 100000).\nHas_n_units(\"Carolina Reaper\", 1).\n.decl Has_n_units(Product:symbol, N_units:float)\nHas_n_units(\"US salsa\", 100000).\nHas_n_units(\"Carolina Reaper\", 1).\n.decl Answer()\nAnswer() :- Has_n_units(\"US salsa\", n_units1), Has_n_units(\"Carolina Reaper\", n_units2), n_units1 > n_units2.\n.output Answer\n\n"]}
{"id": 1119, "answer": false, "completion": ".decl Is_former_axis_power(Country:symbol)\nIs_former_axis_power(\"Japan\").\nIs_former_axis_power(\"China\").\nIs_former_axis_power(\"Vietnam\").\nIs_former_axis_power(\"South Korea\").\nIs_former_axis_power(\"Thailand\").\nIs_former_axis_power(\"Philippines\").\nIs_former_axis_power(\"Indonesia\").\nIs_former_axis_power(\"Malaysia\").\nIs_former_axis_power(\"Singapore\").\nIs_former_axis_power(\"Taiwan\").\n.decl Is_destination(Airline:symbol, Country:symbol)\nIs_destination(\"Japan Airlines\", \"Japan\").\nIs_destination(\"Japan Airlines\", \"China\").\nIs_destination(\"Japan Airlines\", \"Vietnam\").\nIs_destination(\"Japan Airlines\", \"South Korea\").\nIs_destination(\"Japan Airlines\", \"Thailand\").\nIs_destination(\"Japan Airlines\", \"Philippines\").\nIs_destination(\"Japan Airlines\", \"Indonesia\").\nIs_destination(\"Japan Airlines\", \"Malaysia\").\nIs_destination(\"Japan Airlines\", \"Singapore\").\nIs_destination(\"Japan Airlines\", \"Taiwan\").\n.decl Answer()\nAnswer() :- Is_destination(\"Japan Airlines\", country), Is_former_axis_power(country).\n.output Answer\n\n", "completions": [".decl Is_former_axis_power(Country:symbol)\nIs_former_axis_power(\"Japan\").\nIs_former_axis_power(\"China\").\nIs_former_axis_power(\"Vietnam\").\nIs_former_axis_power(\"South Korea\").\nIs_former_axis_power(\"Thailand\").\nIs_former_axis_power(\"Philippines\").\nIs_former_axis_power(\"Indonesia\").\nIs_former_axis_power(\"Malaysia\").\nIs_former_axis_power(\"Singapore\").\nIs_former_axis_power(\"Taiwan\").\n.decl Is_destination(Airline:symbol, Country:symbol)\nIs_destination(\"Japan Airlines\", \"Japan\").\nIs_destination(\"Japan Airlines\", \"China\").\nIs_destination(\"Japan Airlines\", \"Vietnam\").\nIs_destination(\"Japan Airlines\", \"South Korea\").\nIs_destination(\"Japan Airlines\", \"Thailand\").\nIs_destination(\"Japan Airlines\", \"Philippines\").\nIs_destination(\"Japan Airlines\", \"Indonesia\").\nIs_destination(\"Japan Airlines\", \"Malaysia\").\nIs_destination(\"Japan Airlines\", \"Singapore\").\nIs_destination(\"Japan Airlines\", \"Taiwan\").\n.decl Answer()\nAnswer() :- Is_destination(\"Japan Airlines\", country), Is_former_axis_power(country).\n.output Answer\n\n"]}
{"id": 1120, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"olive oil\", 0.9).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"olive oil\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"olive oil\", 0.9).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"olive oil\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1121, "answer": false, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"nymph tick\", 0.1).\nHas_size(\"standard hole punch\", 0.2).\n.decl Answer()\nAnswer() :- Has_size(\"nymph tick\", size1), Has_size(\"standard hole punch\", size2), size1 > size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"nymph tick\", 0.1).\nHas_size(\"standard hole punch\", 0.2).\n.decl Answer()\nAnswer() :- Has_size(\"nymph tick\", size1), Has_size(\"standard hole punch\", size2), size1 > size2.\n.output Answer\n\n"]}
{"id": 1122, "answer": true, "completion": ".decl Operates(Vehicle:symbol, Company:symbol)\nOperates(\"four wheel vehicle\", \"Amtrak\").\n.decl Answer()\nAnswer() :- Operates(\"four wheel vehicle\", company).\n.output Answer\n\n", "completions": [".decl Operates(Vehicle:symbol, Company:symbol)\nOperates(\"four wheel vehicle\", \"Amtrak\").\n.decl Answer()\nAnswer() :- Operates(\"four wheel vehicle\", company).\n.output Answer\n\n"]}
{"id": 1123, "answer": true, "completion": ".decl Has_position(Object:symbol, Position:float)\nHas_position(\"B\", 2).\n.decl Has_n_occurrences(Object:symbol, N_occurrences:float)\nHas_n_occurrences(\"lunar eclipse\", 2008).\n.decl Answer()\nAnswer() :- Has_position(\"B\", position), Has_n_occurrences(\"lunar eclipse\", n_occurrences), position > n_occurrences.\n.output Answer\n\n", "completions": [".decl Has_position(Object:symbol, Position:float)\nHas_position(\"B\", 2).\n.decl Has_n_occurrences(Object:symbol, N_occurrences:float)\nHas_n_occurrences(\"lunar eclipse\", 2008).\n.decl Answer()\nAnswer() :- Has_position(\"B\", position), Has_n_occurrences(\"lunar eclipse\", n_occurrences), position > n_occurrences.\n.output Answer\n\n"]}
{"id": 1124, "answer": true, "completion": ".decl Is_active(Animal:symbol, Season:symbol)\nIs_active(\"sun bear\", \"winter\").\nIs_active(\"sun bear\", \"summer\").\n.decl Is_in_season(Animal:symbol, Season:symbol)\nIs_in_season(\"sun bear\", \"winter\").\nIs_in_season(\"sun bear\", \"summer\").\n.decl Answer()\nAnswer() :- Is_active(\"sun bear\", season), Is_in_season(\"sun bear\", season).\n.output Answer\n\n", "completions": [".decl Is_active(Animal:symbol, Season:symbol)\nIs_active(\"sun bear\", \"winter\").\nIs_active(\"sun bear\", \"summer\").\n.decl Is_in_season(Animal:symbol, Season:symbol)\nIs_in_season(\"sun bear\", \"winter\").\nIs_in_season(\"sun bear\", \"summer\").\n.decl Answer()\nAnswer() :- Is_active(\"sun bear\", season), Is_in_season(\"sun bear\", season).\n.output Answer\n\n"]}
{"id": 1125, "answer": true, "completion": ".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"Osama bin Laden\", \"wafer\").\nHas_property(\"Osama bin Laden\", \"Sunday\").\n.decl Answer()\nAnswer() :- Has_property(\"Osama bin Laden\", property), property = \"wafer\".\n.output Answer\n\n", "completions": [".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"Osama bin Laden\", \"wafer\").\nHas_property(\"Osama bin Laden\", \"Sunday\").\n.decl Answer()\nAnswer() :- Has_property(\"Osama bin Laden\", property), property = \"wafer\".\n.output Answer\n\n"]}
{"id": 1126, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \"BC\").\nHappens_in_time(\"Battle of Actium\", \""]}
{"id": 1127, "answer": true, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Plato\", \"the soul is immortal\").\nBelieves(\"Plato\", \"the soul is not immortal\").\nBelieves(\"Jainism\", \"the soul is immortal\").\n.decl Answer()\nAnswer() :- Believes(\"Plato\", belief1), Believes(\"Jainism\", belief2), belief1 = belief2.\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Plato\", \"the soul is immortal\").\nBelieves(\"Plato\", \"the soul is not immortal\").\nBelieves(\"Jainism\", \"the soul is immortal\").\n.decl Answer()\nAnswer() :- Believes(\"Plato\", belief1), Believes(\"Jainism\", belief2), belief1 = belief2.\n.output Answer\n\n"]}
{"id": 1128, "answer": false, "completion": ".decl Likes(Person:symbol, Thing:symbol)\nLikes(\"Goofy\", \"Nylabone\").\n.decl Answer()\nAnswer() :- Likes(\"Goofy\", \"Nylabone\").\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Thing:symbol)\nLikes(\"Goofy\", \"Nylabone\").\n.decl Answer()\nAnswer() :- Likes(\"Goofy\", \"Nylabone\").\n.output Answer\n\n"]}
{"id": 1129, "answer": true, "completion": ".decl Has_bloodline(Person:symbol, Bloodline:symbol)\nHas_bloodline(\"Mary, Queen of Scots\", \"Gunpowder plot\").\n.decl Answer()\nAnswer() :- Has_bloodline(\"Mary, Queen of Scots\", bloodline).\n.output Answer\n\n", "completions": [".decl Has_bloodline(Person:symbol, Bloodline:symbol)\nHas_bloodline(\"Mary, Queen of Scots\", \"Gunpowder plot\").\n.decl Answer()\nAnswer() :- Has_bloodline(\"Mary, Queen of Scots\", bloodline).\n.output Answer\n\n"]}
{"id": 1130, "answer": false, "completion": ".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"James Cameron\", \"Titanic\").\n.decl Produced(Person:symbol, Movie:symbol)\nProduced(\"Paramount Pictures\", \"Titanic\").\n.decl Answer()\nAnswer() :- Directed(\"Paramount Pictures\", movie), Produced(\"Paramount Pictures\", movie).\n.output Answer\n\n", "completions": [".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"James Cameron\", \"Titanic\").\n.decl Produced(Person:symbol, Movie:symbol)\nProduced(\"Paramount Pictures\", \"Titanic\").\n.decl Answer()\nAnswer() :- Directed(\"Paramount Pictures\", movie), Produced(\"Paramount Pictures\", movie).\n.output Answer\n\n"]}
{"id": 1131, "answer": false, "completion": ".decl In_section(Item:symbol, Section:symbol)\nIn_section(\"parsley\", \"produce\").\nIn_section(\"parsley\", \"spices\").\nIn_section(\"parsley\", \"dairy\").\n.decl In_section(Item:symbol, Section:symbol)\nIn_section(\"parsley\", \"produce\").\nIn_section(\"parsley\", \"spices\").\nIn_section(\"parsley\", \"dairy\").\n.decl Answer()\nAnswer() :- In_section(\"parsley\", section1), In_section(\"parsley\", section2), section1 != section2.\n.output Answer\n\n", "completions": [".decl In_section(Item:symbol, Section:symbol)\nIn_section(\"parsley\", \"produce\").\nIn_section(\"parsley\", \"spices\").\nIn_section(\"parsley\", \"dairy\").\n.decl In_section(Item:symbol, Section:symbol)\nIn_section(\"parsley\", \"produce\").\nIn_section(\"parsley\", \"spices\").\nIn_section(\"parsley\", \"dairy\").\n.decl Answer()\nAnswer() :- In_section(\"parsley\", section1), In_section(\"parsley\", section2), section1 != section2.\n.output Answer\n\n"]}
{"id": 1132, "answer": true, "completion": ".decl Has_moisture(Object:symbol, Moisture:float)\nHas_moisture(\"Spartina Patens\", 0.5).\nHas_moisture(\"Spartina\", 0.5).\nHas_moisture(\"Spartina\", 0.1).\nHas_moisture(\"Spartina\", 0.9).\nHas_moisture(\"Spartina\", 0.2).\nHas_moisture(\"Spartina\", 0.8).\nHas_moisture(\"Spartina\", 0.3).\nHas_moisture(\"Spartina\", 0.7).\nHas_moisture(\"Spartina\", 0.4).\nHas_moisture(\"Spartina\", 0.6).\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Spartina Patens\", 25).\nHas_temperature(\"Spartina\", 25).\nHas_temperature(\"Spartina\", 30).\nHas_temperature(\"Spartina\", 20).\nHas_temperature(\"Spartina\", 15).\nHas_temperature(\"Spartina\", 10).\nHas_temperature(\"Spartina\", 5).\nHas_temperature(\"Spartina\", 35).\nHas_temperature(\"Spartina\", 40).\nHas_temperature(\"Spartina\", 45).\n.decl Answer()\nAnswer() :- Has_moisture(\"Spartina Patens\", moisture), Has_temperature(\"Spartina Patens\", temperature), Has_moisture(\"Spartina\", moisture2), Has_temperature(\"Spartina\", temperature2), moisture > moisture2, temperature > temperature2.\n.output Answer\n\n", "completions": [".decl Has_moisture(Object:symbol, Moisture:float)\nHas_moisture(\"Spartina Patens\", 0.5).\nHas_moisture(\"Spartina\", 0.5).\nHas_moisture(\"Spartina\", 0.1).\nHas_moisture(\"Spartina\", 0.9).\nHas_moisture(\"Spartina\", 0.2).\nHas_moisture(\"Spartina\", 0.8).\nHas_moisture(\"Spartina\", 0.3).\nHas_moisture(\"Spartina\", 0.7).\nHas_moisture(\"Spartina\", 0.4).\nHas_moisture(\"Spartina\", 0.6).\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Spartina Patens\", 25).\nHas_temperature(\"Spartina\", 25).\nHas_temperature(\"Spartina\", 30).\nHas_temperature(\"Spartina\", 20).\nHas_temperature(\"Spartina\", 15).\nHas_temperature(\"Spartina\", 10).\nHas_temperature(\"Spartina\", 5).\nHas_temperature(\"Spartina\", 35).\nHas_temperature(\"Spartina\", 40).\nHas_temperature(\"Spartina\", 45).\n.decl Answer()\nAnswer() :- Has_moisture(\"Spartina Patens\", moisture), Has_temperature(\"Spartina Patens\", temperature), Has_moisture(\"Spartina\", moisture2), Has_temperature(\"Spartina\", temperature2), moisture > moisture2, temperature > temperature2.\n.output Answer\n\n"]}
{"id": 1133, "answer": false, "completion": ".decl Can_communicate(Person:symbol, Deaf_person:symbol)\nCan_communicate(\"Jackie Chan\", \"deaf person\").\n.decl Answer()\nAnswer() :- Can_communicate(\"Jackie Chan\", person), Can_communicate(person, \"deaf person\").\n.output Answer\n\n", "completions": [".decl Can_communicate(Person:symbol, Deaf_person:symbol)\nCan_communicate(\"Jackie Chan\", \"deaf person\").\n.decl Answer()\nAnswer() :- Can_communicate(\"Jackie Chan\", person), Can_communicate(person, \"deaf person\").\n.output Answer\n\n"]}
{"id": 1134, "answer": false, "completion": ".decl Has_plastic(Object:symbol, Plastic:symbol)\nHas_plastic(\"cling wrap\", \"plastic\").\nHas_plastic(\"plastic wrap\", \"plastic\").\nHas_plastic(\"plastic bag\", \"plastic\").\nHas_plastic(\"plastic container\", \"plastic\").\nHas_plastic(\"plastic lid\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic cup\", \"plastic\").\nHas_plastic(\"plastic plate\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic cup\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic", "completions": [".decl Has_plastic(Object:symbol, Plastic:symbol)\nHas_plastic(\"cling wrap\", \"plastic\").\nHas_plastic(\"plastic wrap\", \"plastic\").\nHas_plastic(\"plastic bag\", \"plastic\").\nHas_plastic(\"plastic container\", \"plastic\").\nHas_plastic(\"plastic lid\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic cup\", \"plastic\").\nHas_plastic(\"plastic plate\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic cup\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic\").\nHas_plastic(\"plastic spoon\", \"plastic\").\nHas_plastic(\"plastic fork\", \"plastic\").\nHas_plastic(\"plastic knife\", \"plastic"]}
{"id": 1135, "answer": false, "completion": ".decl Climb_height(Mountain:symbol, Height:float)\nClimb_height(\"Mount Everest\", 8848).\nClimb_height(\"Mount Emei\", 3298).\n.decl Answer()\nAnswer() :- Climb_height(\"Mount Emei\", height1), Climb_height(\"Mount Everest\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Climb_height(Mountain:symbol, Height:float)\nClimb_height(\"Mount Everest\", 8848).\nClimb_height(\"Mount Emei\", 3298).\n.decl Answer()\nAnswer() :- Climb_height(\"Mount Emei\", height1), Climb_height(\"Mount Everest\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 1136, "answer": false, "completion": ".decl Was_alive(Person:symbol, Time:symbol)\nWas_alive(\"Nancy Pelosi\", \"1940\").\nWas_alive(\"Nancy Pelosi\", \"1941\").\nWas_alive(\"Nancy Pelosi\", \"1942\").\nWas_alive(\"Nancy Pelosi\", \"1943\").\nWas_alive(\"Nancy Pelosi\", \"1944\").\nWas_alive(\"Nancy Pelosi\", \"1945\").\nWas_alive(\"Nancy Pelosi\", \"1946\").\nWas_alive(\"Nancy Pelosi\", \"1947\").\nWas_alive(\"Nancy Pelosi\", \"1948\").\nWas_alive(\"Nancy Pelosi\", \"1949\").\nWas_alive(\"Nancy Pelosi\", \"1950\").\nWas_alive(\"Nancy Pelosi\", \"1951\").\nWas_alive(\"Nancy Pelosi\", \"1952\").\nWas_alive(\"Nancy Pelosi\", \"1953\").\nWas_alive(\"Nancy Pelosi\", \"1954\").\nWas_alive(\"Nancy Pelosi\", \"1955\").\nWas_alive(\"Nancy Pelosi\", \"1956\").\nWas_alive(\"Nancy Pelosi\", \"1957\").\nWas_alive(\"Nancy Pelosi\", \"1958\").\nWas_alive(\"Nancy Pelosi\", \"1959\").\nWas_alive(\"Nancy Pelosi\", \"1960\").\nWas_alive(\"Nancy Pelosi\", \"1961\").\nWas_alive(\"Nancy Pelosi\", \"1962\").\nWas_alive(\"Nancy Pelosi\", \"1963\").\nWas_alive(\"Nancy Pelosi\", \"1964\").\nWas_alive(\"Nancy Pelosi\", \"1965\").\nWas_alive(\"Nancy Pelosi\", \"1966\").\nWas_alive(\"Nancy Pelosi\", \"1967\").\nWas_alive(\"Nancy Pelosi\", \"1968\").\nWas_alive(\"Nancy Pelosi\", \"1969\").\nWas_alive(\"Nancy Pelosi\", \"1970\").\nWas_alive(\"Nancy Pelosi\", \"1971\").\nWas_alive(\"Nancy Pelosi\", \"1972\").\nWas_alive(\"Nancy Pelosi\", \"1973\").\nWas_alive(\"Nancy Pelosi\", \"1974\").\nWas_alive(\"Nancy Pelosi\", \"1975\").\nWas_alive(\"Nancy Pelosi\", \"1976\").\nWas_alive(\"Nancy Pelosi\", \"1977\").\nWas_alive(\"Nancy Pelosi\", \"1978\").\nWas_alive(\"Nancy Pelosi\", \"1979\").\nWas_alive(\"Nancy Pelosi\", \"1980\").\nWas_alive(\"Nancy Pelosi\", \"1981\").\nWas_alive(\"Nancy Pelosi\", \"1982\").\nWas_alive(\"Nancy Pelosi\", \"1983\").\nWas_alive(\"Nancy Pelosi\", \"1984\").\nWas_alive(\"Nancy Pelosi\", \"1985\").\nWas_alive(\"Nancy Pelosi\", \"1986\").\nWas_alive(\"Nancy Pelosi\", \"1987\").\nWas_alive(\"Nancy Pelosi\", \"1988\").\nWas_alive(\"Nancy Pelosi\", \"1989\").\nWas_alive(\"Nancy Pelosi\", \"1990\").\nWas_alive(\"Nancy Pelosi\", \"1991\").\nWas_alive(\"Nancy Pelosi\", \"1992\").\nWas_alive(\"Nancy Pelosi\", \"1993\").\nWas_alive(\"Nancy Pelosi\", \"1994\").\nWas_alive(\"Nancy Pelosi\", \"1995\").\nWas_alive(\"Nancy Pelosi\", \"1996\").\nWas_alive(\"Nancy Pelosi\", \"1997\").\nWas_alive(\"Nancy Pelosi", "completions": [".decl Was_alive(Person:symbol, Time:symbol)\nWas_alive(\"Nancy Pelosi\", \"1940\").\nWas_alive(\"Nancy Pelosi\", \"1941\").\nWas_alive(\"Nancy Pelosi\", \"1942\").\nWas_alive(\"Nancy Pelosi\", \"1943\").\nWas_alive(\"Nancy Pelosi\", \"1944\").\nWas_alive(\"Nancy Pelosi\", \"1945\").\nWas_alive(\"Nancy Pelosi\", \"1946\").\nWas_alive(\"Nancy Pelosi\", \"1947\").\nWas_alive(\"Nancy Pelosi\", \"1948\").\nWas_alive(\"Nancy Pelosi\", \"1949\").\nWas_alive(\"Nancy Pelosi\", \"1950\").\nWas_alive(\"Nancy Pelosi\", \"1951\").\nWas_alive(\"Nancy Pelosi\", \"1952\").\nWas_alive(\"Nancy Pelosi\", \"1953\").\nWas_alive(\"Nancy Pelosi\", \"1954\").\nWas_alive(\"Nancy Pelosi\", \"1955\").\nWas_alive(\"Nancy Pelosi\", \"1956\").\nWas_alive(\"Nancy Pelosi\", \"1957\").\nWas_alive(\"Nancy Pelosi\", \"1958\").\nWas_alive(\"Nancy Pelosi\", \"1959\").\nWas_alive(\"Nancy Pelosi\", \"1960\").\nWas_alive(\"Nancy Pelosi\", \"1961\").\nWas_alive(\"Nancy Pelosi\", \"1962\").\nWas_alive(\"Nancy Pelosi\", \"1963\").\nWas_alive(\"Nancy Pelosi\", \"1964\").\nWas_alive(\"Nancy Pelosi\", \"1965\").\nWas_alive(\"Nancy Pelosi\", \"1966\").\nWas_alive(\"Nancy Pelosi\", \"1967\").\nWas_alive(\"Nancy Pelosi\", \"1968\").\nWas_alive(\"Nancy Pelosi\", \"1969\").\nWas_alive(\"Nancy Pelosi\", \"1970\").\nWas_alive(\"Nancy Pelosi\", \"1971\").\nWas_alive(\"Nancy Pelosi\", \"1972\").\nWas_alive(\"Nancy Pelosi\", \"1973\").\nWas_alive(\"Nancy Pelosi\", \"1974\").\nWas_alive(\"Nancy Pelosi\", \"1975\").\nWas_alive(\"Nancy Pelosi\", \"1976\").\nWas_alive(\"Nancy Pelosi\", \"1977\").\nWas_alive(\"Nancy Pelosi\", \"1978\").\nWas_alive(\"Nancy Pelosi\", \"1979\").\nWas_alive(\"Nancy Pelosi\", \"1980\").\nWas_alive(\"Nancy Pelosi\", \"1981\").\nWas_alive(\"Nancy Pelosi\", \"1982\").\nWas_alive(\"Nancy Pelosi\", \"1983\").\nWas_alive(\"Nancy Pelosi\", \"1984\").\nWas_alive(\"Nancy Pelosi\", \"1985\").\nWas_alive(\"Nancy Pelosi\", \"1986\").\nWas_alive(\"Nancy Pelosi\", \"1987\").\nWas_alive(\"Nancy Pelosi\", \"1988\").\nWas_alive(\"Nancy Pelosi\", \"1989\").\nWas_alive(\"Nancy Pelosi\", \"1990\").\nWas_alive(\"Nancy Pelosi\", \"1991\").\nWas_alive(\"Nancy Pelosi\", \"1992\").\nWas_alive(\"Nancy Pelosi\", \"1993\").\nWas_alive(\"Nancy Pelosi\", \"1994\").\nWas_alive(\"Nancy Pelosi\", \"1995\").\nWas_alive(\"Nancy Pelosi\", \"1996\").\nWas_alive(\"Nancy Pelosi\", \"1997\").\nWas_alive(\"Nancy Pelosi"]}
{"id": 1137, "answer": true, "completion": ".decl Has_n_commas(Number:symbol, N_commas:float)\nHas_n_commas(\"US 2018 GDP\", 3).\n.decl Answer()\nAnswer() :- Has_n_commas(\"US 2018 GDP\", n_commas).\n.output Answer\n\n", "completions": [".decl Has_n_commas(Number:symbol, N_commas:float)\nHas_n_commas(\"US 2018 GDP\", 3).\n.decl Answer()\nAnswer() :- Has_n_commas(\"US 2018 GDP\", n_commas).\n.output Answer\n\n"]}
{"id": 1138, "answer": true, "completion": ".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"tailor\", 100).\nHas_cost(\"slacks\", 50).\n.decl Answer()\nAnswer() :- Has_cost(\"tailor\", cost1), Has_cost(\"slacks\", cost2), cost1 > cost2.\n.output Answer\n\n", "completions": [".decl Has_cost(Object:symbol, Cost:float)\nHas_cost(\"tailor\", 100).\nHas_cost(\"slacks\", 50).\n.decl Answer()\nAnswer() :- Has_cost(\"tailor\", cost1), Has_cost(\"slacks\", cost2), cost1 > cost2.\n.output Answer\n\n"]}
{"id": 1139, "answer": true, "completion": ".decl Has_emotion(Animal:symbol, Emotion:symbol)\nHas_emotion(\"frog\", \"disgust\").\n.decl Answer()\nAnswer() :- Has_emotion(\"frog\", emotion).\n.output Answer\n\n", "completions": [".decl Has_emotion(Animal:symbol, Emotion:symbol)\nHas_emotion(\"frog\", \"disgust\").\n.decl Answer()\nAnswer() :- Has_emotion(\"frog\", emotion).\n.output Answer\n\n"]}
{"id": 1140, "answer": false, "completion": ".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Brett Kavanaugh\", \"clerk of Supreme Court of Canada\").\n.decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"Brett Kavanaugh\", \"seismophobia\").\n.decl Answer()\nAnswer() :- Has_job(\"Brett Kavanaugh\", job), Has_phobia(\"Brett Kavanaugh\", phobia), job = \"clerk of Supreme Court of Canada\".\n.output Answer\n\n", "completions": [".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Brett Kavanaugh\", \"clerk of Supreme Court of Canada\").\n.decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"Brett Kavanaugh\", \"seismophobia\").\n.decl Answer()\nAnswer() :- Has_job(\"Brett Kavanaugh\", job), Has_phobia(\"Brett Kavanaugh\", phobia), job = \"clerk of Supreme Court of Canada\".\n.output Answer\n\n"]}
{"id": 1141, "answer": false, "completion": ".decl Has_zodiac_sign(Person:symbol, Zodiac_sign:symbol)\nHas_zodiac_sign(\"Home Depot\", \"Virgo\").\n.decl Has_month(Event:symbol, Month:symbol)\nHas_month(\"September\", \"September\").\n.decl Answer()\nAnswer() :- Has_zodiac_sign(\"Home Depot\", zodiac_sign), Has_month(\"September\", month), zodiac_sign == month.\n.output Answer\n\n", "completions": [".decl Has_zodiac_sign(Person:symbol, Zodiac_sign:symbol)\nHas_zodiac_sign(\"Home Depot\", \"Virgo\").\n.decl Has_month(Event:symbol, Month:symbol)\nHas_month(\"September\", \"September\").\n.decl Answer()\nAnswer() :- Has_zodiac_sign(\"Home Depot\", zodiac_sign), Has_month(\"September\", month), zodiac_sign == month.\n.output Answer\n\n"]}
{"id": 1142, "answer": false, "completion": ".decl At_location(Object:symbol, Location:symbol)\nAt_location(\"olives\", \"heladeria\").\n.decl Answer()\nAnswer() :- At_location(\"olives\", location), At_location(\"heladeria\", location).\n.output Answer\n\n", "completions": [".decl At_location(Object:symbol, Location:symbol)\nAt_location(\"olives\", \"heladeria\").\n.decl Answer()\nAnswer() :- At_location(\"olives\", location), At_location(\"heladeria\", location).\n.output Answer\n\n"]}
{"id": 1143, "answer": false, "completion": ".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\n", "completions": [".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\nHas_author(\"The Great Gatsby\", \"F. Scott Fitzgerald\").\n"]}
{"id": 1144, "answer": false, "completion": ".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Chris Christie\", 150).\nHas_weight(\"Donald Trump\", 200).\nHas_weight(\"Barack Obama\", 150).\nHas_weight(\"Hillary Clinton\", 150).\n.decl Answer()\nAnswer() :- Has_weight(\"Chris Christie\", weight1), Has_weight(\"Donald Trump\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Chris Christie\", 150).\nHas_weight(\"Donald Trump\", 200).\nHas_weight(\"Barack Obama\", 150).\nHas_weight(\"Hillary Clinton\", 150).\n.decl Answer()\nAnswer() :- Has_weight(\"Chris Christie\", weight1), Has_weight(\"Donald Trump\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 1145, "answer": false, "completion": ".decl Punished_by(Person:symbol, Punishment:symbol)\nPunished_by(\"Billy the Kid\", \"keelhauling\").\nPunished_by(\"Billy the Kid\", \"hanging\").\n.decl Punishment_is_cruel(Punishment:symbol)\nPunishment_is_cruel(\"keelhauling\").\nPunishment_is_cruel(\"hanging\").\n.decl Answer()\nAnswer() :- Punished_by(\"Billy the Kid\", punishment), Punishment_is_cruel(punishment).\n.output Answer\n\n", "completions": [".decl Punished_by(Person:symbol, Punishment:symbol)\nPunished_by(\"Billy the Kid\", \"keelhauling\").\nPunished_by(\"Billy the Kid\", \"hanging\").\n.decl Punishment_is_cruel(Punishment:symbol)\nPunishment_is_cruel(\"keelhauling\").\nPunishment_is_cruel(\"hanging\").\n.decl Answer()\nAnswer() :- Punished_by(\"Billy the Kid\", punishment), Punishment_is_cruel(punishment).\n.output Answer\n\n"]}
{"id": 1146, "answer": false, "completion": ".decl Watched(Person:symbol, Show:symbol)\nWatched(\"Gandhi\", \"Bonanza\").\n.decl Answer()\nAnswer() :- Watched(\"Gandhi\", show).\n.output Answer\n\n", "completions": [".decl Watched(Person:symbol, Show:symbol)\nWatched(\"Gandhi\", \"Bonanza\").\n.decl Answer()\nAnswer() :- Watched(\"Gandhi\", show).\n.output Answer\n\n"]}
{"id": 1147, "answer": true, "completion": ".decl Has_casualties(War:symbol, Casualties:float)\nHas_casualties(\"World War II\", 60).\nHas_casualties(\"World War II\", 65).\nHas_casualties(\"World War II\", 70).\nHas_casualties(\"World War II\", 75).\nHas_casualties(\"World War II\", 80).\nHas_casualties(\"World War II\", 85).\nHas_casualties(\"World War II\", 90).\nHas_casualties(\"World War II\", 95).\nHas_casualties(\"World War II\", 100).\n.decl Has_population(Country:symbol, Population:float)\nHas_population(\"France\", 60).\nHas_population(\"France\", 65).\nHas_population(\"France\", 70).\nHas_population(\"France\", 75).\nHas_population(\"France\", 80).\nHas_population(\"France\", 85).\nHas_population(\"France\", 90).\nHas_population(\"France\", 95).\nHas_population(\"France\", 100).\n.decl Answer()\nAnswer() :- Has_casualties(\"World War II\", casualties), Has_population(\"France\", population), casualties > population.\n.output Answer\n\n", "completions": [".decl Has_casualties(War:symbol, Casualties:float)\nHas_casualties(\"World War II\", 60).\nHas_casualties(\"World War II\", 65).\nHas_casualties(\"World War II\", 70).\nHas_casualties(\"World War II\", 75).\nHas_casualties(\"World War II\", 80).\nHas_casualties(\"World War II\", 85).\nHas_casualties(\"World War II\", 90).\nHas_casualties(\"World War II\", 95).\nHas_casualties(\"World War II\", 100).\n.decl Has_population(Country:symbol, Population:float)\nHas_population(\"France\", 60).\nHas_population(\"France\", 65).\nHas_population(\"France\", 70).\nHas_population(\"France\", 75).\nHas_population(\"France\", 80).\nHas_population(\"France\", 85).\nHas_population(\"France\", 90).\nHas_population(\"France\", 95).\nHas_population(\"France\", 100).\n.decl Answer()\nAnswer() :- Has_casualties(\"World War II\", casualties), Has_population(\"France\", population), casualties > population.\n.output Answer\n\n"]}
{"id": 1148, "answer": false, "completion": ".decl Answer()\nAnswer() :- pi > sqrt(5).\n.output Answer\n\n", "completions": [".decl Answer()\nAnswer() :- pi > sqrt(5).\n.output Answer\n\n"]}
{"id": 1149, "answer": false, "completion": ".decl Has_popularity(Book:symbol, Popularity:float)\nHas_popularity(\"Harry Potter and the Philosopher's Stone\", 0.5).\n.decl Was_popular_during(Book:symbol, Time:symbol)\nWas_popular_during(\"Harry Potter and the Philosopher's Stone\", \"great depression\").\n.decl Answer()\nAnswer() :- Has_popularity(\"Harry Potter and the Philosopher's Stone\", popularity), Was_popular_during(\"Harry Potter and the Philosopher's Stone\", time), popularity > 0.5.\n.output Answer\n\n", "completions": [".decl Has_popularity(Book:symbol, Popularity:float)\nHas_popularity(\"Harry Potter and the Philosopher's Stone\", 0.5).\n.decl Was_popular_during(Book:symbol, Time:symbol)\nWas_popular_during(\"Harry Potter and the Philosopher's Stone\", \"great depression\").\n.decl Answer()\nAnswer() :- Has_popularity(\"Harry Potter and the Philosopher's Stone\", popularity), Was_popular_during(\"Harry Potter and the Philosopher's Stone\", time), popularity > 0.5.\n.output Answer\n\n"]}
{"id": 1150, "answer": true, "completion": ".decl Has_sell_by_date(Object:symbol, Date:symbol)\nHas_sell_by_date(\"apple\", \"XII\").\nHas_sell_by_date(\"apple\", \"XV\").\nHas_sell_by_date(\"apple\", \"XVI\").\n.decl Answer()\nAnswer() :- Has_sell_by_date(\"apple\", date).\n.output Answer\n\n", "completions": [".decl Has_sell_by_date(Object:symbol, Date:symbol)\nHas_sell_by_date(\"apple\", \"XII\").\nHas_sell_by_date(\"apple\", \"XV\").\nHas_sell_by_date(\"apple\", \"XVI\").\n.decl Answer()\nAnswer() :- Has_sell_by_date(\"apple\", date).\n.output Answer\n\n"]}
{"id": 1151, "answer": false, "completion": ".decl Has_venom(Insect:symbol, Venom:symbol)\nHas_venom(\"bumblebee\", \"yes\").\nHas_venom(\"spider\", \"no\").\n.decl Has_vein(Insect:symbol, Vein:symbol)\nHas_vein(\"bumblebee\", \"yes\").\nHas_vein(\"spider\", \"no\").\n.decl Answer()\nAnswer() :- Has_venom(\"bumblebee\", venom), Has_venom(\"spider\", venom), Has_vein(\"bumblebee\", vein), Has_vein(\"spider\", vein), venom == \"yes\", vein == \"no\".\n.output Answer\n\n", "completions": [".decl Has_venom(Insect:symbol, Venom:symbol)\nHas_venom(\"bumblebee\", \"yes\").\nHas_venom(\"spider\", \"no\").\n.decl Has_vein(Insect:symbol, Vein:symbol)\nHas_vein(\"bumblebee\", \"yes\").\nHas_vein(\"spider\", \"no\").\n.decl Answer()\nAnswer() :- Has_venom(\"bumblebee\", venom), Has_venom(\"spider\", venom), Has_vein(\"bumblebee\", vein), Has_vein(\"spider\", vein), venom == \"yes\", vein == \"no\".\n.output Answer\n\n"]}
{"id": 1152, "answer": false, "completion": ".decl Has_origin(Word:symbol, Origin:symbol)\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_", "completions": [".decl Has_origin(Word:symbol, Origin:symbol)\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_origin(\"narcissism\", \"Greece\").\nHas_"]}
{"id": 1153, "answer": true, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"art\", \"subject\").\nIs_a(\"education\", \"subject\").\nIs_a(\"education\", \"process\").\nIs_a(\"education\", \"activity\").\nIs_a(\"education\", \"practice\").\nIs_a(\"education\", \"field\").\nIs_a(\"education\", \"discipline\").\nIs_a(\"education\", \"profession\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"science\").\nIs_a(\"education\", \"knowledge\").\nIs_a(\"education\", \"skill\").\nIs_a(\"education\", \"way of life\").\nIs_a(\"education\", \"system\").\nIs_a(\"education\", \"practice\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"art\", \"subject\").\nIs_a(\"education\", \"subject\").\nIs_a(\"education\", \"process\").\nIs_a(\"education\", \"activity\").\nIs_a(\"education\", \"practice\").\nIs_a(\"education\", \"field\").\nIs_a(\"education\", \"discipline\").\nIs_a(\"education\", \"profession\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"science\").\nIs_a(\"education\", \"knowledge\").\nIs_a(\"education\", \"skill\").\nIs_a(\"education\", \"way of life\").\nIs_a(\"education\", \"system\").\nIs_a(\"education\", \"practice\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art\").\nIs_a(\"education\", \"art"]}
{"id": 1154, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"mummification\", \"Andes\").\nHappens_in_time(\"rainfall\", \"Andes\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"mummification\", time), Happens_in_time(\"rainfall\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"mummification\", \"Andes\").\nHappens_in_time(\"rainfall\", \"Andes\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"mummification\", time), Happens_in_time(\"rainfall\", time).\n.output Answer\n\n"]}
{"id": 1155, "answer": false, "completion": ".decl Located_in(Company:symbol, City:symbol)\nLocated_in(\"LG Electronics\", \"Seoul\").\n.decl Has_official_bird(City:symbol, Bird:symbol)\nHas_official_bird(\"Seoul\", \"Nene\").\n.decl Has_color(Bird:symbol, Color:symbol)\nHas_color(\"Nene\", \"purplish/blue tail\").\n.decl Answer()\nAnswer() :- Located_in(\"LG Electronics\", city), Has_official_bird(city, bird), Has_color(bird, color).\n.output Answer\n\n", "completions": [".decl Located_in(Company:symbol, City:symbol)\nLocated_in(\"LG Electronics\", \"Seoul\").\n.decl Has_official_bird(City:symbol, Bird:symbol)\nHas_official_bird(\"Seoul\", \"Nene\").\n.decl Has_color(Bird:symbol, Color:symbol)\nHas_color(\"Nene\", \"purplish/blue tail\").\n.decl Answer()\nAnswer() :- Located_in(\"LG Electronics\", city), Has_official_bird(city, bird), Has_color(bird, color).\n.output Answer\n\n"]}
{"id": 1156, "answer": true, "completion": ".decl Has_moisture(Object:symbol, Moisture:float)\nHas_moisture(\"cactus soil\", 0.5).\n.decl Answer()\nAnswer() :- Has_moisture(\"cactus soil\", moisture), moisture > 0.5.\n.output Answer\n\n", "completions": [".decl Has_moisture(Object:symbol, Moisture:float)\nHas_moisture(\"cactus soil\", 0.5).\n.decl Answer()\nAnswer() :- Has_moisture(\"cactus soil\", moisture), moisture > 0.5.\n.output Answer\n\n"]}
{"id": 1157, "answer": true, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"John\", \"dessert\").\nEats(\"John\", \"breakfast\").\nEats(\"Mary\", \"breakfast\").\nEats(\"Mary\", \"dessert\").\n.decl Answer()\nAnswer() :- Eats(\"John\", \"dessert\"), Eats(\"Mary\", \"breakfast\").\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"John\", \"dessert\").\nEats(\"John\", \"breakfast\").\nEats(\"Mary\", \"breakfast\").\nEats(\"Mary\", \"dessert\").\n.decl Answer()\nAnswer() :- Eats(\"John\", \"dessert\"), Eats(\"Mary\", \"breakfast\").\n.output Answer\n\n"]}
{"id": 1158, "answer": false, "completion": ".decl Inspired_by(Person_A:symbol, Person_B:symbol)\nInspired_by(\"Ariana Grande\", \"Imogen Heap\").\n.decl Inspired_by(Person_A:symbol, Person_B:symbol)\nInspired_by(\"Imogen Heap\", \"Ariana Grande\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Ariana Grande\", person_b), Inspired_by(person_b, \"Imogen Heap\").\n.output Answer\n\n", "completions": [".decl Inspired_by(Person_A:symbol, Person_B:symbol)\nInspired_by(\"Ariana Grande\", \"Imogen Heap\").\n.decl Inspired_by(Person_A:symbol, Person_B:symbol)\nInspired_by(\"Imogen Heap\", \"Ariana Grande\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Ariana Grande\", person_b), Inspired_by(person_b, \"Imogen Heap\").\n.output Answer\n\n"]}
{"id": 1159, "answer": true, "completion": ".decl Has_n_awards(Person:symbol, N_awards:float)\nHas_n_awards(\"Johnny Carson\", 30).\n.decl Has_n_eggs(Person:symbol, N_eggs:float)\nHas_n_eggs(\"Johnny Carson\", 30).\n.decl Answer()\nAnswer() :- Has_n_awards(\"Johnny Carson\", n_awards), Has_n_eggs(\"Johnny Carson\", n_eggs), n_awards >= n_eggs.\n.output Answer\n\n", "completions": [".decl Has_n_awards(Person:symbol, N_awards:float)\nHas_n_awards(\"Johnny Carson\", 30).\n.decl Has_n_eggs(Person:symbol, N_eggs:float)\nHas_n_eggs(\"Johnny Carson\", 30).\n.decl Answer()\nAnswer() :- Has_n_awards(\"Johnny Carson\", n_awards), Has_n_eggs(\"Johnny Carson\", n_eggs), n_awards >= n_eggs.\n.output Answer\n\n"]}
{"id": 1160, "answer": false, "completion": ".decl Has_subject(Person:symbol, Subject:symbol)\nHas_subject(\"Julius Caesar\", \"Pharmacology\").\n.decl Answer()\nAnswer() :- Has_subject(\"Julius Caesar\", subject).\n.output Answer\n\n", "completions": [".decl Has_subject(Person:symbol, Subject:symbol)\nHas_subject(\"Julius Caesar\", \"Pharmacology\").\n.decl Answer()\nAnswer() :- Has_subject(\"Julius Caesar\", subject).\n.output Answer\n\n"]}
{"id": 1161, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Easter\", \"March\").\nHappens_in_time(\"Easter\", \"April\").\nHappens_in_time(\"Easter\", \"May\").\nHappens_in_time(\"Easter\", \"June\").\nHappens_in_time(\"Easter\", \"July\").\nHappens_in_time(\"Easter\", \"August\").\nHappens_in_time(\"Easter\", \"September\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Easter\", 9).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Easter\", month), Happens_every_n_months(\"Easter\", n_months), month = \"September\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Easter\", \"March\").\nHappens_in_time(\"Easter\", \"April\").\nHappens_in_time(\"Easter\", \"May\").\nHappens_in_time(\"Easter\", \"June\").\nHappens_in_time(\"Easter\", \"July\").\nHappens_in_time(\"Easter\", \"August\").\nHappens_in_time(\"Easter\", \"September\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Easter\", 9).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Easter\", month), Happens_every_n_months(\"Easter\", n_months), month = \"September\".\n.output Answer\n\n"]}
{"id": 1162, "answer": false, "completion": ".decl Has_strength(Animal:symbol, Strength:float)\nHas_strength(\"alligator\", 0.5).\nHas_strength(\"saltwater crocodile\", 0.8).\n.decl Answer()\nAnswer() :- Has_strength(\"alligator\", strength1), Has_strength(\"saltwater crocodile\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Animal:symbol, Strength:float)\nHas_strength(\"alligator\", 0.5).\nHas_strength(\"saltwater crocodile\", 0.8).\n.decl Answer()\nAnswer() :- Has_strength(\"alligator\", strength1), Has_strength(\"saltwater crocodile\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1163, "answer": true, "completion": ".decl Has_cuisine(Location:symbol, Cuisine:symbol)\nHas_cuisine(\"Hawaii\", \"Hawaiian\").\nHas_cuisine(\"Hawaii\", \"Asian\").\n.decl Is_vegan(Person:symbol)\nIs_vegan(\"vegan\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"Hawaii\", cuisine), Is_vegan(\"vegan\").\n.output Answer\n\n", "completions": [".decl Has_cuisine(Location:symbol, Cuisine:symbol)\nHas_cuisine(\"Hawaii\", \"Hawaiian\").\nHas_cuisine(\"Hawaii\", \"Asian\").\n.decl Is_vegan(Person:symbol)\nIs_vegan(\"vegan\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"Hawaii\", cuisine), Is_vegan(\"vegan\").\n.output Answer\n\n"]}
{"id": 1164, "answer": false, "completion": ".decl Has_n_bands(Person:symbol, N_bands:float)\nHas_n_bands(\"Ringo Starr\", 5).\n.decl Answer()\nAnswer() :- Has_n_bands(\"Ringo Starr\", n_bands), n_bands >= 3.\n.output Answer\n\n", "completions": [".decl Has_n_bands(Person:symbol, N_bands:float)\nHas_n_bands(\"Ringo Starr\", 5).\n.decl Answer()\nAnswer() :- Has_n_bands(\"Ringo Starr\", n_bands), n_bands >= 3.\n.output Answer\n\n"]}
{"id": 1165, "answer": true, "completion": ".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Achilles\", 100).\nHas_strength(\"Legolas\", 80).\n.decl Answer()\nAnswer() :- Has_strength(\"Achilles\", strength1), Has_strength(\"Legolas\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Achilles\", 100).\nHas_strength(\"Legolas\", 80).\n.decl Answer()\nAnswer() :- Has_strength(\"Achilles\", strength1), Has_strength(\"Legolas\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1166, "answer": true, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Dosa\", 200).\nHas_calories(\"keto diet\", 800).\n.decl Answer()\nAnswer() :- Has_calories(\"Dosa\", calories1), Has_calories(\"keto diet\", calories2), calories1 <= calories2.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"Dosa\", 200).\nHas_calories(\"keto diet\", 800).\n.decl Answer()\nAnswer() :- Has_calories(\"Dosa\", calories1), Has_calories(\"keto diet\", calories2), calories1 <= calories2.\n.output Answer\n\n"]}
{"id": 1167, "answer": true, "completion": ".decl Has_band_member(Band:symbol, Member:symbol)\nHas_band_member(\"Metallica\", \"James Hetfield\").\nHas_band_member(\"Metallica\", \"Lars Ulrich\").\nHas_band_member(\"Metallica\", \"Kirk Hammett\").\nHas_band_member(\"Metallica\", \"Robert Trujillo\").\n.decl Has_hair_length(Member:symbol, Hair_length:float)\nHas_hair_length(\"James Hetfield\", 0).\nHas_hair_length(\"Lars Ulrich\", 0).\nHas_hair_length(\"Kirk Hammett\", 0).\nHas_hair_length(\"Robert Trujillo\", 0).\n.decl Has_sales(Band:symbol, Sales:float)\nHas_sales(\"Metallica\", 100).\n.decl Answer()\nAnswer() :- Has_band_member(\"Metallica\", member), Has_hair_length(member, hair_length), hair_length > 0.\nAnswer() :- Has_band_member(\"Metallica\", member), Has_hair_length(member, hair_length), Has_sales(\"Metallica\", sales), sales < 100.\n.output Answer\n\n", "completions": [".decl Has_band_member(Band:symbol, Member:symbol)\nHas_band_member(\"Metallica\", \"James Hetfield\").\nHas_band_member(\"Metallica\", \"Lars Ulrich\").\nHas_band_member(\"Metallica\", \"Kirk Hammett\").\nHas_band_member(\"Metallica\", \"Robert Trujillo\").\n.decl Has_hair_length(Member:symbol, Hair_length:float)\nHas_hair_length(\"James Hetfield\", 0).\nHas_hair_length(\"Lars Ulrich\", 0).\nHas_hair_length(\"Kirk Hammett\", 0).\nHas_hair_length(\"Robert Trujillo\", 0).\n.decl Has_sales(Band:symbol, Sales:float)\nHas_sales(\"Metallica\", 100).\n.decl Answer()\nAnswer() :- Has_band_member(\"Metallica\", member), Has_hair_length(member, hair_length), hair_length > 0.\nAnswer() :- Has_band_member(\"Metallica\", member), Has_hair_length(member, hair_length), Has_sales(\"Metallica\", sales), sales < 100.\n.output Answer\n\n"]}
{"id": 1168, "answer": false, "completion": ".decl Lecturer(Person:symbol, University:symbol)\nLecturer(\"Quiet\", \"Haub\").\n.decl Answer()\nAnswer() :- Lecturer(\"Quiet\", \"Haub\").\n.output Answer\n\n", "completions": [".decl Lecturer(Person:symbol, University:symbol)\nLecturer(\"Quiet\", \"Haub\").\n.decl Answer()\nAnswer() :- Lecturer(\"Quiet\", \"Haub\").\n.output Answer\n\n"]}
{"id": 1169, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Liebherr LTM 11200-9.1\", 50000).\nHas_weight(\"Mount Emei\", 100000).\n.decl Answer()\nAnswer() :- Has_weight(\"Liebherr LTM 11200-9.1\", weight1), Has_weight(\"Mount Emei\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Liebherr LTM 11200-9.1\", 50000).\nHas_weight(\"Mount Emei\", 100000).\n.decl Answer()\nAnswer() :- Has_weight(\"Liebherr LTM 11200-9.1\", weight1), Has_weight(\"Mount Emei\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 1170, "answer": false, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"snoring\", \"respiratory event\").\nIs_a(\"snoring\", \"noise\").\nIs_a(\"breathing\", \"respiratory event\").\nIs_a(\"breathing\", \"activity\").\n.decl Answer()\nAnswer() :- Is_a(\"snoring\", class1), Is_a(\"breathing\", class2), class1 = class2.\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"snoring\", \"respiratory event\").\nIs_a(\"snoring\", \"noise\").\nIs_a(\"breathing\", \"respiratory event\").\nIs_a(\"breathing\", \"activity\").\n.decl Answer()\nAnswer() :- Is_a(\"snoring\", class1), Is_a(\"breathing\", class2), class1 = class2.\n.output Answer\n\n"]}
{"id": 1171, "answer": false, "completion": ".decl Is_a(Group:symbol, Genre:symbol)\nIs_a(\"ABBA\", \"pop\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"dance\").\nIs_a(\"ABBA\", \"folk\").\nIs_a(\"ABBA\", \"country\").\nIs_a(\"ABBA\", \"jazz\").\nIs_a(\"ABBA\", \"classical\").\nIs_a(\"ABBA\", \"blues\").\nIs_a(\"ABBA\", \"soul\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic\").\nIs_a(\"ABBA\", \"new wave\").\nIs_a(\"ABBA\", \"symphonic rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"disco\").\nIs_a(\"ABBA\", \"punk rock\").\nIs_a(\"ABBA\", \"folk rock\").\nIs_a(\"ABBA\", \"heavy metal\").\nIs_a(\"ABBA\", \"hard rock\").\nIs_a(\"ABBA\", \"progressive metal\").\nIs_a(\"ABBA\", \"heavy metal\").\nIs_a(\"ABBA\", \"alternative rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\",", "completions": [".decl Is_a(Group:symbol, Genre:symbol)\nIs_a(\"ABBA\", \"pop\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"dance\").\nIs_a(\"ABBA\", \"folk\").\nIs_a(\"ABBA\", \"country\").\nIs_a(\"ABBA\", \"jazz\").\nIs_a(\"ABBA\", \"classical\").\nIs_a(\"ABBA\", \"blues\").\nIs_a(\"ABBA\", \"soul\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic\").\nIs_a(\"ABBA\", \"new wave\").\nIs_a(\"ABBA\", \"symphonic rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"disco\").\nIs_a(\"ABBA\", \"punk rock\").\nIs_a(\"ABBA\", \"folk rock\").\nIs_a(\"ABBA\", \"heavy metal\").\nIs_a(\"ABBA\", \"hard rock\").\nIs_a(\"ABBA\", \"progressive metal\").\nIs_a(\"ABBA\", \"heavy metal\").\nIs_a(\"ABBA\", \"alternative rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\", \"soft rock\").\nIs_a(\"ABBA\", \"electronic rock\").\nIs_a(\"ABBA\", \"dance rock\").\nIs_a(\"ABBA\", \"art rock\").\nIs_a(\"ABBA\", \"glam rock\").\nIs_a(\"ABBA\", \"progressive rock\").\nIs_a(\"ABBA\", \"rock and roll\").\nIs_a(\"ABBA\", \"rock\").\nIs_a(\"ABBA\", \"pop rock\").\nIs_a(\"ABBA\","]}
{"id": 1172, "answer": false, "completion": ".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Jackson Pollock\", \"Cody\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").", "completions": [".decl Was_born(Person:symbol, Place:symbol)\nWas_born(\"Jackson Pollock\", \"Cody\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\").\nWas_born(\"Jackson Pollock\", \"Olathe\")."]}
{"id": 1173, "answer": true, "completion": ".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Dungeons and Dragons\", 1).\n.decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Monopoly\", 2).\n.decl Answer()\nAnswer() :- Has_n_players(\"Dungeons and Dragons\", n_players1), Has_n_players(\"Monopoly\", n_players2), n_players1 > n_players2.\n.output Answer\n\n", "completions": [".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Dungeons and Dragons\", 1).\n.decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Monopoly\", 2).\n.decl Answer()\nAnswer() :- Has_n_players(\"Dungeons and Dragons\", n_players1), Has_n_players(\"Monopoly\", n_players2), n_players1 > n_players2.\n.output Answer\n\n"]}
{"id": 1174, "answer": true, "completion": ".decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"game engine\", \"fuel injector\").\n.decl Answer()\nAnswer() :- Has_part(\"game engine\", part).\n.output Answer\n\n", "completions": [".decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"game engine\", \"fuel injector\").\n.decl Answer()\nAnswer() :- Has_part(\"game engine\", part).\n.output Answer\n\n"]}
{"id": 1175, "answer": false, "completion": ".decl Has_child(Person:symbol, Child:symbol)\nHas_child(\"Heracles\", \"Hercules\").\nHas_child(\"Heracles\", \"Iphicles\").\nHas_child(\"Heracles\", \"Mecisteus\").\nHas_child(\"Heracles\", \"Ophion\").\nHas_child(\"Heracles\", \"Harpalus\").\nHas_child(\"Heracles\", \"Aegialeus\").\n.decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Hercules\", \"Heracles\").\nHas_parent(\"Iphicles\", \"Heracles\").\nHas_parent(\"Mecisteus\", \"Heracles\").\nHas_parent(\"Ophion\", \"Heracles\").\nHas_parent(\"Harpalus\", \"Heracles\").\nHas_parent(\"Aegialeus\", \"Heracles\").\n.decl Has_death_date(Person:symbol, Date:symbol)\nHas_death_date(\"Heracles\", \"July 12, 1207 BC\").\nHas_death_date(\"Hercules\", \"July 12, 1207 BC\").\nHas_death_date(\"Iphicles\", \"July 12, 1207 BC\").\nHas_death_date(\"Mecisteus\", \"July 12, 1207 BC\").\nHas_death_date(\"Ophion\", \"July 12, 1207 BC\").\nHas_death_date(\"Harpalus\", \"July 12, 1207 BC\").\nHas_death_date(\"Aegialeus\", \"July 12, 1207 BC\").\n.decl Has_birth_date(Person:symbol, Date:symbol)\nHas_birth_date(\"Heracles\", \"July 12, 1207 BC\").\nHas_birth_date(\"Hercules\", \"July 12, 1207 BC\").\nHas_birth_date(\"Iphicles\", \"July 12, 1207 BC\").\nHas_birth_date(\"Mecisteus\", \"July 12, 1207 BC\").\nHas_birth_date(\"Ophion\", \"July 12, 1207 BC\").\nHas_birth_date(\"Harpalus\", \"July 12, 1207 BC\").\nHas_birth_date(\"Aegialeus\", \"July 12, 1207 BC\").\n.decl Answer()\nAnswer() :- Has_child(\"Heracles\", child), Has_birth_date(child, birth_date), Has_death_date(child, death_date), birth_date < death_date.\n.output Answer\n\n", "completions": [".decl Has_child(Person:symbol, Child:symbol)\nHas_child(\"Heracles\", \"Hercules\").\nHas_child(\"Heracles\", \"Iphicles\").\nHas_child(\"Heracles\", \"Mecisteus\").\nHas_child(\"Heracles\", \"Ophion\").\nHas_child(\"Heracles\", \"Harpalus\").\nHas_child(\"Heracles\", \"Aegialeus\").\n.decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Hercules\", \"Heracles\").\nHas_parent(\"Iphicles\", \"Heracles\").\nHas_parent(\"Mecisteus\", \"Heracles\").\nHas_parent(\"Ophion\", \"Heracles\").\nHas_parent(\"Harpalus\", \"Heracles\").\nHas_parent(\"Aegialeus\", \"Heracles\").\n.decl Has_death_date(Person:symbol, Date:symbol)\nHas_death_date(\"Heracles\", \"July 12, 1207 BC\").\nHas_death_date(\"Hercules\", \"July 12, 1207 BC\").\nHas_death_date(\"Iphicles\", \"July 12, 1207 BC\").\nHas_death_date(\"Mecisteus\", \"July 12, 1207 BC\").\nHas_death_date(\"Ophion\", \"July 12, 1207 BC\").\nHas_death_date(\"Harpalus\", \"July 12, 1207 BC\").\nHas_death_date(\"Aegialeus\", \"July 12, 1207 BC\").\n.decl Has_birth_date(Person:symbol, Date:symbol)\nHas_birth_date(\"Heracles\", \"July 12, 1207 BC\").\nHas_birth_date(\"Hercules\", \"July 12, 1207 BC\").\nHas_birth_date(\"Iphicles\", \"July 12, 1207 BC\").\nHas_birth_date(\"Mecisteus\", \"July 12, 1207 BC\").\nHas_birth_date(\"Ophion\", \"July 12, 1207 BC\").\nHas_birth_date(\"Harpalus\", \"July 12, 1207 BC\").\nHas_birth_date(\"Aegialeus\", \"July 12, 1207 BC\").\n.decl Answer()\nAnswer() :- Has_child(\"Heracles\", child), Has_birth_date(child, birth_date), Has_death_date(child, death_date), birth_date < death_date.\n.output Answer\n\n"]}
{"id": 1176, "answer": true, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"moon\", 30000).\nHas_area(\"Black Sea\", 40000).\n.decl Answer()\nAnswer() :- Has_area(\"moon\", area1), Has_area(\"Black Sea\", area2), area1 < area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"moon\", 30000).\nHas_area(\"Black Sea\", 40000).\n.decl Answer()\nAnswer() :- Has_area(\"moon\", area1), Has_area(\"Black Sea\", area2), area1 < area2.\n.output Answer\n\n"]}
{"id": 1177, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"peach blossoms\", \"spring\").\nHappens_in_time(\"Andromeda\", \"spring\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"peach blossoms\", time), Happens_in_time(\"Andromeda\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"peach blossoms\", \"spring\").\nHappens_in_time(\"Andromeda\", \"spring\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"peach blossoms\", time), Happens_in_time(\"Andromeda\", time).\n.output Answer\n\n"]}
{"id": 1178, "answer": true, "completion": ".decl Bacon_number(Person:symbol, Bacon_number:float)\nBacon_number(\"Al Pacino\", 1).\nBacon_number(\"Margaret Qualley\", 1).\n.decl Answer()\nAnswer() :- Bacon_number(\"Al Pacino\", bacon_number1), Bacon_number(\"Margaret Qualley\", bacon_number2), bacon_number1 = bacon_number2.\n.output Answer\n\n", "completions": [".decl Bacon_number(Person:symbol, Bacon_number:float)\nBacon_number(\"Al Pacino\", 1).\nBacon_number(\"Margaret Qualley\", 1).\n.decl Answer()\nAnswer() :- Bacon_number(\"Al Pacino\", bacon_number1), Bacon_number(\"Margaret Qualley\", bacon_number2), bacon_number1 = bacon_number2.\n.output Answer\n\n"]}
{"id": 1179, "answer": false, "completion": ".decl Written_in_Pitman_shorthand(Constitution:symbol)\nWritten_in_Pitman_shorthand(\"Tenth Amendment\").\n.decl Answer()\nAnswer() :- Written_in_Pitman_shorthand(\"Tenth Amendment\").\n.output Answer\n\n", "completions": [".decl Written_in_Pitman_shorthand(Constitution:symbol)\nWritten_in_Pitman_shorthand(\"Tenth Amendment\").\n.decl Answer()\nAnswer() :- Written_in_Pitman_shorthand(\"Tenth Amendment\").\n.output Answer\n\n"]}
{"id": 1180, "answer": true, "completion": ".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Great\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Ivan the Terrible\", nickname1), Has_nickname(\"Ivan the Terrible\", nickname2), nickname1 != nickname2.\n.output Answer\n\n", "completions": [".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Great\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\nHas_nickname(\"Ivan the Terrible\", \"Ivan the Terrible\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Ivan the Terrible\", nickname1), Has_nickname(\"Ivan the Terrible\", nickname2), nickname1 != nickname2.\n.output Answer\n\n"]}
{"id": 1181, "answer": false, "completion": ".decl Has_cousin(Person:symbol, Cousin:symbol)\nHas_cousin(\"Zelda Williams\", \"Nick Williams\").\nHas_cousin(\"Zelda Williams\", \"Nick's wife\").\nHas_cousin(\"Nick Williams\", \"Nick's wife\").\nHas_cousin(\"Nick's wife\", \"Nick's son\").\nHas_cousin(\"Nick's wife\", \"Nick's daughter\").\nHas_cousin(\"Nick's son\", \"Nick's daughter\").\n.decl Answer()\nAnswer() :- Has_cousin(\"Zelda Williams\", cousin1), Has_cousin(cousin1, cousin2), Has_cousin(cousin2, cousin3), Has_cousin(cousin3, cousin4), Has_cousin(cousin4, cousin5), Has_cousin(cousin5, cousin6).\n.output Answer\n\n", "completions": [".decl Has_cousin(Person:symbol, Cousin:symbol)\nHas_cousin(\"Zelda Williams\", \"Nick Williams\").\nHas_cousin(\"Zelda Williams\", \"Nick's wife\").\nHas_cousin(\"Nick Williams\", \"Nick's wife\").\nHas_cousin(\"Nick's wife\", \"Nick's son\").\nHas_cousin(\"Nick's wife\", \"Nick's daughter\").\nHas_cousin(\"Nick's son\", \"Nick's daughter\").\n.decl Answer()\nAnswer() :- Has_cousin(\"Zelda Williams\", cousin1), Has_cousin(cousin1, cousin2), Has_cousin(cousin2, cousin3), Has_cousin(cousin3, cousin4), Has_cousin(cousin4, cousin5), Has_cousin(cousin5, cousin6).\n.output Answer\n\n"]}
{"id": 1182, "answer": false, "completion": ".decl Has_level(Level:symbol, New_Testament:symbol)\nHas_level(\"thetan\", \"New Testament\").\n.decl Answer()\nAnswer() :- Has_level(\"thetan\", new_testament).\n.output Answer\n\n", "completions": [".decl Has_level(Level:symbol, New_Testament:symbol)\nHas_level(\"thetan\", \"New Testament\").\n.decl Answer()\nAnswer() :- Has_level(\"thetan\", new_testament).\n.output Answer\n\n"]}
{"id": 1183, "answer": false, "completion": ".decl Has_name(Pancake:symbol, Name:symbol)\nHas_name(\"French pancake\", \"florin\").\nHas_name(\"Dutch pancake\", \"florin\").\nHas_name(\"Norwegian pancake\", \"florin\").\nHas_name(\"Canadian pancake\", \"florin\").\nHas_name(\"Belgian pancake\", \"florin\").\nHas_name(\"Australian pancake\", \"florin\").\nHas_name(\"New Zealand pancake\", \"florin\").\nHas_name(\"American pancake\", \"dollar\").\nHas_name(\"Japanese pancake\", \"yen\").\n.decl Answer()\nAnswer() :- Has_name(\"French pancake\", name), Has_name(\"Dutch pancake\", name), Has_name(\"Norwegian pancake\", name), Has_name(\"Canadian pancake\", name), Has_name(\"Belgian pancake\", name), Has_name(\"Australian pancake\", name), Has_name(\"New Zealand pancake\", name), Has_name(\"American pancake\", name), Has_name(\"Japanese pancake\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Pancake:symbol, Name:symbol)\nHas_name(\"French pancake\", \"florin\").\nHas_name(\"Dutch pancake\", \"florin\").\nHas_name(\"Norwegian pancake\", \"florin\").\nHas_name(\"Canadian pancake\", \"florin\").\nHas_name(\"Belgian pancake\", \"florin\").\nHas_name(\"Australian pancake\", \"florin\").\nHas_name(\"New Zealand pancake\", \"florin\").\nHas_name(\"American pancake\", \"dollar\").\nHas_name(\"Japanese pancake\", \"yen\").\n.decl Answer()\nAnswer() :- Has_name(\"French pancake\", name), Has_name(\"Dutch pancake\", name), Has_name(\"Norwegian pancake\", name), Has_name(\"Canadian pancake\", name), Has_name(\"Belgian pancake\", name), Has_name(\"Australian pancake\", name), Has_name(\"New Zealand pancake\", name), Has_name(\"American pancake\", name), Has_name(\"Japanese pancake\", name).\n.output Answer\n\n"]}
{"id": 1184, "answer": false, "completion": ".decl Has_anatomy(Animal:symbol, Anatomy:symbol)\nHas_anatomy(\"camel\", \"hump\").\nHas_anatomy(\"camel\", \"legs\").\nHas_anatomy(\"camel\", \"neck\").\n.decl Has_property(Property:symbol, Anatomy:symbol)\nHas_property(\"hump\", \"fat\").\nHas_property(\"legs\", \"long\").\nHas_property(\"neck\", \"long\").\n.decl Answer()\nAnswer() :- Has_anatomy(\"camel\", anatomy), Has_property(property, anatomy), property = \"fat\".\n.output Answer\n\n", "completions": [".decl Has_anatomy(Animal:symbol, Anatomy:symbol)\nHas_anatomy(\"camel\", \"hump\").\nHas_anatomy(\"camel\", \"legs\").\nHas_anatomy(\"camel\", \"neck\").\n.decl Has_property(Property:symbol, Anatomy:symbol)\nHas_property(\"hump\", \"fat\").\nHas_property(\"legs\", \"long\").\nHas_property(\"neck\", \"long\").\n.decl Answer()\nAnswer() :- Has_anatomy(\"camel\", anatomy), Has_property(property, anatomy), property = \"fat\".\n.output Answer\n\n"]}
{"id": 1185, "answer": true, "completion": ".decl Wrestled(Person:symbol, Show:symbol)\nWrestled(\"Bruiser Brody\", \"WWE Raw\").\n.decl Answer()\nAnswer() :- Wrestled(\"Bruiser Brody\", show), show = \"WWE Raw\".\n.output Answer\n\n", "completions": [".decl Wrestled(Person:symbol, Show:symbol)\nWrestled(\"Bruiser Brody\", \"WWE Raw\").\n.decl Answer()\nAnswer() :- Wrestled(\"Bruiser Brody\", show), show = \"WWE Raw\".\n.output Answer\n\n"]}
{"id": 1186, "answer": true, "completion": ".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"dog\", \"mammal\").\nIs_a(\"cat\", \"mammal\").\nIs_a(\"bird\", \"mammal\").\nIs_a(\"snake\", \"mammal\").\nIs_a(\"frog\", \"amphibian\").\nIs_a(\"toad\", \"amphibian\").\nIs_a(\"salamander\", \"amphibian\").\nIs_a(\"newt\", \"amphibian\").\nIs_a(\"turtle\", \"reptile\").\nIs_a(\"lizard\", \"reptile\").\nIs_a(\"crocodile\", \"reptile\").\nIs_a(\"snake\", \"reptile\").\nIs_a(\"tortoise\", \"reptile\").\nIs_a(\"iguana\", \"reptile\").\nIs_a(\"chameleon\", \"reptile\").\nIs_a(\"cobra\", \"reptile\").\nIs_a(\"boa constrictor\", \"reptile\").\nIs_a(\"python\", \"reptile\").\nIs_a(\"komodo dragon\", \"reptile\").\nIs_a(\"frog\", \"frog\").\nIs_a(\"salamander\", \"salamander\").\nIs_a(\"newt\", \"newt\").\nIs_a(\"turtle\", \"turtle\").\nIs_a(\"lizard\", \"lizard\").\nIs_a(\"crocodile\", \"crocodile\").\nIs_a(\"snake\", \"snake\").\nIs_a(\"tortoise\", \"tortoise\").\nIs_a(\"iguana\", \"iguana\").\nIs_a(\"chameleon\", \"chameleon\").\nIs_a(\"cobra\", \"cobra\").\nIs_a(\"boa constrictor\", \"boa constrictor\").\nIs_a(\"python\", \"python\").\nIs_a(\"komodo dragon\", \"komodo dragon\").\n.decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"strigoi\", \"undead\").\nIs_a(\"vampire\", \"undead\").\nIs_a(\"ghoul\", \"undead\").\nIs_a(\"zombie\", \"undead\").\nIs_a(\"skeleton\", \"undead\").\nIs_a(\"ghost\", \"undead\").\n.decl Answer()\nAnswer() :- Is_a(\"strigoi\", class), Is_a(\"vampire\", class), Is_a(\"ghoul\", class), Is_a(\"zombie\", class), Is_a(\"skeleton\", class), Is_a(\"ghost\", class).\n.output Answer\n\n", "completions": [".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"dog\", \"mammal\").\nIs_a(\"cat\", \"mammal\").\nIs_a(\"bird\", \"mammal\").\nIs_a(\"snake\", \"mammal\").\nIs_a(\"frog\", \"amphibian\").\nIs_a(\"toad\", \"amphibian\").\nIs_a(\"salamander\", \"amphibian\").\nIs_a(\"newt\", \"amphibian\").\nIs_a(\"turtle\", \"reptile\").\nIs_a(\"lizard\", \"reptile\").\nIs_a(\"crocodile\", \"reptile\").\nIs_a(\"snake\", \"reptile\").\nIs_a(\"tortoise\", \"reptile\").\nIs_a(\"iguana\", \"reptile\").\nIs_a(\"chameleon\", \"reptile\").\nIs_a(\"cobra\", \"reptile\").\nIs_a(\"boa constrictor\", \"reptile\").\nIs_a(\"python\", \"reptile\").\nIs_a(\"komodo dragon\", \"reptile\").\nIs_a(\"frog\", \"frog\").\nIs_a(\"salamander\", \"salamander\").\nIs_a(\"newt\", \"newt\").\nIs_a(\"turtle\", \"turtle\").\nIs_a(\"lizard\", \"lizard\").\nIs_a(\"crocodile\", \"crocodile\").\nIs_a(\"snake\", \"snake\").\nIs_a(\"tortoise\", \"tortoise\").\nIs_a(\"iguana\", \"iguana\").\nIs_a(\"chameleon\", \"chameleon\").\nIs_a(\"cobra\", \"cobra\").\nIs_a(\"boa constrictor\", \"boa constrictor\").\nIs_a(\"python\", \"python\").\nIs_a(\"komodo dragon\", \"komodo dragon\").\n.decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"strigoi\", \"undead\").\nIs_a(\"vampire\", \"undead\").\nIs_a(\"ghoul\", \"undead\").\nIs_a(\"zombie\", \"undead\").\nIs_a(\"skeleton\", \"undead\").\nIs_a(\"ghost\", \"undead\").\n.decl Answer()\nAnswer() :- Is_a(\"strigoi\", class), Is_a(\"vampire\", class), Is_a(\"ghoul\", class), Is_a(\"zombie\", class), Is_a(\"skeleton\", class), Is_a(\"ghost\", class).\n.output Answer\n\n"]}
{"id": 1187, "answer": false, "completion": ".decl Has_race(Character:symbol, Race:symbol)\nHas_race(\"Depala\", \"Dwarf\").\nHas_race(\"Depala\", \"Human\").\nHas_race(\"Depala\", \"Night Elf\").\nHas_race(\"Depala\", \"Orc\").\nHas_race(\"Depala\", \"Tauren\").\nHas_race(\"Depala\", \"Troll\").\nHas_race(\"Depala\", \"Undead\").\n.decl Answer()\nAnswer() :- Has_race(\"Depala\", race).\n.output Answer\n\n", "completions": [".decl Has_race(Character:symbol, Race:symbol)\nHas_race(\"Depala\", \"Dwarf\").\nHas_race(\"Depala\", \"Human\").\nHas_race(\"Depala\", \"Night Elf\").\nHas_race(\"Depala\", \"Orc\").\nHas_race(\"Depala\", \"Tauren\").\nHas_race(\"Depala\", \"Troll\").\nHas_race(\"Depala\", \"Undead\").\n.decl Answer()\nAnswer() :- Has_race(\"Depala\", race).\n.output Answer\n\n"]}
{"id": 1188, "answer": false, "completion": ".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"twin1\", 1945).\nHas_birth_year(\"twin2\", 1945).\n.decl Answer()\nAnswer() :- Has_birth_year(\"twin1\", birth_year1), Has_birth_year(\"twin2\", birth_year2), birth_year1 = birth_year2.\n.output Answer\n\n", "completions": [".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"twin1\", 1945).\nHas_birth_year(\"twin2\", 1945).\n.decl Answer()\nAnswer() :- Has_birth_year(\"twin1\", birth_year1), Has_birth_year(\"twin2\", birth_year2), birth_year1 = birth_year2.\n.output Answer\n\n"]}
{"id": 1189, "answer": false, "completion": ".decl Plays(Person:symbol, Game:symbol)\nPlays(\"Tom Bosley\", \"The Last of Us\").\nPlays(\"Tom Bosley\", \"The Last of Us Remastered\").\nPlays(\"Tom Bosley\", \"The Last of Us Part II\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Four\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Five\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Six\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Seven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eight\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Nine\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Ten\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eleven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twelve\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Fourteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Fifteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Sixteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Seventeen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eighteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Nineteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Four\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Five\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Six\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Seven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Eight\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Nine\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Four\").\nPlays(\"Tom Bosley\", \"The", "completions": [".decl Plays(Person:symbol, Game:symbol)\nPlays(\"Tom Bosley\", \"The Last of Us\").\nPlays(\"Tom Bosley\", \"The Last of Us Remastered\").\nPlays(\"Tom Bosley\", \"The Last of Us Part II\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Four\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Five\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Six\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Seven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eight\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Nine\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Ten\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eleven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twelve\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Fourteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Fifteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Sixteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Seventeen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Eighteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Nineteen\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Four\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Five\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Six\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Seven\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Eight\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Twenty-Nine\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-One\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Two\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Three\").\nPlays(\"Tom Bosley\", \"The Last of Us: Left Behind - Episode Thirty-Four\").\nPlays(\"Tom Bosley\", \"The"]}
{"id": 1190, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Osmonds\", 7).\nHas_n_members(\"Jackson 5\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Jackson 5\", n_members1), Has_n_members(\"The Osmonds\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Osmonds\", 7).\nHas_n_members(\"Jackson 5\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Jackson 5\", n_members1), Has_n_members(\"The Osmonds\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1191, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"kaffir lime\", 0.5).\nHas_density(\"candle\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"kaffir lime\", density1), Has_density(\"candle\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"kaffir lime\", 0.5).\nHas_density(\"candle\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"kaffir lime\", density1), Has_density(\"candle\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1192, "answer": true, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Alcatraz Island\", 0.5).\nHas_area(\"football field\", 0.5).\n.decl Answer()\nAnswer() :- Has_area(\"Alcatraz Island\", area1), Has_area(\"football field\", area2), area1 >= area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Alcatraz Island\", 0.5).\nHas_area(\"football field\", 0.5).\n.decl Answer()\nAnswer() :- Has_area(\"Alcatraz Island\", area1), Has_area(\"football field\", area2), area1 >= area2.\n.output Answer\n\n"]}
{"id": 1193, "answer": true, "completion": ".decl Is_in_region(Animal:symbol, Region:symbol)\nIs_in_region(\"Iberian wolf\", \"Iberia\").\nIs_in_region(\"Iberian wolf\", \"Spain\").\nIs_in_region(\"Iberian wolf\", \"Portugal\").\nIs_in_region(\"Iberian wolf\", \"France\").\nIs_in_region(\"Iberian wolf\", \"Andorra\").\nIs_in_region(\"Iberian wolf\", \"Gibraltar\").\nIs_in_region(\"Iberian wolf\", \"Morocco\").\nIs_in_region(\"Iberian wolf\", \"Algeria\").\nIs_in_region(\"Iberian wolf\", \"Tunisia\").\nIs_in_region(\"Iberian wolf\", \"Libya\").\nIs_in_region(\"Iberian wolf\", \"Egypt\").\nIs_in_region(\"Iberian wolf\", \"Israel\").\nIs_in_region(\"Iberian wolf\", \"Lebanon\").\nIs_in_region(\"Iberian wolf\", \"Syria\").\nIs_in_region(\"Iberian wolf\", \"Jordan\").\nIs_in_region(\"Iberian wolf\", \"Iraq\").\nIs_in_region(\"Iberian wolf\", \"Saudi Arabia\").\nIs_in_region(\"Iberian wolf\", \"Yemen\").\nIs_in_region(\"Iberian wolf\", \"Oman\").\nIs_in_region(\"Iberian wolf\", \"United Arab Emirates\").\nIs_in_region(\"Iberian wolf\", \"Qatar\").\nIs_in_region(\"Iberian wolf\", \"Bahrain\").\nIs_in_region(\"Iberian wolf\", \"Kuwait\").\nIs_in_region(\"Iberian wolf\", \"Iraq\").\nIs_in_region(\"Iberian wolf\", \"Iran\").\nIs_in_region(\"Iberian wolf\", \"Afghanistan\").\nIs_in_region(\"Iberian wolf\", \"Pakistan\").\nIs_in_region(\"Iberian wolf\", \"India\").\nIs_in_region(\"Iberian wolf\", \"Nepal\").\nIs_in_region(\"Iberian wolf\", \"Sri Lanka\").\nIs_in_region(\"Iberian wolf\", \"Bangladesh\").\nIs_in_region(\"Iberian wolf\", \"Bhutan\").\nIs_in_region(\"Iberian wolf\", \"Mongolia\").\nIs_in_region(\"Iberian wolf\", \"China\").\nIs_in_region(\"Iberian wolf\", \"Korea\").\nIs_in_region(\"Iberian wolf\", \"Japan\").\nIs_in_region(\"Iberian wolf\", \"Taiwan\").\nIs_in_region(\"Iberian wolf\", \"Thailand\").\nIs_in_region(\"Iberian wolf\", \"Laos\").\nIs_in_region(\"Iberian wolf\", \"Cambodia\").\nIs_in_region(\"Iberian wolf\", \"Vietnam\").\nIs_in_region(\"Iberian wolf\", \"Malaysia\").\nIs_in_region(\"Iberian wolf\", \"Singapore\").\nIs_in_region(\"Iberian wolf\", \"Brunei\").\nIs_in_region(\"Iberian wolf\", \"Philippines\").\nIs_in_region(\"Iberian wolf\", \"Indonesia\").\nIs_in_region(\"Iberian wolf\", \"East Timor\").\nIs_in_region(\"Iberian wolf\", \"Australia\").\nIs_in_", "completions": [".decl Is_in_region(Animal:symbol, Region:symbol)\nIs_in_region(\"Iberian wolf\", \"Iberia\").\nIs_in_region(\"Iberian wolf\", \"Spain\").\nIs_in_region(\"Iberian wolf\", \"Portugal\").\nIs_in_region(\"Iberian wolf\", \"France\").\nIs_in_region(\"Iberian wolf\", \"Andorra\").\nIs_in_region(\"Iberian wolf\", \"Gibraltar\").\nIs_in_region(\"Iberian wolf\", \"Morocco\").\nIs_in_region(\"Iberian wolf\", \"Algeria\").\nIs_in_region(\"Iberian wolf\", \"Tunisia\").\nIs_in_region(\"Iberian wolf\", \"Libya\").\nIs_in_region(\"Iberian wolf\", \"Egypt\").\nIs_in_region(\"Iberian wolf\", \"Israel\").\nIs_in_region(\"Iberian wolf\", \"Lebanon\").\nIs_in_region(\"Iberian wolf\", \"Syria\").\nIs_in_region(\"Iberian wolf\", \"Jordan\").\nIs_in_region(\"Iberian wolf\", \"Iraq\").\nIs_in_region(\"Iberian wolf\", \"Saudi Arabia\").\nIs_in_region(\"Iberian wolf\", \"Yemen\").\nIs_in_region(\"Iberian wolf\", \"Oman\").\nIs_in_region(\"Iberian wolf\", \"United Arab Emirates\").\nIs_in_region(\"Iberian wolf\", \"Qatar\").\nIs_in_region(\"Iberian wolf\", \"Bahrain\").\nIs_in_region(\"Iberian wolf\", \"Kuwait\").\nIs_in_region(\"Iberian wolf\", \"Iraq\").\nIs_in_region(\"Iberian wolf\", \"Iran\").\nIs_in_region(\"Iberian wolf\", \"Afghanistan\").\nIs_in_region(\"Iberian wolf\", \"Pakistan\").\nIs_in_region(\"Iberian wolf\", \"India\").\nIs_in_region(\"Iberian wolf\", \"Nepal\").\nIs_in_region(\"Iberian wolf\", \"Sri Lanka\").\nIs_in_region(\"Iberian wolf\", \"Bangladesh\").\nIs_in_region(\"Iberian wolf\", \"Bhutan\").\nIs_in_region(\"Iberian wolf\", \"Mongolia\").\nIs_in_region(\"Iberian wolf\", \"China\").\nIs_in_region(\"Iberian wolf\", \"Korea\").\nIs_in_region(\"Iberian wolf\", \"Japan\").\nIs_in_region(\"Iberian wolf\", \"Taiwan\").\nIs_in_region(\"Iberian wolf\", \"Thailand\").\nIs_in_region(\"Iberian wolf\", \"Laos\").\nIs_in_region(\"Iberian wolf\", \"Cambodia\").\nIs_in_region(\"Iberian wolf\", \"Vietnam\").\nIs_in_region(\"Iberian wolf\", \"Malaysia\").\nIs_in_region(\"Iberian wolf\", \"Singapore\").\nIs_in_region(\"Iberian wolf\", \"Brunei\").\nIs_in_region(\"Iberian wolf\", \"Philippines\").\nIs_in_region(\"Iberian wolf\", \"Indonesia\").\nIs_in_region(\"Iberian wolf\", \"East Timor\").\nIs_in_region(\"Iberian wolf\", \"Australia\").\nIs_in_"]}
{"id": 1194, "answer": true, "completion": ".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"spider wasp\", 0.5).\nHas_strength(\"bullet ant\", 0.1).\n.decl Answer()\nAnswer() :- Has_strength(\"spider wasp\", strength1), Has_strength(\"bullet ant\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"spider wasp\", 0.5).\nHas_strength(\"bullet ant\", 0.1).\n.decl Answer()\nAnswer() :- Has_strength(\"spider wasp\", strength1), Has_strength(\"bullet ant\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1195, "answer": true, "completion": ".decl Has_title(Film:symbol, Title:symbol)\nHas_title(\"The Ten Commandments\", \"Exodus\").\nHas_title(\"The Ten Commandments\", \"Leviticus\").\nHas_title(\"The Ten Commandments\", \"Numbers\").\nHas_title(\"The Ten Commandments\", \"Deuteronomy\").\nHas_title(\"The Ten Commandments\", \"Joshua\").\nHas_title(\"The Ten Commandments\", \"Judges\").\nHas_title(\"The Ten Commandments\", \"I Samuel\").\nHas_title(\"The Ten Commandments\", \"II Samuel\").\nHas_title(\"The Ten Commandments\", \"I Kings\").\nHas_title(\"The Ten Commandments\", \"II Kings\").\nHas_title(\"The Ten Commandments\", \"Isaiah\").\nHas_title(\"The Ten Commandments\", \"Jeremiah\").\nHas_title(\"The Ten Commandments\", \"Ezekiel\").\nHas_title(\"The Ten Commandments\", \"Hosea\").\nHas_title(\"The Ten Commandments\", \"Joel\").\nHas_title(\"The Ten Commandments\", \"Amos\").\nHas_title(\"The Ten Commandments\", \"Obadiah\").\nHas_title(\"The Ten Commandments\", \"Jonah\").\nHas_title(\"The Ten Commandments\", \"Micah\").\nHas_title(\"The Ten Commandments\", \"Nahum\").\nHas_title(\"The Ten Commandments\", \"Habakkuk\").\nHas_title(\"The Ten Commandments\", \"Zephaniah\").\nHas_title(\"The Ten Commandments\", \"Haggai\").\nHas_title(\"The Ten Commandments\", \"Zechariah\").\nHas_title(\"The Ten Commandments\", \"Malachi\").\nHas_title(\"The Ten Commandments\", \"Matthew\").\nHas_title(\"The Ten Commandments\", \"Mark\").\nHas_title(\"The Ten Commandments\", \"Luke\").\nHas_title(\"The Ten Commandments\", \"John\").\nHas_title(\"The Ten Commandments\", \"Acts\").\nHas_title(\"The Ten Commandments\", \"Romans\").\nHas_title(\"The Ten Commandments\", \"I Corinthians\").\nHas_title(\"The Ten Commandments\", \"II Corinthians\").\nHas_title(\"The Ten Commandments\", \"Galatians\").\nHas_title(\"The Ten Commandments\", \"Ephesians\").\nHas_title(\"The Ten Commandments\", \"Philippians\").\nHas_title(\"The Ten Commandments\", \"Colossians\").\nHas_title(\"The Ten Commandments\", \"I Thessalonians\").\nHas_title(\"The Ten Commandments\", \"II Thessalonians\").\nHas_title(\"The Ten Commandments\", \"I Timothy\").\nHas_title(\"The Ten Commandments\", \"II Timothy\").\nHas_title(\"The Ten Commandments\", \"Titus\").\nHas_title(\"The Ten Commandments\", \"Philemon\").\nHas_title(\"The Ten Commandments\", \"Hebrews\").\nHas_title(\"The Ten Commandments\", \"James\").\nHas_title(\"The Ten Commandments\", \"I Peter\").\nHas_title(\"The Ten Commandments\", \"II Peter\").\nHas_title(\"The Ten Commandments\", \"I John\").\nHas_title(\"The Ten Commandments\", \"II John\").\nHas_title(\"The Ten Commandments\", \"III John\").\nHas_title(\"The Ten Commandments\", \"Jude\").\nHas_title(\"The Ten Commandments\", \"Revelation\").\n.decl Answer()\nAnswer() :- Has_title(\"The Ten Commandments\", title1), Has_title(\"The Ten Commandments\", title2), title1", "completions": [".decl Has_title(Film:symbol, Title:symbol)\nHas_title(\"The Ten Commandments\", \"Exodus\").\nHas_title(\"The Ten Commandments\", \"Leviticus\").\nHas_title(\"The Ten Commandments\", \"Numbers\").\nHas_title(\"The Ten Commandments\", \"Deuteronomy\").\nHas_title(\"The Ten Commandments\", \"Joshua\").\nHas_title(\"The Ten Commandments\", \"Judges\").\nHas_title(\"The Ten Commandments\", \"I Samuel\").\nHas_title(\"The Ten Commandments\", \"II Samuel\").\nHas_title(\"The Ten Commandments\", \"I Kings\").\nHas_title(\"The Ten Commandments\", \"II Kings\").\nHas_title(\"The Ten Commandments\", \"Isaiah\").\nHas_title(\"The Ten Commandments\", \"Jeremiah\").\nHas_title(\"The Ten Commandments\", \"Ezekiel\").\nHas_title(\"The Ten Commandments\", \"Hosea\").\nHas_title(\"The Ten Commandments\", \"Joel\").\nHas_title(\"The Ten Commandments\", \"Amos\").\nHas_title(\"The Ten Commandments\", \"Obadiah\").\nHas_title(\"The Ten Commandments\", \"Jonah\").\nHas_title(\"The Ten Commandments\", \"Micah\").\nHas_title(\"The Ten Commandments\", \"Nahum\").\nHas_title(\"The Ten Commandments\", \"Habakkuk\").\nHas_title(\"The Ten Commandments\", \"Zephaniah\").\nHas_title(\"The Ten Commandments\", \"Haggai\").\nHas_title(\"The Ten Commandments\", \"Zechariah\").\nHas_title(\"The Ten Commandments\", \"Malachi\").\nHas_title(\"The Ten Commandments\", \"Matthew\").\nHas_title(\"The Ten Commandments\", \"Mark\").\nHas_title(\"The Ten Commandments\", \"Luke\").\nHas_title(\"The Ten Commandments\", \"John\").\nHas_title(\"The Ten Commandments\", \"Acts\").\nHas_title(\"The Ten Commandments\", \"Romans\").\nHas_title(\"The Ten Commandments\", \"I Corinthians\").\nHas_title(\"The Ten Commandments\", \"II Corinthians\").\nHas_title(\"The Ten Commandments\", \"Galatians\").\nHas_title(\"The Ten Commandments\", \"Ephesians\").\nHas_title(\"The Ten Commandments\", \"Philippians\").\nHas_title(\"The Ten Commandments\", \"Colossians\").\nHas_title(\"The Ten Commandments\", \"I Thessalonians\").\nHas_title(\"The Ten Commandments\", \"II Thessalonians\").\nHas_title(\"The Ten Commandments\", \"I Timothy\").\nHas_title(\"The Ten Commandments\", \"II Timothy\").\nHas_title(\"The Ten Commandments\", \"Titus\").\nHas_title(\"The Ten Commandments\", \"Philemon\").\nHas_title(\"The Ten Commandments\", \"Hebrews\").\nHas_title(\"The Ten Commandments\", \"James\").\nHas_title(\"The Ten Commandments\", \"I Peter\").\nHas_title(\"The Ten Commandments\", \"II Peter\").\nHas_title(\"The Ten Commandments\", \"I John\").\nHas_title(\"The Ten Commandments\", \"II John\").\nHas_title(\"The Ten Commandments\", \"III John\").\nHas_title(\"The Ten Commandments\", \"Jude\").\nHas_title(\"The Ten Commandments\", \"Revelation\").\n.decl Answer()\nAnswer() :- Has_title(\"The Ten Commandments\", title1), Has_title(\"The Ten Commandments\", title2), title1"]}
{"id": 1196, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"pet owners\", n_members1), Has_n_members(\"pet owners\", n_members2), Has_n_members(\"pet owners\", n_members3), n_members1 > n_members2, n_members2 > n_members3.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pet owners\", 5).\nHas_n_members(\"pet owners\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"pet owners\", n_members1), Has_n_members(\"pet owners\", n_members2), Has_n_members(\"pet owners\", n_members3), n_members1 > n_members2, n_members2 > n_members3.\n.output Answer\n\n"]}
{"id": 1197, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"eclipse\", \"2009\").\nHappens_in_time(\"eclipse\", \"2020\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"eclipse\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"eclipse\", year1), Happens_every_n_years(\"eclipse\", n_years), year1 + n_years = 2020.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"eclipse\", \"2009\").\nHappens_in_time(\"eclipse\", \"2020\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"eclipse\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"eclipse\", year1), Happens_every_n_years(\"eclipse\", n_years), year1 + n_years = 2020.\n.output Answer\n\n"]}
{"id": 1198, "answer": false, "completion": ".decl Has_n_grammies(Artist:symbol, N_grammies:float)\nHas_n_grammies(\"Lil Wayne\", 6).\n.decl Answer()\nAnswer() :- Has_n_grammies(\"Lil Wayne\", n_grammies1), Has_n_grammies(\"Lil Wayne\", n_grammies2), n_grammies1 > 4*n_grammies2.\n.output Answer\n\n", "completions": [".decl Has_n_grammies(Artist:symbol, N_grammies:float)\nHas_n_grammies(\"Lil Wayne\", 6).\n.decl Answer()\nAnswer() :- Has_n_grammies(\"Lil Wayne\", n_grammies1), Has_n_grammies(\"Lil Wayne\", n_grammies2), n_grammies1 > 4*n_grammies2.\n.output Answer\n\n"]}
{"id": 1199, "answer": true, "completion": ".decl Has_preservation(Object:symbol, Preservation:symbol)\nHas_preservation(\"oysters\", \"canning\").\nHas_preservation(\"oysters\", \"freezing\").\n.decl Answer()\nAnswer() :- Has_preservation(\"oysters\", preservation), preservation \\= \"refrigeration\".\n.output Answer\n\n", "completions": [".decl Has_preservation(Object:symbol, Preservation:symbol)\nHas_preservation(\"oysters\", \"canning\").\nHas_preservation(\"oysters\", \"freezing\").\n.decl Answer()\nAnswer() :- Has_preservation(\"oysters\", preservation), preservation \\= \"refrigeration\".\n.output Answer\n\n"]}
{"id": 1200, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Kate Gosselin's household\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Bandy team\", 11).\n.decl Answer()\nAnswer() :- Has_n_members(\"Kate Gosselin's household\", n_members1), Has_n_members(\"Bandy team\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Kate Gosselin's household\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Bandy team\", 11).\n.decl Answer()\nAnswer() :- Has_n_members(\"Kate Gosselin's household\", n_members1), Has_n_members(\"Bandy team\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1201, "answer": false, "completion": ".decl Is_a(Animal:symbol, Group:symbol)\nIs_a(\"emu\", \"bird\").\nIs_a(\"bogan\", \"bird\").\nIs_a(\"bogan\", \"cow\").\n.decl Answer()\nAnswer() :- Is_a(\"emu\", group1), Is_a(\"bogan\", group2), group1 != group2.\n.output Answer\n\n", "completions": [".decl Is_a(Animal:symbol, Group:symbol)\nIs_a(\"emu\", \"bird\").\nIs_a(\"bogan\", \"bird\").\nIs_a(\"bogan\", \"cow\").\n.decl Answer()\nAnswer() :- Is_a(\"emu\", group1), Is_a(\"bogan\", group2), group1 != group2.\n.output Answer\n\n"]}
{"id": 1202, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Cuban revolution\", \"1959\").\nHappens_in_time(\"Cuban revolution\", \"1961\").\nHappens_in_time(\"Cuban revolution\", \"1962\").\nHappens_in_time(\"Cuban revolution\", \"1963\").\nHappens_in_time(\"Cuban revolution\", \"1964\").\nHappens_in_time(\"Cuban revolution\", \"1965\").\nHappens_in_time(\"Cuban revolution\", \"1966\").\nHappens_in_time(\"Cuban revolution\", \"1967\").\nHappens_in_time(\"Cuban revolution\", \"1968\").\nHappens_in_time(\"Cuban revolution\", \"1969\").\nHappens_in_time(\"Cuban revolution\", \"1970\").\nHappens_in_time(\"Cuban revolution\", \"1971\").\nHappens_in_time(\"Cuban revolution\", \"1972\").\nHappens_in_time(\"Cuban revolution\", \"1973\").\nHappens_in_time(\"Cuban revolution\", \"1974\").\nHappens_in_time(\"Cuban revolution\", \"1975\").\nHappens_in_time(\"Cuban revolution\", \"1976\").\nHappens_in_time(\"Cuban revolution\", \"1977\").\nHappens_in_time(\"Cuban revolution\", \"1978\").\nHappens_in_time(\"Cuban revolution\", \"1979\").\nHappens_in_time(\"Cuban revolution\", \"1980\").\nHappens_in_time(\"Cuban revolution\", \"1981\").\nHappens_in_time(\"Cuban revolution\", \"1982\").\nHappens_in_time(\"Cuban revolution\", \"1983\").\nHappens_in_time(\"Cuban revolution\", \"1984\").\nHappens_in_time(\"Cuban revolution\", \"1985\").\nHappens_in_time(\"Cuban revolution\", \"1986\").\nHappens_in_time(\"Cuban revolution\", \"1987\").\nHappens_in_time(\"Cuban revolution\", \"1988\").\nHappens_in_time(\"Cuban revolution\", \"1989\").\nHappens_in_time(\"Cuban revolution\", \"1990\").\nHappens_in_time(\"Cuban revolution\", \"1991\").\nHappens_in_time(\"Cuban revolution\", \"1992\").\nHappens_in_time(\"Cuban revolution\", \"1993\").\nHappens_in_time(\"Cuban revolution\", \"1994\").\nHappens_in_time(\"Cuban revolution\", \"1995\").\nHappens_in_time(\"Cuban revolution\", \"1996\").\nHappens_in_time(\"Cuban revolution\", \"1997\").\nHappens_in_time(\"Cuban revolution\", \"1998\").\nHappens_in_time(\"Cuban revolution\", \"1999\").\nHappens_in_time(\"Cuban revolution\", \"2000\").\nHappens_in_time(\"Cuban revolution\", \"2001\").\nHappens_in_time(\"Cuban revolution\", \"2002\").\nHappens_in_time(\"Cuban revolution\", \"2003\").\nHappens_in_time(\"Cuban revolution\", \"2004\").\nHappens_in_time(\"Cuban revolution\", \"2005\").\nHappens_in_time(\"Cuban revolution\", \"2006\").\nHappens_in_time(\"Cuban revolution\", \"2007\").\nHappens_in_time(\"Cub", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Cuban revolution\", \"1959\").\nHappens_in_time(\"Cuban revolution\", \"1961\").\nHappens_in_time(\"Cuban revolution\", \"1962\").\nHappens_in_time(\"Cuban revolution\", \"1963\").\nHappens_in_time(\"Cuban revolution\", \"1964\").\nHappens_in_time(\"Cuban revolution\", \"1965\").\nHappens_in_time(\"Cuban revolution\", \"1966\").\nHappens_in_time(\"Cuban revolution\", \"1967\").\nHappens_in_time(\"Cuban revolution\", \"1968\").\nHappens_in_time(\"Cuban revolution\", \"1969\").\nHappens_in_time(\"Cuban revolution\", \"1970\").\nHappens_in_time(\"Cuban revolution\", \"1971\").\nHappens_in_time(\"Cuban revolution\", \"1972\").\nHappens_in_time(\"Cuban revolution\", \"1973\").\nHappens_in_time(\"Cuban revolution\", \"1974\").\nHappens_in_time(\"Cuban revolution\", \"1975\").\nHappens_in_time(\"Cuban revolution\", \"1976\").\nHappens_in_time(\"Cuban revolution\", \"1977\").\nHappens_in_time(\"Cuban revolution\", \"1978\").\nHappens_in_time(\"Cuban revolution\", \"1979\").\nHappens_in_time(\"Cuban revolution\", \"1980\").\nHappens_in_time(\"Cuban revolution\", \"1981\").\nHappens_in_time(\"Cuban revolution\", \"1982\").\nHappens_in_time(\"Cuban revolution\", \"1983\").\nHappens_in_time(\"Cuban revolution\", \"1984\").\nHappens_in_time(\"Cuban revolution\", \"1985\").\nHappens_in_time(\"Cuban revolution\", \"1986\").\nHappens_in_time(\"Cuban revolution\", \"1987\").\nHappens_in_time(\"Cuban revolution\", \"1988\").\nHappens_in_time(\"Cuban revolution\", \"1989\").\nHappens_in_time(\"Cuban revolution\", \"1990\").\nHappens_in_time(\"Cuban revolution\", \"1991\").\nHappens_in_time(\"Cuban revolution\", \"1992\").\nHappens_in_time(\"Cuban revolution\", \"1993\").\nHappens_in_time(\"Cuban revolution\", \"1994\").\nHappens_in_time(\"Cuban revolution\", \"1995\").\nHappens_in_time(\"Cuban revolution\", \"1996\").\nHappens_in_time(\"Cuban revolution\", \"1997\").\nHappens_in_time(\"Cuban revolution\", \"1998\").\nHappens_in_time(\"Cuban revolution\", \"1999\").\nHappens_in_time(\"Cuban revolution\", \"2000\").\nHappens_in_time(\"Cuban revolution\", \"2001\").\nHappens_in_time(\"Cuban revolution\", \"2002\").\nHappens_in_time(\"Cuban revolution\", \"2003\").\nHappens_in_time(\"Cuban revolution\", \"2004\").\nHappens_in_time(\"Cuban revolution\", \"2005\").\nHappens_in_time(\"Cuban revolution\", \"2006\").\nHappens_in_time(\"Cuban revolution\", \"2007\").\nHappens_in_time(\"Cub"]}
{"id": 1203, "answer": false, "completion": ".decl Has_word(Text:symbol, Word:symbol)\nHas_word(\"Alice's Adventures in Wonderland\", \"tobacco\").\n.decl Has_word(Text:symbol, Word:symbol)\nHas_word(\"Alice's Adventures in Wonderland\", \"enjoyable\").\n.decl Answer()\nAnswer() :- Has_word(\"Alice's Adventures in Wonderland\", word1), Has_word(\"Alice's Adventures in Wonderland\", word2), word1 = word2.\n.output Answer\n\n", "completions": [".decl Has_word(Text:symbol, Word:symbol)\nHas_word(\"Alice's Adventures in Wonderland\", \"tobacco\").\n.decl Has_word(Text:symbol, Word:symbol)\nHas_word(\"Alice's Adventures in Wonderland\", \"enjoyable\").\n.decl Answer()\nAnswer() :- Has_word(\"Alice's Adventures in Wonderland\", word1), Has_word(\"Alice's Adventures in Wonderland\", word2), word1 = word2.\n.output Answer\n\n"]}
{"id": 1204, "answer": false, "completion": ".decl Has_side_effect(Drug:symbol, Side_effect:symbol)\nHas_side_effect(\"grapefruit\", \"allergies\").\nHas_side_effect(\"grapefruit\", \"choking\").\n.decl Has_side_effect(Drug:symbol, Side_effect:symbol)\nHas_side_effect(\"pear\", \"allergies\").\nHas_side_effect(\"pear\", \"choking\").\n.decl Answer()\nAnswer() :- Has_side_effect(\"grapefruit\", side_effect), Has_side_effect(\"pear\", side_effect).\n.output Answer\n\n", "completions": [".decl Has_side_effect(Drug:symbol, Side_effect:symbol)\nHas_side_effect(\"grapefruit\", \"allergies\").\nHas_side_effect(\"grapefruit\", \"choking\").\n.decl Has_side_effect(Drug:symbol, Side_effect:symbol)\nHas_side_effect(\"pear\", \"allergies\").\nHas_side_effect(\"pear\", \"choking\").\n.decl Answer()\nAnswer() :- Has_side_effect(\"grapefruit\", side_effect), Has_side_effect(\"pear\", side_effect).\n.output Answer\n\n"]}
{"id": 1205, "answer": true, "completion": ".decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"WCW headquarters\", \"Atlanta\").\nIs_in_city(\"WCW headquarters\", \"New York\").\nIs_in_city(\"WCW headquarters\", \"Washington\").\nIs_in_city(\"WCW headquarters\", \"Los Angeles\").\nIs_in_city(\"WCW headquarters\", \"Chicago\").\nIs_in_city(\"WCW headquarters\", \"Dallas\").\nIs_in_city(\"WCW headquarters\", \"San Francisco\").\nIs_in_city(\"WCW headquarters\", \"Seattle\").\nIs_in_city(\"WCW headquarters\", \"Philadelphia\").\nIs_in_city(\"WCW headquarters\", \"Boston\").\nIs_in_city(\"WCW headquarters\", \"Miami\").\nIs_in_city(\"WCW headquarters\", \"Orlando\").\nIs_in_city(\"WCW headquarters\", \"Portland\").\nIs_in_city(\"WCW headquarters\", \"Phoenix\").\nIs_in_city(\"WCW headquarters\", \"Denver\").\nIs_in_city(\"WCW headquarters\", \"Houston\").\nIs_in_city(\"WCW headquarters\", \"San Antonio\").\nIs_in_city(\"WCW headquarters\", \"Tampa\").\nIs_in_city(\"WCW headquarters\", \"St. Louis\").\nIs_in_city(\"WCW headquarters\", \"Baltimore\").\nIs_in_city(\"WCW headquarters\", \"Cleveland\").\nIs_in_city(\"WCW headquarters\", \"San Diego\").\nIs_in_city(\"WCW headquarters\", \"Kansas City\").\nIs_in_city(\"WCW headquarters\", \"Milwaukee\").\nIs_in_city(\"WCW headquarters\", \"Minneapolis\").\nIs_in_city(\"WCW headquarters\", \"Detroit\").\nIs_in_city(\"WCW headquarters\", \"New Orleans\").\nIs_in_city(\"WCW headquarters\", \"Buffalo\").\nIs_in_city(\"WCW headquarters\", \"Indianapolis\").\nIs_in_city(\"WCW headquarters\", \"Pittsburgh\").\nIs_in_city(\"WCW headquarters\", \"Charlotte\").\nIs_in_city(\"WCW headquarters\", \"Nashville\").\nIs_in_city(\"WCW headquarters\", \"Jacksonville\").\nIs_in_city(\"WCW headquarters\", \"Raleigh\").\nIs_in_city(\"WCW headquarters\", \"Cincinnati\").\nIs_in_city(\"WCW headquarters\", \"Toledo\").\nIs_in_city(\"WCW headquarters\", \"Newark\").\nIs_in_city(\"WCW headquarters\", \"Tulsa\").\nIs_in_city(\"WCW headquarters\", \"Wichita\").\nIs_in_city(\"WCW headquarters\", \"Albuquerque\").\nIs_in_city(\"WCW headquarters\", \"Oklahoma City\").\nIs_in_city(\"WCW headquarters\", \"Omaha\").\nIs_in_city(\"WCW headquarters\", \"Sioux Falls\").\nIs_in_city(\"WCW headquarters\", \"Wichita Falls\").\nIs_in_city(\"WCW headquarters\", \"Little Rock\").\nIs_in_city(\"WCW headquarters\", \"Jackson\").\nIs_in_city(\"WCW headquarters\", \"Baton Rouge\").\nIs_in_city(\"WCW headquarters\", \"New Orleans\").\nIs_in_city(\"WCW headquarters\", \"Tampa\").\nIs_in_city(\"WCW headquarters\", \"Louisville\").\nIs_in_city(\"WCW headquarters\", \"Lexington\").\nIs_in_city(\"WCW headquarters\", \"Knoxville\").\nIs_in_", "completions": [".decl Is_in_city(Place:symbol, City:symbol)\nIs_in_city(\"WCW headquarters\", \"Atlanta\").\nIs_in_city(\"WCW headquarters\", \"New York\").\nIs_in_city(\"WCW headquarters\", \"Washington\").\nIs_in_city(\"WCW headquarters\", \"Los Angeles\").\nIs_in_city(\"WCW headquarters\", \"Chicago\").\nIs_in_city(\"WCW headquarters\", \"Dallas\").\nIs_in_city(\"WCW headquarters\", \"San Francisco\").\nIs_in_city(\"WCW headquarters\", \"Seattle\").\nIs_in_city(\"WCW headquarters\", \"Philadelphia\").\nIs_in_city(\"WCW headquarters\", \"Boston\").\nIs_in_city(\"WCW headquarters\", \"Miami\").\nIs_in_city(\"WCW headquarters\", \"Orlando\").\nIs_in_city(\"WCW headquarters\", \"Portland\").\nIs_in_city(\"WCW headquarters\", \"Phoenix\").\nIs_in_city(\"WCW headquarters\", \"Denver\").\nIs_in_city(\"WCW headquarters\", \"Houston\").\nIs_in_city(\"WCW headquarters\", \"San Antonio\").\nIs_in_city(\"WCW headquarters\", \"Tampa\").\nIs_in_city(\"WCW headquarters\", \"St. Louis\").\nIs_in_city(\"WCW headquarters\", \"Baltimore\").\nIs_in_city(\"WCW headquarters\", \"Cleveland\").\nIs_in_city(\"WCW headquarters\", \"San Diego\").\nIs_in_city(\"WCW headquarters\", \"Kansas City\").\nIs_in_city(\"WCW headquarters\", \"Milwaukee\").\nIs_in_city(\"WCW headquarters\", \"Minneapolis\").\nIs_in_city(\"WCW headquarters\", \"Detroit\").\nIs_in_city(\"WCW headquarters\", \"New Orleans\").\nIs_in_city(\"WCW headquarters\", \"Buffalo\").\nIs_in_city(\"WCW headquarters\", \"Indianapolis\").\nIs_in_city(\"WCW headquarters\", \"Pittsburgh\").\nIs_in_city(\"WCW headquarters\", \"Charlotte\").\nIs_in_city(\"WCW headquarters\", \"Nashville\").\nIs_in_city(\"WCW headquarters\", \"Jacksonville\").\nIs_in_city(\"WCW headquarters\", \"Raleigh\").\nIs_in_city(\"WCW headquarters\", \"Cincinnati\").\nIs_in_city(\"WCW headquarters\", \"Toledo\").\nIs_in_city(\"WCW headquarters\", \"Newark\").\nIs_in_city(\"WCW headquarters\", \"Tulsa\").\nIs_in_city(\"WCW headquarters\", \"Wichita\").\nIs_in_city(\"WCW headquarters\", \"Albuquerque\").\nIs_in_city(\"WCW headquarters\", \"Oklahoma City\").\nIs_in_city(\"WCW headquarters\", \"Omaha\").\nIs_in_city(\"WCW headquarters\", \"Sioux Falls\").\nIs_in_city(\"WCW headquarters\", \"Wichita Falls\").\nIs_in_city(\"WCW headquarters\", \"Little Rock\").\nIs_in_city(\"WCW headquarters\", \"Jackson\").\nIs_in_city(\"WCW headquarters\", \"Baton Rouge\").\nIs_in_city(\"WCW headquarters\", \"New Orleans\").\nIs_in_city(\"WCW headquarters\", \"Tampa\").\nIs_in_city(\"WCW headquarters\", \"Louisville\").\nIs_in_city(\"WCW headquarters\", \"Lexington\").\nIs_in_city(\"WCW headquarters\", \"Knoxville\").\nIs_in_"]}
{"id": 1206, "answer": true, "completion": ".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"ammonia fighting cleaner\", \"clean\").\nHas_effect(\"pet owners\", \"clean\").\n.decl Answer()\nAnswer() :- Has_effect(\"ammonia fighting cleaner\", effect), Has_effect(\"pet owners\", effect).\n.output Answer\n\n", "completions": [".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"ammonia fighting cleaner\", \"clean\").\nHas_effect(\"pet owners\", \"clean\").\n.decl Answer()\nAnswer() :- Has_effect(\"ammonia fighting cleaner\", effect), Has_effect(\"pet owners\", effect).\n.output Answer\n\n"]}
{"id": 1207, "answer": false, "completion": ".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongol\", \"Mongolian\").\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongol\", \"Mongolian\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Mongolian\", \"Mongol\").\n.output Answer\n\n", "completions": [".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongol\", \"Mongolian\").\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongol\", \"Mongolian\").\n.decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mongolian\", \"Mongol\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Mongolian\", \"Mongol\").\n.output Answer\n\n"]}
{"id": 1208, "answer": true, "completion": ".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Holy Saturday\", \"April 19\").\n.decl Is_day_of_week(Day:symbol, Weekday:symbol)\nIs_day_of_week(\"April 19\", \"Saturday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Holy Saturday\", day), Is_day_of_week(day, weekday), weekday = \"Saturday\".\n.output Answer\n\n", "completions": [".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Holy Saturday\", \"April 19\").\n.decl Is_day_of_week(Day:symbol, Weekday:symbol)\nIs_day_of_week(\"April 19\", \"Saturday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Holy Saturday\", day), Is_day_of_week(day, weekday), weekday = \"Saturday\".\n.output Answer\n\n"]}
{"id": 1209, "answer": true, "completion": ".decl Planted(Event:symbol, Location:symbol)\nPlanted(\"CNES\", \"lunar surface\").\n.decl Answer()\nAnswer() :- Planted(\"CNES\", location).\n.output Answer\n\n", "completions": [".decl Planted(Event:symbol, Location:symbol)\nPlanted(\"CNES\", \"lunar surface\").\n.decl Answer()\nAnswer() :- Planted(\"CNES\", location).\n.output Answer\n\n"]}
{"id": 1210, "answer": true, "completion": ".decl Has_field(Person:symbol, Field:symbol)\nHas_field(\"Brad Peyton\", \"seismology\").\n.decl Answer()\nAnswer() :- Has_field(\"Brad Peyton\", field).\n.output Answer\n\n", "completions": [".decl Has_field(Person:symbol, Field:symbol)\nHas_field(\"Brad Peyton\", \"seismology\").\n.decl Answer()\nAnswer() :- Has_field(\"Brad Peyton\", field).\n.output Answer\n\n"]}
{"id": 1211, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Ku Klux Klan\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American Public University\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"Ku Klux Klan\", n_members1), Has_n_members(\"American Public University\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Ku Klux Klan\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American Public University\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"Ku Klux Klan\", n_members1), Has_n_members(\"American Public University\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1212, "answer": true, "completion": ".decl Last_n_episodes(Show:symbol, N_episodes:float)\nLast_n_episodes(\"Desperate Housewives\", 8).\nLast_n_episodes(\"Superman\", 2).\n.decl Answer()\nAnswer() :- Last_n_episodes(\"Desperate Housewives\", n_episodes1), Last_n_episodes(\"Superman\", n_episodes2), n_episodes1 >= 2*n_episodes2.\n.output Answer\n\n", "completions": [".decl Last_n_episodes(Show:symbol, N_episodes:float)\nLast_n_episodes(\"Desperate Housewives\", 8).\nLast_n_episodes(\"Superman\", 2).\n.decl Answer()\nAnswer() :- Last_n_episodes(\"Desperate Housewives\", n_episodes1), Last_n_episodes(\"Superman\", n_episodes2), n_episodes1 >= 2*n_episodes2.\n.output Answer\n\n"]}
{"id": 1213, "answer": false, "completion": ".decl Appears_in_cartoon(Character:symbol, Cartoon:symbol)\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Pluto\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck", "completions": [".decl Appears_in_cartoon(Character:symbol, Cartoon:symbol)\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Pluto\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Goofy\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck\").\nAppears_in_cartoon(\"Mickey Mouse\", \"Mickey Mouse and Donald Duck"]}
{"id": 1214, "answer": false, "completion": ".decl Has_math_score(Person:symbol, Score:float)\nHas_math_score(\"Terence Tao\", 100).\nHas_math_score(\"Eminem\", 50).\n.decl Answer()\nAnswer() :- Has_math_score(\"Terence Tao\", score1), Has_math_score(\"Eminem\", score2), score1 > score2.\n.output Answer\n\n", "completions": [".decl Has_math_score(Person:symbol, Score:float)\nHas_math_score(\"Terence Tao\", 100).\nHas_math_score(\"Eminem\", 50).\n.decl Answer()\nAnswer() :- Has_math_score(\"Terence Tao\", score1), Has_math_score(\"Eminem\", score2), score1 > score2.\n.output Answer\n\n"]}
{"id": 1215, "answer": false, "completion": ".decl Associates(Company:symbol, County:symbol)\nAssociates(\"Disney\", \"Los Angeles County\").\n.decl Answer()\nAnswer() :- Associates(\"Disney\", county).\n.output Answer\n\n", "completions": [".decl Associates(Company:symbol, County:symbol)\nAssociates(\"Disney\", \"Los Angeles County\").\n.decl Answer()\nAnswer() :- Associates(\"Disney\", county).\n.output Answer\n\n"]}
{"id": 1216, "answer": false, "completion": ".decl Has_comma(Religious_book:symbol)\nHas_comma(\"Bible\").\nHas_comma(\"Koran\").\n.decl Answer()\nAnswer() :- Has_comma(\"Bible\"), Has_comma(\"Koran\").\n.output Answer\n\n", "completions": [".decl Has_comma(Religious_book:symbol)\nHas_comma(\"Bible\").\nHas_comma(\"Koran\").\n.decl Answer()\nAnswer() :- Has_comma(\"Bible\"), Has_comma(\"Koran\").\n.output Answer\n\n"]}
{"id": 1217, "answer": false, "completion": ".decl Has_allergen(Food:symbol, Allergen:symbol)\nHas_allergen(\"spaghetti\", \"gluten\").\n.decl Has_allergy(Person:symbol, Allergy:symbol)\nHas_allergy(\"Celiac sufferer\", \"gluten\").\n.decl Answer()\nAnswer() :- Has_allergen(\"spaghetti\", allergen), Has_allergy(\"Celiac sufferer\", allergy), allergen = allergy.\n.output Answer\n\n", "completions": [".decl Has_allergen(Food:symbol, Allergen:symbol)\nHas_allergen(\"spaghetti\", \"gluten\").\n.decl Has_allergy(Person:symbol, Allergy:symbol)\nHas_allergy(\"Celiac sufferer\", \"gluten\").\n.decl Answer()\nAnswer() :- Has_allergen(\"spaghetti\", allergen), Has_allergy(\"Celiac sufferer\", allergy), allergen = allergy.\n.output Answer\n\n"]}
{"id": 1218, "answer": false, "completion": ".decl Has_animal_product(Food:symbol, Animal_product:symbol)\nHas_animal_product(\"BLT\", \"bacon\").\nHas_animal_product(\"BLT\", \"ham\").\n.decl Has_animal(Animal_product:symbol, Animal:symbol)\nHas_animal(\"bacon\", \"pig\").\nHas_animal(\"ham\", \"pig\").\n.decl Answer()\nAnswer() :- Has_animal_product(\"BLT\", animal_product), Has_animal(animal_product, animal), animal == \"pig\".\n.output Answer\n\n", "completions": [".decl Has_animal_product(Food:symbol, Animal_product:symbol)\nHas_animal_product(\"BLT\", \"bacon\").\nHas_animal_product(\"BLT\", \"ham\").\n.decl Has_animal(Animal_product:symbol, Animal:symbol)\nHas_animal(\"bacon\", \"pig\").\nHas_animal(\"ham\", \"pig\").\n.decl Answer()\nAnswer() :- Has_animal_product(\"BLT\", animal_product), Has_animal(animal_product, animal), animal == \"pig\".\n.output Answer\n\n"]}
{"id": 1219, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"camel\", 3).\nHas_size(\"dog house\", 2).\n.decl Answer()\nAnswer() :- Has_size(\"camel\", size1), Has_size(\"dog house\", size2), size1 <= size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"camel\", 3).\nHas_size(\"dog house\", 2).\n.decl Answer()\nAnswer() :- Has_size(\"camel\", size1), Has_size(\"dog house\", size2), size1 <= size2.\n.output Answer\n\n"]}
{"id": 1220, "answer": false, "completion": ".decl Has_hair(Object:symbol)\nHas_hair(\"skeleton\").\n.decl Answer()\nAnswer() :- Has_hair(\"skeleton\").\n.output Answer\n\n", "completions": [".decl Has_hair(Object:symbol)\nHas_hair(\"skeleton\").\n.decl Answer()\nAnswer() :- Has_hair(\"skeleton\").\n.output Answer\n\n"]}
{"id": 1221, "answer": false, "completion": ".decl Is_on_street(Animal:symbol, Street:symbol)\nIs_on_street(\"warthog\", \"Broadway\").\n.decl Answer()\nAnswer() :- Is_on_street(\"warthog\", street).\n.output Answer\n\n", "completions": [".decl Is_on_street(Animal:symbol, Street:symbol)\nIs_on_street(\"warthog\", \"Broadway\").\n.decl Answer()\nAnswer() :- Is_on_street(\"warthog\", street).\n.output Answer\n\n"]}
{"id": 1222, "answer": true, "completion": ".decl Belongs_to_group(Person:symbol, Group:symbol)\nBelongs_to_group(\"Opal Tometi\", \"Ku Klux Klan\").\n.decl Answer()\nAnswer() :- Belongs_to_group(\"Opal Tometi\", group).\n.output Answer\n\n", "completions": [".decl Belongs_to_group(Person:symbol, Group:symbol)\nBelongs_to_group(\"Opal Tometi\", \"Ku Klux Klan\").\n.decl Answer()\nAnswer() :- Belongs_to_group(\"Opal Tometi\", group).\n.output Answer\n\n"]}
{"id": 1223, "answer": true, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"cory catfish\", \"carp\").\nEats(\"cory catfish\", \"guppy\").\nEats(\"cory catfish\", \"goldfish\").\nEats(\"cory catfish\", \"minnow\").\nEats(\"cory catfish\", \"platy\").\nEats(\"cory catfish\", \"shark\").\nEats(\"cory catfish\", \"snail\").\nEats(\"cory catfish\", \"tetra\").\nEats(\"cory catfish\", \"tilapia\").\nEats(\"cory catfish\", \"trout\").\nEats(\"cory catfish\", \"whitefish\").\nEats(\"cory catfish\", \"zebrafish\").\nEats(\"carp\", \"cory catfish\").\nEats(\"guppy\", \"cory catfish\").\nEats(\"goldfish\", \"cory catfish\").\nEats(\"minnow\", \"cory catfish\").\nEats(\"platy\", \"cory catfish\").\nEats(\"shark\", \"cory catfish\").\nEats(\"snail\", \"cory catfish\").\nEats(\"tetra\", \"cory catfish\").\nEats(\"tilapia\", \"cory catfish\").\nEats(\"trout\", \"cory catfish\").\nEats(\"whitefish\", \"cory catfish\").\nEats(\"zebrafish\", \"cory catfish\").\n.decl Answer()\nAnswer() :- Eats(\"cory catfish\", animal1), Eats(animal1, animal2), animal1 != animal2.\n.output Answer\n\n", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"cory catfish\", \"carp\").\nEats(\"cory catfish\", \"guppy\").\nEats(\"cory catfish\", \"goldfish\").\nEats(\"cory catfish\", \"minnow\").\nEats(\"cory catfish\", \"platy\").\nEats(\"cory catfish\", \"shark\").\nEats(\"cory catfish\", \"snail\").\nEats(\"cory catfish\", \"tetra\").\nEats(\"cory catfish\", \"tilapia\").\nEats(\"cory catfish\", \"trout\").\nEats(\"cory catfish\", \"whitefish\").\nEats(\"cory catfish\", \"zebrafish\").\nEats(\"carp\", \"cory catfish\").\nEats(\"guppy\", \"cory catfish\").\nEats(\"goldfish\", \"cory catfish\").\nEats(\"minnow\", \"cory catfish\").\nEats(\"platy\", \"cory catfish\").\nEats(\"shark\", \"cory catfish\").\nEats(\"snail\", \"cory catfish\").\nEats(\"tetra\", \"cory catfish\").\nEats(\"tilapia\", \"cory catfish\").\nEats(\"trout\", \"cory catfish\").\nEats(\"whitefish\", \"cory catfish\").\nEats(\"zebrafish\", \"cory catfish\").\n.decl Answer()\nAnswer() :- Eats(\"cory catfish\", animal1), Eats(animal1, animal2), animal1 != animal2.\n.output Answer\n\n"]}
{"id": 1224, "answer": true, "completion": ".decl Has_vitamin(Person:symbol, Vitamin:symbol)\nHas_vitamin(\"John Muir\", \"vitamin D\").\n.decl Has_deficiency(Person:symbol, Deficiency:symbol)\nHas_deficiency(\"John Muir\", \"vitamin D deficiency\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"John Muir\", vitamin), Has_deficiency(\"John Muir\", deficiency), vitamin != deficiency.\n.output Answer\n\n", "completions": [".decl Has_vitamin(Person:symbol, Vitamin:symbol)\nHas_vitamin(\"John Muir\", \"vitamin D\").\n.decl Has_deficiency(Person:symbol, Deficiency:symbol)\nHas_deficiency(\"John Muir\", \"vitamin D deficiency\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"John Muir\", vitamin), Has_deficiency(\"John Muir\", deficiency), vitamin != deficiency.\n.output Answer\n\n"]}
{"id": 1225, "answer": false, "completion": ".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Orthodox Presbyterian\", \"Presbyterian\").\nHas_religion(\"judge\", \"Presbyterian\").\n.decl Answer()\nAnswer() :- Has_religion(\"Orthodox Presbyterian\", religion), Has_religion(\"judge\", religion).\n.output Answer\n\n", "completions": [".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Orthodox Presbyterian\", \"Presbyterian\").\nHas_religion(\"judge\", \"Presbyterian\").\n.decl Answer()\nAnswer() :- Has_religion(\"Orthodox Presbyterian\", religion), Has_religion(\"judge\", religion).\n.output Answer\n\n"]}
{"id": 1226, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"furniture\", \"IKEA\").\nHas_name(\"meatballs\", \"IKEA\").\n.decl Answer()\nAnswer() :- Has_name(\"furniture\", name1), Has_name(\"meatballs\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"furniture\", \"IKEA\").\nHas_name(\"meatballs\", \"IKEA\").\n.decl Answer()\nAnswer() :- Has_name(\"furniture\", name1), Has_name(\"meatballs\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 1227, "answer": true, "completion": ".decl Is_produced_by(Product:symbol, Producer:symbol)\nIs_produced_by(\"chaff\", \"hydropower\").\n.decl Is_produced_by(Product:symbol, Producer:symbol)\nIs_produced_by(\"chaff\", \"wind\").\n.decl Answer()\nAnswer() :- Is_produced_by(\"chaff\", producer).\n.output Answer\n\n", "completions": [".decl Is_produced_by(Product:symbol, Producer:symbol)\nIs_produced_by(\"chaff\", \"hydropower\").\n.decl Is_produced_by(Product:symbol, Producer:symbol)\nIs_produced_by(\"chaff\", \"wind\").\n.decl Answer()\nAnswer() :- Is_produced_by(\"chaff\", producer).\n.output Answer\n\n"]}
{"id": 1228, "answer": false, "completion": ".decl Has_art(Show:symbol, Art:symbol)\nHas_art(\"Family Guy\", \"Family Guy\").\nHas_art(\"American Dad\", \"American Dad\").\n.decl Answer()\nAnswer() :- Has_art(\"Family Guy\", art1), Has_art(\"American Dad\", art2), art1 = art2.\n.output Answer\n\n", "completions": [".decl Has_art(Show:symbol, Art:symbol)\nHas_art(\"Family Guy\", \"Family Guy\").\nHas_art(\"American Dad\", \"American Dad\").\n.decl Answer()\nAnswer() :- Has_art(\"Family Guy\", art1), Has_art(\"American Dad\", art2), art1 = art2.\n.output Answer\n\n"]}
{"id": 1229, "answer": true, "completion": ".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"toast\", \"bread\").\nHas_ingredient(\"toast\", \"butter\").\nHas_ingredient(\"vegan\", \"vegetarian\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"toast\", ingredient), Has_ingredient(\"vegan\", diet), ingredient != \"butter\".\n.output Answer\n\n", "completions": [".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"toast\", \"bread\").\nHas_ingredient(\"toast\", \"butter\").\nHas_ingredient(\"vegan\", \"vegetarian\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"toast\", ingredient), Has_ingredient(\"vegan\", diet), ingredient != \"butter\".\n.output Answer\n\n"]}
{"id": 1230, "answer": true, "completion": ".decl Has_operating_system(Computer:symbol, Operating_system:symbol)\nHas_operating_system(\"Macbook\", \"Mac OS X\").\nHas_operating_system(\"Macbook\", \"Ubuntu\").\nHas_operating_system(\"Macbook Air\", \"Mac OS X\").\nHas_operating_system(\"Macbook Air\", \"Ubuntu\").\nHas_operating_system(\"Macbook Pro\", \"Mac OS X\").\nHas_operating_system(\"Macbook Pro\", \"Ubuntu\").\nHas_operating_system(\"iMac\", \"Mac OS X\").\nHas_operating_system(\"iMac\", \"Ubuntu\").\nHas_operating_system(\"Mac Pro\", \"Mac OS X\").\nHas_operating_system(\"Mac Pro\", \"Ubuntu\").\nHas_operating_system(\"Mac mini\", \"Mac OS X\").\nHas_operating_system(\"Mac mini\", \"Ubuntu\").\nHas_operating_system(\"Power Mac G5\", \"Mac OS X\").\nHas_operating_system(\"Power Mac G5\", \"Ubuntu\").\n.decl Answer()\nAnswer() :- Has_operating_system(\"Macbook\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Macbook Air\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Macbook Pro\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"iMac\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Mac Pro\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Mac mini\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Power Mac G5\", \"Ubuntu\").\n.output Answer\n\n", "completions": [".decl Has_operating_system(Computer:symbol, Operating_system:symbol)\nHas_operating_system(\"Macbook\", \"Mac OS X\").\nHas_operating_system(\"Macbook\", \"Ubuntu\").\nHas_operating_system(\"Macbook Air\", \"Mac OS X\").\nHas_operating_system(\"Macbook Air\", \"Ubuntu\").\nHas_operating_system(\"Macbook Pro\", \"Mac OS X\").\nHas_operating_system(\"Macbook Pro\", \"Ubuntu\").\nHas_operating_system(\"iMac\", \"Mac OS X\").\nHas_operating_system(\"iMac\", \"Ubuntu\").\nHas_operating_system(\"Mac Pro\", \"Mac OS X\").\nHas_operating_system(\"Mac Pro\", \"Ubuntu\").\nHas_operating_system(\"Mac mini\", \"Mac OS X\").\nHas_operating_system(\"Mac mini\", \"Ubuntu\").\nHas_operating_system(\"Power Mac G5\", \"Mac OS X\").\nHas_operating_system(\"Power Mac G5\", \"Ubuntu\").\n.decl Answer()\nAnswer() :- Has_operating_system(\"Macbook\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Macbook Air\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Macbook Pro\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"iMac\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Mac Pro\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Mac mini\", \"Ubuntu\").\nAnswer() :- Has_operating_system(\"Power Mac G5\", \"Ubuntu\").\n.output Answer\n\n"]}
{"id": 1231, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Common warthog\", 0.5).\nHas_density(\"greenhouse\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"Common warthog\", density1), Has_density(\"greenhouse\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Common warthog\", 0.5).\nHas_density(\"greenhouse\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"Common warthog\", density1), Has_density(\"greenhouse\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1232, "answer": false, "completion": ".decl Has_bulk_modulus(Object:symbol, Bulk_modulus:float)\nHas_bulk_modulus(\"bromine\", 0.1).\nHas_bulk_modulus(\"bulk carrier\", 0.1).\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"bromine\", 0).\nHas_temperature(\"bulk carrier\", 0).\n.decl Answer()\nAnswer() :- Has_bulk_modulus(\"bulk carrier\", bulk_modulus), Has_bulk_modulus(\"bromine\", bulk_modulus), Has_temperature(\"bromine\", temperature), Has_temperature(\"bulk carrier\", temperature), temperature == 0.\n.output Answer\n\n", "completions": [".decl Has_bulk_modulus(Object:symbol, Bulk_modulus:float)\nHas_bulk_modulus(\"bromine\", 0.1).\nHas_bulk_modulus(\"bulk carrier\", 0.1).\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"bromine\", 0).\nHas_temperature(\"bulk carrier\", 0).\n.decl Answer()\nAnswer() :- Has_bulk_modulus(\"bulk carrier\", bulk_modulus), Has_bulk_modulus(\"bromine\", bulk_modulus), Has_temperature(\"bromine\", temperature), Has_temperature(\"bulk carrier\", temperature), temperature == 0.\n.output Answer\n\n"]}
{"id": 1233, "answer": false, "completion": ".decl Is_xenophobic(Citizen:symbol)\nIs_xenophobic(\"Swiss\").\n.decl Is_poor(Country:symbol)\nIs_poor(\"Switzerland\").\n.decl Answer()\nAnswer() :- Is_xenophobic(citizen), Is_poor(country), citizen = country.\n.output Answer\n\n", "completions": [".decl Is_xenophobic(Citizen:symbol)\nIs_xenophobic(\"Swiss\").\n.decl Is_poor(Country:symbol)\nIs_poor(\"Switzerland\").\n.decl Answer()\nAnswer() :- Is_xenophobic(citizen), Is_poor(country), citizen = country.\n.output Answer\n\n"]}
{"id": 1234, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"United Airlines flight\", \"January\").\nHappens_in_time(\"United Airlines flight\", \"February\").\nHappens_in_time(\"United Airlines flight\", \"March\").\nHappens_in_time(\"United Airlines flight\", \"April\").\nHappens_in_time(\"United Airlines flight\", \"May\").\nHappens_in_time(\"United Airlines flight\", \"June\").\nHappens_in_time(\"United Airlines flight\", \"July\").\nHappens_in_time(\"United Airlines flight\", \"August\").\nHappens_in_time(\"United Airlines flight\", \"September\").\nHappens_in_time(\"United Airlines flight\", \"October\").\nHappens_in_time(\"United Airlines flight\", \"November\").\nHappens_in_time(\"United Airlines flight\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"tearjerker\", 6).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"tearjerker\", n_months), Happens_in_time(\"United Airlines flight\", month), n_months <= month.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"United Airlines flight\", \"January\").\nHappens_in_time(\"United Airlines flight\", \"February\").\nHappens_in_time(\"United Airlines flight\", \"March\").\nHappens_in_time(\"United Airlines flight\", \"April\").\nHappens_in_time(\"United Airlines flight\", \"May\").\nHappens_in_time(\"United Airlines flight\", \"June\").\nHappens_in_time(\"United Airlines flight\", \"July\").\nHappens_in_time(\"United Airlines flight\", \"August\").\nHappens_in_time(\"United Airlines flight\", \"September\").\nHappens_in_time(\"United Airlines flight\", \"October\").\nHappens_in_time(\"United Airlines flight\", \"November\").\nHappens_in_time(\"United Airlines flight\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"tearjerker\", 6).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"tearjerker\", n_months), Happens_in_time(\"United Airlines flight\", month), n_months <= month.\n.output Answer\n\n"]}
{"id": 1235, "answer": false, "completion": ".decl Buried_at(Person:symbol, Church:symbol)\nBuried_at(\"Isaac Newton\", \"St. Michael's Church\").\nBuried_at(\"Charles Dickens\", \"St. Michael's Church\").\n.decl Answer()\nAnswer() :- Buried_at(\"Isaac Newton\", church), Buried_at(\"Charles Dickens\", church).\n.output Answer\n\n", "completions": [".decl Buried_at(Person:symbol, Church:symbol)\nBuried_at(\"Isaac Newton\", \"St. Michael's Church\").\nBuried_at(\"Charles Dickens\", \"St. Michael's Church\").\n.decl Answer()\nAnswer() :- Buried_at(\"Isaac Newton\", church), Buried_at(\"Charles Dickens\", church).\n.output Answer\n\n"]}
{"id": 1236, "answer": true, "completion": ".decl Has_precipitation(Location:symbol, Precipitation:float)\nHas_precipitation(\"Snowdon\", 0.5).\n.decl Has_height(Location:symbol, Height:float)\nHas_height(\"Snowdon\", 10).\n.decl Answer()\nAnswer() :- Has_precipitation(\"Snowdon\", precipitation), Has_height(\"Snowdon\", height), precipitation > height.\n.output Answer\n\n", "completions": [".decl Has_precipitation(Location:symbol, Precipitation:float)\nHas_precipitation(\"Snowdon\", 0.5).\n.decl Has_height(Location:symbol, Height:float)\nHas_height(\"Snowdon\", 10).\n.decl Answer()\nAnswer() :- Has_precipitation(\"Snowdon\", precipitation), Has_height(\"Snowdon\", height), precipitation > height.\n.output Answer\n\n"]}
{"id": 1237, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thanksgiving\", \"November\").\nHappens_in_time(\"Menthol\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thanksgiving\", month), Happens_in_time(\"Menthol\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thanksgiving\", \"November\").\nHappens_in_time(\"Menthol\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thanksgiving\", month), Happens_in_time(\"Menthol\", month).\n.output Answer\n\n"]}
{"id": 1238, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"jackfruit\", 0.5).\nHas_density(\"head\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"jackfruit\", density1), Has_density(\"head\", density2), density1 > density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"jackfruit\", 0.5).\nHas_density(\"head\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"jackfruit\", density1), Has_density(\"head\", density2), density1 > density2.\n.output Answer\n\n\n"]}
{"id": 1239, "answer": false, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"honey badger\", 0.5).\nHas_volume(\"oven\", 0.5).\n.decl Answer()\nAnswer() :- Has_volume(\"honey badger\", volume1), Has_volume(\"oven\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"honey badger\", 0.5).\nHas_volume(\"oven\", 0.5).\n.decl Answer()\nAnswer() :- Has_volume(\"honey badger\", volume1), Has_volume(\"oven\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 1240, "answer": false, "completion": ".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"winter\", \"winter\").\nHappens_in_season(\"winter\", \"spring\").\nHappens_in_season(\"winter\", \"summer\").\nHappens_in_season(\"winter\", \"fall\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Phineas and Ferb\", \"December\").\nHappens_in_time(\"Phineas and Ferb\", \"January\").\nHappens_in_time(\"Phineas and Ferb\", \"February\").\nHappens_in_time(\"Phineas and Ferb\", \"March\").\nHappens_in_time(\"Phineas and Ferb\", \"April\").\nHappens_in_time(\"Phineas and Ferb\", \"May\").\nHappens_in_time(\"Phineas and Ferb\", \"June\").\nHappens_in_time(\"Phineas and Ferb\", \"July\").\nHappens_in_time(\"Phineas and Ferb\", \"August\").\nHappens_in_time(\"Phineas and Ferb\", \"September\").\nHappens_in_time(\"Phineas and Ferb\", \"October\").\nHappens_in_time(\"Phineas and Ferb\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"winter\", season), Happens_in_time(\"Phineas and Ferb\", time), Happens_in_season(time, season).\n.output Answer\n\n", "completions": [".decl Happens_in_season(Event:symbol, Season:symbol)\nHappens_in_season(\"winter\", \"winter\").\nHappens_in_season(\"winter\", \"spring\").\nHappens_in_season(\"winter\", \"summer\").\nHappens_in_season(\"winter\", \"fall\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Phineas and Ferb\", \"December\").\nHappens_in_time(\"Phineas and Ferb\", \"January\").\nHappens_in_time(\"Phineas and Ferb\", \"February\").\nHappens_in_time(\"Phineas and Ferb\", \"March\").\nHappens_in_time(\"Phineas and Ferb\", \"April\").\nHappens_in_time(\"Phineas and Ferb\", \"May\").\nHappens_in_time(\"Phineas and Ferb\", \"June\").\nHappens_in_time(\"Phineas and Ferb\", \"July\").\nHappens_in_time(\"Phineas and Ferb\", \"August\").\nHappens_in_time(\"Phineas and Ferb\", \"September\").\nHappens_in_time(\"Phineas and Ferb\", \"October\").\nHappens_in_time(\"Phineas and Ferb\", \"November\").\n.decl Answer()\nAnswer() :- Happens_in_season(\"winter\", season), Happens_in_time(\"Phineas and Ferb\", time), Happens_in_season(time, season).\n.output Answer\n\n"]}
{"id": 1241, "answer": true, "completion": ".decl Has_vitamin(Pirate:symbol, Vitamin:symbol)\nHas_vitamin(\"Blackbeard\", \"vitamin C\").\nHas_vitamin(\"Blackbeard\", \"vitamin D\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"Blackbeard\", vitamin).\n.output Answer\n\n", "completions": [".decl Has_vitamin(Pirate:symbol, Vitamin:symbol)\nHas_vitamin(\"Blackbeard\", \"vitamin C\").\nHas_vitamin(\"Blackbeard\", \"vitamin D\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"Blackbeard\", vitamin).\n.output Answer\n\n"]}
{"id": 1242, "answer": false, "completion": ".decl Named_by(Place:symbol, Explorer:symbol)\nNamed_by(\"Saint Vincent and the Grenadines\", \"Christopher Columbus\").\nNamed_by(\"Saint Vincent and the Grenadines\", \"Giovanni da Pian del Carpine\").\n.decl Answer()\nAnswer() :- Named_by(\"Saint Vincent and the Grenadines\", explorer).\n.output Answer\n\n", "completions": [".decl Named_by(Place:symbol, Explorer:symbol)\nNamed_by(\"Saint Vincent and the Grenadines\", \"Christopher Columbus\").\nNamed_by(\"Saint Vincent and the Grenadines\", \"Giovanni da Pian del Carpine\").\n.decl Answer()\nAnswer() :- Named_by(\"Saint Vincent and the Grenadines\", explorer).\n.output Answer\n\n"]}
{"id": 1243, "answer": false, "completion": ".decl Has_slang(Movie:symbol, Slang:symbol)\nHas_slang(\"Psycho\", \"OMG\").\nHas_slang(\"Psycho\", \"LOL\").\nHas_slang(\"Psycho\", \"WTF\").\nHas_slang(\"Psycho\", \"FTW\").\nHas_slang(\"Psycho\", \"OMGWTF\").\n.decl Answer()\nAnswer() :- Has_slang(\"Psycho\", slang), Has_slang(\"Psycho\", slang2), slang != slang2.\n.output Answer\n\n", "completions": [".decl Has_slang(Movie:symbol, Slang:symbol)\nHas_slang(\"Psycho\", \"OMG\").\nHas_slang(\"Psycho\", \"LOL\").\nHas_slang(\"Psycho\", \"WTF\").\nHas_slang(\"Psycho\", \"FTW\").\nHas_slang(\"Psycho\", \"OMGWTF\").\n.decl Answer()\nAnswer() :- Has_slang(\"Psycho\", slang), Has_slang(\"Psycho\", slang2), slang != slang2.\n.output Answer\n\n"]}
{"id": 1244, "answer": false, "completion": ".decl Supports(Party:symbol, Welfare:symbol)\nSupports(\"Republican\", \"no\").\nSupports(\"Republican\", \"yes\").\nSupports(\"Democratic\", \"no\").\nSupports(\"Democratic\", \"yes\").\n.decl Answer()\nAnswer() :- Supports(\"Republican\", welfare).\n.output Answer\n\n", "completions": [".decl Supports(Party:symbol, Welfare:symbol)\nSupports(\"Republican\", \"no\").\nSupports(\"Republican\", \"yes\").\nSupports(\"Democratic\", \"no\").\nSupports(\"Democratic\", \"yes\").\n.decl Answer()\nAnswer() :- Supports(\"Republican\", welfare).\n.output Answer\n\n"]}
{"id": 1245, "answer": false, "completion": ".decl Lives_in(Citizen:symbol, Place:symbol)\nLives_in(\"Cheshire\", \"England\").\nLives_in(\"France\", \"France\").\n.decl Answer()\nAnswer() :- Lives_in(\"Cheshire\", place), Lives_in(\"France\", place), Lives_in(\"France\", place).\n.output Answer\n\n", "completions": [".decl Lives_in(Citizen:symbol, Place:symbol)\nLives_in(\"Cheshire\", \"England\").\nLives_in(\"France\", \"France\").\n.decl Answer()\nAnswer() :- Lives_in(\"Cheshire\", place), Lives_in(\"France\", place), Lives_in(\"France\", place).\n.output Answer\n\n"]}
{"id": 1246, "answer": true, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"chicken breast\", 300).\nHas_calories(\"maize\", 200).\n.decl Has_protein(Food:symbol, Protein:float)\nHas_protein(\"chicken breast\", 30).\nHas_protein(\"maize\", 20).\n.decl Answer()\nAnswer() :- Has_calories(\"chicken breast\", calories1), Has_calories(\"maize\", calories2), Has_protein(\"chicken breast\", protein1), Has_protein(\"maize\", protein2), calories1 > calories2, protein1 > protein2.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"chicken breast\", 300).\nHas_calories(\"maize\", 200).\n.decl Has_protein(Food:symbol, Protein:float)\nHas_protein(\"chicken breast\", 30).\nHas_protein(\"maize\", 20).\n.decl Answer()\nAnswer() :- Has_calories(\"chicken breast\", calories1), Has_calories(\"maize\", calories2), Has_protein(\"chicken breast\", protein1), Has_protein(\"maize\", protein2), calories1 > calories2, protein1 > protein2.\n.output Answer\n\n"]}
{"id": 1247, "answer": false, "completion": ".decl Has_melting_point(Object:symbol, Melting_point:float)\nHas_melting_point(\"compact disc\", 350).\nHas_melting_point(\"magma\", 1000).\n.decl Answer()\nAnswer() :- Has_melting_point(\"compact disc\", melting_point1), Has_melting_point(\"magma\", melting_point2), melting_point1 < melting_point2.\n.output Answer\n\n", "completions": [".decl Has_melting_point(Object:symbol, Melting_point:float)\nHas_melting_point(\"compact disc\", 350).\nHas_melting_point(\"magma\", 1000).\n.decl Answer()\nAnswer() :- Has_melting_point(\"compact disc\", melting_point1), Has_melting_point(\"magma\", melting_point2), melting_point1 < melting_point2.\n.output Answer\n\n"]}
{"id": 1248, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Alexander Hamilton\", 1).\nHas_n_members(\"koalas\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Alexander Hamilton\", n_members1), Has_n_members(\"koalas\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Alexander Hamilton\", 1).\nHas_n_members(\"koalas\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Alexander Hamilton\", n_members1), Has_n_members(\"koalas\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1249, "answer": false, "completion": ".decl Has_options(Person:symbol, Options:symbol)\nHas_options(\"students who struggle to understand the writing style of Othello\", \"read the play\").\n.decl Answer()\nAnswer() :- Has_options(\"students who struggle to understand the writing style of Othello\", options).\n.output Answer\n\n", "completions": [".decl Has_options(Person:symbol, Options:symbol)\nHas_options(\"students who struggle to understand the writing style of Othello\", \"read the play\").\n.decl Answer()\nAnswer() :- Has_options(\"students who struggle to understand the writing style of Othello\", options).\n.output Answer\n\n"]}
{"id": 1250, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"nine planets\", 9).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Goofy's first year\", 365).\n.decl Answer()\nAnswer() :- Has_n_members(\"nine planets\", n_members1), Has_n_members(\"Goofy's first year\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"nine planets\", 9).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Goofy's first year\", 365).\n.decl Answer()\nAnswer() :- Has_n_members(\"nine planets\", n_members1), Has_n_members(\"Goofy's first year\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n"]}
{"id": 1251, "answer": true, "completion": ".decl From(Person:symbol, Place:symbol)\nFrom(\"Vlad III\", \"Bucharest\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylv", "completions": [".decl From(Person:symbol, Place:symbol)\nFrom(\"Vlad III\", \"Bucharest\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylvania\").\nFrom(\"Vlad III\", \"Wallachia\").\nFrom(\"Vlad III\", \"Transylv"]}
{"id": 1252, "answer": false, "completion": ".decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:", "completions": [".decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:float)\nHas_n_words(\"War of the Worlds\", 16).\n.decl Has_n_words(Text:symbol, N_words:"]}
{"id": 1253, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"mongoose\", \"brown\").\nHas_color(\"desert\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_color(\"mongoose\", color), Has_color(\"desert\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"mongoose\", \"brown\").\nHas_color(\"desert\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_color(\"mongoose\", color), Has_color(\"desert\", color).\n.output Answer\n\n"]}
{"id": 1254, "answer": false, "completion": ".decl Has_treatment(Treatment:symbol, Disease:symbol)\nHas_treatment(\"Seroquel\", \"depression\").\n.decl Has_recommendation(Doctor:symbol, Treatment:symbol)\nHas_recommendation(\"Dr. Smith\", \"Seroquel\").\n.decl Answer()\nAnswer() :- Has_treatment(\"Seroquel\", disease), Has_recommendation(\"Dr. Smith\", treatment).\n.output Answer\n\n", "completions": [".decl Has_treatment(Treatment:symbol, Disease:symbol)\nHas_treatment(\"Seroquel\", \"depression\").\n.decl Has_recommendation(Doctor:symbol, Treatment:symbol)\nHas_recommendation(\"Dr. Smith\", \"Seroquel\").\n.decl Answer()\nAnswer() :- Has_treatment(\"Seroquel\", disease), Has_recommendation(\"Dr. Smith\", treatment).\n.output Answer\n\n"]}
{"id": 1255, "answer": true, "completion": ".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Taco Bell\", \"spice\").\nHas_ingredient(\"Taco Bell\", \"cinnamon\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Taco Bell\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Taco Bell\", \"spice\").\nHas_ingredient(\"Taco Bell\", \"cinnamon\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Taco Bell\", ingredient).\n.output Answer\n\n"]}
{"id": 1256, "answer": false, "completion": ".decl Discount(Person:symbol, Discount:float)\nDiscount(\"member of the United States Air Force\", 0.1).\n.decl Answer()\nAnswer() :- Discount(\"member of the United States Air Force\", discount), Discount(\"member of the United States Air Force\", discount2), discount > discount2.\n.output Answer\n\n", "completions": [".decl Discount(Person:symbol, Discount:float)\nDiscount(\"member of the United States Air Force\", 0.1).\n.decl Answer()\nAnswer() :- Discount(\"member of the United States Air Force\", discount), Discount(\"member of the United States Air Force\", discount2), discount > discount2.\n.output Answer\n\n"]}
{"id": 1257, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thiago Moises May 13 2020 submission\", \"May 13 2020\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Achilles injury\", \"May 13 2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thiago Moises May 13 2020 submission\", time), Happens_in_time(\"Achilles injury\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thiago Moises May 13 2020 submission\", \"May 13 2020\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Achilles injury\", \"May 13 2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thiago Moises May 13 2020 submission\", time), Happens_in_time(\"Achilles injury\", time).\n.output Answer\n\n"]}
{"id": 1258, "answer": true, "completion": ".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"dog\", 4).\nHas_n_legs(\"cat\", 4).\nHas_n_legs(\"chinese calendar\", 4).\n.decl Answer()\nAnswer() :- Has_n_legs(\"dog\", n_legs1), Has_n_legs(\"cat\", n_legs2), Has_n_legs(\"chinese calendar\", n_legs3), n_legs1 = n_legs2, n_legs2 = n_legs3.\n.output Answer\n\n", "completions": [".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"dog\", 4).\nHas_n_legs(\"cat\", 4).\nHas_n_legs(\"chinese calendar\", 4).\n.decl Answer()\nAnswer() :- Has_n_legs(\"dog\", n_legs1), Has_n_legs(\"cat\", n_legs2), Has_n_legs(\"chinese calendar\", n_legs3), n_legs1 = n_legs2, n_legs2 = n_legs3.\n.output Answer\n\n"]}
{"id": 1259, "answer": false, "completion": ".decl Is_a_politician(Person:symbol)\nIs_a_politician(\"Nancy Pelosi\").\n.decl Is_a_party(Party:symbol)\nIs_a_party(\"Democratic Party\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Answer()\nAnswer() :- Is_a_politician(\"Nancy Pelosi\"), Is_a_party(\"Democratic Party\"), Is_a_position(\"publicly denounce\").\n.output Answer\n\n", "completions": [".decl Is_a_politician(Person:symbol)\nIs_a_politician(\"Nancy Pelosi\").\n.decl Is_a_party(Party:symbol)\nIs_a_party(\"Democratic Party\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Is_a_position(Position:symbol)\nIs_a_position(\"publicly denounce\").\n.decl Answer()\nAnswer() :- Is_a_politician(\"Nancy Pelosi\"), Is_a_party(\"Democratic Party\"), Is_a_position(\"publicly denounce\").\n.output Answer\n\n"]}
{"id": 1260, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"The Daily Mirror\", 0.5).\nHas_density(\"campfire\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"The Daily Mirror\", density1), Has_density(\"campfire\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"The Daily Mirror\", 0.5).\nHas_density(\"campfire\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"The Daily Mirror\", density1), Has_density(\"campfire\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1261, "answer": false, "completion": ".decl Performs(Artist:symbol, Genre:symbol)\nPerforms(\"Ludacris\", \"Hip-Hop\").\nPerforms(\"Ludacris\", \"Rap\").\n.decl Performs(Artist:symbol, Genre:symbol)\nPerforms(\"Mozart\", \"Classical\").\nPerforms(\"Mozart\", \"Opera\").\n.decl Answer()\nAnswer() :- Performs(\"Ludacris\", genre), Performs(\"Mozart\", genre).\n.output Answer\n\n", "completions": [".decl Performs(Artist:symbol, Genre:symbol)\nPerforms(\"Ludacris\", \"Hip-Hop\").\nPerforms(\"Ludacris\", \"Rap\").\n.decl Performs(Artist:symbol, Genre:symbol)\nPerforms(\"Mozart\", \"Classical\").\nPerforms(\"Mozart\", \"Opera\").\n.decl Answer()\nAnswer() :- Performs(\"Ludacris\", genre), Performs(\"Mozart\", genre).\n.output Answer\n\n"]}
{"id": 1262, "answer": true, "completion": ".decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"börek\", \"food\").\nIs_a_type_of(\"Recep Tayyip Erdoğan\", \"politician\").\n.decl Answer()\nAnswer() :- Is_a_type_of(\"Recep Tayyip Erdoğan\", type1), Is_a_type_of(\"börek\", type2), type1 != type2.\n.output Answer\n\n", "completions": [".decl Is_a_type_of(Object:symbol, Type:symbol)\nIs_a_type_of(\"börek\", \"food\").\nIs_a_type_of(\"Recep Tayyip Erdoğan\", \"politician\").\n.decl Answer()\nAnswer() :- Is_a_type_of(\"Recep Tayyip Erdoğan\", type1), Is_a_type_of(\"börek\", type2), type1 != type2.\n.output Answer\n\n"]}
{"id": 1263, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"2 Euro coin\", 0.9).\nHas_density(\"Red Sea\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"2 Euro coin\", density1), Has_density(\"Red Sea\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"2 Euro coin\", 0.9).\nHas_density(\"Red Sea\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"2 Euro coin\", density1), Has_density(\"Red Sea\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1264, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"white light\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"white light\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"white light\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"white light\", color).\n.output Answer\n\n"]}
{"id": 1265, "answer": false, "completion": ".decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Isaac\", \"Marvin Gay Sr.\").\n.decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Marvin Gay Sr.\", \"Marvin Gay Jr.\").\n.decl Answer()\nAnswer() :- Has_father(\"Isaac\", father), Has_father(father, father2), father != father2.\n.output Answer\n\n", "completions": [".decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Isaac\", \"Marvin Gay Sr.\").\n.decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Marvin Gay Sr.\", \"Marvin Gay Jr.\").\n.decl Answer()\nAnswer() :- Has_father(\"Isaac\", father), Has_father(father, father2), father != father2.\n.output Answer\n\n"]}
{"id": 1266, "answer": true, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"owl monkey\", \"strawberry\").\n.decl Answer()\nAnswer() :- Eats(\"owl monkey\", food).\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"owl monkey\", \"strawberry\").\n.decl Answer()\nAnswer() :- Eats(\"owl monkey\", food).\n.output Answer\n\n"]}
{"id": 1267, "answer": false, "completion": ".decl Has_genome(Organism:symbol, Genome:symbol)\nHas_genome(\"human\", \"genome\").\nHas_genome(\"mouse\", \"genome\").\nHas_genome(\"chimp\", \"genome\").\nHas_genome(\"chicken\", \"genome\").\nHas_genome(\"cow\", \"genome\").\nHas_genome(\"dog\", \"genome\").\nHas_genome(\"cat\", \"genome\").\nHas_genome(\"pig\", \"genome\").\nHas_genome(\"sheep\", \"genome\").\nHas_genome(\"rabbit\", \"genome\").\nHas_genome(\"rat\", \"genome\").\nHas_genome(\"horse\", \"genome\").\nHas_genome(\"elephant\", \"genome\").\nHas_genome(\"deer\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_", "completions": [".decl Has_genome(Organism:symbol, Genome:symbol)\nHas_genome(\"human\", \"genome\").\nHas_genome(\"mouse\", \"genome\").\nHas_genome(\"chimp\", \"genome\").\nHas_genome(\"chicken\", \"genome\").\nHas_genome(\"cow\", \"genome\").\nHas_genome(\"dog\", \"genome\").\nHas_genome(\"cat\", \"genome\").\nHas_genome(\"pig\", \"genome\").\nHas_genome(\"sheep\", \"genome\").\nHas_genome(\"rabbit\", \"genome\").\nHas_genome(\"rat\", \"genome\").\nHas_genome(\"horse\", \"genome\").\nHas_genome(\"elephant\", \"genome\").\nHas_genome(\"deer\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_genome(\"mosquito\", \"genome\").\nHas_"]}
{"id": 1268, "answer": true, "completion": ".decl Is_alive(Person:symbol)\nIs_alive(\"Genie from Disney's Aladdin\").\n.decl Answer()\nAnswer() :- Is_alive(\"Genie from Disney's Aladdin\").\n.output Answer\n\n", "completions": [".decl Is_alive(Person:symbol)\nIs_alive(\"Genie from Disney's Aladdin\").\n.decl Answer()\nAnswer() :- Is_alive(\"Genie from Disney's Aladdin\").\n.output Answer\n\n"]}
{"id": 1269, "answer": true, "completion": ".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"dosa\", 200).\nHas_calories(\"lumberjack\", 2000).\n.decl Answer()\nAnswer() :- Has_calories(\"lumberjack\", calories1), Has_calories(\"dosa\", calories2), calories1 >= calories2*3.\n.output Answer\n\n", "completions": [".decl Has_calories(Food:symbol, Calories:float)\nHas_calories(\"dosa\", 200).\nHas_calories(\"lumberjack\", 2000).\n.decl Answer()\nAnswer() :- Has_calories(\"lumberjack\", calories1), Has_calories(\"dosa\", calories2), calories1 >= calories2*3.\n.output Answer\n\n"]}
{"id": 1270, "answer": true, "completion": ".decl Has_n_parents(Object:symbol, N_parents:float)\nHas_n_parents(\"black swan cygnets\", 2).\n.decl Answer()\nAnswer() :- Has_n_parents(\"black swan cygnets\", n_parents), n_parents = 2.\n.output Answer\n\n", "completions": [".decl Has_n_parents(Object:symbol, N_parents:float)\nHas_n_parents(\"black swan cygnets\", 2).\n.decl Answer()\nAnswer() :- Has_n_parents(\"black swan cygnets\", n_parents), n_parents = 2.\n.output Answer\n\n"]}
{"id": 1271, "answer": true, "completion": ".decl Born_in_city(Person:symbol, City:symbol)\nBorn_in_city(\"Moon Jae-in\", \"Seoul\").\nBorn_in_city(\"Moon Jae-in\", \"Busan\").\nBorn_in_city(\"Moon Jae-in\", \"Gwangju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeju\").\nBorn_in_city(\"Moon Jae-in\", \"Incheon\").\nBorn_in_city(\"Moon Jae-in\", \"Daejeon\").\nBorn_in_city(\"Moon Jae-in\", \"Daegu\").\nBorn_in_city(\"Moon Jae-in\", \"Goyang\").\nBorn_in_city(\"Moon Jae-in\", \"Seongnam\").\nBorn_in_city(\"Moon Jae-in\", \"Suwon\").\nBorn_in_city(\"Moon Jae-in\", \"Ulsan\").\nBorn_in_city(\"Moon Jae-in\", \"Gangneung\").\nBorn_in_city(\"Moon Jae-in\", \"Chuncheon\").\nBorn_in_city(\"Moon Jae-in\", \"Gwangyang\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_", "completions": [".decl Born_in_city(Person:symbol, City:symbol)\nBorn_in_city(\"Moon Jae-in\", \"Seoul\").\nBorn_in_city(\"Moon Jae-in\", \"Busan\").\nBorn_in_city(\"Moon Jae-in\", \"Gwangju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeju\").\nBorn_in_city(\"Moon Jae-in\", \"Incheon\").\nBorn_in_city(\"Moon Jae-in\", \"Daejeon\").\nBorn_in_city(\"Moon Jae-in\", \"Daegu\").\nBorn_in_city(\"Moon Jae-in\", \"Goyang\").\nBorn_in_city(\"Moon Jae-in\", \"Seongnam\").\nBorn_in_city(\"Moon Jae-in\", \"Suwon\").\nBorn_in_city(\"Moon Jae-in\", \"Ulsan\").\nBorn_in_city(\"Moon Jae-in\", \"Gangneung\").\nBorn_in_city(\"Moon Jae-in\", \"Chuncheon\").\nBorn_in_city(\"Moon Jae-in\", \"Gwangyang\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_in_city(\"Moon Jae-in\", \"Jeonju\").\nBorn_"]}
{"id": 1272, "answer": false, "completion": ".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"Kurt Cobain's death\", \"drug overdose\").\nHas_cause(\"Kurt Cobain's death\", \"suicide\").\nHas_cause(\"Daniel LeFever's death\", \"suicide\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"drug overdose\", \"Kurt Cobain's death\").\nHas_effect(\"suicide\", \"Kurt Cobain's death\").\nHas_effect(\"suicide\", \"Daniel LeFever's death\").\n.decl Answer()\nAnswer() :- Has_cause(\"Kurt Cobain's death\", cause), Has_effect(effect, cause), Has_cause(\"Daniel LeFever's death\", cause).\n.output Answer\n\n", "completions": [".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"Kurt Cobain's death\", \"drug overdose\").\nHas_cause(\"Kurt Cobain's death\", \"suicide\").\nHas_cause(\"Daniel LeFever's death\", \"suicide\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"drug overdose\", \"Kurt Cobain's death\").\nHas_effect(\"suicide\", \"Kurt Cobain's death\").\nHas_effect(\"suicide\", \"Daniel LeFever's death\").\n.decl Answer()\nAnswer() :- Has_cause(\"Kurt Cobain's death\", cause), Has_effect(effect, cause), Has_cause(\"Daniel LeFever's death\", cause).\n.output Answer\n\n"]}
{"id": 1273, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Italian Renaissance\", \"1400-1500\").\nHappens_in_time(\"Theocracy\", \"1400-1500\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Theocracy\", \"Italy\").\nHappens_in_place(\"Italian Renaissance\", \"Italy\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Theocracy\", time), Happens_in_place(\"Theocracy\", place), Happens_in_time(\"Italian Renaissance\", time), Happens_in_place(\"Italian Renaissance\", place).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Italian Renaissance\", \"1400-1500\").\nHappens_in_time(\"Theocracy\", \"1400-1500\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Theocracy\", \"Italy\").\nHappens_in_place(\"Italian Renaissance\", \"Italy\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Theocracy\", time), Happens_in_place(\"Theocracy\", place), Happens_in_time(\"Italian Renaissance\", time), Happens_in_place(\"Italian Renaissance\", place).\n.output Answer\n\n"]}
{"id": 1274, "answer": true, "completion": ".decl Plays(Player:symbol, Game:symbol)\nPlays(\"Snow White\", \"7 Wonders\").\nPlays(\"Dopey\", \"7 Wonders\").\nPlays(\"Grumpy\", \"7 Wonders\").\nPlays(\"Sneezy\", \"7 Wonders\").\nPlays(\"Sleepy\", \"7 Wonders\").\nPlays(\"Bashful\", \"7 Wonders\").\nPlays(\"Doc\", \"7 Wonders\").\n.decl Plays_every_n_players(Game:symbol, N_players:float)\nPlays_every_n_players(\"7 Wonders\", 7).\n.decl Answer()\nAnswer() :- Plays(\"Snow White\", game), Plays_every_n_players(game, n_players), Plays(\"Dopey\", game), Plays(\"Grumpy\", game), Plays(\"Sneezy\", game), Plays(\"Sleepy\", game), Plays(\"Bashful\", game), Plays(\"Doc\", game).\n.output Answer\n\n", "completions": [".decl Plays(Player:symbol, Game:symbol)\nPlays(\"Snow White\", \"7 Wonders\").\nPlays(\"Dopey\", \"7 Wonders\").\nPlays(\"Grumpy\", \"7 Wonders\").\nPlays(\"Sneezy\", \"7 Wonders\").\nPlays(\"Sleepy\", \"7 Wonders\").\nPlays(\"Bashful\", \"7 Wonders\").\nPlays(\"Doc\", \"7 Wonders\").\n.decl Plays_every_n_players(Game:symbol, N_players:float)\nPlays_every_n_players(\"7 Wonders\", 7).\n.decl Answer()\nAnswer() :- Plays(\"Snow White\", game), Plays_every_n_players(game, n_players), Plays(\"Dopey\", game), Plays(\"Grumpy\", game), Plays(\"Sneezy\", game), Plays(\"Sleepy\", game), Plays(\"Bashful\", game), Plays(\"Doc\", game).\n.output Answer\n\n"]}
{"id": 1275, "answer": false, "completion": ".decl Has_shot_type(Shot:symbol, Shot_type:symbol)\nHas_shot_type(\"Mozambique Drill\", \"easy\").\nHas_shot_type(\"United States Army Ranger\", \"rifle\").\n.decl Answer()\nAnswer() :- Has_shot_type(\"Mozambique Drill\", shot_type), Has_shot_type(\"United States Army Ranger\", shot_type).\n.output Answer\n\n", "completions": [".decl Has_shot_type(Shot:symbol, Shot_type:symbol)\nHas_shot_type(\"Mozambique Drill\", \"easy\").\nHas_shot_type(\"United States Army Ranger\", \"rifle\").\n.decl Answer()\nAnswer() :- Has_shot_type(\"Mozambique Drill\", shot_type), Has_shot_type(\"United States Army Ranger\", shot_type).\n.output Answer\n\n"]}
{"id": 1276, "answer": true, "completion": ".decl Is_a(Person:symbol, Occupation:symbol)\nIs_a(\"construction worker\", \"occupation\").\n.decl Is_required(Occupation:symbol, Task:symbol)\nIs_required(\"occupation\", \"build a portfolio\").\n.decl Answer()\nAnswer() :- Is_a(\"construction worker\", occupation), Is_required(occupation, task), occupation == task.\n.output Answer\n\n", "completions": [".decl Is_a(Person:symbol, Occupation:symbol)\nIs_a(\"construction worker\", \"occupation\").\n.decl Is_required(Occupation:symbol, Task:symbol)\nIs_required(\"occupation\", \"build a portfolio\").\n.decl Answer()\nAnswer() :- Is_a(\"construction worker\", occupation), Is_required(occupation, task), occupation == task.\n.output Answer\n\n"]}
{"id": 1277, "answer": true, "completion": ".decl Visits(Person:symbol, Place:symbol)\nVisits(\"John\", \"San Francisco\").\nVisits(\"John\", \"New York\").\nVisits(\"John\", \"Boston\").\nVisits(\"John\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"", "completions": [".decl Visits(Person:symbol, Place:symbol)\nVisits(\"John\", \"San Francisco\").\nVisits(\"John\", \"New York\").\nVisits(\"John\", \"Boston\").\nVisits(\"John\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\"Jane\", \"New York\").\nVisits(\"Jane\", \"Boston\").\nVisits(\"Jane\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jack\", \"San Francisco\").\nVisits(\"Jack\", \"New York\").\nVisits(\"Jack\", \"Boston\").\nVisits(\"Jack\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Mary\", \"San Francisco\").\nVisits(\"Mary\", \"New York\").\nVisits(\"Mary\", \"Boston\").\nVisits(\"Mary\", \"Los Angeles\").\n.decl Visits(Person:symbol, Place:symbol)\nVisits(\"Jane\", \"San Francisco\").\nVisits(\""]}
{"id": 1278, "answer": false, "completion": ".decl Has_name(City:symbol, Name:symbol)\nHas_name(\"Irvine\", \"Irvine\").\nHas_name(\"Anaheim\", \"Anaheim\").\nHas_name(\"Santa Ana\", \"Santa Ana\").\n.decl Has_founder(City:symbol, Founder:symbol)\nHas_founder(\"Irvine\", \"Donald Bren\").\nHas_founder(\"Anaheim\", \"Carl\").\nHas_founder(\"Santa Ana\", \"J. Wayne\").\n.decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Carl\", \"Italian\").\nHas_language(\"J. Wayne\", \"Italian\").\n.decl Answer()\nAnswer() :- Has_name(city, name), Has_founder(city, founder), Has_language(founder, language), language = \"Italian\".\n.output Answer\n\n", "completions": [".decl Has_name(City:symbol, Name:symbol)\nHas_name(\"Irvine\", \"Irvine\").\nHas_name(\"Anaheim\", \"Anaheim\").\nHas_name(\"Santa Ana\", \"Santa Ana\").\n.decl Has_founder(City:symbol, Founder:symbol)\nHas_founder(\"Irvine\", \"Donald Bren\").\nHas_founder(\"Anaheim\", \"Carl\").\nHas_founder(\"Santa Ana\", \"J. Wayne\").\n.decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Carl\", \"Italian\").\nHas_language(\"J. Wayne\", \"Italian\").\n.decl Answer()\nAnswer() :- Has_name(city, name), Has_founder(city, founder), Has_language(founder, language), language = \"Italian\".\n.output Answer\n\n"]}
{"id": 1279, "answer": true, "completion": ".decl Was_involved(Person:symbol, War:symbol)\nWas_involved(\"Napoleon\", \"War in the American Civil War\").\nWas_involved(\"Napoleon III\", \"War in the American Civil War\").\nWas_involved(\"Charles de Gaulle\", \"War in the American Civil War\").\nWas_involved(\"Napoleon I\", \"War in the American Civil War\").\nWas_involved(\"Napoleon II\", \"War in the American Civil War\").\nWas_involved(\"Louis-Napoleon\", \"War in the American Civil War\").\nWas_involved(\"Louis-Philippe\", \"War in the American Civil War\").\nWas_involved(\"Louis-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-René\", \"War in the American Civil War\").\nWas_involved(\"Louis-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-François-Xavier\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Maurice\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Antoine-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Joseph-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Alexandre-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Joseph-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Alexandre-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Antoine-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Henri-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-François-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-Charles\",", "completions": [".decl Was_involved(Person:symbol, War:symbol)\nWas_involved(\"Napoleon\", \"War in the American Civil War\").\nWas_involved(\"Napoleon III\", \"War in the American Civil War\").\nWas_involved(\"Charles de Gaulle\", \"War in the American Civil War\").\nWas_involved(\"Napoleon I\", \"War in the American Civil War\").\nWas_involved(\"Napoleon II\", \"War in the American Civil War\").\nWas_involved(\"Louis-Napoleon\", \"War in the American Civil War\").\nWas_involved(\"Louis-Philippe\", \"War in the American Civil War\").\nWas_involved(\"Louis-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-René\", \"War in the American Civil War\").\nWas_involved(\"Louis-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-François-Xavier\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Maurice\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Antoine-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Joseph-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Alexandre-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Joseph\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Alexandre\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Antoine\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Joseph-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Alexandre-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Antoine-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Henri-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-François-Charles\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-Henri\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-François\", \"War in the American Civil War\").\nWas_involved(\"Louis-Charles-Louis-Charles-Charles\","]}
{"id": 1280, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Royal Air Force\", \"1902\").\nHappens_in_time(\"Boxer Rebellion\", \"1902\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Royal Air Force\", time), Happens_in_time(\"Boxer Rebellion\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Royal Air Force\", \"1902\").\nHappens_in_time(\"Boxer Rebellion\", \"1902\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Royal Air Force\", time), Happens_in_time(\"Boxer Rebellion\", time).\n.output Answer\n\n"]}
{"id": 1281, "answer": true, "completion": ".decl Is_part_of(Holiday:symbol, Holiday_name:symbol)\nIs_part_of(\"Erev Pesach\", \"Pesach\").\nIs_part_of(\"Pesach\", \"Jewish holiday\").\nIs_part_of(\"Pesach\", \"Holiday\").\n.decl Is_part_of(Holiday:symbol, Holiday_name:symbol)\nIs_part_of(\"Pesach\", \"Erev Pesach\").\nIs_part_of(\"Pesach\", \"Erev Shavuot\").\nIs_part_of(\"Pesach\", \"Erev Rosh Hashanah\").\nIs_part_of(\"Pesach\", \"Erev Yom Kippur\").\nIs_part_of(\"Pesach\", \"Erev Sukkot\").\nIs_part_of(\"Pesach\", \"Erev Purim\").\nIs_part_of(\"Pesach\", \"Erev Pesach\").\nIs_part_of(\"Pesach\", \"Erev Shavuot\").\nIs_part_of(\"Pesach\", \"Erev Rosh Hashanah\").\nIs_part_of(\"Pesach\", \"Erev Yom Kippur\").\nIs_part_of(\"Pesach\", \"Erev Sukkot\").\nIs_part_of(\"Pesach\", \"Erev Purim\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Elijah\", \"Jewish holiday\").\n.output Answer\n\n", "completions": [".decl Is_part_of(Holiday:symbol, Holiday_name:symbol)\nIs_part_of(\"Erev Pesach\", \"Pesach\").\nIs_part_of(\"Pesach\", \"Jewish holiday\").\nIs_part_of(\"Pesach\", \"Holiday\").\n.decl Is_part_of(Holiday:symbol, Holiday_name:symbol)\nIs_part_of(\"Pesach\", \"Erev Pesach\").\nIs_part_of(\"Pesach\", \"Erev Shavuot\").\nIs_part_of(\"Pesach\", \"Erev Rosh Hashanah\").\nIs_part_of(\"Pesach\", \"Erev Yom Kippur\").\nIs_part_of(\"Pesach\", \"Erev Sukkot\").\nIs_part_of(\"Pesach\", \"Erev Purim\").\nIs_part_of(\"Pesach\", \"Erev Pesach\").\nIs_part_of(\"Pesach\", \"Erev Shavuot\").\nIs_part_of(\"Pesach\", \"Erev Rosh Hashanah\").\nIs_part_of(\"Pesach\", \"Erev Yom Kippur\").\nIs_part_of(\"Pesach\", \"Erev Sukkot\").\nIs_part_of(\"Pesach\", \"Erev Purim\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Elijah\", \"Jewish holiday\").\n.output Answer\n\n"]}
{"id": 1282, "answer": false, "completion": ".decl Is_higher(Location_A:symbol, Location_B:symbol)\nIs_higher(\"Peak of the Andes\", \"Colossus of Rhodes\").\n.decl Is_higher(Location_A:symbol, Location_B:symbol)\nIs_higher(\"Colossus of Rhodes\", \"Peak of the Andes\").\n.decl Answer()\nAnswer() :- Is_higher(\"Peak of the Andes\", location1), Is_higher(\"Colossus of Rhodes\", location2), location1 != location2.\n.output Answer\n\n", "completions": [".decl Is_higher(Location_A:symbol, Location_B:symbol)\nIs_higher(\"Peak of the Andes\", \"Colossus of Rhodes\").\n.decl Is_higher(Location_A:symbol, Location_B:symbol)\nIs_higher(\"Colossus of Rhodes\", \"Peak of the Andes\").\n.decl Answer()\nAnswer() :- Is_higher(\"Peak of the Andes\", location1), Is_higher(\"Colossus of Rhodes\", location2), location1 != location2.\n.output Answer\n\n"]}
{"id": 1283, "answer": false, "completion": ".decl Has_price(Museum:symbol, Price:float)\nHas_price(\"Louvre\", 50000).\nHas_price(\"Museum of Modern Art\", 50000).\nHas_price(\"Museum of Modern Art\", 100000).\nHas_price(\"Museum of Modern Art\", 200000).\n.decl Answer()\nAnswer() :- Has_price(\"Louvre\", price1), Has_price(\"Museum of Modern Art\", price2), price1 < price2.\n.output Answer\n\n", "completions": [".decl Has_price(Museum:symbol, Price:float)\nHas_price(\"Louvre\", 50000).\nHas_price(\"Museum of Modern Art\", 50000).\nHas_price(\"Museum of Modern Art\", 100000).\nHas_price(\"Museum of Modern Art\", 200000).\n.decl Answer()\nAnswer() :- Has_price(\"Louvre\", price1), Has_price(\"Museum of Modern Art\", price2), price1 < price2.\n.output Answer\n\n"]}
{"id": 1284, "answer": false, "completion": ".decl Supports(Party:symbol, Idea:symbol)\nSupports(\"Communist Party of the Soviet Union\", \"Trickle Down Economics\").\nSupports(\"Communist Party of the Soviet Union\", \"Capitalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Progressive Economics\").\nSupports(\"Communist Party of the Soviet Union\", \"Neocapitalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neomercantilism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neoliberalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neoconservatism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-synd", "completions": [".decl Supports(Party:symbol, Idea:symbol)\nSupports(\"Communist Party of the Soviet Union\", \"Trickle Down Economics\").\nSupports(\"Communist Party of the Soviet Union\", \"Capitalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Progressive Economics\").\nSupports(\"Communist Party of the Soviet Union\", \"Neocapitalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neomercantilism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neoliberalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Neoconservatism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-syndicalism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian socialism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Libertarian Marxism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing libertarianism\").\nSupports(\"Communist Party of the Soviet Union\", \"Left-wing anarchism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-communism\").\nSupports(\"Communist Party of the Soviet Union\", \"Anarcho-synd"]}
{"id": 1285, "answer": false, "completion": ".decl Hypothetical_animal(Animal:symbol)\nHypothetical_animal(\"hound\").\n.decl Hypothetical_character(Character:symbol)\nHypothetical_character(\"Charlie Brown\").\n.decl Hypothetical_movie(Movie:symbol)\nHypothetical_movie(\"You're a Good Sport, Charlie Brown\").\n.decl Answer()\nAnswer() :- Hypothetical_animal(animal), Hypothetical_character(character), Hypothetical_movie(movie), Eats(animal, character), Appears_in(character, movie).\n.output Answer\n\n", "completions": [".decl Hypothetical_animal(Animal:symbol)\nHypothetical_animal(\"hound\").\n.decl Hypothetical_character(Character:symbol)\nHypothetical_character(\"Charlie Brown\").\n.decl Hypothetical_movie(Movie:symbol)\nHypothetical_movie(\"You're a Good Sport, Charlie Brown\").\n.decl Answer()\nAnswer() :- Hypothetical_animal(animal), Hypothetical_character(character), Hypothetical_movie(movie), Eats(animal, character), Appears_in(character, movie).\n.output Answer\n\n"]}
{"id": 1286, "answer": true, "completion": ".decl Has_capital(Country:symbol, Capital:symbol)\nHas_capital(\"Spain\", \"Madrid\").\nHas_capital(\"Balearic Islands\", \"Palma\").\n.decl Has_reign_over(Person:symbol, Country:symbol)\nHas_reign_over(\"Elizabeth II\", \"Balearic Islands\").\n.decl Answer()\nAnswer() :- Has_capital(\"Spain\", capital1), Has_capital(\"Balearic Islands\", capital2), Has_reign_over(\"Elizabeth II\", country), capital1 = capital2.\n.output Answer\n\n", "completions": [".decl Has_capital(Country:symbol, Capital:symbol)\nHas_capital(\"Spain\", \"Madrid\").\nHas_capital(\"Balearic Islands\", \"Palma\").\n.decl Has_reign_over(Person:symbol, Country:symbol)\nHas_reign_over(\"Elizabeth II\", \"Balearic Islands\").\n.decl Answer()\nAnswer() :- Has_capital(\"Spain\", capital1), Has_capital(\"Balearic Islands\", capital2), Has_reign_over(\"Elizabeth II\", country), capital1 = capital2.\n.output Answer\n\n"]}
{"id": 1287, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Eddie Murphy\", 4).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Eddie Murphy\", 2).\n.decl Answer()\nAnswer() :- Has_n_children(\"Eddie Murphy\", n_children), Has_n_members(\"Eddie Murphy\", n_members), n_children > n_members.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Eddie Murphy\", 4).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Eddie Murphy\", 2).\n.decl Answer()\nAnswer() :- Has_n_children(\"Eddie Murphy\", n_children), Has_n_members(\"Eddie Murphy\", n_members), n_children > n_members.\n.output Answer\n\n"]}
{"id": 1288, "answer": false, "completion": ".decl Has_age(Object:symbol, Age:float)\nHas_age(\"white cockatoo\", 50).\nHas_age(\"Thirty Years' War\", 300).\n.decl Answer()\nAnswer() :- Has_age(\"white cockatoo\", age1), Has_age(\"Thirty Years' War\", age2), age1 >= age2.\n.output Answer\n\n", "completions": [".decl Has_age(Object:symbol, Age:float)\nHas_age(\"white cockatoo\", 50).\nHas_age(\"Thirty Years' War\", 300).\n.decl Answer()\nAnswer() :- Has_age(\"white cockatoo\", age1), Has_age(\"Thirty Years' War\", age2), age1 >= age2.\n.output Answer\n\n"]}
{"id": 1289, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"aloe vera\", 0.1).\nHas_density(\"Unsinkable Sam\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"aloe vera\", density1), Has_density(\"Unsinkable Sam\", density2), density1 > density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"aloe vera\", 0.1).\nHas_density(\"Unsinkable Sam\", 0.1).\n.decl Answer()\nAnswer() :- Has_density(\"aloe vera\", density1), Has_density(\"Unsinkable Sam\", density2), density1 > density2.\n.output Answer\n\n\n"]}
{"id": 1290, "answer": true, "completion": ".decl Is_married_to(Person_A:symbol, Person_B:symbol)\nIs_married_to(\"Linus Torvalds\", \"Linux Torvalds\").\n.decl Is_female(Person:symbol)\nIs_female(\"Linux Torvalds\").\n.decl Answer()\nAnswer() :- Is_married_to(\"Linus Torvalds\", person), Is_female(person).\n.output Answer\n\n", "completions": [".decl Is_married_to(Person_A:symbol, Person_B:symbol)\nIs_married_to(\"Linus Torvalds\", \"Linux Torvalds\").\n.decl Is_female(Person:symbol)\nIs_female(\"Linux Torvalds\").\n.decl Answer()\nAnswer() :- Is_married_to(\"Linus Torvalds\", person), Is_female(person).\n.output Answer\n\n"]}
{"id": 1291, "answer": true, "completion": ".decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"New York\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Kentucky\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Virginia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Indiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Missouri\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Tennessee\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Kentucky\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Louisiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Louisiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\",", "completions": [".decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"New York\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Kentucky\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Virginia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Indiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Missouri\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Tennessee\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Kentucky\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Louisiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Louisiana\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Mississippi\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Alabama\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"South Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Florida\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"Georgia\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\", \"North Carolina\").\n.decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Rand Paul\","]}
{"id": 1292, "answer": false, "completion": ".decl Has_won_prize(Person:symbol, Prize:symbol)\nHas_won_prize(\"Cheb Mami\", \"Pulitzer Prize for musical composition\").\n.decl Has_won_prize(Person:symbol, Prize:symbol)\nHas_won_prize(\"Cheb Mami\", \"Nobel Prize in literature\").\n.decl Answer()\nAnswer() :- Has_won_prize(\"Cheb Mami\", \"Nobel Prize in literature\").\nAnswer() :- Has_won_prize(\"Cheb Mami\", prize), Has_won_prize(person, prize), person != \"Cheb Mami\".\n.output Answer\n\n", "completions": [".decl Has_won_prize(Person:symbol, Prize:symbol)\nHas_won_prize(\"Cheb Mami\", \"Pulitzer Prize for musical composition\").\n.decl Has_won_prize(Person:symbol, Prize:symbol)\nHas_won_prize(\"Cheb Mami\", \"Nobel Prize in literature\").\n.decl Answer()\nAnswer() :- Has_won_prize(\"Cheb Mami\", \"Nobel Prize in literature\").\nAnswer() :- Has_won_prize(\"Cheb Mami\", prize), Has_won_prize(person, prize), person != \"Cheb Mami\".\n.output Answer\n\n"]}
{"id": 1293, "answer": true, "completion": ".decl Appears_in_MCU(Character:symbol, MCU:symbol)\nAppears_in_MCU(\"Spiderman\", \"MCU\").\nAppears_in_MCU(\"Falcon\", \"MCU\").\n.decl Answer()\nAnswer() :- Appears_in_MCU(\"Spiderman\", MCU), Appears_in_MCU(\"Falcon\", MCU).\n.output Answer\n\n", "completions": [".decl Appears_in_MCU(Character:symbol, MCU:symbol)\nAppears_in_MCU(\"Spiderman\", \"MCU\").\nAppears_in_MCU(\"Falcon\", \"MCU\").\n.decl Answer()\nAnswer() :- Appears_in_MCU(\"Spiderman\", MCU), Appears_in_MCU(\"Falcon\", MCU).\n.output Answer\n\n"]}
{"id": 1294, "answer": true, "completion": ".decl Plays_role(Person:symbol, Role:symbol)\nPlays_role(\"Steve Carell\", \"Michael Scott\").\n.decl Is_role_of(Role:symbol, Character:symbol)\nIs_role_of(\"Michael Scott\", \"leader\").\n.decl Answer()\nAnswer() :- Plays_role(\"Steve Carell\", role), Is_role_of(role, character).\n.output Answer\n\n", "completions": [".decl Plays_role(Person:symbol, Role:symbol)\nPlays_role(\"Steve Carell\", \"Michael Scott\").\n.decl Is_role_of(Role:symbol, Character:symbol)\nIs_role_of(\"Michael Scott\", \"leader\").\n.decl Answer()\nAnswer() :- Plays_role(\"Steve Carell\", role), Is_role_of(role, character).\n.output Answer\n\n"]}
{"id": 1295, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Alice in Wonderland (1951 film)\", \"Alice in Wonderland\").\nHas_name(\"succimer\", \"succimer\").\n.decl Has_year(Object:symbol, Year:float)\nHas_year(\"Alice in Wonderland (1951 film)\", 1951).\n.decl Answer()\nAnswer() :- Has_name(\"Alice in Wonderland (1951 film)\", name), Has_name(\"succimer\", name2), Has_year(\"Alice in Wonderland (1951 film)\", year), name == name2, year < 1950.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Alice in Wonderland (1951 film)\", \"Alice in Wonderland\").\nHas_name(\"succimer\", \"succimer\").\n.decl Has_year(Object:symbol, Year:float)\nHas_year(\"Alice in Wonderland (1951 film)\", 1951).\n.decl Answer()\nAnswer() :- Has_name(\"Alice in Wonderland (1951 film)\", name), Has_name(\"succimer\", name2), Has_year(\"Alice in Wonderland (1951 film)\", year), name == name2, year < 1950.\n.output Answer\n\n"]}
{"id": 1296, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Amy Winehouse's death\", \"July 23, 2011\").\nHappens_in_time(\"Narcan\", \"July 23, 2011\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Amy Winehouse's death\", time), Happens_in_time(\"Narcan\", time).\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Amy Winehouse's death\", \"July 23, 2011\").\nHappens_in_time(\"Narcan\", \"July 23, 2011\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Amy Winehouse's death\", time), Happens_in_time(\"Narcan\", time).\n.output Answer\n\n"]}
{"id": 1297, "answer": true, "completion": ".decl Has_call_waiting(Phone:symbol)\nHas_call_waiting(\"phone\").\n.decl Answer()\nAnswer() :- Has_call_waiting(\"phone\").\n.output Answer\n\n", "completions": [".decl Has_call_waiting(Phone:symbol)\nHas_call_waiting(\"phone\").\n.decl Answer()\nAnswer() :- Has_call_waiting(\"phone\").\n.output Answer\n\n"]}
{"id": 1298, "answer": false, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Bart Simpson\", \"comics\").\nOwns(\"The Joker\", \"comics\").\n.decl Answer()\nAnswer() :- Owns(\"Bart Simpson\", object1), Owns(\"The Joker\", object2), object1 = object2.\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Bart Simpson\", \"comics\").\nOwns(\"The Joker\", \"comics\").\n.decl Answer()\nAnswer() :- Owns(\"Bart Simpson\", object1), Owns(\"The Joker\", object2), object1 = object2.\n.output Answer\n\n"]}
{"id": 1299, "answer": false, "completion": ".decl Is_meat(Food:symbol)\nIs_meat(\"meat\").\n.decl Is_game(Food:symbol)\nIs_game(\"game\").\n.decl Answer()\nAnswer() :- Is_meat(food), Is_game(food).\n.output Answer\n\n", "completions": [".decl Is_meat(Food:symbol)\nIs_meat(\"meat\").\n.decl Is_game(Food:symbol)\nIs_game(\"game\").\n.decl Answer()\nAnswer() :- Is_meat(food), Is_game(food).\n.output Answer\n\n"]}
{"id": 1300, "answer": true, "completion": ".decl Is_muppet(Character:symbol)\nIs_muppet(\"Elmo\").\nIs_muppet(\"Ernie\").\nIs_muppet(\"Big Bird\").\nIs_muppet(\"Cookie Monster\").\nIs_muppet(\"Fozzie Bear\").\nIs_muppet(\"Kermit the Frog\").\nIs_muppet(\"Miss Piggy\").\nIs_muppet(\"Oscar the Grouch\").\nIs_muppet(\"Rizzo the Rat\").\nIs_muppet(\"Rowlf the Dog\").\nIs_muppet(\"Swedish Chef\").\nIs_muppet(\"Beaker\").\nIs_muppet(\"Bunsen Honeydew\").\nIs_muppet(\"Janice\").\nIs_muppet(\"Scooter\").\nIs_muppet(\"Statler\").\nIs_muppet(\"Waldorf\").\n.decl Answer()\nAnswer() :- Is_muppet(\"Elmo\").\n.output Answer\n\n", "completions": [".decl Is_muppet(Character:symbol)\nIs_muppet(\"Elmo\").\nIs_muppet(\"Ernie\").\nIs_muppet(\"Big Bird\").\nIs_muppet(\"Cookie Monster\").\nIs_muppet(\"Fozzie Bear\").\nIs_muppet(\"Kermit the Frog\").\nIs_muppet(\"Miss Piggy\").\nIs_muppet(\"Oscar the Grouch\").\nIs_muppet(\"Rizzo the Rat\").\nIs_muppet(\"Rowlf the Dog\").\nIs_muppet(\"Swedish Chef\").\nIs_muppet(\"Beaker\").\nIs_muppet(\"Bunsen Honeydew\").\nIs_muppet(\"Janice\").\nIs_muppet(\"Scooter\").\nIs_muppet(\"Statler\").\nIs_muppet(\"Waldorf\").\n.decl Answer()\nAnswer() :- Is_muppet(\"Elmo\").\n.output Answer\n\n"]}
{"id": 1301, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"pescatarian\", \"anchovy pizza\").\nEats(\"pescatarian\", \"pear\").\nEats(\"pescatarian\", \"water\").\n.decl Answer()\nAnswer() :- Eats(\"pescatarian\", food), Has_density(food, density), density > 1.\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"pescatarian\", \"anchovy pizza\").\nEats(\"pescatarian\", \"pear\").\nEats(\"pescatarian\", \"water\").\n.decl Answer()\nAnswer() :- Eats(\"pescatarian\", food), Has_density(food, density), density > 1.\n.output Answer\n\n"]}
{"id": 1302, "answer": false, "completion": ".decl Has_character(Show:symbol, Character:symbol)\nHas_character(\"Hey Arnold\", \"Arnold\").\nHas_character(\"Hey Arnold\", \"Eugene\").\nHas_character(\"Hey Arnold\", \"Harold\").\nHas_character(\"Hey Arnold\", \"Phoebe\").\nHas_character(\"Hey Arnold\", \"Harold\").\nHas_character(\"Hey Arnold\", \"Arnold's Mother\").\nHas_character(\"Hey Arnold\", \"Grandpa\").\nHas_character(\"Hey Arnold\", \"Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold", "completions": [".decl Has_character(Show:symbol, Character:symbol)\nHas_character(\"Hey Arnold\", \"Arnold\").\nHas_character(\"Hey Arnold\", \"Eugene\").\nHas_character(\"Hey Arnold\", \"Harold\").\nHas_character(\"Hey Arnold\", \"Phoebe\").\nHas_character(\"Hey Arnold\", \"Harold\").\nHas_character(\"Hey Arnold\", \"Arnold's Mother\").\nHas_character(\"Hey Arnold\", \"Grandpa\").\nHas_character(\"Hey Arnold\", \"Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold\", \"Eugene's Sister\").\nHas_character(\"Hey Arnold\", \"Eugene's Brother\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandpa\").\nHas_character(\"Hey Arnold\", \"Eugene's Grandma\").\nHas_character(\"Hey Arnold\", \"Eugene's Father\").\nHas_character(\"Hey Arnold\", \"Eugene's Mother\").\nHas_character(\"Hey Arnold"]}
{"id": 1303, "answer": true, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"shrimp scampi\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"shrimp scampi\", ingredient), ingredient = \"plastic\".\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"shrimp scampi\", \"plastic\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"shrimp scampi\", ingredient), ingredient = \"plastic\".\n.output Answer\n\n"]}
{"id": 1304, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"rhinoceroses\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"men\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"rhinoceroses\", n_members1), Has_n_members(\"men\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"rhinoceroses\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"men\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"rhinoceroses\", n_members1), Has_n_members(\"men\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 1305, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"kittens\", 3).\n.decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Amtrak coach\", 36).\n.decl Answer()\nAnswer() :- Has_n_members(\"kittens\", n_members), Has_n_seats(\"Amtrak coach\", n_seats), n_members <= n_seats.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"kittens\", 3).\n.decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Amtrak coach\", 36).\n.decl Answer()\nAnswer() :- Has_n_members(\"kittens\", n_members), Has_n_seats(\"Amtrak coach\", n_seats), n_members <= n_seats.\n.output Answer\n\n"]}
{"id": 1306, "answer": false, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"New Jersey\", 0.0).\nHas_area(\"Persian Gulf\", 0.0).\n.decl Answer()\nAnswer() :- Has_area(\"New Jersey\", area1), Has_area(\"Persian Gulf\", area2), area1 > area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"New Jersey\", 0.0).\nHas_area(\"Persian Gulf\", 0.0).\n.decl Answer()\nAnswer() :- Has_area(\"New Jersey\", area1), Has_area(\"Persian Gulf\", area2), area1 > area2.\n.output Answer\n\n"]}
{"id": 1307, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"college commencements\", \"December\").\nHappens_in_time(\"college commencements\", \"May\").\nHappens_in_time(\"college commencements\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", season), Happens_in_time(\"college commencements\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"frost\", \"winter\").\nHappens_in_time(\"college commencements\", \"December\").\nHappens_in_time(\"college commencements\", \"May\").\nHappens_in_time(\"college commencements\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"frost\", season), Happens_in_time(\"college commencements\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1308, "answer": false, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Jesus\", \"angels\").\nBelieves(\"Paul\", \"angels\").\nBelieves(\"Peter\", \"angels\").\nBelieves(\"James\", \"angels\").\nBelieves(\"John\", \"angels\").\nBelieves(\"Judas\", \"angels\").\nBelieves(\"Judas Iscariot\", \"angels\").\n.decl Answer()\nAnswer() :- Believes(\"Judas\", \"angels\").\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Jesus\", \"angels\").\nBelieves(\"Paul\", \"angels\").\nBelieves(\"Peter\", \"angels\").\nBelieves(\"James\", \"angels\").\nBelieves(\"John\", \"angels\").\nBelieves(\"Judas\", \"angels\").\nBelieves(\"Judas Iscariot\", \"angels\").\n.decl Answer()\nAnswer() :- Believes(\"Judas\", \"angels\").\n.output Answer\n\n"]}
{"id": 1309, "answer": true, "completion": ".decl Speaks_language(Person:symbol, Language:symbol)\nSpeaks_language(\"Elizabeth II\", \"Arabic\").\n.decl Answer()\nAnswer() :- Speaks_language(\"Elizabeth II\", language).\n.output Answer\n\n", "completions": [".decl Speaks_language(Person:symbol, Language:symbol)\nSpeaks_language(\"Elizabeth II\", \"Arabic\").\n.decl Answer()\nAnswer() :- Speaks_language(\"Elizabeth II\", language).\n.output Answer\n\n"]}
{"id": 1310, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Kane\", 45).\nHas_age(\"Joe Biden\", 76).\n.decl Answer()\nAnswer() :- Has_age(\"Kane\", age1), Has_age(\"Joe Biden\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Kane\", 45).\nHas_age(\"Joe Biden\", 76).\n.decl Answer()\nAnswer() :- Has_age(\"Kane\", age1), Has_age(\"Joe Biden\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 1311, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"jockey wins Triple Crown\", \"June\").\nHappens_in_time(\"jockey wins Triple Crown\", \"August\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"jockey wins Triple Crown\", 2).\n.decl Answer()\nAnswer() :- Happens_in_time(\"jockey wins Triple Crown\", month), Happens_every_n_months(\"jockey wins Triple Crown\", n_months), month >= \"June\", month <= \"August\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"jockey wins Triple Crown\", \"June\").\nHappens_in_time(\"jockey wins Triple Crown\", \"August\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"jockey wins Triple Crown\", 2).\n.decl Answer()\nAnswer() :- Happens_in_time(\"jockey wins Triple Crown\", month), Happens_every_n_months(\"jockey wins Triple Crown\", n_months), month >= \"June\", month <= \"August\".\n.output Answer\n\n"]}
{"id": 1312, "answer": false, "completion": ".decl Is_month(Month:symbol)\nIs_month(\"October\").\n.decl Is_month(Month:symbol)\nIs_month(\"November\").\n.decl Is_month(Month:symbol)\nIs_month(\"December\").\n.decl Is_month(Month:symbol)\nIs_month(\"January\").\n.decl Is_month(Month:symbol)\nIs_month(\"February\").\n.decl Is_month(Month:symbol)\nIs_month(\"March\").\n.decl Is_month(Month:symbol)\nIs_month(\"April\").\n.decl Is_month(Month:symbol)\nIs_month(\"May\").\n.decl Is_month(Month:symbol)\nIs_month(\"June\").\n.decl Is_month(Month:symbol)\nIs_month(\"July\").\n.decl Is_month(Month:symbol)\nIs_month(\"August\").\n.decl Is_month(Month:symbol)\nIs_month(\"September\").\n.decl Is_day(Day:symbol)\nIs_day(\"31\").\n.decl Is_day(Day:symbol)\nIs_day(\"1\").\n.decl Is_day(Day:symbol)\nIs_day(\"2\").\n.decl Is_day(Day:symbol)\nIs_day(\"3\").\n.decl Is_day(Day:symbol)\nIs_day(\"4\").\n.decl Is_day(Day:symbol)\nIs_day(\"5\").\n.decl Is_day(Day:symbol)\nIs_day(\"6\").\n.decl Is_day(Day:symbol)\nIs_day(\"7\").\n.decl Is_day(Day:symbol)\nIs_day(\"8\").\n.decl Is_day(Day:symbol)\nIs_day(\"9\").\n.decl Is_day(Day:symbol)\nIs_day(\"10\").\n.decl Is_day(Day:symbol)\nIs_day(\"11\").\n.decl Is_day(Day:symbol)\nIs_day(\"12\").\n.decl Is_day(Day:symbol)\nIs_day(\"13\").\n.decl Is_day(Day:symbol)\nIs_day(\"14\").\n.decl Is_day(Day:symbol)\nIs_day(\"15\").\n.decl Is_day(Day:symbol)\nIs_day(\"16\").\n.decl Is_day(Day:symbol)\nIs_day(\"17\").\n.decl Is_day(Day:symbol)\nIs_day(\"18\").\n.decl Is_day(Day:symbol)\nIs_day(\"19\").\n.decl Is_day(Day:symbol)\nIs_day(\"20\").\n.decl Is_day(Day:symbol)\nIs_day(\"21\").\n.decl Is_day(Day:symbol)\nIs_day(\"22\").\n.decl Is_day(Day:symbol)\nIs_day(\"23\").\n.decl Is_day(Day:symbol)\nIs_day(\"24\").\n.decl Is_day(Day:symbol)\nIs_day(\"25\").\n.decl Is_day(Day:symbol)\nIs_day(\"26\").\n.decl Is_day(Day:symbol)\nIs_day(\"27\").\n.decl Is_day(Day:symbol)\nIs_day(\"28\").\n.decl Is_day(Day:symbol)\nIs_day(\"29\").\n.", "completions": [".decl Is_month(Month:symbol)\nIs_month(\"October\").\n.decl Is_month(Month:symbol)\nIs_month(\"November\").\n.decl Is_month(Month:symbol)\nIs_month(\"December\").\n.decl Is_month(Month:symbol)\nIs_month(\"January\").\n.decl Is_month(Month:symbol)\nIs_month(\"February\").\n.decl Is_month(Month:symbol)\nIs_month(\"March\").\n.decl Is_month(Month:symbol)\nIs_month(\"April\").\n.decl Is_month(Month:symbol)\nIs_month(\"May\").\n.decl Is_month(Month:symbol)\nIs_month(\"June\").\n.decl Is_month(Month:symbol)\nIs_month(\"July\").\n.decl Is_month(Month:symbol)\nIs_month(\"August\").\n.decl Is_month(Month:symbol)\nIs_month(\"September\").\n.decl Is_day(Day:symbol)\nIs_day(\"31\").\n.decl Is_day(Day:symbol)\nIs_day(\"1\").\n.decl Is_day(Day:symbol)\nIs_day(\"2\").\n.decl Is_day(Day:symbol)\nIs_day(\"3\").\n.decl Is_day(Day:symbol)\nIs_day(\"4\").\n.decl Is_day(Day:symbol)\nIs_day(\"5\").\n.decl Is_day(Day:symbol)\nIs_day(\"6\").\n.decl Is_day(Day:symbol)\nIs_day(\"7\").\n.decl Is_day(Day:symbol)\nIs_day(\"8\").\n.decl Is_day(Day:symbol)\nIs_day(\"9\").\n.decl Is_day(Day:symbol)\nIs_day(\"10\").\n.decl Is_day(Day:symbol)\nIs_day(\"11\").\n.decl Is_day(Day:symbol)\nIs_day(\"12\").\n.decl Is_day(Day:symbol)\nIs_day(\"13\").\n.decl Is_day(Day:symbol)\nIs_day(\"14\").\n.decl Is_day(Day:symbol)\nIs_day(\"15\").\n.decl Is_day(Day:symbol)\nIs_day(\"16\").\n.decl Is_day(Day:symbol)\nIs_day(\"17\").\n.decl Is_day(Day:symbol)\nIs_day(\"18\").\n.decl Is_day(Day:symbol)\nIs_day(\"19\").\n.decl Is_day(Day:symbol)\nIs_day(\"20\").\n.decl Is_day(Day:symbol)\nIs_day(\"21\").\n.decl Is_day(Day:symbol)\nIs_day(\"22\").\n.decl Is_day(Day:symbol)\nIs_day(\"23\").\n.decl Is_day(Day:symbol)\nIs_day(\"24\").\n.decl Is_day(Day:symbol)\nIs_day(\"25\").\n.decl Is_day(Day:symbol)\nIs_day(\"26\").\n.decl Is_day(Day:symbol)\nIs_day(\"27\").\n.decl Is_day(Day:symbol)\nIs_day(\"28\").\n.decl Is_day(Day:symbol)\nIs_day(\"29\").\n."]}
{"id": 1313, "answer": true, "completion": ".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"A Tale of Two Cities\", \"science fiction\").\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"A Tale of Two Cities\", 800).\n.decl Answer()\nAnswer() :- Has_genre(\"A Tale of Two Cities\", genre), Has_n_pages(\"A Tale of Two Cities\", n_pages), genre = \"science fiction\", n_pages > 500.\n.output Answer\n\n", "completions": [".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"A Tale of Two Cities\", \"science fiction\").\n.decl Has_n_pages(Book:symbol, N_pages:float)\nHas_n_pages(\"A Tale of Two Cities\", 800).\n.decl Answer()\nAnswer() :- Has_genre(\"A Tale of Two Cities\", genre), Has_n_pages(\"A Tale of Two Cities\", n_pages), genre = \"science fiction\", n_pages > 500.\n.output Answer\n\n"]}
{"id": 1314, "answer": false, "completion": ".decl Is_blacklisted(Person:symbol)\nIs_blacklisted(\"Michael Vick\").\n.decl Is_member(Person:symbol, Group:symbol)\nIs_member(\"Michael Vick\", \"People for the Ethical Treatment of Animals\").\n.decl Answer()\nAnswer() :- Is_blacklisted(\"Michael Vick\"), Is_member(\"Michael Vick\", \"People for the Ethical Treatment of Animals\").\n.output Answer\n\n", "completions": [".decl Is_blacklisted(Person:symbol)\nIs_blacklisted(\"Michael Vick\").\n.decl Is_member(Person:symbol, Group:symbol)\nIs_member(\"Michael Vick\", \"People for the Ethical Treatment of Animals\").\n.decl Answer()\nAnswer() :- Is_blacklisted(\"Michael Vick\"), Is_member(\"Michael Vick\", \"People for the Ethical Treatment of Animals\").\n.output Answer\n\n"]}
{"id": 1315, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"seawater\", 1).\nHas_density(\"six year old\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"seawater\", density1), Has_density(\"six year old\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"seawater\", 1).\nHas_density(\"six year old\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"seawater\", density1), Has_density(\"six year old\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1316, "answer": false, "completion": ".decl From_country(Person:symbol, Country:symbol)\nFrom_country(\"Aki\", \"Japan\").\nFrom_country(\"Bjorn\", \"Norway\").\nFrom_country(\"Cecilia\", \"Sweden\").\nFrom_country(\"Dag\", \"Norway\").\nFrom_country(\"Eirik\", \"Norway\").\nFrom_country(\"Fridtjof\", \"Norway\").\nFrom_country(\"Gudrun\", \"Norway\").\nFrom_country(\"Hanna\", \"Norway\").\nFrom_country(\"Ivar\", \"Norway\").\nFrom_country(\"Jens\", \"Norway\").\nFrom_country(\"Kari\", \"Norway\").\nFrom_country(\"Lars\", \"Norway\").\nFrom_country(\"Mari\", \"Norway\").\nFrom_country(\"Nils\", \"Norway\").\nFrom_country(\"Olav\", \"Norway\").\nFrom_country(\"Peder\", \"Norway\").\nFrom_country(\"Rolf\", \"Norway\").\nFrom_country(\"Sigurd\", \"Norway\").\nFrom_country(\"Tore\", \"Norway\").\nFrom_country(\"Ulf\", \"Norway\").\nFrom_country(\"Vidar\", \"Norway\").\nFrom_country(\"Wenche\", \"Norway\").\nFrom_country(\"Xenia\", \"Norway\").\nFrom_country(\"Yngve\", \"Norway\").\nFrom_country(\"Zander\", \"Norway\").\n.decl To_country(Person:symbol, Country:symbol)\nTo_country(\"Aki\", \"Sweden\").\nTo_country(\"Bjorn\", \"Sweden\").\nTo_country(\"Cecilia\", \"Sweden\").\nTo_country(\"Dag\", \"Sweden\").\nTo_country(\"Eirik\", \"Sweden\").\nTo_country(\"Fridtjof\", \"Sweden\").\nTo_country(\"Gudrun\", \"Sweden\").\nTo_country(\"Hanna\", \"Sweden\").\nTo_country(\"Ivar\", \"Sweden\").\nTo_country(\"Jens\", \"Sweden\").\nTo_country(\"Kari\", \"Sweden\").\nTo_country(\"Lars\", \"Sweden\").\nTo_country(\"Mari\", \"Sweden\").\nTo_country(\"Nils\", \"Sweden\").\nTo_country(\"Olav\", \"Sweden\").\nTo_country(\"Peder\", \"Sweden\").\nTo_country(\"Rolf\", \"Sweden\").\nTo_country(\"Sigurd\", \"Sweden\").\nTo_country(\"Tore\", \"Sweden\").\nTo_country(\"Ulf\", \"Sweden\").\nTo_country(\"Vidar\", \"Sweden\").\nTo_country(\"Wenche\", \"Sweden\").\nTo_country(\"Xenia\", \"Sweden\").\nTo_country(\"Yngve\", \"Sweden\").\nTo_country(\"Zander\", \"Sweden\").\n.decl Answer()\nAnswer() :- From_country(person, country1), To_country(person, country2), country1 = country2.\n.output Answer\n\n\n", "completions": [".decl From_country(Person:symbol, Country:symbol)\nFrom_country(\"Aki\", \"Japan\").\nFrom_country(\"Bjorn\", \"Norway\").\nFrom_country(\"Cecilia\", \"Sweden\").\nFrom_country(\"Dag\", \"Norway\").\nFrom_country(\"Eirik\", \"Norway\").\nFrom_country(\"Fridtjof\", \"Norway\").\nFrom_country(\"Gudrun\", \"Norway\").\nFrom_country(\"Hanna\", \"Norway\").\nFrom_country(\"Ivar\", \"Norway\").\nFrom_country(\"Jens\", \"Norway\").\nFrom_country(\"Kari\", \"Norway\").\nFrom_country(\"Lars\", \"Norway\").\nFrom_country(\"Mari\", \"Norway\").\nFrom_country(\"Nils\", \"Norway\").\nFrom_country(\"Olav\", \"Norway\").\nFrom_country(\"Peder\", \"Norway\").\nFrom_country(\"Rolf\", \"Norway\").\nFrom_country(\"Sigurd\", \"Norway\").\nFrom_country(\"Tore\", \"Norway\").\nFrom_country(\"Ulf\", \"Norway\").\nFrom_country(\"Vidar\", \"Norway\").\nFrom_country(\"Wenche\", \"Norway\").\nFrom_country(\"Xenia\", \"Norway\").\nFrom_country(\"Yngve\", \"Norway\").\nFrom_country(\"Zander\", \"Norway\").\n.decl To_country(Person:symbol, Country:symbol)\nTo_country(\"Aki\", \"Sweden\").\nTo_country(\"Bjorn\", \"Sweden\").\nTo_country(\"Cecilia\", \"Sweden\").\nTo_country(\"Dag\", \"Sweden\").\nTo_country(\"Eirik\", \"Sweden\").\nTo_country(\"Fridtjof\", \"Sweden\").\nTo_country(\"Gudrun\", \"Sweden\").\nTo_country(\"Hanna\", \"Sweden\").\nTo_country(\"Ivar\", \"Sweden\").\nTo_country(\"Jens\", \"Sweden\").\nTo_country(\"Kari\", \"Sweden\").\nTo_country(\"Lars\", \"Sweden\").\nTo_country(\"Mari\", \"Sweden\").\nTo_country(\"Nils\", \"Sweden\").\nTo_country(\"Olav\", \"Sweden\").\nTo_country(\"Peder\", \"Sweden\").\nTo_country(\"Rolf\", \"Sweden\").\nTo_country(\"Sigurd\", \"Sweden\").\nTo_country(\"Tore\", \"Sweden\").\nTo_country(\"Ulf\", \"Sweden\").\nTo_country(\"Vidar\", \"Sweden\").\nTo_country(\"Wenche\", \"Sweden\").\nTo_country(\"Xenia\", \"Sweden\").\nTo_country(\"Yngve\", \"Sweden\").\nTo_country(\"Zander\", \"Sweden\").\n.decl Answer()\nAnswer() :- From_country(person, country1), To_country(person, country2), country1 = country2.\n.output Answer\n\n\n"]}
{"id": 1317, "answer": false, "completion": ".decl Has_executive_order_power(Person:symbol, Power:float)\nHas_executive_order_power(\"John Key\", 1).\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"John Key\", \"New Zealand\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Barack Obama\", \"USA\").\n.decl Answer()\nAnswer() :- Has_executive_order_power(\"John Key\", power), Has_country(\"John Key\", country), Has_country(\"Barack Obama\", country), power > 1.\n.output Answer\n\n", "completions": [".decl Has_executive_order_power(Person:symbol, Power:float)\nHas_executive_order_power(\"John Key\", 1).\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"John Key\", \"New Zealand\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Barack Obama\", \"USA\").\n.decl Answer()\nAnswer() :- Has_executive_order_power(\"John Key\", power), Has_country(\"John Key\", country), Has_country(\"Barack Obama\", country), power > 1.\n.output Answer\n\n"]}
{"id": 1318, "answer": true, "completion": ".decl Is_combination_of(Object:symbol, Object_A:symbol, Object_B:symbol)\nIs_combination_of(\"Freya\", \"Athena\", \"Aphrodite\").\n.decl Answer()\nAnswer() :- Is_combination_of(\"Freya\", object_a, object_b), Is_combination_of(object_a, \"Athena\", \"Aphrodite\"), Is_combination_of(object_b, \"Athena\", \"Aphrodite\").\n.output Answer\n\n", "completions": [".decl Is_combination_of(Object:symbol, Object_A:symbol, Object_B:symbol)\nIs_combination_of(\"Freya\", \"Athena\", \"Aphrodite\").\n.decl Answer()\nAnswer() :- Is_combination_of(\"Freya\", object_a, object_b), Is_combination_of(object_a, \"Athena\", \"Aphrodite\"), Is_combination_of(object_b, \"Athena\", \"Aphrodite\").\n.output Answer\n\n"]}
{"id": 1319, "answer": true, "completion": ".decl Has_n_wins(Boxer:symbol, N_wins:float)\nHas_n_wins(\"Jack Dempsey\", 26).\nHas_n_wins(\"Jack Dempsey\", 23).\n.decl Has_weight_class(Boxer:symbol, Weight_class:symbol)\nHas_weight_class(\"Jack Dempsey\", \"heavyweight\").\nHas_weight_class(\"Jack Dempsey\", \"light heavyweight\").\n.decl Answer()\nAnswer() :- Has_n_wins(\"Jack Dempsey\", n_wins1), Has_weight_class(\"Jack Dempsey\", weight_class1), Has_n_wins(\"Jack Dempsey\", n_wins2), Has_weight_class(\"Jack Dempsey\", weight_class2), weight_class1 \\= weight_class2, n_wins1 > n_wins2.\n.output Answer\n\n", "completions": [".decl Has_n_wins(Boxer:symbol, N_wins:float)\nHas_n_wins(\"Jack Dempsey\", 26).\nHas_n_wins(\"Jack Dempsey\", 23).\n.decl Has_weight_class(Boxer:symbol, Weight_class:symbol)\nHas_weight_class(\"Jack Dempsey\", \"heavyweight\").\nHas_weight_class(\"Jack Dempsey\", \"light heavyweight\").\n.decl Answer()\nAnswer() :- Has_n_wins(\"Jack Dempsey\", n_wins1), Has_weight_class(\"Jack Dempsey\", weight_class1), Has_n_wins(\"Jack Dempsey\", n_wins2), Has_weight_class(\"Jack Dempsey\", weight_class2), weight_class1 \\= weight_class2, n_wins1 > n_wins2.\n.output Answer\n\n"]}
{"id": 1320, "answer": false, "completion": ".decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"new Seinfeld episode\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"new Seinfeld episode\", n_days), n_days = 365.\n.output Answer\n\n", "completions": [".decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"new Seinfeld episode\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_days(\"new Seinfeld episode\", n_days), n_days = 365.\n.output Answer\n\n"]}
{"id": 1321, "answer": true, "completion": ".decl Speaks(Country:symbol, Language:symbol)\nSpeaks(\"Burundi\", \"French\").\nSpeaks(\"Burundi\", \"Kirundi\").\nSpeaks(\"Canada\", \"English\").\nSpeaks(\"Canada\", \"French\").\nSpeaks(\"New Brunswick\", \"English\").\nSpeaks(\"New Brunswick\", \"French\").\n.decl Answer()\nAnswer() :- Speaks(\"Burundi\", language), Speaks(\"Canada\", language), Speaks(\"New Brunswick\", language).\n.output Answer\n\n", "completions": [".decl Speaks(Country:symbol, Language:symbol)\nSpeaks(\"Burundi\", \"French\").\nSpeaks(\"Burundi\", \"Kirundi\").\nSpeaks(\"Canada\", \"English\").\nSpeaks(\"Canada\", \"French\").\nSpeaks(\"New Brunswick\", \"English\").\nSpeaks(\"New Brunswick\", \"French\").\n.decl Answer()\nAnswer() :- Speaks(\"Burundi\", language), Speaks(\"Canada\", language), Speaks(\"New Brunswick\", language).\n.output Answer\n\n"]}
{"id": 1322, "answer": false, "completion": ".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Carmine's\", \"olive oil\").\n.decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Carmine's\", \"garlic\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Carmine's\", ingredient), Has_ingredient(\"Carmine's\", ingredient2), ingredient != ingredient2.\n.output Answer\n\n", "completions": [".decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Carmine's\", \"olive oil\").\n.decl Has_ingredient(Food:symbol, Ingredient:symbol)\nHas_ingredient(\"Carmine's\", \"garlic\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Carmine's\", ingredient), Has_ingredient(\"Carmine's\", ingredient2), ingredient != ingredient2.\n.output Answer\n\n"]}
{"id": 1323, "answer": true, "completion": ".decl Has_danger_level(Job:symbol, Danger_level:float)\nHas_danger_level(\"mail carrier\", 0.8).\nHas_danger_level(\"soldier\", 0.8).\n.decl Answer()\nAnswer() :- Has_danger_level(\"mail carrier\", danger_level), Has_danger_level(\"soldier\", danger_level2), danger_level > danger_level2.\n.output Answer\n\n", "completions": [".decl Has_danger_level(Job:symbol, Danger_level:float)\nHas_danger_level(\"mail carrier\", 0.8).\nHas_danger_level(\"soldier\", 0.8).\n.decl Answer()\nAnswer() :- Has_danger_level(\"mail carrier\", danger_level), Has_danger_level(\"soldier\", danger_level2), danger_level > danger_level2.\n.output Answer\n\n"]}
{"id": 1324, "answer": false, "completion": ".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"duck\", 2).\nHas_n_legs(\"human\", 2).\n.decl Has_n_arms(Animal:symbol, N_arms:float)\nHas_n_arms(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_legs(\"duck\", n_legs), Has_n_arms(\"human\", n_arms), n_legs > n_arms.\n.output Answer\n\n", "completions": [".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"duck\", 2).\nHas_n_legs(\"human\", 2).\n.decl Has_n_arms(Animal:symbol, N_arms:float)\nHas_n_arms(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_legs(\"duck\", n_legs), Has_n_arms(\"human\", n_arms), n_legs > n_arms.\n.output Answer\n\n"]}
{"id": 1325, "answer": false, "completion": ".decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"cross\", \"crucifixion\").\nHas_purpose(\"cross\", \"reformation\").\nHas_purpose(\"cross\", \"martyrdom\").\nHas_purpose(\"cross\", \"religion\").\nHas_purpose(\"cross\", \"symbol\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross", "completions": [".decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"cross\", \"crucifixion\").\nHas_purpose(\"cross\", \"reformation\").\nHas_purpose(\"cross\", \"martyrdom\").\nHas_purpose(\"cross\", \"religion\").\nHas_purpose(\"cross\", \"symbol\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross\").\nHas_purpose(\"cross\", \"Christianity\").\nHas_purpose(\"cross\", \"Christian symbol\").\nHas_purpose(\"cross\", \"Christian cross"]}
{"id": 1326, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"milk\", 1).\nHas_density(\"cream\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"milk\", density1), Has_density(\"cream\", density2), density1 < density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"milk\", 1).\nHas_density(\"cream\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"milk\", density1), Has_density(\"cream\", density2), density1 < density2.\n.output Answer\n\n\n"]}
{"id": 1327, "answer": false, "completion": ".decl Has_chemical_formula(Chemical:symbol, Formula:symbol)\nHas_chemical_formula(\"Ammonia\", \"NH3\").\nHas_chemical_formula(\"Clorox\", \"ClO2\").\n.decl Has_chemical_formula(Chemical:symbol, Formula:symbol)\nHas_chemical_formula(\"Ammonia\", \"NH3\").\nHas_chemical_formula(\"Clorox\", \"ClO2\").\n.decl Answer()\nAnswer() :- Has_chemical_formula(\"Ammonia\", formula1), Has_chemical_formula(\"Clorox\", formula2), formula1 = formula2.\n.output Answer\n\n", "completions": [".decl Has_chemical_formula(Chemical:symbol, Formula:symbol)\nHas_chemical_formula(\"Ammonia\", \"NH3\").\nHas_chemical_formula(\"Clorox\", \"ClO2\").\n.decl Has_chemical_formula(Chemical:symbol, Formula:symbol)\nHas_chemical_formula(\"Ammonia\", \"NH3\").\nHas_chemical_formula(\"Clorox\", \"ClO2\").\n.decl Answer()\nAnswer() :- Has_chemical_formula(\"Ammonia\", formula1), Has_chemical_formula(\"Clorox\", formula2), formula1 = formula2.\n.output Answer\n\n"]}
{"id": 1328, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Deacon\", \"Deacon\").\nHas_name(\"Deacon\", \"John\").\nHas_name(\"Deacon\", \"John-Paul\").\nHas_name(\"Deacon\", \"John-Paul-Dennis\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul-Dennis\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul-Dennis-Michael\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Deacon\", \"Deacon\").\nHas_name(\"Deacon\", \"John\").\nHas_name(\"Deacon\", \"John-Paul\").\nHas_name(\"Deacon\", \"John-Paul-Dennis\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul-Dennis\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-Matthew-Samuel-Mark-Luke-John-Paul-Dennis-Michael\").\nHas_name(\"Deacon\", \"John-Paul-Dennis-Michael-Thomas-David-James-Robert-William-Richard-Joseph-Thomas-Christopher-Daniel-"]}
{"id": 1329, "answer": false, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Ahura Mazda\", \"Zoroastrianism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Hinduism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Judaism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Buddhism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Christianity\").\nBelongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Ahura Mazda\", \"Zoroastrianism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Hinduism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Judaism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Buddhism\").\nBelongs_to_religion(\"Ahura Mazda\", \"Christianity\").\nBelongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Ahura Mazda\", \"Islam\").\n.output Answer\n\n"]}
{"id": 1330, "answer": true, "completion": ".decl Is_associated_with(Person_A:symbol, Person_B:symbol)\nIs_associated_with(\"Nine Inch Nails\", \"David Lynch\").\n.decl Answer()\nAnswer() :- Is_associated_with(\"Nine Inch Nails\", person_b), Is_associated_with(\"David Lynch\", person_b).\n.output Answer\n\n", "completions": [".decl Is_associated_with(Person_A:symbol, Person_B:symbol)\nIs_associated_with(\"Nine Inch Nails\", \"David Lynch\").\n.decl Answer()\nAnswer() :- Is_associated_with(\"Nine Inch Nails\", person_b), Is_associated_with(\"David Lynch\", person_b).\n.output Answer\n\n"]}
{"id": 1331, "answer": true, "completion": ".decl Supported(Country:symbol, Country_2:symbol)\nSupported(\"Switzerland\", \"United States\").\n.decl Answer()\nAnswer() :- Supported(\"Switzerland\", country2), Supported(country2, \"United States\").\n.output Answer\n\n", "completions": [".decl Supported(Country:symbol, Country_2:symbol)\nSupported(\"Switzerland\", \"United States\").\n.decl Answer()\nAnswer() :- Supported(\"Switzerland\", country2), Supported(country2, \"United States\").\n.output Answer\n\n"]}
{"id": 1332, "answer": true, "completion": ".decl Has_leaf_type(Tree:symbol, Leaf_type:symbol)\nHas_leaf_type(\"Christmas tree\", \"deciduous\").\n.decl Answer()\nAnswer() :- Has_leaf_type(\"Christmas tree\", leaf_type), leaf_type = \"deciduous\".\n.output Answer\n\n", "completions": [".decl Has_leaf_type(Tree:symbol, Leaf_type:symbol)\nHas_leaf_type(\"Christmas tree\", \"deciduous\").\n.decl Answer()\nAnswer() :- Has_leaf_type(\"Christmas tree\", leaf_type), leaf_type = \"deciduous\".\n.output Answer\n\n"]}
{"id": 1333, "answer": false, "completion": ".decl Has_appearances_in_MCU(Character:symbol, N_appearances:float)\nHas_appearances_in_MCU(\"Iron Man\", 6).\nHas_appearances_in_MCU(\"Captain America\", 6).\nHas_appearances_in_MCU(\"Spider-Man\", 3).\nHas_appearances_in_MCU(\"Doctor Strange\", 3).\nHas_appearances_in_MCU(\"Black Panther\", 3).\nHas_appearances_in_MCU(\"Thor\", 3).\nHas_appearances_in_MCU(\"Hulk\", 3).\nHas_appearances_in_MCU(\"Black Widow\", 2).\nHas_appearances_in_MCU(\"Hawkeye\", 2).\nHas_appearances_in_MCU(\"Ant-Man\", 2).\nHas_appearances_in_MCU(\"Vision\", 2).\nHas_appearances_in_MCU(\"Scarlet Witch\", 2).\nHas_appearances_in_MCU(\"War Machine\", 1).\nHas_appearances_in_MCU(\"Falcon\", 1).\nHas_appearances_in_MCU(\"Groot\", 1).\nHas_appearances_in_MCU(\"Rocket\", 1).\nHas_appearances_in_MCU(\"Nebula\", 1).\nHas_appearances_in_MCU(\"Wong\", 1).\nHas_appearances_in_MCU(\"Mantis\", 1).\nHas_appearances_in_MCU(\"Drax\", 1).\nHas_appearances_in_MCU(\"Okoye\", 1).\nHas_appearances_in_MCU(\"Shuri\", 1).\nHas_appearances_in_MCU(\"Peter Quill\", 1).\nHas_appearances_in_MCU(\"Gamora\", 1).\nHas_appearances_in_MCU(\"Loki\", 1).\nHas_appearances_in_MCU(\"Nick Fury\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"Johann Schmidt\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_", "completions": [".decl Has_appearances_in_MCU(Character:symbol, N_appearances:float)\nHas_appearances_in_MCU(\"Iron Man\", 6).\nHas_appearances_in_MCU(\"Captain America\", 6).\nHas_appearances_in_MCU(\"Spider-Man\", 3).\nHas_appearances_in_MCU(\"Doctor Strange\", 3).\nHas_appearances_in_MCU(\"Black Panther\", 3).\nHas_appearances_in_MCU(\"Thor\", 3).\nHas_appearances_in_MCU(\"Hulk\", 3).\nHas_appearances_in_MCU(\"Black Widow\", 2).\nHas_appearances_in_MCU(\"Hawkeye\", 2).\nHas_appearances_in_MCU(\"Ant-Man\", 2).\nHas_appearances_in_MCU(\"Vision\", 2).\nHas_appearances_in_MCU(\"Scarlet Witch\", 2).\nHas_appearances_in_MCU(\"War Machine\", 1).\nHas_appearances_in_MCU(\"Falcon\", 1).\nHas_appearances_in_MCU(\"Groot\", 1).\nHas_appearances_in_MCU(\"Rocket\", 1).\nHas_appearances_in_MCU(\"Nebula\", 1).\nHas_appearances_in_MCU(\"Wong\", 1).\nHas_appearances_in_MCU(\"Mantis\", 1).\nHas_appearances_in_MCU(\"Drax\", 1).\nHas_appearances_in_MCU(\"Okoye\", 1).\nHas_appearances_in_MCU(\"Shuri\", 1).\nHas_appearances_in_MCU(\"Peter Quill\", 1).\nHas_appearances_in_MCU(\"Gamora\", 1).\nHas_appearances_in_MCU(\"Loki\", 1).\nHas_appearances_in_MCU(\"Nick Fury\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"Johann Schmidt\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_appearances_in_MCU(\"Maria Hill\", 1).\nHas_appearances_in_MCU(\"James Rhodes\", 1).\nHas_appearances_in_MCU(\"Pepper Potts\", 1).\nHas_appearances_in_MCU(\"Phil Coulson\", 1).\nHas_"]}
{"id": 1334, "answer": false, "completion": ".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"compass\", 0.1).\nHas_magnetic_field(\"Earth\", 0.1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"compass\", magnetic_field1), Has_magnetic_field(\"Earth\", magnetic_field2), magnetic_field1 > magnetic_field2.\n.output Answer\n\n", "completions": [".decl Has_magnetic_field(Object:symbol, Magnetic_field:float)\nHas_magnetic_field(\"compass\", 0.1).\nHas_magnetic_field(\"Earth\", 0.1).\n.decl Answer()\nAnswer() :- Has_magnetic_field(\"compass\", magnetic_field1), Has_magnetic_field(\"Earth\", magnetic_field2), magnetic_field1 > magnetic_field2.\n.output Answer\n\n"]}
{"id": 1335, "answer": true, "completion": ".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"mentruation\", 24).\n.decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"tampon\", 1).\n.decl Answer()\nAnswer() :- Has_duration(\"mentruation\", duration), Has_duration(\"tampon\", duration).\n.output Answer\n\n", "completions": [".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"mentruation\", 24).\n.decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"tampon\", 1).\n.decl Answer()\nAnswer() :- Has_duration(\"mentruation\", duration), Has_duration(\"tampon\", duration).\n.output Answer\n\n"]}
{"id": 1336, "answer": false, "completion": ".decl Has_character(Movie:symbol, Character:symbol)\nHas_character(\"Legend of Robin Hood\", \"Robin Hood\").\nHas_character(\"Legend of Robin Hood\", \"Sheriff of Nottingham\").\nHas_character(\"Legend of Robin Hood\", \"Marian\").\nHas_character(\"Legend of Robin Hood\", \"Prince John\").\n.decl Is_fictional(Character:symbol)\nIs_fictional(\"Robin Hood\").\nIs_fictional(\"Sheriff of Nottingham\").\nIs_fictional(\"Marian\").\nIs_fictional(\"Prince John\").\n.decl Answer()\nAnswer() :- Has_character(\"Legend of Robin Hood\", character), Is_fictional(character).\n.output Answer\n\n", "completions": [".decl Has_character(Movie:symbol, Character:symbol)\nHas_character(\"Legend of Robin Hood\", \"Robin Hood\").\nHas_character(\"Legend of Robin Hood\", \"Sheriff of Nottingham\").\nHas_character(\"Legend of Robin Hood\", \"Marian\").\nHas_character(\"Legend of Robin Hood\", \"Prince John\").\n.decl Is_fictional(Character:symbol)\nIs_fictional(\"Robin Hood\").\nIs_fictional(\"Sheriff of Nottingham\").\nIs_fictional(\"Marian\").\nIs_fictional(\"Prince John\").\n.decl Answer()\nAnswer() :- Has_character(\"Legend of Robin Hood\", character), Is_fictional(character).\n.output Answer\n\n"]}
{"id": 1337, "answer": true, "completion": ".decl Has_n_hands(Weapon:symbol, N_hands:float)\nHas_n_hands(\"sword\", 2).\nHas_n_hands(\"fist\", 1).\nHas_n_hands(\"Soul Calibur\", 2).\n.decl Has_n_hands(Weapon:symbol, N_hands:float)\nHas_n_hands(\"Gladiator\", 2).\n.decl Answer()\nAnswer() :- Has_n_hands(\"Gladiator\", n_hands1), Has_n_hands(\"Soul Calibur\", n_hands2), n_hands1 < n_hands2.\n.output Answer\n\n", "completions": [".decl Has_n_hands(Weapon:symbol, N_hands:float)\nHas_n_hands(\"sword\", 2).\nHas_n_hands(\"fist\", 1).\nHas_n_hands(\"Soul Calibur\", 2).\n.decl Has_n_hands(Weapon:symbol, N_hands:float)\nHas_n_hands(\"Gladiator\", 2).\n.decl Answer()\nAnswer() :- Has_n_hands(\"Gladiator\", n_hands1), Has_n_hands(\"Soul Calibur\", n_hands2), n_hands1 < n_hands2.\n.output Answer\n\n"]}
{"id": 1338, "answer": false, "completion": ".decl Bought(Person:symbol, Item:symbol)\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"violin\").\nBought(\"Mozart\", \"flute\").\nBought(\"Mozart\", \"clarinet\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn", "completions": [".decl Bought(Person:symbol, Item:symbol)\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"violin\").\nBought(\"Mozart\", \"flute\").\nBought(\"Mozart\", \"clarinet\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn\").\nBought(\"Mozart\", \"harp\").\nBought(\"Mozart\", \"organ\").\nBought(\"Mozart\", \"guitar\").\nBought(\"Mozart\", \"piano\").\nBought(\"Mozart\", \"saxophone\").\nBought(\"Mozart\", \"trumpet\").\nBought(\"Mozart\", \"trombone\").\nBought(\"Mozart\", \"tuba\").\nBought(\"Mozart\", \"viola\").\nBought(\"Mozart\", \"cello\").\nBought(\"Mozart\", \"oboe\").\nBought(\"Mozart\", \"bassoon\").\nBought(\"Mozart\", \"horn"]}
{"id": 1339, "answer": false, "completion": ".decl Inspired_by(Artist_A:symbol, Artist_B:symbol)\nInspired_by(\"Nine Inch Nails\", \"Aretha Franklin\").\n.decl Inspired_by(Artist_A:symbol, Artist_B:symbol)\nInspired_by(\"Aretha Franklin\", \"Aretha Franklin\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Nine Inch Nails\", \"Aretha Franklin\").\nAnswer() :- Inspired_by(\"Aretha Franklin\", \"Aretha Franklin\").\n.output Answer\n\n", "completions": [".decl Inspired_by(Artist_A:symbol, Artist_B:symbol)\nInspired_by(\"Nine Inch Nails\", \"Aretha Franklin\").\n.decl Inspired_by(Artist_A:symbol, Artist_B:symbol)\nInspired_by(\"Aretha Franklin\", \"Aretha Franklin\").\n.decl Answer()\nAnswer() :- Inspired_by(\"Nine Inch Nails\", \"Aretha Franklin\").\nAnswer() :- Inspired_by(\"Aretha Franklin\", \"Aretha Franklin\").\n.output Answer\n\n"]}
{"id": 1340, "answer": false, "completion": ".decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\n", "completions": [".decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"John\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Mary\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Jane\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Peter\").\n.decl Lactose_intolerant(Person:symbol)\nLactose_intolerant(\"Paul\").\n.decl Lactose_intolerant(Person:symbol)\n"]}
{"id": 1341, "answer": true, "completion": ".decl Works_during_summer(Person:symbol, Season:symbol)\nWorks_during_summer(\"Santa Claus\", \"summer\").\n.decl Answer()\nAnswer() :- Works_during_summer(\"Santa Claus\", season), season = \"summer\".\n.output Answer\n\n", "completions": [".decl Works_during_summer(Person:symbol, Season:symbol)\nWorks_during_summer(\"Santa Claus\", \"summer\").\n.decl Answer()\nAnswer() :- Works_during_summer(\"Santa Claus\", season), season = \"summer\".\n.output Answer\n\n"]}
{"id": 1342, "answer": true, "completion": ".decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"bachelor's degree\", 4).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"bachelor's degree\", n_years), n_years = 4.\n.output Answer\n\n", "completions": [".decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"bachelor's degree\", 4).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"bachelor's degree\", n_years), n_years = 4.\n.output Answer\n\n"]}
{"id": 1343, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\").\nHappens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"Harry Potter and the Philosopher's Stone\", \"Albania\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\"), Happens_in_country(\"Harry Potter and the Philosopher's Stone\", \"Albania\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\").\nHappens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"Harry Potter and the Philosopher's Stone\", \"Albania\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Harry Potter and the Philosopher's Stone\", \"Albanian Civil War\"), Happens_in_country(\"Harry Potter and the Philosopher's Stone\", \"Albania\").\n.output Answer\n\n"]}
{"id": 1344, "answer": true, "completion": ".decl Performed_by(Song:symbol, Artist:symbol)\nPerformed_by(\"Empire State of Mind\", \"Jay-Z\").\nPerformed_by(\"Hello\", \"Louis Armstrong\").\nPerformed_by(\"Hello\", \"Jay-Z\").\n.decl Performed_by(Song:symbol, Artist:symbol)\nPerformed_by(\"Hello\", \"Jay-Z\").\n.decl Answer()\nAnswer() :- Performed_by(\"Hello\", \"Louis Armstrong\"), Performed_by(\"Hello\", \"Jay-Z\").\n.output Answer\n\n", "completions": [".decl Performed_by(Song:symbol, Artist:symbol)\nPerformed_by(\"Empire State of Mind\", \"Jay-Z\").\nPerformed_by(\"Hello\", \"Louis Armstrong\").\nPerformed_by(\"Hello\", \"Jay-Z\").\n.decl Performed_by(Song:symbol, Artist:symbol)\nPerformed_by(\"Hello\", \"Jay-Z\").\n.decl Answer()\nAnswer() :- Performed_by(\"Hello\", \"Louis Armstrong\"), Performed_by(\"Hello\", \"Jay-Z\").\n.output Answer\n\n"]}
{"id": 1345, "answer": true, "completion": ".decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"Central Park Zoo\", \"New York City\").\nIs_in_area(\"Central Park Zoo\", \"Manhattan\").\nIs_in_area(\"Central Park Zoo\", \"New York State\").\nIs_in_area(\"Central Park Zoo\", \"USA\").\nIs_in_area(\"New York City\", \"USA\").\nIs_in_area(\"Manhattan\", \"New York City\").\nIs_in_area(\"New York State\", \"New York City\").\nIs_in_area(\"USA\", \"New York City\").\nIs_in_area(\"USA\", \"Manhattan\").\nIs_in_area(\"USA\", \"New York State\").\n.decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"robusto\", \"Central Park Zoo\").\n.decl Answer()\nAnswer() :- Is_in_area(\"robusto\", area1), Is_in_area(\"Central Park Zoo\", area2), area1 != area2.\n.output Answer\n\n", "completions": [".decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"Central Park Zoo\", \"New York City\").\nIs_in_area(\"Central Park Zoo\", \"Manhattan\").\nIs_in_area(\"Central Park Zoo\", \"New York State\").\nIs_in_area(\"Central Park Zoo\", \"USA\").\nIs_in_area(\"New York City\", \"USA\").\nIs_in_area(\"Manhattan\", \"New York City\").\nIs_in_area(\"New York State\", \"New York City\").\nIs_in_area(\"USA\", \"New York City\").\nIs_in_area(\"USA\", \"Manhattan\").\nIs_in_area(\"USA\", \"New York State\").\n.decl Is_in_area(Object:symbol, Area:symbol)\nIs_in_area(\"robusto\", \"Central Park Zoo\").\n.decl Answer()\nAnswer() :- Is_in_area(\"robusto\", area1), Is_in_area(\"Central Park Zoo\", area2), area1 != area2.\n.output Answer\n\n"]}
{"id": 1346, "answer": false, "completion": ".decl Has_detection_method(Detector:symbol, Method:symbol)\nHas_detection_method(\"Mercury\", \"antigen\").\nHas_detection_method(\"Mercury\", \"antibody\").\n.decl Has_detection_method(Detector:symbol, Method:symbol)\nHas_detection_method(\"Coronavirus\", \"antigen\").\nHas_detection_method(\"Coronavirus\", \"antibody\").\n.decl Answer()\nAnswer() :- Has_detection_method(\"Mercury\", method), Has_detection_method(\"Coronavirus\", method).\n.output Answer\n\n", "completions": [".decl Has_detection_method(Detector:symbol, Method:symbol)\nHas_detection_method(\"Mercury\", \"antigen\").\nHas_detection_method(\"Mercury\", \"antibody\").\n.decl Has_detection_method(Detector:symbol, Method:symbol)\nHas_detection_method(\"Coronavirus\", \"antigen\").\nHas_detection_method(\"Coronavirus\", \"antibody\").\n.decl Answer()\nAnswer() :- Has_detection_method(\"Mercury\", method), Has_detection_method(\"Coronavirus\", method).\n.output Answer\n\n"]}
{"id": 1347, "answer": true, "completion": ".decl Has_smartphone(Person:symbol)\nHas_smartphone(\"Al Capone\").\n.decl Answer()\nAnswer() :- Has_smartphone(\"Al Capone\").\n.output Answer\n\n", "completions": [".decl Has_smartphone(Person:symbol)\nHas_smartphone(\"Al Capone\").\n.decl Answer()\nAnswer() :- Has_smartphone(\"Al Capone\").\n.output Answer\n\n"]}
{"id": 1348, "answer": true, "completion": ".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\n.decl Is_candidate(Person:symbol)\nIs_candidate(\"Benjamin Franklin\").\n.decl Answer()\nAnswer() :- Is_candidate(\"Benjamin Franklin\"), Is_prime(number).\n.output Answer\n\n", "completions": [".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\n.decl Is_candidate(Person:symbol)\nIs_candidate(\"Benjamin Franklin\").\n.decl Answer()\nAnswer() :- Is_candidate(\"Benjamin Franklin\"), Is_prime(number).\n.output Answer\n\n"]}
{"id": 1349, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Jason Voorhees\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Martyrs\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Jason Voorhees\", n_members1), Has_n_members(\"Martyrs\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Jason Voorhees\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Martyrs\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Jason Voorhees\", n_members1), Has_n_members(\"Martyrs\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1350, "answer": false, "completion": ".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"teacher\", \"teaching\").\nHas_job(\"teacher\", \"teaching\").\n.decl Answer()\nAnswer() :- Has_job(\"teacher\", job), Has_job(\"teacher\", job2), job != job2.\n.output Answer\n\n", "completions": [".decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"teacher\", \"teaching\").\nHas_job(\"teacher\", \"teaching\").\n.decl Answer()\nAnswer() :- Has_job(\"teacher\", job), Has_job(\"teacher\", job2), job != job2.\n.output Answer\n\n"]}
{"id": 1351, "answer": false, "completion": ".decl Has_n_eyes(Object:symbol, N_eyes:float)\nHas_n_eyes(\"fly\", 2).\nHas_n_eyes(\"human\", 2).\n.decl Has_n_legs(Object:symbol, N_legs:float)\nHas_n_legs(\"fly\", 6).\nHas_n_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"fly\", n_eyes1), Has_n_eyes(\"human\", n_eyes2), Has_n_legs(\"fly\", n_legs1), Has_n_legs(\"human\", n_legs2), n_eyes1 > n_eyes2, n_legs1 > n_legs2.\n.output Answer\n\n", "completions": [".decl Has_n_eyes(Object:symbol, N_eyes:float)\nHas_n_eyes(\"fly\", 2).\nHas_n_eyes(\"human\", 2).\n.decl Has_n_legs(Object:symbol, N_legs:float)\nHas_n_legs(\"fly\", 6).\nHas_n_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_eyes(\"fly\", n_eyes1), Has_n_eyes(\"human\", n_eyes2), Has_n_legs(\"fly\", n_legs1), Has_n_legs(\"human\", n_legs2), n_eyes1 > n_eyes2, n_legs1 > n_legs2.\n.output Answer\n\n"]}
{"id": 1352, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"white\").\nHas_color(\"rainbow\", \"black\").\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"green\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"yin\", \"black\").\nHas_color(\"yang\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"rainbow\", color1), Has_color(\"yin\", color2), Has_color(\"yang\", color3), color1 = color2, color1 = color3.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"white\").\nHas_color(\"rainbow\", \"black\").\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"green\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"yin\", \"black\").\nHas_color(\"yang\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"rainbow\", color1), Has_color(\"yin\", color2), Has_color(\"yang\", color3), color1 = color2, color1 = color3.\n.output Answer\n\n"]}
{"id": 1353, "answer": false, "completion": ".decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"mongoose\", \"cretaceous\").\nHas_period(\"rhino\", \"cretaceous\").\n.decl Answer()\nAnswer() :- Has_period(\"mongoose\", period1), Has_period(\"rhino\", period2), period1 > period2.\n.output Answer\n\n", "completions": [".decl Has_period(Animal:symbol, Period:symbol)\nHas_period(\"mongoose\", \"cretaceous\").\nHas_period(\"rhino\", \"cretaceous\").\n.decl Answer()\nAnswer() :- Has_period(\"mongoose\", period1), Has_period(\"rhino\", period2), period1 > period2.\n.output Answer\n\n"]}
{"id": 1354, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Archduke Franz Ferdinand of Austria\", \"Pacific War\").\nHappens_in_time(\"Pacific War\", \"1941\").\nHappens_in_time(\"Pacific War\", \"1945\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Archduke Franz Ferdinand of Austria\", \"Pacific War\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Archduke Franz Ferdinand of Austria\", \"Pacific War\").\nHappens_in_time(\"Pacific War\", \"1941\").\nHappens_in_time(\"Pacific War\", \"1945\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Archduke Franz Ferdinand of Austria\", \"Pacific War\").\n.output Answer\n\n"]}
{"id": 1355, "answer": false, "completion": ".decl Has_speech(Person:symbol, Speech:symbol)\nHas_speech(\"Paulo Coelho\", \"yes\").\nHas_speech(\"Paulo Coelho's wife\", \"yes\").\n.decl Answer()\nAnswer() :- Has_speech(\"Paulo Coelho\", speech), Has_speech(\"Paulo Coelho's wife\", speech).\n.output Answer\n\n", "completions": [".decl Has_speech(Person:symbol, Speech:symbol)\nHas_speech(\"Paulo Coelho\", \"yes\").\nHas_speech(\"Paulo Coelho's wife\", \"yes\").\n.decl Answer()\nAnswer() :- Has_speech(\"Paulo Coelho\", speech), Has_speech(\"Paulo Coelho's wife\", speech).\n.output Answer\n\n"]}
{"id": 1356, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Bill Gates\", 60).\nHas_age(\"Baby Boomers\", 60).\n.decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Bill Gates\", 100).\nHas_net_worth(\"Baby Boomers\", 100).\n.decl Answer()\nAnswer() :- Has_age(\"Bill Gates\", age1), Has_age(\"Baby Boomers\", age2), Has_net_worth(\"Bill Gates\", net_worth1), Has_net_worth(\"Baby Boomers\", net_worth2), age1 > age2, net_worth1 > net_worth2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Bill Gates\", 60).\nHas_age(\"Baby Boomers\", 60).\n.decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Bill Gates\", 100).\nHas_net_worth(\"Baby Boomers\", 100).\n.decl Answer()\nAnswer() :- Has_age(\"Bill Gates\", age1), Has_age(\"Baby Boomers\", age2), Has_net_worth(\"Bill Gates\", net_worth1), Has_net_worth(\"Baby Boomers\", net_worth2), age1 > age2, net_worth1 > net_worth2.\n.output Answer\n\n"]}
{"id": 1357, "answer": true, "completion": ".decl Runs_newer_version(OS:symbol, Version:symbol)\nRuns_newer_version(\"Windows\", \"Linux\").\nRuns_newer_version(\"Android\", \"Linux\").\n.decl Answer()\nAnswer() :- Runs_newer_version(\"Windows\", version1), Runs_newer_version(\"Android\", version2), version1 > version2.\n.output Answer\n\n", "completions": [".decl Runs_newer_version(OS:symbol, Version:symbol)\nRuns_newer_version(\"Windows\", \"Linux\").\nRuns_newer_version(\"Android\", \"Linux\").\n.decl Answer()\nAnswer() :- Runs_newer_version(\"Windows\", version1), Runs_newer_version(\"Android\", version2), version1 > version2.\n.output Answer\n\n"]}
{"id": 1358, "answer": true, "completion": ".decl Voted(Person:symbol, President:symbol)\nVoted(\"Bill Nye\", \"Franklin Delano Roosevelt\").\n.decl Answer()\nAnswer() :- Voted(\"Bill Nye\", president).\n.output Answer\n\n", "completions": [".decl Voted(Person:symbol, President:symbol)\nVoted(\"Bill Nye\", \"Franklin Delano Roosevelt\").\n.decl Answer()\nAnswer() :- Voted(\"Bill Nye\", president).\n.output Answer\n\n"]}
{"id": 1359, "answer": false, "completion": ".decl Related_to(Person:symbol, Person_related:symbol)\nRelated_to(\"Genghis Khan\", \"Chimken\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Gengh", "completions": [".decl Related_to(Person:symbol, Person_related:symbol)\nRelated_to(\"Genghis Khan\", \"Chimken\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Genghis Khan\", \"Kublai Khan\").\nRelated_to(\"Genghis Khan\", \"Ogodei\").\nRelated_to(\"Gengh"]}
{"id": 1360, "answer": false, "completion": ".decl Was_invented_by(Object:symbol, Person:symbol)\nWas_invented_by(\"Casio\", \"Shigeru Miyamoto\").\n.decl Is_wearable_by(Object:symbol, Person:symbol)\nIs_wearable_by(\"watch\", \"men\").\nIs_wearable_by(\"watch\", \"women\").\nIs_wearable_by(\"watch\", \"children\").\n.decl Answer()\nAnswer() :- Was_invented_by(\"Casio\", person), Is_wearable_by(\"watch\", person).\n.output Answer\n\n", "completions": [".decl Was_invented_by(Object:symbol, Person:symbol)\nWas_invented_by(\"Casio\", \"Shigeru Miyamoto\").\n.decl Is_wearable_by(Object:symbol, Person:symbol)\nIs_wearable_by(\"watch\", \"men\").\nIs_wearable_by(\"watch\", \"women\").\nIs_wearable_by(\"watch\", \"children\").\n.decl Answer()\nAnswer() :- Was_invented_by(\"Casio\", person), Is_wearable_by(\"watch\", person).\n.output Answer\n\n"]}
{"id": 1361, "answer": false, "completion": ".decl Has_mental_illness(Patient:symbol, Illness:symbol)\nHas_mental_illness(\"Patient1\", \"depression\").\nHas_mental_illness(\"Patient2\", \"depression\").\nHas_mental_illness(\"Patient3\", \"depression\").\nHas_mental_illness(\"Patient4\", \"depression\").\nHas_mental_illness(\"Patient5\", \"depression\").\nHas_mental_illness(\"Patient6\", \"depression\").\nHas_mental_illness(\"Patient7\", \"depression\").\nHas_mental_illness(\"Patient8\", \"depression\").\nHas_mental_illness(\"Patient9\", \"depression\").\nHas_mental_illness(\"Patient10\", \"depression\").\nHas_mental_illness(\"Patient11\", \"depression\").\nHas_mental_illness(\"Patient12\", \"depression\").\nHas_mental_illness(\"Patient13\", \"depression\").\nHas_mental_illness(\"Patient14\", \"depression\").\nHas_mental_illness(\"Patient15\", \"depression\").\nHas_mental_illness(\"Patient16\", \"depression\").\nHas_mental_illness(\"Patient17\", \"depression\").\nHas_mental_illness(\"Patient18\", \"depression\").\nHas_mental_illness(\"Patient19\", \"depression\").\nHas_mental_illness(\"Patient20\", \"depression\").\nHas_mental_illness(\"Patient21\", \"depression\").\nHas_mental_illness(\"Patient22\", \"depression\").\nHas_mental_illness(\"Patient23\", \"depression\").\nHas_mental_illness(\"Patient24\", \"depression\").\nHas_mental_illness(\"Patient25\", \"depression\").\nHas_mental_illness(\"Patient26\", \"depression\").\nHas_mental_illness(\"Patient27\", \"depression\").\nHas_mental_illness(\"Patient28\", \"depression\").\nHas_mental_illness(\"Patient29\", \"depression\").\nHas_mental_illness(\"Patient30\", \"depression\").\nHas_mental_illness(\"Patient31\", \"depression\").\nHas_mental_illness(\"Patient32\", \"depression\").\nHas_mental_illness(\"Patient33\", \"depression\").\nHas_mental_illness(\"Patient34\", \"depression\").\nHas_mental_illness(\"Patient35\", \"depression\").\nHas_mental_illness(\"Patient36\", \"depression\").\nHas_mental_illness(\"Patient37\", \"depression\").\nHas_mental_illness(\"Patient38\", \"depression\").\nHas_mental_illness(\"Patient39\", \"depression\").\nHas_mental_illness(\"Patient40\", \"depression\").\nHas_mental_illness(\"Patient41\", \"depression\").\nHas_mental_illness(\"Patient42\", \"depression\").\nHas_mental_illness(\"Patient43\", \"depression\").\nHas_mental_illness(\"Patient44\", \"depression\").\nHas_mental_illness(\"Patient45\", \"depression\").\nHas_mental_illness(\"Patient46\", \"depression\").\nHas_mental_illness(\"Patient47\", \"depression\").\nHas_mental_illness(\"Patient48\", \"depression\").\nHas_mental_illness(\"Patient", "completions": [".decl Has_mental_illness(Patient:symbol, Illness:symbol)\nHas_mental_illness(\"Patient1\", \"depression\").\nHas_mental_illness(\"Patient2\", \"depression\").\nHas_mental_illness(\"Patient3\", \"depression\").\nHas_mental_illness(\"Patient4\", \"depression\").\nHas_mental_illness(\"Patient5\", \"depression\").\nHas_mental_illness(\"Patient6\", \"depression\").\nHas_mental_illness(\"Patient7\", \"depression\").\nHas_mental_illness(\"Patient8\", \"depression\").\nHas_mental_illness(\"Patient9\", \"depression\").\nHas_mental_illness(\"Patient10\", \"depression\").\nHas_mental_illness(\"Patient11\", \"depression\").\nHas_mental_illness(\"Patient12\", \"depression\").\nHas_mental_illness(\"Patient13\", \"depression\").\nHas_mental_illness(\"Patient14\", \"depression\").\nHas_mental_illness(\"Patient15\", \"depression\").\nHas_mental_illness(\"Patient16\", \"depression\").\nHas_mental_illness(\"Patient17\", \"depression\").\nHas_mental_illness(\"Patient18\", \"depression\").\nHas_mental_illness(\"Patient19\", \"depression\").\nHas_mental_illness(\"Patient20\", \"depression\").\nHas_mental_illness(\"Patient21\", \"depression\").\nHas_mental_illness(\"Patient22\", \"depression\").\nHas_mental_illness(\"Patient23\", \"depression\").\nHas_mental_illness(\"Patient24\", \"depression\").\nHas_mental_illness(\"Patient25\", \"depression\").\nHas_mental_illness(\"Patient26\", \"depression\").\nHas_mental_illness(\"Patient27\", \"depression\").\nHas_mental_illness(\"Patient28\", \"depression\").\nHas_mental_illness(\"Patient29\", \"depression\").\nHas_mental_illness(\"Patient30\", \"depression\").\nHas_mental_illness(\"Patient31\", \"depression\").\nHas_mental_illness(\"Patient32\", \"depression\").\nHas_mental_illness(\"Patient33\", \"depression\").\nHas_mental_illness(\"Patient34\", \"depression\").\nHas_mental_illness(\"Patient35\", \"depression\").\nHas_mental_illness(\"Patient36\", \"depression\").\nHas_mental_illness(\"Patient37\", \"depression\").\nHas_mental_illness(\"Patient38\", \"depression\").\nHas_mental_illness(\"Patient39\", \"depression\").\nHas_mental_illness(\"Patient40\", \"depression\").\nHas_mental_illness(\"Patient41\", \"depression\").\nHas_mental_illness(\"Patient42\", \"depression\").\nHas_mental_illness(\"Patient43\", \"depression\").\nHas_mental_illness(\"Patient44\", \"depression\").\nHas_mental_illness(\"Patient45\", \"depression\").\nHas_mental_illness(\"Patient46\", \"depression\").\nHas_mental_illness(\"Patient47\", \"depression\").\nHas_mental_illness(\"Patient48\", \"depression\").\nHas_mental_illness(\"Patient"]}
{"id": 1362, "answer": true, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Boeing 737-800\", 1000000).\nHas_value(\"Da Vinci painting\", 1000000000).\n.decl Answer()\nAnswer() :- Has_value(\"Boeing 737-800\", value1), Has_value(\"Da Vinci painting\", value2), value1 >= value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Boeing 737-800\", 1000000).\nHas_value(\"Da Vinci painting\", 1000000000).\n.decl Answer()\nAnswer() :- Has_value(\"Boeing 737-800\", value1), Has_value(\"Da Vinci painting\", value2), value1 >= value2.\n.output Answer\n\n"]}
{"id": 1363, "answer": true, "completion": ".decl First_car_manufactured(Car:symbol)\nFirst_car_manufactured(\"Mini\").\n.decl Answer()\nAnswer() :- First_car_manufactured(\"Mini\").\n.output Answer\n\n", "completions": [".decl First_car_manufactured(Car:symbol)\nFirst_car_manufactured(\"Mini\").\n.decl Answer()\nAnswer() :- First_car_manufactured(\"Mini\").\n.output Answer\n\n"]}
{"id": 1364, "answer": true, "completion": ".decl Has_letter(Language:symbol, Letter:symbol)\nHas_letter(\"Inuktitut\", \"b\").\nHas_letter(\"Inuktitut\", \"c\").\nHas_letter(\"Inuktitut\", \"d\").\nHas_letter(\"Inuktitut\", \"e\").\nHas_letter(\"Inuktitut\", \"f\").\nHas_letter(\"Inuktitut\", \"g\").\nHas_letter(\"Inuktitut\", \"h\").\nHas_letter(\"Inuktitut\", \"i\").\nHas_letter(\"Inuktitut\", \"j\").\nHas_letter(\"Inuktitut\", \"k\").\nHas_letter(\"Inuktitut\", \"l\").\nHas_letter(\"Inuktitut\", \"m\").\nHas_letter(\"Inuktitut\", \"n\").\nHas_letter(\"Inuktitut\", \"o\").\nHas_letter(\"Inuktitut\", \"p\").\nHas_letter(\"Inuktitut\", \"q\").\nHas_letter(\"Inuktitut\", \"r\").\nHas_letter(\"Inuktitut\", \"s\").\nHas_letter(\"Inuktitut\", \"t\").\nHas_letter(\"Inuktitut\", \"u\").\nHas_letter(\"Inuktitut\", \"v\").\nHas_letter(\"Inuktitut\", \"w\").\nHas_letter(\"Inuktitut\", \"x\").\nHas_letter(\"Inuktitut\", \"y\").\nHas_letter(\"Inuktitut\", \"z\").\n.decl Answer()\nAnswer() :- Has_letter(\"Inuktitut\", letter).\n.output Answer\n\n", "completions": [".decl Has_letter(Language:symbol, Letter:symbol)\nHas_letter(\"Inuktitut\", \"b\").\nHas_letter(\"Inuktitut\", \"c\").\nHas_letter(\"Inuktitut\", \"d\").\nHas_letter(\"Inuktitut\", \"e\").\nHas_letter(\"Inuktitut\", \"f\").\nHas_letter(\"Inuktitut\", \"g\").\nHas_letter(\"Inuktitut\", \"h\").\nHas_letter(\"Inuktitut\", \"i\").\nHas_letter(\"Inuktitut\", \"j\").\nHas_letter(\"Inuktitut\", \"k\").\nHas_letter(\"Inuktitut\", \"l\").\nHas_letter(\"Inuktitut\", \"m\").\nHas_letter(\"Inuktitut\", \"n\").\nHas_letter(\"Inuktitut\", \"o\").\nHas_letter(\"Inuktitut\", \"p\").\nHas_letter(\"Inuktitut\", \"q\").\nHas_letter(\"Inuktitut\", \"r\").\nHas_letter(\"Inuktitut\", \"s\").\nHas_letter(\"Inuktitut\", \"t\").\nHas_letter(\"Inuktitut\", \"u\").\nHas_letter(\"Inuktitut\", \"v\").\nHas_letter(\"Inuktitut\", \"w\").\nHas_letter(\"Inuktitut\", \"x\").\nHas_letter(\"Inuktitut\", \"y\").\nHas_letter(\"Inuktitut\", \"z\").\n.decl Answer()\nAnswer() :- Has_letter(\"Inuktitut\", letter).\n.output Answer\n\n"]}
{"id": 1365, "answer": true, "completion": ".decl Anchors(Vehicle:symbol)\nAnchors(\"Trek 9000\").\n.decl Parked(Vehicle:symbol)\nParked(\"Trek 9000\").\n.decl Answer()\nAnswer() :- Anchors(\"Trek 9000\"), Parked(\"Trek 9000\").\n.output Answer\n\n", "completions": [".decl Anchors(Vehicle:symbol)\nAnchors(\"Trek 9000\").\n.decl Parked(Vehicle:symbol)\nParked(\"Trek 9000\").\n.decl Answer()\nAnswer() :- Anchors(\"Trek 9000\"), Parked(\"Trek 9000\").\n.output Answer\n\n"]}
{"id": 1366, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Zika virus\", \"winter\").\nHappens_in_time(\"Zika virus\", \"summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Zika virus\", season), Happens_in_time(\"Zika virus\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Zika virus\", \"winter\").\nHappens_in_time(\"Zika virus\", \"summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Zika virus\", season), Happens_in_time(\"Zika virus\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1367, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"day\", \"day\").\nHappens_in_time(\"day\", \"night\").\n.decl In_location(Event:symbol, Location:symbol)\nIn_location(\"day\", \"Basel\").\nIn_location(\"day\", \"Los Angeles\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"day\", time), In_location(\"day\", location), time = \"day\", location = \"Basel\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"day\", \"day\").\nHappens_in_time(\"day\", \"night\").\n.decl In_location(Event:symbol, Location:symbol)\nIn_location(\"day\", \"Basel\").\nIn_location(\"day\", \"Los Angeles\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"day\", time), In_location(\"day\", location), time = \"day\", location = \"Basel\".\n.output Answer\n\n"]}
{"id": 1368, "answer": false, "completion": ".decl Has_dance_style(Dance_style:symbol, Person:symbol)\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\",", "completions": [".decl Has_dance_style(Dance_style:symbol, Person:symbol)\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\", \"Ricardo\").\nHas_dance_style(\"breakdancing\","]}
{"id": 1369, "answer": false, "completion": ".decl Travelled_with(Person_A:symbol, Person_B:symbol)\nTravelled_with(\"Marco Polo\", \"Christopher Columbus\").\n.decl Answer()\nAnswer() :- Travelled_with(\"Marco Polo\", person_b), Travelled_with(\"Christopher Columbus\", person_a), person_a != person_b.\n.output Answer\n\n", "completions": [".decl Travelled_with(Person_A:symbol, Person_B:symbol)\nTravelled_with(\"Marco Polo\", \"Christopher Columbus\").\n.decl Answer()\nAnswer() :- Travelled_with(\"Marco Polo\", person_b), Travelled_with(\"Christopher Columbus\", person_a), person_a != person_b.\n.output Answer\n\n"]}
{"id": 1370, "answer": false, "completion": ".decl Language_in_country(Language:symbol, Country:symbol)\nLanguage_in_country(\"English\", \"United Kingdom\").\nLanguage_in_country(\"English\", \"United States\").\nLanguage_in_country(\"English\", \"Australia\").\nLanguage_in_country(\"English\", \"Canada\").\nLanguage_in_country(\"English\", \"Ireland\").\nLanguage_in_country(\"English\", \"Jamaica\").\nLanguage_in_country(\"English\", \"New Zealand\").\nLanguage_in_country(\"English\", \"Saint Vincent and the Grenadines\").\nLanguage_in_country(\"French\", \"France\").\nLanguage_in_country(\"Spanish\", \"Spain\").\nLanguage_in_country(\"Spanish\", \"Argentina\").\nLanguage_in_country(\"Spanish\", \"Bolivia\").\nLanguage_in_country(\"Spanish\", \"Chile\").\nLanguage_in_country(\"Spanish\", \"Colombia\").\nLanguage_in_country(\"Spanish\", \"Costa Rica\").\nLanguage_in_country(\"Spanish\", \"Dominican Republic\").\nLanguage_in_country(\"Spanish\", \"Ecuador\").\nLanguage_in_country(\"Spanish\", \"El Salvador\").\nLanguage_in_country(\"Spanish\", \"Guatemala\").\nLanguage_in_country(\"Spanish\", \"Honduras\").\nLanguage_in_country(\"Spanish\", \"Mexico\").\nLanguage_in_country(\"Spanish\", \"Nicaragua\").\nLanguage_in_country(\"Spanish\", \"Panama\").\nLanguage_in_country(\"Spanish\", \"Paraguay\").\nLanguage_in_country(\"Spanish\", \"Peru\").\nLanguage_in_country(\"Spanish\", \"Puerto Rico\").\nLanguage_in_country(\"Spanish\", \"Spain\").\nLanguage_in_country(\"Spanish\", \"Uruguay\").\nLanguage_in_country(\"Spanish\", \"Venezuela\").\n.decl Answer()\nAnswer() :- Language_in_country(\"English\", country), Language_in_country(\"Spanish\", country).\n.output Answer\n\n", "completions": [".decl Language_in_country(Language:symbol, Country:symbol)\nLanguage_in_country(\"English\", \"United Kingdom\").\nLanguage_in_country(\"English\", \"United States\").\nLanguage_in_country(\"English\", \"Australia\").\nLanguage_in_country(\"English\", \"Canada\").\nLanguage_in_country(\"English\", \"Ireland\").\nLanguage_in_country(\"English\", \"Jamaica\").\nLanguage_in_country(\"English\", \"New Zealand\").\nLanguage_in_country(\"English\", \"Saint Vincent and the Grenadines\").\nLanguage_in_country(\"French\", \"France\").\nLanguage_in_country(\"Spanish\", \"Spain\").\nLanguage_in_country(\"Spanish\", \"Argentina\").\nLanguage_in_country(\"Spanish\", \"Bolivia\").\nLanguage_in_country(\"Spanish\", \"Chile\").\nLanguage_in_country(\"Spanish\", \"Colombia\").\nLanguage_in_country(\"Spanish\", \"Costa Rica\").\nLanguage_in_country(\"Spanish\", \"Dominican Republic\").\nLanguage_in_country(\"Spanish\", \"Ecuador\").\nLanguage_in_country(\"Spanish\", \"El Salvador\").\nLanguage_in_country(\"Spanish\", \"Guatemala\").\nLanguage_in_country(\"Spanish\", \"Honduras\").\nLanguage_in_country(\"Spanish\", \"Mexico\").\nLanguage_in_country(\"Spanish\", \"Nicaragua\").\nLanguage_in_country(\"Spanish\", \"Panama\").\nLanguage_in_country(\"Spanish\", \"Paraguay\").\nLanguage_in_country(\"Spanish\", \"Peru\").\nLanguage_in_country(\"Spanish\", \"Puerto Rico\").\nLanguage_in_country(\"Spanish\", \"Spain\").\nLanguage_in_country(\"Spanish\", \"Uruguay\").\nLanguage_in_country(\"Spanish\", \"Venezuela\").\n.decl Answer()\nAnswer() :- Language_in_country(\"English\", country), Language_in_country(\"Spanish\", country).\n.output Answer\n\n"]}
{"id": 1371, "answer": true, "completion": ".decl Has_dinner(Person:symbol, Dinner:symbol)\nHas_dinner(\"Lionel Richie\", \"Abraham Lincoln\").\n.decl Answer()\nAnswer() :- Has_dinner(\"Lionel Richie\", dinner).\n.output Answer\n\n", "completions": [".decl Has_dinner(Person:symbol, Dinner:symbol)\nHas_dinner(\"Lionel Richie\", \"Abraham Lincoln\").\n.decl Answer()\nAnswer() :- Has_dinner(\"Lionel Richie\", dinner).\n.output Answer\n\n"]}
{"id": 1372, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"traffic collision\", 1000000).\n.decl Answer()\nAnswer() :- Has_value(\"traffic collision\", value), value > 1000000.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"traffic collision\", 1000000).\n.decl Answer()\nAnswer() :- Has_value(\"traffic collision\", value), value > 1000000.\n.output Answer\n\n"]}
{"id": 1373, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"parsley\", 0.1).\nHas_density(\"milk\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"parsley\", density1), Has_density(\"milk\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"parsley\", 0.1).\nHas_density(\"milk\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"parsley\", density1), Has_density(\"milk\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1374, "answer": true, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Happy Gilmore Productions CEO\", \"Torah\").\n.decl Answer()\nAnswer() :- Owns(\"Happy Gilmore Productions CEO\", object).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Happy Gilmore Productions CEO\", \"Torah\").\n.decl Answer()\nAnswer() :- Owns(\"Happy Gilmore Productions CEO\", object).\n.output Answer\n\n"]}
{"id": 1375, "answer": false, "completion": ".decl Is_opposed_to(Person:symbol, Action:symbol)\nIs_opposed_to(\"pacifist\", \"hunting\").\n.decl Answer()\nAnswer() :- Is_opposed_to(\"pacifist\", action), Is_opposed_to(person, action).\n.output Answer\n\n", "completions": [".decl Is_opposed_to(Person:symbol, Action:symbol)\nIs_opposed_to(\"pacifist\", \"hunting\").\n.decl Answer()\nAnswer() :- Is_opposed_to(\"pacifist\", action), Is_opposed_to(person, action).\n.output Answer\n\n"]}
{"id": 1376, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"plague\", \"medieval times\").\nHappens_in_time(\"selfie\", \"modern times\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"plague\", 5).\nHappens_every_n_years(\"selfie\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"plague\", time), Happens_every_n_years(\"selfie\", n_years), time != \"modern times\", n_years > 5.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"plague\", \"medieval times\").\nHappens_in_time(\"selfie\", \"modern times\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"plague\", 5).\nHappens_every_n_years(\"selfie\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"plague\", time), Happens_every_n_years(\"selfie\", n_years), time != \"modern times\", n_years > 5.\n.output Answer\n\n"]}
{"id": 1377, "answer": true, "completion": ".decl Has_channel(Show:symbol, Channel:symbol)\nHas_channel(\"Puzzle Place\", \"Cartoon Network\").\nHas_channel(\"Naruto\", \"Cartoon Network\").\n.decl Answer()\nAnswer() :- Has_channel(\"Naruto\", channel1), Has_channel(\"Puzzle Place\", channel2), channel1 = channel2.\n.output Answer\n\n", "completions": [".decl Has_channel(Show:symbol, Channel:symbol)\nHas_channel(\"Puzzle Place\", \"Cartoon Network\").\nHas_channel(\"Naruto\", \"Cartoon Network\").\n.decl Answer()\nAnswer() :- Has_channel(\"Naruto\", channel1), Has_channel(\"Puzzle Place\", channel2), channel1 = channel2.\n.output Answer\n\n"]}
{"id": 1378, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Johnny Carson's children\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Water Polo team\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Johnny Carson's children\", n_members1), Has_n_members(\"Water Polo team\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Johnny Carson's children\", 6).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Water Polo team\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Johnny Carson's children\", n_members1), Has_n_members(\"Water Polo team\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1379, "answer": true, "completion": ".decl Sent_delegation(Group:symbol, Delegation:symbol)\nSent_delegation(\"Cherokee\", \"delegation\").\n.decl Opposed_allotment(Group:symbol, Delegation:symbol)\nOpposed_allotment(\"Cherokee\", \"delegation\").\n.decl Answer()\nAnswer() :- Sent_delegation(\"Cherokee\", delegation), Opposed_allotment(\"Cherokee\", delegation).\n.output Answer\n\n", "completions": [".decl Sent_delegation(Group:symbol, Delegation:symbol)\nSent_delegation(\"Cherokee\", \"delegation\").\n.decl Opposed_allotment(Group:symbol, Delegation:symbol)\nOpposed_allotment(\"Cherokee\", \"delegation\").\n.decl Answer()\nAnswer() :- Sent_delegation(\"Cherokee\", delegation), Opposed_allotment(\"Cherokee\", delegation).\n.output Answer\n\n"]}
{"id": 1380, "answer": true, "completion": ".decl Performs(Person:symbol, Action:symbol)\nPerforms(\"pediatrician\", \"abortions\").\n.decl Answer()\nAnswer() :- Performs(\"pediatrician\", \"abortions\").\n.output Answer\n\n", "completions": [".decl Performs(Person:symbol, Action:symbol)\nPerforms(\"pediatrician\", \"abortions\").\n.decl Answer()\nAnswer() :- Performs(\"pediatrician\", \"abortions\").\n.output Answer\n\n"]}
{"id": 1381, "answer": false, "completion": ".decl Has_country(Film:symbol, Country:symbol)\nHas_country(\"Brave\", \"Scotland\").\n.decl Has_language(Film:symbol, Language:symbol)\nHas_language(\"Brave\", \"Scottish\").\n.decl Answer()\nAnswer() :- Has_country(\"Brave\", country), Has_language(\"Brave\", language), country == language.\n.output Answer\n\n", "completions": [".decl Has_country(Film:symbol, Country:symbol)\nHas_country(\"Brave\", \"Scotland\").\n.decl Has_language(Film:symbol, Language:symbol)\nHas_language(\"Brave\", \"Scottish\").\n.decl Answer()\nAnswer() :- Has_country(\"Brave\", country), Has_language(\"Brave\", language), country == language.\n.output Answer\n\n"]}
{"id": 1382, "answer": true, "completion": ".decl Is_south_of_equator(Location:symbol)\nIs_south_of_equator(\"Cape Town\").\n.decl Answer()\nAnswer() :- Is_south_of_equator(\"Cape Town\").\n.output Answer\n\n", "completions": [".decl Is_south_of_equator(Location:symbol)\nIs_south_of_equator(\"Cape Town\").\n.decl Answer()\nAnswer() :- Is_south_of_equator(\"Cape Town\").\n.output Answer\n\n"]}
{"id": 1383, "answer": false, "completion": ".decl Is_protective(Band:symbol)\nIs_protective(\"Metallica\").\n.decl Is_music(Object:symbol)\nIs_music(\"music\").\n.decl Answer()\nAnswer() :- Is_protective(band), Is_music(object), band != object.\n.output Answer\n\n", "completions": [".decl Is_protective(Band:symbol)\nIs_protective(\"Metallica\").\n.decl Is_music(Object:symbol)\nIs_music(\"music\").\n.decl Answer()\nAnswer() :- Is_protective(band), Is_music(object), band != object.\n.output Answer\n\n"]}
{"id": 1384, "answer": false, "completion": ".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_disease(\"John F. Kennedy\", \"hepatitis\").\n.decl Has_medical_condition(Person:symbol, Condition:symbol)\nHas_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.decl Has_medical_condition(Person:symbol, Condition:symbol)\nHas_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.decl Answer()\nAnswer() :- Has_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nAnswer() :- Has_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.output Answer\n\n", "completions": [".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_disease(\"John F. Kennedy\", \"hepatitis\").\n.decl Has_medical_condition(Person:symbol, Condition:symbol)\nHas_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.decl Has_medical_condition(Person:symbol, Condition:symbol)\nHas_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nHas_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.decl Answer()\nAnswer() :- Has_medical_condition(\"John F. Kennedy\", \"multiple sclerosis\").\nAnswer() :- Has_medical_condition(\"John F. Kennedy\", \"hepatitis\").\n.output Answer\n\n"]}
{"id": 1385, "answer": true, "completion": ".decl Is_separation_of_church_and_state_a_failure(Country:symbol)\nIs_separation_of_church_and_state_a_failure(\"USA\").\n.decl Answer()\nAnswer() :- Is_separation_of_church_and_state_a_failure(\"USA\").\n.output Answer\n\n", "completions": [".decl Is_separation_of_church_and_state_a_failure(Country:symbol)\nIs_separation_of_church_and_state_a_failure(\"USA\").\n.decl Answer()\nAnswer() :- Is_separation_of_church_and_state_a_failure(\"USA\").\n.output Answer\n\n"]}
{"id": 1386, "answer": false, "completion": ".decl Recipient(Person:symbol, Award:symbol)\nRecipient(\"Jesse W. Moore\", \"Space Achievement Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"", "completions": [".decl Recipient(Person:symbol, Award:symbol)\nRecipient(\"Jesse W. Moore\", \"Space Achievement Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\"Jesse W. Moore\", \"Space Pioneer Award\").\nRecipient(\""]}
{"id": 1387, "answer": false, "completion": ".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Geneva\", \"Switzerland\").\nLocated_in(\"Paris\", \"France\").\nLocated_in(\"Berlin\", \"Germany\").\nLocated_in(\"New York\", \"USA\").\nLocated_in(\"YMCA headquarters\", \"New York\").\n.decl Answer()\nAnswer() :- Located_in(\"Raclette\", city), Located_in(\"YMCA headquarters\", city).\n.output Answer\n\n", "completions": [".decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Geneva\", \"Switzerland\").\nLocated_in(\"Paris\", \"France\").\nLocated_in(\"Berlin\", \"Germany\").\nLocated_in(\"New York\", \"USA\").\nLocated_in(\"YMCA headquarters\", \"New York\").\n.decl Answer()\nAnswer() :- Located_in(\"Raclette\", city), Located_in(\"YMCA headquarters\", city).\n.output Answer\n\n"]}
{"id": 1388, "answer": true, "completion": ".decl Plays_tennis(Person:symbol, Sport:symbol)\nPlays_tennis(\"ABBA\", \"tennis\").\n.decl Plays_mixed_doubles(Person:symbol, Sport:symbol)\nPlays_mixed_doubles(\"ABBA\", \"tennis\").\n.decl Answer()\nAnswer() :- Plays_tennis(\"ABBA\", sport), Plays_mixed_doubles(\"ABBA\", sport).\n.output Answer\n\n", "completions": [".decl Plays_tennis(Person:symbol, Sport:symbol)\nPlays_tennis(\"ABBA\", \"tennis\").\n.decl Plays_mixed_doubles(Person:symbol, Sport:symbol)\nPlays_mixed_doubles(\"ABBA\", \"tennis\").\n.decl Answer()\nAnswer() :- Plays_tennis(\"ABBA\", sport), Plays_mixed_doubles(\"ABBA\", sport).\n.output Answer\n\n"]}
{"id": 1389, "answer": true, "completion": ".decl Happens_in_century(Event:symbol, Century:symbol)\nHappens_in_century(\"wrestle\", \"17th century\").\nHappens_in_century(\"wrestle\", \"18th century\").\nHappens_in_century(\"wrestle\", \"19th century\").\n.decl Answer()\nAnswer() :- Happens_in_century(\"wrestle\", century1), Happens_in_century(\"wrestle\", century2), Happens_in_century(\"wrestle\", century3), century1 != century2, century2 != century3, century1 != century3.\n.output Answer\n\n", "completions": [".decl Happens_in_century(Event:symbol, Century:symbol)\nHappens_in_century(\"wrestle\", \"17th century\").\nHappens_in_century(\"wrestle\", \"18th century\").\nHappens_in_century(\"wrestle\", \"19th century\").\n.decl Answer()\nAnswer() :- Happens_in_century(\"wrestle\", century1), Happens_in_century(\"wrestle\", century2), Happens_in_century(\"wrestle\", century3), century1 != century2, century2 != century3, century1 != century3.\n.output Answer\n\n"]}
{"id": 1390, "answer": true, "completion": ".decl Has_viscosity(Object:symbol, Viscosity:float)\nHas_viscosity(\"water\", 0.9).\n.decl Answer()\nAnswer() :- Has_viscosity(\"water\", viscosity), viscosity > 0.\n.output Answer\n\n", "completions": [".decl Has_viscosity(Object:symbol, Viscosity:float)\nHas_viscosity(\"water\", 0.9).\n.decl Answer()\nAnswer() :- Has_viscosity(\"water\", viscosity), viscosity > 0.\n.output Answer\n\n"]}
{"id": 1391, "answer": true, "completion": ".decl Has_n_students(Group:symbol, N_students:float)\nHas_n_students(\"Gallaudet University\", 5).\n.decl Has_n_loudspeakers(Group:symbol, N_loudspeakers:float)\nHas_n_loudspeakers(\"Gallaudet University\", 0).\n.decl Answer()\nAnswer() :- Has_n_students(\"Gallaudet University\", n_students), Has_n_loudspeakers(\"Gallaudet University\", n_loudspeakers), n_students > n_loudspeakers.\n.output Answer\n\n", "completions": [".decl Has_n_students(Group:symbol, N_students:float)\nHas_n_students(\"Gallaudet University\", 5).\n.decl Has_n_loudspeakers(Group:symbol, N_loudspeakers:float)\nHas_n_loudspeakers(\"Gallaudet University\", 0).\n.decl Answer()\nAnswer() :- Has_n_students(\"Gallaudet University\", n_students), Has_n_loudspeakers(\"Gallaudet University\", n_loudspeakers), n_students > n_loudspeakers.\n.output Answer\n\n"]}
{"id": 1392, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"sesame seeds\", \"glued\").\nHas_property(\"hamburger buns\", \"glued\").\n.decl Answer()\nAnswer() :- Has_property(\"sesame seeds\", property), Has_property(\"hamburger buns\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"sesame seeds\", \"glued\").\nHas_property(\"hamburger buns\", \"glued\").\n.decl Answer()\nAnswer() :- Has_property(\"sesame seeds\", property), Has_property(\"hamburger buns\", property).\n.output Answer\n\n"]}
{"id": 1393, "answer": true, "completion": ".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Sugar Ray Robinson\", \"USA\").\nHas_country(\"Sugar Ray Robinson\", \"Iran\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Boxing\", 4).\n.decl Answer()\nAnswer() :- Has_country(\"Sugar Ray Robinson\", country), Has_n_members(\"Boxing\", n_members), country = \"Iran\".\n.output Answer\n\n", "completions": [".decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Sugar Ray Robinson\", \"USA\").\nHas_country(\"Sugar Ray Robinson\", \"Iran\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Boxing\", 4).\n.decl Answer()\nAnswer() :- Has_country(\"Sugar Ray Robinson\", country), Has_n_members(\"Boxing\", n_members), country = \"Iran\".\n.output Answer\n\n"]}
{"id": 1394, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Ahura Mazda\", 0.5).\nHas_height(\"Abaddon's dwelling\", 0.5).\n.decl Answer()\nAnswer() :- Has_height(\"Ahura Mazda\", height1), Has_height(\"Abaddon's dwelling\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Ahura Mazda\", 0.5).\nHas_height(\"Abaddon's dwelling\", 0.5).\n.decl Answer()\nAnswer() :- Has_height(\"Ahura Mazda\", height1), Has_height(\"Abaddon's dwelling\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 1395, "answer": true, "completion": ".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"tortoise\", 0.5).\nHas_speed(\"Chicago \\\"L\\\"\", 0.5).\n.decl Answer()\nAnswer() :- Has_speed(\"tortoise\", speed1), Has_speed(\"Chicago \\\"L\\\"\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Animal:symbol, Speed:float)\nHas_speed(\"tortoise\", 0.5).\nHas_speed(\"Chicago \\\"L\\\"\", 0.5).\n.decl Answer()\nAnswer() :- Has_speed(\"tortoise\", speed1), Has_speed(\"Chicago \\\"L\\\"\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1396, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Earth Day\", \"April 22\").\nHappens_in_time(\"Earth Day\", \"May 1\").\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"ceremonial tire fire\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Earth Day\", time), Happens_every_n_days(\"ceremonial tire fire\", n_days), time = \"April 22\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Earth Day\", \"April 22\").\nHappens_in_time(\"Earth Day\", \"May 1\").\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"ceremonial tire fire\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Earth Day\", time), Happens_every_n_days(\"ceremonial tire fire\", n_days), time = \"April 22\".\n.output Answer\n\n"]}
{"id": 1397, "answer": true, "completion": ".decl Has_country(Object:symbol, Country:symbol)\nHas_country(\"Nimitz-class aircraft carrier\", \"USA\").\nHas_country(\"USS Theodore Roosevelt\", \"USA\").\nHas_country(\"USS Abraham Lincoln\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas", "completions": [".decl Has_country(Object:symbol, Country:symbol)\nHas_country(\"Nimitz-class aircraft carrier\", \"USA\").\nHas_country(\"USS Theodore Roosevelt\", \"USA\").\nHas_country(\"USS Abraham Lincoln\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas_country(\"USS Arleigh Burke\", \"USA\").\nHas"]}
{"id": 1398, "answer": false, "completion": ".decl Is_named_after(Character:symbol, Person:symbol)\nIs_named_after(\"Harry Potter\", \"Harry\").\nIs_named_after(\"Harry Potter\", \"Hermione\").\nIs_named_after(\"Harry Potter\", \"Ron\").\nIs_named_after(\"Harry Potter\", \"Voldemort\").\nIs_named_after(\"Harry Potter\", \"Dumbledore\").\nIs_named_after(\"Harry Potter\", \"Snape\").\nIs_named_after(\"Harry Potter\", \"Hagrid\").\nIs_named_after(\"Harry Potter\", \"McGonagall\").\nIs_named_after(\"Harry Potter\", \"Fred\").\nIs_named_after(\"Harry Potter\", \"George\").\nIs_named_after(\"Harry Potter\", \"Ginny\").\nIs_named_after(\"Harry Potter\", \"James\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Molly\").\nIs_named_after(\"Harry Potter\", \"Neville\").\nIs_named_after(\"Harry Potter\", \"Sirius\").\nIs_named_after(\"Harry Potter\", \"Cho\").\nIs_named_after(\"Harry Potter\", \"Luna\").\nIs_named_after(\"Harry Potter\", \"Draco\").\nIs_named_after(\"Harry Potter\", \"Albus\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Vincent\").\nIs_named_after(\"Harry Potter\", \"Gregory\").\nIs_named_after(\"Harry Potter\", \"Rose\").\nIs_named_after(\"Harry Potter\", \"Hugo\").\nIs_named_after(\"Harry Potter\", \"James\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\n", "completions": [".decl Is_named_after(Character:symbol, Person:symbol)\nIs_named_after(\"Harry Potter\", \"Harry\").\nIs_named_after(\"Harry Potter\", \"Hermione\").\nIs_named_after(\"Harry Potter\", \"Ron\").\nIs_named_after(\"Harry Potter\", \"Voldemort\").\nIs_named_after(\"Harry Potter\", \"Dumbledore\").\nIs_named_after(\"Harry Potter\", \"Snape\").\nIs_named_after(\"Harry Potter\", \"Hagrid\").\nIs_named_after(\"Harry Potter\", \"McGonagall\").\nIs_named_after(\"Harry Potter\", \"Fred\").\nIs_named_after(\"Harry Potter\", \"George\").\nIs_named_after(\"Harry Potter\", \"Ginny\").\nIs_named_after(\"Harry Potter\", \"James\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Molly\").\nIs_named_after(\"Harry Potter\", \"Neville\").\nIs_named_after(\"Harry Potter\", \"Sirius\").\nIs_named_after(\"Harry Potter\", \"Cho\").\nIs_named_after(\"Harry Potter\", \"Luna\").\nIs_named_after(\"Harry Potter\", \"Draco\").\nIs_named_after(\"Harry Potter\", \"Albus\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Vincent\").\nIs_named_after(\"Harry Potter\", \"Gregory\").\nIs_named_after(\"Harry Potter\", \"Rose\").\nIs_named_after(\"Harry Potter\", \"Hugo\").\nIs_named_after(\"Harry Potter\", \"James\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\nIs_named_after(\"Harry Potter\", \"Lily\").\n"]}
{"id": 1399, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Lil Wayne's children\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Chevrolet Corvette ZR1\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Lil Wayne's children\", n_members1), Has_n_members(\"Chevrolet Corvette ZR1\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Lil Wayne's children\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Chevrolet Corvette ZR1\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Lil Wayne's children\", n_members1), Has_n_members(\"Chevrolet Corvette ZR1\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n"]}
{"id": 1400, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Amazon\", 4).\nHas_n_members(\"Iceland\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Iceland\", n_members1), Has_n_members(\"Amazon\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Amazon\", 4).\nHas_n_members(\"Iceland\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Iceland\", n_members1), Has_n_members(\"Amazon\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 1401, "answer": true, "completion": ".decl Has_rating(Object:symbol, Rating:float)\nHas_rating(\"movie\", 5).\nHas_rating(\"movie\", 4).\nHas_rating(\"movie\", 3).\nHas_rating(\"movie\", 2).\nHas_rating(\"movie\", 1).\n.decl Answer()\nAnswer() :- Has_rating(\"movie\", rating), rating >= 4.\n.output Answer\n\n", "completions": [".decl Has_rating(Object:symbol, Rating:float)\nHas_rating(\"movie\", 5).\nHas_rating(\"movie\", 4).\nHas_rating(\"movie\", 3).\nHas_rating(\"movie\", 2).\nHas_rating(\"movie\", 1).\n.decl Answer()\nAnswer() :- Has_rating(\"movie\", rating), rating >= 4.\n.output Answer\n\n"]}
{"id": 1402, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hippie culture\", \"1960s\").\nHappens_in_time(\"hippie culture\", \"1970s\").\nHappens_in_time(\"hippie culture\", \"1980s\").\nHappens_in_time(\"hippie culture\", \"1990s\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"hippie culture\", \"United States\").\nHappens_in_country(\"hippie culture\", \"Canada\").\nHappens_in_country(\"hippie culture\", \"United Kingdom\").\nHappens_in_country(\"hippie culture\", \"West Germany\").\nHappens_in_country(\"hippie culture\", \"East Germany\").\nHappens_in_country(\"hippie culture\", \"Soviet Union\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"hippie culture\", \"United States\").\nHappens_in_country(\"hippie culture\", \"Canada\").\nHappens_in_country(\"hippie culture\", \"United Kingdom\").\nHappens_in_country(\"hippie culture\", \"West Germany\").\nHappens_in_country(\"hippie culture\", \"East Germany\").\nHappens_in_country(\"hippie culture\", \"Soviet Union\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"hippie culture\", time), Happens_in_country(\"hippie culture\", country), time > \"1960s\", country = \"Soviet Union\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hippie culture\", \"1960s\").\nHappens_in_time(\"hippie culture\", \"1970s\").\nHappens_in_time(\"hippie culture\", \"1980s\").\nHappens_in_time(\"hippie culture\", \"1990s\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"hippie culture\", \"United States\").\nHappens_in_country(\"hippie culture\", \"Canada\").\nHappens_in_country(\"hippie culture\", \"United Kingdom\").\nHappens_in_country(\"hippie culture\", \"West Germany\").\nHappens_in_country(\"hippie culture\", \"East Germany\").\nHappens_in_country(\"hippie culture\", \"Soviet Union\").\n.decl Happens_in_country(Event:symbol, Country:symbol)\nHappens_in_country(\"hippie culture\", \"United States\").\nHappens_in_country(\"hippie culture\", \"Canada\").\nHappens_in_country(\"hippie culture\", \"United Kingdom\").\nHappens_in_country(\"hippie culture\", \"West Germany\").\nHappens_in_country(\"hippie culture\", \"East Germany\").\nHappens_in_country(\"hippie culture\", \"Soviet Union\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"hippie culture\", time), Happens_in_country(\"hippie culture\", country), time > \"1960s\", country = \"Soviet Union\".\n.output Answer\n\n"]}
{"id": 1403, "answer": false, "completion": ".decl Used_in_event(Weapon:symbol, Event:symbol)\nUsed_in_event(\"AK-47\", \"Seven Years' War\").\n.decl Answer()\nAnswer() :- Used_in_event(\"AK-47\", event).\n.output Answer\n\n", "completions": [".decl Used_in_event(Weapon:symbol, Event:symbol)\nUsed_in_event(\"AK-47\", \"Seven Years' War\").\n.decl Answer()\nAnswer() :- Used_in_event(\"AK-47\", event).\n.output Answer\n\n"]}
{"id": 1404, "answer": true, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Karachi\", 15000000).\n.decl Has_religion(City:symbol, Religion:symbol)\nHas_religion(\"Karachi\", \"Islam\").\n.decl Answer()\nAnswer() :- Has_population(\"Karachi\", population), Has_religion(\"Karachi\", religion), population > 10000000, religion == \"Islam\".\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Karachi\", 15000000).\n.decl Has_religion(City:symbol, Religion:symbol)\nHas_religion(\"Karachi\", \"Islam\").\n.decl Answer()\nAnswer() :- Has_population(\"Karachi\", population), Has_religion(\"Karachi\", religion), population > 10000000, religion == \"Islam\".\n.output Answer\n\n"]}
{"id": 1405, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Alan Greenspan\", 82).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"George W. Bush\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"George H. W. Bush\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Ronald Reagan\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Jimmy Carter\", 1).\n.decl Answer()\nAnswer() :- Has_age(\"Alan Greenspan\", age), Has_n_children(\"George W. Bush\", n_children1), Has_n_children(\"George H. W. Bush\", n_children2), Has_n_children(\"Ronald Reagan\", n_children3), Has_n_children(\"Jimmy Carter\", n_children4), age >= n_children1 + n_children2 + n_children3 + n_children4 + 12.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Alan Greenspan\", 82).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"George W. Bush\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"George H. W. Bush\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Ronald Reagan\", 2).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Jimmy Carter\", 1).\n.decl Answer()\nAnswer() :- Has_age(\"Alan Greenspan\", age), Has_n_children(\"George W. Bush\", n_children1), Has_n_children(\"George H. W. Bush\", n_children2), Has_n_children(\"Ronald Reagan\", n_children3), Has_n_children(\"Jimmy Carter\", n_children4), age >= n_children1 + n_children2 + n_children3 + n_children4 + 12.\n.output Answer\n\n"]}
{"id": 1406, "answer": false, "completion": ".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"New York\").\nLives_in(\"Bob Dylan\", \"Toronto\").\nLives_in(\"Bob Dylan\", \"Vancouver\").\nLives_in(\"Bob Dylan\", \"Los Angeles\").\nLives_in(\"Bob Dylan\", \"San Francisco\").\nLives_in(\"Bob Dylan\", \"Chicago\").\nLives_in(\"Bob Dylan\", \"New Orleans\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"", "completions": [".decl Lives_in(Person:symbol, City:symbol)\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"New York\").\nLives_in(\"Bob Dylan\", \"Toronto\").\nLives_in(\"Bob Dylan\", \"Vancouver\").\nLives_in(\"Bob Dylan\", \"Los Angeles\").\nLives_in(\"Bob Dylan\", \"San Francisco\").\nLives_in(\"Bob Dylan\", \"Chicago\").\nLives_in(\"Bob Dylan\", \"New Orleans\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \"Boston\").\nLives_in(\"Bob Dylan\", \""]}
{"id": 1407, "answer": false, "completion": ".decl Is_a_friend(Person_A:symbol, Person_B:symbol)\nIs_a_friend(\"50 Cent\", \"Jeffrey Atkins\").\nIs_a_friend(\"Jeffrey Atkins\", \"50 Cent\").\n.decl Answer()\nAnswer() :- Is_a_friend(\"50 Cent\", person_b), Is_a_friend(\"Jeffrey Atkins\", person_b), Is_a_friend(\"Jeffrey Atkins\", person_a), person_a != person_b.\n.output Answer\n\n", "completions": [".decl Is_a_friend(Person_A:symbol, Person_B:symbol)\nIs_a_friend(\"50 Cent\", \"Jeffrey Atkins\").\nIs_a_friend(\"Jeffrey Atkins\", \"50 Cent\").\n.decl Answer()\nAnswer() :- Is_a_friend(\"50 Cent\", person_b), Is_a_friend(\"Jeffrey Atkins\", person_b), Is_a_friend(\"Jeffrey Atkins\", person_a), person_a != person_b.\n.output Answer\n\n"]}
{"id": 1408, "answer": true, "completion": ".decl Has_memory(Person:symbol, Memory:float)\nHas_memory(\"person with DID\", 0.9).\nHas_memory(\"person without DID\", 0.8).\n.decl Answer()\nAnswer() :- Has_memory(\"person with DID\", memory1), Has_memory(\"person without DID\", memory2), memory1 > memory2.\n.output Answer\n\n", "completions": [".decl Has_memory(Person:symbol, Memory:float)\nHas_memory(\"person with DID\", 0.9).\nHas_memory(\"person without DID\", 0.8).\n.decl Answer()\nAnswer() :- Has_memory(\"person with DID\", memory1), Has_memory(\"person without DID\", memory2), memory1 > memory2.\n.output Answer\n\n"]}
{"id": 1409, "answer": true, "completion": ".decl Has_cas_number(Substance:symbol, CAS_number:symbol)\nHas_cas_number(\"benzalkonium chloride\", \"8009-03-8\").\n.decl Has_side_effect(Substance:symbol, Side_effect:symbol)\nHas_side_effect(\"benzalkonium chloride\", \"rash\").\n.decl Answer()\nAnswer() :- Has_cas_number(\"benzalkonium chloride\", cas_number), Has_side_effect(\"benzalkonium chloride\", side_effect).\n.output Answer\n\n", "completions": [".decl Has_cas_number(Substance:symbol, CAS_number:symbol)\nHas_cas_number(\"benzalkonium chloride\", \"8009-03-8\").\n.decl Has_side_effect(Substance:symbol, Side_effect:symbol)\nHas_side_effect(\"benzalkonium chloride\", \"rash\").\n.decl Answer()\nAnswer() :- Has_cas_number(\"benzalkonium chloride\", cas_number), Has_side_effect(\"benzalkonium chloride\", side_effect).\n.output Answer\n\n"]}
{"id": 1410, "answer": false, "completion": ".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"wolverine\", \"Alaska\").\nLocated_in(\"wolverine\", \"Canada\").\nLocated_in(\"wolverine\", \"Michigan\").\nLocated_in(\"wolverine\", \"Minnesota\").\nLocated_in(\"wolverine\", \"Montana\").\nLocated_in(\"wolverine\", \"New York\").\nLocated_in(\"wolverine\", \"Washington\").\n.decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Miami\", \"USA\").\n.decl Answer()\nAnswer() :- Located_in(\"wolverine\", \"Miami\").\n.output Answer\n\n", "completions": [".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"wolverine\", \"Alaska\").\nLocated_in(\"wolverine\", \"Canada\").\nLocated_in(\"wolverine\", \"Michigan\").\nLocated_in(\"wolverine\", \"Minnesota\").\nLocated_in(\"wolverine\", \"Montana\").\nLocated_in(\"wolverine\", \"New York\").\nLocated_in(\"wolverine\", \"Washington\").\n.decl Located_in(City:symbol, Country:symbol)\nLocated_in(\"Miami\", \"USA\").\n.decl Answer()\nAnswer() :- Located_in(\"wolverine\", \"Miami\").\n.output Answer\n\n"]}
{"id": 1411, "answer": true, "completion": ".decl Has_release_date(Album:symbol, Date:symbol)\nHas_release_date(\"Doggystyle\", \"November 23, 1993\").\nHas_release_date(\"Doggystyle\", \"November 24, 1993\").\n.decl Is_released_on_weekend(Album:symbol)\nIs_released_on_weekend(\"Doggystyle\") :- Has_release_date(\"Doggystyle\", date), date = \"November 23, 1993\".\nIs_released_on_weekend(\"Doggystyle\") :- Has_release_date(\"Doggystyle\", date), date = \"November 24, 1993\".\n.decl Answer()\nAnswer() :- Is_released_on_weekend(\"Doggystyle\").\n.output Answer\n\n", "completions": [".decl Has_release_date(Album:symbol, Date:symbol)\nHas_release_date(\"Doggystyle\", \"November 23, 1993\").\nHas_release_date(\"Doggystyle\", \"November 24, 1993\").\n.decl Is_released_on_weekend(Album:symbol)\nIs_released_on_weekend(\"Doggystyle\") :- Has_release_date(\"Doggystyle\", date), date = \"November 23, 1993\".\nIs_released_on_weekend(\"Doggystyle\") :- Has_release_date(\"Doggystyle\", date), date = \"November 24, 1993\".\n.decl Answer()\nAnswer() :- Is_released_on_weekend(\"Doggystyle\").\n.output Answer\n\n"]}
{"id": 1412, "answer": true, "completion": ".decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent", "completions": [".decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent(\"Bolivia\", \"South America\").\nIs_in_continent(\"Paraguay\", \"South America\").\nIs_in_continent(\"Uruguay\", \"South America\").\nIs_in_continent(\"Guyana\", \"South America\").\nIs_in_continent(\"Suriname\", \"South America\").\nIs_in_continent(\"French Guiana\", \"South America\").\n.decl Is_in_continent(Country:symbol, Continent:symbol)\nIs_in_continent(\"Brazil\", \"South America\").\nIs_in_continent(\"Peru\", \"South America\").\nIs_in_continent(\"Colombia\", \"South America\").\nIs_in_continent(\"Venezuela\", \"South America\").\nIs_in_continent(\"Argentina\", \"South America\").\nIs_in_continent(\"Chile\", \"South America\").\nIs_in_continent(\"Ecuador\", \"South America\").\nIs_in_continent"]}
{"id": 1413, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Cauliflower\", 6).\nHas_n_members(\"California\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Cauliflower\", n_members1), Has_n_members(\"California\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Cauliflower\", 6).\nHas_n_members(\"California\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Cauliflower\", n_members1), Has_n_members(\"California\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1414, "answer": true, "completion": ".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\nIs_a_religion(\"Judaism\").\nIs_a_religion(\"Islam\").\n.decl Is_a_food(Food:symbol)\nIs_a_food(\"horseradish\").\n.decl Answer()\nAnswer() :- Is_a_religion(religion), Is_a_food(food), food = \"horseradish\".\n.output Answer\n\n", "completions": [".decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Christianity\").\nIs_a_religion(\"Judaism\").\nIs_a_religion(\"Islam\").\n.decl Is_a_food(Food:symbol)\nIs_a_food(\"horseradish\").\n.decl Answer()\nAnswer() :- Is_a_religion(religion), Is_a_food(food), food = \"horseradish\".\n.output Answer\n\n"]}
{"id": 1415, "answer": false, "completion": ".decl Follows(Fan:symbol, Artist:symbol)\nFollows(\"Katy Perry\", \"Chris Tomlin\").\nFollows(\"Katy Perry\", \"TobyMac\").\nFollows(\"Katy Perry\", \"Cory Asbury\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"H", "completions": [".decl Follows(Fan:symbol, Artist:symbol)\nFollows(\"Katy Perry\", \"Chris Tomlin\").\nFollows(\"Katy Perry\", \"TobyMac\").\nFollows(\"Katy Perry\", \"Cory Asbury\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"Hillsong Worship\").\nFollows(\"Katy Perry\", \"Hillsong Young & Free\").\nFollows(\"Katy Perry\", \"Hillsong United\").\nFollows(\"Katy Perry\", \"H"]}
{"id": 1416, "answer": true, "completion": ".decl Uses(Person:symbol, Chemical:symbol)\nUses(\"Masaharu Morimoto\", \"glutamic acid\").\n.decl Answer()\nAnswer() :- Uses(\"Masaharu Morimoto\", chemical).\n.output Answer\n\n", "completions": [".decl Uses(Person:symbol, Chemical:symbol)\nUses(\"Masaharu Morimoto\", \"glutamic acid\").\n.decl Answer()\nAnswer() :- Uses(\"Masaharu Morimoto\", chemical).\n.output Answer\n\n"]}
{"id": 1417, "answer": true, "completion": ".decl Has_sensitivity(Object:symbol, Sensitivity:float)\nHas_sensitivity(\"carp\", 0.5).\n.decl Has_environment(Object:symbol, Environment:symbol)\nHas_environment(\"carp\", \"freshwater\").\n.decl Answer()\nAnswer() :- Has_sensitivity(\"carp\", sensitivity), Has_environment(\"carp\", environment), sensitivity > 0.5.\n.output Answer\n\n", "completions": [".decl Has_sensitivity(Object:symbol, Sensitivity:float)\nHas_sensitivity(\"carp\", 0.5).\n.decl Has_environment(Object:symbol, Environment:symbol)\nHas_environment(\"carp\", \"freshwater\").\n.decl Answer()\nAnswer() :- Has_sensitivity(\"carp\", sensitivity), Has_environment(\"carp\", environment), sensitivity > 0.5.\n.output Answer\n\n"]}
{"id": 1418, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Amazon share\", 8.95).\nHas_price(\"Netflix subscription\", 12.99).\n.decl Answer()\nAnswer() :- Has_price(\"Amazon share\", price1), Has_price(\"Netflix subscription\", price2), price1 <= price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Amazon share\", 8.95).\nHas_price(\"Netflix subscription\", 12.99).\n.decl Answer()\nAnswer() :- Has_price(\"Amazon share\", price1), Has_price(\"Netflix subscription\", price2), price1 <= price2.\n.output Answer\n\n"]}
{"id": 1419, "answer": true, "completion": ".decl Has_weapon(Gladiator:symbol, Weapon:symbol)\nHas_weapon(\"Spartacus\", \"sword\").\nHas_weapon(\"Spartacus\", \"club\").\nHas_weapon(\"Spartacus\", \"axe\").\nHas_weapon(\"Spartacus\", \"dagger\").\nHas_weapon(\"Spartacus\", \"spear\").\nHas_weapon(\"Spartacus\", \"trident\").\nHas_weapon(\"Spartacus\", \"shotgun\").\n.decl Has_killed(Gladiator:symbol, Opponent:symbol)\nHas_killed(\"Spartacus\", \"Maximus\").\n.decl Answer()\nAnswer() :- Has_weapon(\"Spartacus\", weapon), Has_killed(\"Spartacus\", opponent), weapon = \"shotgun\".\n.output Answer\n\n", "completions": [".decl Has_weapon(Gladiator:symbol, Weapon:symbol)\nHas_weapon(\"Spartacus\", \"sword\").\nHas_weapon(\"Spartacus\", \"club\").\nHas_weapon(\"Spartacus\", \"axe\").\nHas_weapon(\"Spartacus\", \"dagger\").\nHas_weapon(\"Spartacus\", \"spear\").\nHas_weapon(\"Spartacus\", \"trident\").\nHas_weapon(\"Spartacus\", \"shotgun\").\n.decl Has_killed(Gladiator:symbol, Opponent:symbol)\nHas_killed(\"Spartacus\", \"Maximus\").\n.decl Answer()\nAnswer() :- Has_weapon(\"Spartacus\", weapon), Has_killed(\"Spartacus\", opponent), weapon = \"shotgun\".\n.output Answer\n\n"]}
{"id": 1420, "answer": true, "completion": ".decl Killed_by(Person:symbol, Killer:symbol)\nKilled_by(\"Steve Irwin\", \"Crocodile\").\nKilled_by(\"Steve Irwin\", \"Shark\").\nKilled_by(\"Steve Irwin\", \"Poison Dart Frog\").\n.decl Has_name(Creature:symbol, Name:symbol)\nHas_name(\"Crocodile\", \"Crocodile\").\nHas_name(\"Shark\", \"Shark\").\nHas_name(\"Poison Dart Frog\", \"Poison Dart Frog\").\n.decl Answer()\nAnswer() :- Killed_by(person, creature), Has_name(creature, name), name = \"Crocodile\".\n.output Answer\n\n", "completions": [".decl Killed_by(Person:symbol, Killer:symbol)\nKilled_by(\"Steve Irwin\", \"Crocodile\").\nKilled_by(\"Steve Irwin\", \"Shark\").\nKilled_by(\"Steve Irwin\", \"Poison Dart Frog\").\n.decl Has_name(Creature:symbol, Name:symbol)\nHas_name(\"Crocodile\", \"Crocodile\").\nHas_name(\"Shark\", \"Shark\").\nHas_name(\"Poison Dart Frog\", \"Poison Dart Frog\").\n.decl Answer()\nAnswer() :- Killed_by(person, creature), Has_name(creature, name), name = \"Crocodile\".\n.output Answer\n\n"]}
{"id": 1421, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"E6000 cures\", \"June\").\nHappens_in_time(\"E6000 cures\", \"July\").\nHappens_in_time(\"E6000 cures\", \"August\").\nHappens_in_time(\"E6000 cures\", \"September\").\nHappens_in_time(\"E6000 cures\", \"October\").\nHappens_in_time(\"E6000 cures\", \"November\").\nHappens_in_time(\"E6000 cures\", \"December\").\nHappens_in_time(\"E6000 cures\", \"January\").\nHappens_in_time(\"E6000 cures\", \"February\").\nHappens_in_time(\"E6000 cures\", \"March\").\nHappens_in_time(\"E6000 cures\", \"April\").\nHappens_in_time(\"E6000 cures\", \"May\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"hoverboard finishes the Daytona 500\", 2).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"hoverboard finishes the Daytona 500\", n_months1), Happens_in_time(\"E6000 cures\", month), n_months1 <= month.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"E6000 cures\", \"June\").\nHappens_in_time(\"E6000 cures\", \"July\").\nHappens_in_time(\"E6000 cures\", \"August\").\nHappens_in_time(\"E6000 cures\", \"September\").\nHappens_in_time(\"E6000 cures\", \"October\").\nHappens_in_time(\"E6000 cures\", \"November\").\nHappens_in_time(\"E6000 cures\", \"December\").\nHappens_in_time(\"E6000 cures\", \"January\").\nHappens_in_time(\"E6000 cures\", \"February\").\nHappens_in_time(\"E6000 cures\", \"March\").\nHappens_in_time(\"E6000 cures\", \"April\").\nHappens_in_time(\"E6000 cures\", \"May\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"hoverboard finishes the Daytona 500\", 2).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"hoverboard finishes the Daytona 500\", n_months1), Happens_in_time(\"E6000 cures\", month), n_months1 <= month.\n.output Answer\n\n"]}
{"id": 1422, "answer": false, "completion": ".decl Plays(Player:symbol, Game:symbol)\nPlays(\"Cosmic Girls\", \"League of Legends\").\n.decl Plays_alone(Player:symbol, Game:symbol)\nPlays_alone(\"Cosmic Girls\", \"League of Legends\").\n.decl Answer()\nAnswer() :- Plays(\"Cosmic Girls\", game), Plays_alone(\"Cosmic Girls\", game).\n.output Answer\n\n", "completions": [".decl Plays(Player:symbol, Game:symbol)\nPlays(\"Cosmic Girls\", \"League of Legends\").\n.decl Plays_alone(Player:symbol, Game:symbol)\nPlays_alone(\"Cosmic Girls\", \"League of Legends\").\n.decl Answer()\nAnswer() :- Plays(\"Cosmic Girls\", game), Plays_alone(\"Cosmic Girls\", game).\n.output Answer\n\n"]}
{"id": 1423, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Y2K\", \"year 2000\").\nHappens_in_time(\"The Godfather\", \"year 1972\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Y2K\", time), Happens_in_time(\"The Godfather\", time), time = \"year 2000\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Y2K\", \"year 2000\").\nHappens_in_time(\"The Godfather\", \"year 1972\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Y2K\", time), Happens_in_time(\"The Godfather\", time), time = \"year 2000\".\n.output Answer\n\n"]}
{"id": 1424, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"The Tonight Show Starring Jimmy Fallon\", \"August 20, 2020\").\nHappens_in_time(\"moonset\", \"August 20, 2020\").\n.decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"The Tonight Show Starring Jimmy Fallon\", \"moonset\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"The Tonight Show Starring Jimmy Fallon\", time), Happens_at_time(\"The Tonight Show Starring Jimmy Fallon\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"The Tonight Show Starring Jimmy Fallon\", \"August 20, 2020\").\nHappens_in_time(\"moonset\", \"August 20, 2020\").\n.decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"The Tonight Show Starring Jimmy Fallon\", \"moonset\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"The Tonight Show Starring Jimmy Fallon\", time), Happens_at_time(\"The Tonight Show Starring Jimmy Fallon\", time).\n.output Answer\n\n"]}
{"id": 1425, "answer": false, "completion": ".decl Graduates(Person:symbol, Class:symbol)\nGraduates(\"Barack Obama\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Hillary Clinton\", \"2017\").\nGraduates(\"Bernie Sanders\", \"2017\").\nGraduates(\"John McCain\", \"2017\").\nGraduates(\"Jeb Bush\", \"2017\").\nGraduates(\"Ben Carson\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Carly Fiorina\", \"2017\").\nGraduates(\"Jim Gilmore\", \"2017\").\nGraduates(\"Lindsey Graham\", \"2017\").\nGraduates(\"Mike Huckabee\", \"2017\").\nGraduates(\"Bobby Jindal\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"George Pataki\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"Rick Santorum\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Scott Walker\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Ron Paul\", \"2017\").\nGraduates(\"Rick Perry\", \"2017\").\nGraduates(\"Scott Walker\", \"2017\").\nGraduates(\"Jeb Bush\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"Rick Santorum\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"", "completions": [".decl Graduates(Person:symbol, Class:symbol)\nGraduates(\"Barack Obama\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Hillary Clinton\", \"2017\").\nGraduates(\"Bernie Sanders\", \"2017\").\nGraduates(\"John McCain\", \"2017\").\nGraduates(\"Jeb Bush\", \"2017\").\nGraduates(\"Ben Carson\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Carly Fiorina\", \"2017\").\nGraduates(\"Jim Gilmore\", \"2017\").\nGraduates(\"Lindsey Graham\", \"2017\").\nGraduates(\"Mike Huckabee\", \"2017\").\nGraduates(\"Bobby Jindal\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"George Pataki\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"Rick Santorum\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Scott Walker\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Ron Paul\", \"2017\").\nGraduates(\"Rick Perry\", \"2017\").\nGraduates(\"Scott Walker\", \"2017\").\nGraduates(\"Jeb Bush\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"Rick Santorum\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Ted Cruz\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \"2017\").\nGraduates(\"Donald Trump\", \"2017\").\nGraduates(\"Chris Christie\", \"2017\").\nGraduates(\"Marco Rubio\", \"2017\").\nGraduates(\"John Kasich\", \"2017\").\nGraduates(\"Rand Paul\", \"2017\").\nGraduates(\"Mitt Romney\", \""]}
{"id": 1426, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Janet Jackson\", \"ham\").\nEats(\"Janet Jackson\", \"pear\").\nEats(\"Janet Jackson\", \"water\").\n.decl Answer()\nAnswer() :- Eats(\"Janet Jackson\", food), Not(Has_density(food, 1)).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Janet Jackson\", \"ham\").\nEats(\"Janet Jackson\", \"pear\").\nEats(\"Janet Jackson\", \"water\").\n.decl Answer()\nAnswer() :- Eats(\"Janet Jackson\", food), Not(Has_density(food, 1)).\n.output Answer\n\n"]}
{"id": 1427, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pea pods\", 20).\n.decl Has_n_squares(Board:symbol, N_squares:float)\nHas_n_squares(\"chess board\", 64).\n.decl Answer()\nAnswer() :- Has_n_members(\"pea pods\", n_members), Has_n_squares(\"chess board\", n_squares), n_members >= n_squares.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"pea pods\", 20).\n.decl Has_n_squares(Board:symbol, N_squares:float)\nHas_n_squares(\"chess board\", 64).\n.decl Answer()\nAnswer() :- Has_n_members(\"pea pods\", n_members), Has_n_squares(\"chess board\", n_squares), n_members >= n_squares.\n.output Answer\n\n"]}
{"id": 1428, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"footprints on the moon\", \"1960\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"footprints on the moon\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"footprints on the moon\", \"1960\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"footprints on the moon\", time).\n.output Answer\n\n"]}
{"id": 1429, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Lucha trios\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Lucha trios\", n_members), Has_n_members(\"Supreme Court of Canada\", n_members).\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Lucha trios\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"Lucha trios\", n_members), Has_n_members(\"Supreme Court of Canada\", n_members).\n.output Answer\n\n"]}
{"id": 1430, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Atlantic readers\", 500).\n.decl Has_n_battalions(Group:symbol, N_battalions:float)\nHas_n_battalions(\"Atlantic readers\", n_battalions).\n.decl Answer()\nAnswer() :- Has_n_members(\"Atlantic readers\", n_members), Has_n_battalions(\"Atlantic readers\", n_battalions), n_members > n_battalions.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Atlantic readers\", 500).\n.decl Has_n_battalions(Group:symbol, N_battalions:float)\nHas_n_battalions(\"Atlantic readers\", n_battalions).\n.decl Answer()\nAnswer() :- Has_n_members(\"Atlantic readers\", n_members), Has_n_battalions(\"Atlantic readers\", n_battalions), n_members > n_battalions.\n.output Answer\n\n"]}
{"id": 1431, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"French Revolution\", \"1789\").\nHappens_in_time(\"French Revolution\", \"1799\").\nHappens_in_time(\"French Revolution\", \"1848\").\nHappens_in_time(\"French Revolution\", \"1871\").\nHappens_in_time(\"French Revolution\", \"1917\").\nHappens_in_time(\"French Revolution\", \"1939\").\nHappens_in_time(\"French Revolution\", \"1944\").\nHappens_in_time(\"French Revolution\", \"1953\").\nHappens_in_time(\"French Revolution\", \"1968\").\nHappens_in_time(\"French Revolution\", \"1970\").\nHappens_in_time(\"French Revolution\", \"1972\").\nHappens_in_time(\"French Revolution\", \"1975\").\nHappens_in_time(\"French Revolution\", \"1980\").\nHappens_in_time(\"French Revolution\", \"1981\").\nHappens_in_time(\"French Revolution\", \"1982\").\nHappens_in_time(\"French Revolution\", \"1983\").\nHappens_in_time(\"French Revolution\", \"1984\").\nHappens_in_time(\"French Revolution\", \"1985\").\nHappens_in_time(\"French Revolution\", \"1986\").\nHappens_in_time(\"French Revolution\", \"1987\").\nHappens_in_time(\"French Revolution\", \"1988\").\nHappens_in_time(\"French Revolution\", \"1989\").\nHappens_in_time(\"French Revolution\", \"1990\").\nHappens_in_time(\"French Revolution\", \"1991\").\nHappens_in_time(\"French Revolution\", \"1992\").\nHappens_in_time(\"French Revolution\", \"1993\").\nHappens_in_time(\"French Revolution\", \"1994\").\nHappens_in_time(\"French Revolution\", \"1995\").\nHappens_in_time(\"French Revolution\", \"1996\").\nHappens_in_time(\"French Revolution\", \"1997\").\nHappens_in_time(\"French Revolution\", \"1998\").\nHappens_in_time(\"French Revolution\", \"1999\").\nHappens_in_time(\"French Revolution\", \"2000\").\nHappens_in_time(\"French Revolution\", \"2001\").\nHappens_in_time(\"French Revolution\", \"2002\").\nHappens_in_time(\"French Revolution\", \"2003\").\nHappens_in_time(\"French Revolution\", \"2004\").\nHappens_in_time(\"French Revolution\", \"2005\").\nHappens_in_time(\"French Revolution\", \"2006\").\nHappens_in_time(\"French Revolution\", \"2007\").\nHappens_in_time(\"French Revolution\", \"2008\").\nHappens_in_time(\"French Revolution\", \"2009\").\nHappens_in_time(\"French Revolution\", \"2010\").\nHappens_in_time(\"French Revolution\", \"2011\").\nHappens_in_time(\"French Revolution\", \"2012\").\nHappens_in_time(\"French Revolution\", \"2013\").\nHappens_in_time(\"French Revolution\", \"2014\").\nHappens_in_time(\"French Revolution\", \"2015\").\nHappens_in_time(\"French Revolution\", \"2016\").\nHappens_in_time(\"French Revolution\", \"2017\").\nHappens_in_time(\"French Revolution\", \"2018\").\nHappens_in_", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"French Revolution\", \"1789\").\nHappens_in_time(\"French Revolution\", \"1799\").\nHappens_in_time(\"French Revolution\", \"1848\").\nHappens_in_time(\"French Revolution\", \"1871\").\nHappens_in_time(\"French Revolution\", \"1917\").\nHappens_in_time(\"French Revolution\", \"1939\").\nHappens_in_time(\"French Revolution\", \"1944\").\nHappens_in_time(\"French Revolution\", \"1953\").\nHappens_in_time(\"French Revolution\", \"1968\").\nHappens_in_time(\"French Revolution\", \"1970\").\nHappens_in_time(\"French Revolution\", \"1972\").\nHappens_in_time(\"French Revolution\", \"1975\").\nHappens_in_time(\"French Revolution\", \"1980\").\nHappens_in_time(\"French Revolution\", \"1981\").\nHappens_in_time(\"French Revolution\", \"1982\").\nHappens_in_time(\"French Revolution\", \"1983\").\nHappens_in_time(\"French Revolution\", \"1984\").\nHappens_in_time(\"French Revolution\", \"1985\").\nHappens_in_time(\"French Revolution\", \"1986\").\nHappens_in_time(\"French Revolution\", \"1987\").\nHappens_in_time(\"French Revolution\", \"1988\").\nHappens_in_time(\"French Revolution\", \"1989\").\nHappens_in_time(\"French Revolution\", \"1990\").\nHappens_in_time(\"French Revolution\", \"1991\").\nHappens_in_time(\"French Revolution\", \"1992\").\nHappens_in_time(\"French Revolution\", \"1993\").\nHappens_in_time(\"French Revolution\", \"1994\").\nHappens_in_time(\"French Revolution\", \"1995\").\nHappens_in_time(\"French Revolution\", \"1996\").\nHappens_in_time(\"French Revolution\", \"1997\").\nHappens_in_time(\"French Revolution\", \"1998\").\nHappens_in_time(\"French Revolution\", \"1999\").\nHappens_in_time(\"French Revolution\", \"2000\").\nHappens_in_time(\"French Revolution\", \"2001\").\nHappens_in_time(\"French Revolution\", \"2002\").\nHappens_in_time(\"French Revolution\", \"2003\").\nHappens_in_time(\"French Revolution\", \"2004\").\nHappens_in_time(\"French Revolution\", \"2005\").\nHappens_in_time(\"French Revolution\", \"2006\").\nHappens_in_time(\"French Revolution\", \"2007\").\nHappens_in_time(\"French Revolution\", \"2008\").\nHappens_in_time(\"French Revolution\", \"2009\").\nHappens_in_time(\"French Revolution\", \"2010\").\nHappens_in_time(\"French Revolution\", \"2011\").\nHappens_in_time(\"French Revolution\", \"2012\").\nHappens_in_time(\"French Revolution\", \"2013\").\nHappens_in_time(\"French Revolution\", \"2014\").\nHappens_in_time(\"French Revolution\", \"2015\").\nHappens_in_time(\"French Revolution\", \"2016\").\nHappens_in_time(\"French Revolution\", \"2017\").\nHappens_in_time(\"French Revolution\", \"2018\").\nHappens_in_"]}
{"id": 1432, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"1904\").\nHappens_in_time(\"death\", \"1991\").\nHappens_in_time(\"marriage\", \"1940\").\nHappens_in_time(\"divorce\", \"1949\").\nHappens_in_time(\"marriage\", \"1951\").\nHappens_in_time(\"divorce\", \"1958\").\nHappens_in_time(\"marriage\", \"1960\").\nHappens_in_time(\"divorce\", \"1968\").\nHappens_in_time(\"marriage\", \"1969\").\nHappens_in_time(\"divorce\", \"1972\").\nHappens_in_time(\"marriage\", \"1973\").\nHappens_in_time(\"divorce\", \"1975\").\nHappens_in_time(\"marriage\", \"1977\").\nHappens_in_time(\"divorce\", \"1979\").\nHappens_in_time(\"marriage\", \"1980\").\nHappens_in_time(\"divorce\", \"1981\").\nHappens_in_time(\"marriage\", \"1982\").\nHappens_in_time(\"divorce\", \"1983\").\nHappens_in_time(\"marriage\", \"1984\").\nHappens_in_time(\"divorce\", \"1985\").\nHappens_in_time(\"marriage\", \"1986\").\nHappens_in_time(\"divorce\", \"1987\").\nHappens_in_time(\"marriage\", \"1988\").\nHappens_in_time(\"divorce\", \"1989\").\nHappens_in_time(\"marriage\", \"1990\").\nHappens_in_time(\"divorce\", \"1991\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", birth), Happens_in_time(\"death\", death), birth < death.\nAnswer() :- Happens_in_time(\"marriage\", marriage), Happens_in_time(\"divorce\", divorce), marriage < divorce.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), marriage1 < marriage2, divorce1 < divorce2.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), Happens_in_time(\"marriage\", marriage3), Happens_in_time(\"divorce\", divorce3), marriage1 < marriage2, divorce1 < divorce2, marriage2 < marriage3, divorce2 < divorce3.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), Happens_in_time(\"marriage\", marriage3), Happens_in_time(\"divorce\", divorce3), Happens_in_time(\"marriage\", marriage4), Happens_in_time(\"divorce\", divorce4), marriage1 < marriage2, divorce1 < divorce2, marriage2 < marriage3, divorce2 < divorce3, marriage3 < marriage4, divorce3 < divorce4.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"1904\").\nHappens_in_time(\"death\", \"1991\").\nHappens_in_time(\"marriage\", \"1940\").\nHappens_in_time(\"divorce\", \"1949\").\nHappens_in_time(\"marriage\", \"1951\").\nHappens_in_time(\"divorce\", \"1958\").\nHappens_in_time(\"marriage\", \"1960\").\nHappens_in_time(\"divorce\", \"1968\").\nHappens_in_time(\"marriage\", \"1969\").\nHappens_in_time(\"divorce\", \"1972\").\nHappens_in_time(\"marriage\", \"1973\").\nHappens_in_time(\"divorce\", \"1975\").\nHappens_in_time(\"marriage\", \"1977\").\nHappens_in_time(\"divorce\", \"1979\").\nHappens_in_time(\"marriage\", \"1980\").\nHappens_in_time(\"divorce\", \"1981\").\nHappens_in_time(\"marriage\", \"1982\").\nHappens_in_time(\"divorce\", \"1983\").\nHappens_in_time(\"marriage\", \"1984\").\nHappens_in_time(\"divorce\", \"1985\").\nHappens_in_time(\"marriage\", \"1986\").\nHappens_in_time(\"divorce\", \"1987\").\nHappens_in_time(\"marriage\", \"1988\").\nHappens_in_time(\"divorce\", \"1989\").\nHappens_in_time(\"marriage\", \"1990\").\nHappens_in_time(\"divorce\", \"1991\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", birth), Happens_in_time(\"death\", death), birth < death.\nAnswer() :- Happens_in_time(\"marriage\", marriage), Happens_in_time(\"divorce\", divorce), marriage < divorce.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), marriage1 < marriage2, divorce1 < divorce2.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), Happens_in_time(\"marriage\", marriage3), Happens_in_time(\"divorce\", divorce3), marriage1 < marriage2, divorce1 < divorce2, marriage2 < marriage3, divorce2 < divorce3.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens_in_time(\"divorce\", divorce1), Happens_in_time(\"marriage\", marriage2), Happens_in_time(\"divorce\", divorce2), Happens_in_time(\"marriage\", marriage3), Happens_in_time(\"divorce\", divorce3), Happens_in_time(\"marriage\", marriage4), Happens_in_time(\"divorce\", divorce4), marriage1 < marriage2, divorce1 < divorce2, marriage2 < marriage3, divorce2 < divorce3, marriage3 < marriage4, divorce3 < divorce4.\nAnswer() :- Happens_in_time(\"marriage\", marriage1), Happens"]}
{"id": 1433, "answer": true, "completion": ".decl Has_leaf_shape(Tree:symbol, Leaf_shape:symbol)\nHas_leaf_shape(\"Christmas tree\", \"convex\").\nHas_leaf_shape(\"deciduous tree\", \"concave\").\n.decl Answer()\nAnswer() :- Has_leaf_shape(\"Christmas tree\", leaf_shape), Has_leaf_shape(\"deciduous tree\", leaf_shape).\n.output Answer\n\n", "completions": [".decl Has_leaf_shape(Tree:symbol, Leaf_shape:symbol)\nHas_leaf_shape(\"Christmas tree\", \"convex\").\nHas_leaf_shape(\"deciduous tree\", \"concave\").\n.decl Answer()\nAnswer() :- Has_leaf_shape(\"Christmas tree\", leaf_shape), Has_leaf_shape(\"deciduous tree\", leaf_shape).\n.output Answer\n\n"]}
{"id": 1434, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harvey Milk\", \"Harvey\").\nHas_name(\"Harvey Milk\", \"Milk\").\n.decl Answer()\nAnswer() :- Has_name(\"Harvey Milk\", name1), Has_name(\"Harvey Milk\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harvey Milk\", \"Harvey\").\nHas_name(\"Harvey Milk\", \"Milk\").\n.decl Answer()\nAnswer() :- Has_name(\"Harvey Milk\", name1), Has_name(\"Harvey Milk\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 1435, "answer": false, "completion": ".decl Has_saga(Group:symbol, Saga:symbol)\nHas_saga(\"Vikings\", \"Njal's Saga\").\nHas_saga(\"Vikings\", \"Snorri Sturluson's Saga\").\nHas_saga(\"Vikings\", \"Thidrek's Saga\").\nHas_saga(\"Vikings\", \"Helgi's Saga\").\nHas_saga(\"Vikings\", \"Hrolf's Saga\").\nHas_saga(\"Vikings\", \"Beowulf's Saga\").\nHas_saga(\"Vikings\", \"Egil's Saga\").\nHas_saga(\"Vikings\", \"Harald's Saga\").\nHas_saga(\"Vikings\", \"Guthrum's Saga\").\nHas_saga(\"Vikings\", \"Gautrek's Saga\").\nHas_saga(\"Vikings\", \"Grimr's Saga\").\nHas_saga(\"Vikings\", \"Bjorn's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Hrolf's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").", "completions": [".decl Has_saga(Group:symbol, Saga:symbol)\nHas_saga(\"Vikings\", \"Njal's Saga\").\nHas_saga(\"Vikings\", \"Snorri Sturluson's Saga\").\nHas_saga(\"Vikings\", \"Thidrek's Saga\").\nHas_saga(\"Vikings\", \"Helgi's Saga\").\nHas_saga(\"Vikings\", \"Hrolf's Saga\").\nHas_saga(\"Vikings\", \"Beowulf's Saga\").\nHas_saga(\"Vikings\", \"Egil's Saga\").\nHas_saga(\"Vikings\", \"Harald's Saga\").\nHas_saga(\"Vikings\", \"Guthrum's Saga\").\nHas_saga(\"Vikings\", \"Gautrek's Saga\").\nHas_saga(\"Vikings\", \"Grimr's Saga\").\nHas_saga(\"Vikings\", \"Bjorn's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Hrolf's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\").\nHas_saga(\"Vikings\", \"Haki's Saga\")."]}
{"id": 1436, "answer": false, "completion": ".decl Has_texture(Object:symbol, Texture:symbol)\nHas_texture(\"cucumber\", \"smooth\").\nHas_texture(\"cucumber\", \"rough\").\n.decl Answer()\nAnswer() :- Has_texture(\"cucumber\", texture), Has_texture(\"cucumber\", texture).\n.output Answer\n\n", "completions": [".decl Has_texture(Object:symbol, Texture:symbol)\nHas_texture(\"cucumber\", \"smooth\").\nHas_texture(\"cucumber\", \"rough\").\n.decl Answer()\nAnswer() :- Has_texture(\"cucumber\", texture), Has_texture(\"cucumber\", texture).\n.output Answer\n\n"]}
{"id": 1437, "answer": true, "completion": ".decl Used_in(Currency:symbol, Country:symbol)\nUsed_in(\"Euro\", \"Germany\").\nUsed_in(\"Euro\", \"France\").\nUsed_in(\"Euro\", \"Netherlands\").\nUsed_in(\"Euro\", \"Belgium\").\nUsed_in(\"Euro\", \"Luxembourg\").\nUsed_in(\"Euro\", \"Italy\").\nUsed_in(\"Euro\", \"Greece\").\nUsed_in(\"Euro\", \"Portugal\").\nUsed_in(\"Euro\", \"Spain\").\nUsed_in(\"Euro\", \"Austria\").\nUsed_in(\"Euro\", \"Malta\").\nUsed_in(\"Euro\", \"Cyprus\").\nUsed_in(\"Euro\", \"Finland\").\nUsed_in(\"Euro\", \"Slovakia\").\nUsed_in(\"Euro\", \"Slovenia\").\nUsed_in(\"Euro\", \"Ireland\").\nUsed_in(\"Euro\", \"Czech Republic\").\nUsed_in(\"Euro\", \"Estonia\").\nUsed_in(\"Euro\", \"Latvia\").\nUsed_in(\"Euro\", \"Lithuania\").\nUsed_in(\"Euro\", \"Moldova\").\nUsed_in(\"Euro\", \"Poland\").\nUsed_in(\"Euro\", \"Romania\").\nUsed_in(\"Euro\", \"Bulgaria\").\nUsed_in(\"Euro\", \"Croatia\").\nUsed_in(\"Euro\", \"Hungary\").\nUsed_in(\"Euro\", \"Macedonia\").\nUsed_in(\"Euro\", \"Serbia\").\nUsed_in(\"Euro\", \"Slovakia\").\nUsed_in(\"Euro\", \"Slovenia\").\nUsed_in(\"Euro\", \"Montenegro\").\nUsed_in(\"Euro\", \"Albania\").\nUsed_in(\"Euro\", \"Bosnia and Herzegovina\").\nUsed_in(\"Euro\", \"Kosovo\").\nUsed_in(\"Euro\", \"Macedonia\").\nUsed_in(\"Euro\", \"Serbia\").\nUsed_in(\"Euro\", \"Turkey\").\nUsed_in(\"Euro\", \"Cyprus\").\nUsed_in(\"Euro\", \"Malta\").\nUsed_in(\"Euro\", \"Andorra\").\nUsed_in(\"Euro\", \"Gibraltar\").\nUsed_in(\"Euro\", \"San Marino\").\nUsed_in(\"Euro\", \"Vatican City\").\nUsed_in(\"Euro\", \"Monaco\").\nUsed_in(\"Euro\", \"Liechtenstein\").\nUsed_in(\"Euro\", \"Switzerland\").\nUsed_in(\"Euro\", \"Denmark\").\nUsed_in(\"Euro\", \"Finland\").\nUsed_in(\"Euro\", \"Iceland\").\nUsed_in(\"Euro\", \"Norway\").\nUsed_in(\"Euro\", \"Sweden\").\nUsed_in(\"Euro\", \"United Kingdom\").\nUsed_in(\"Euro\", \"Guernsey\").\nUsed_in(\"Euro\", \"Jersey\").\nUsed_in(\"Euro\", \"Isle of Man\").\nUsed_in(\"Euro\", \"Faroe Islands\").\nUsed_in(\"Euro\", \"Greenland\").\nUsed_in(\"Euro\", \"Svalbard and Jan Mayen\").\nUsed_in(\"Euro\", \"Aland Islands\").\nUsed_in(\"Euro\", \"Bouvet Island\").\nUsed_in(\"Euro\", \"French Guiana\").\nUsed_in(\"Euro\", \"Guadeloupe\").\nUsed_in(\"Euro\", \"Martinique\").\nUsed_in(\"Euro\", \"Reunion\").\nUsed_in(\"Euro\", \"Saint Barthelemy\").\nUsed_in(\"Euro\", \"Saint Martin\").\nUsed_in(\"Euro\", \"Saint", "completions": [".decl Used_in(Currency:symbol, Country:symbol)\nUsed_in(\"Euro\", \"Germany\").\nUsed_in(\"Euro\", \"France\").\nUsed_in(\"Euro\", \"Netherlands\").\nUsed_in(\"Euro\", \"Belgium\").\nUsed_in(\"Euro\", \"Luxembourg\").\nUsed_in(\"Euro\", \"Italy\").\nUsed_in(\"Euro\", \"Greece\").\nUsed_in(\"Euro\", \"Portugal\").\nUsed_in(\"Euro\", \"Spain\").\nUsed_in(\"Euro\", \"Austria\").\nUsed_in(\"Euro\", \"Malta\").\nUsed_in(\"Euro\", \"Cyprus\").\nUsed_in(\"Euro\", \"Finland\").\nUsed_in(\"Euro\", \"Slovakia\").\nUsed_in(\"Euro\", \"Slovenia\").\nUsed_in(\"Euro\", \"Ireland\").\nUsed_in(\"Euro\", \"Czech Republic\").\nUsed_in(\"Euro\", \"Estonia\").\nUsed_in(\"Euro\", \"Latvia\").\nUsed_in(\"Euro\", \"Lithuania\").\nUsed_in(\"Euro\", \"Moldova\").\nUsed_in(\"Euro\", \"Poland\").\nUsed_in(\"Euro\", \"Romania\").\nUsed_in(\"Euro\", \"Bulgaria\").\nUsed_in(\"Euro\", \"Croatia\").\nUsed_in(\"Euro\", \"Hungary\").\nUsed_in(\"Euro\", \"Macedonia\").\nUsed_in(\"Euro\", \"Serbia\").\nUsed_in(\"Euro\", \"Slovakia\").\nUsed_in(\"Euro\", \"Slovenia\").\nUsed_in(\"Euro\", \"Montenegro\").\nUsed_in(\"Euro\", \"Albania\").\nUsed_in(\"Euro\", \"Bosnia and Herzegovina\").\nUsed_in(\"Euro\", \"Kosovo\").\nUsed_in(\"Euro\", \"Macedonia\").\nUsed_in(\"Euro\", \"Serbia\").\nUsed_in(\"Euro\", \"Turkey\").\nUsed_in(\"Euro\", \"Cyprus\").\nUsed_in(\"Euro\", \"Malta\").\nUsed_in(\"Euro\", \"Andorra\").\nUsed_in(\"Euro\", \"Gibraltar\").\nUsed_in(\"Euro\", \"San Marino\").\nUsed_in(\"Euro\", \"Vatican City\").\nUsed_in(\"Euro\", \"Monaco\").\nUsed_in(\"Euro\", \"Liechtenstein\").\nUsed_in(\"Euro\", \"Switzerland\").\nUsed_in(\"Euro\", \"Denmark\").\nUsed_in(\"Euro\", \"Finland\").\nUsed_in(\"Euro\", \"Iceland\").\nUsed_in(\"Euro\", \"Norway\").\nUsed_in(\"Euro\", \"Sweden\").\nUsed_in(\"Euro\", \"United Kingdom\").\nUsed_in(\"Euro\", \"Guernsey\").\nUsed_in(\"Euro\", \"Jersey\").\nUsed_in(\"Euro\", \"Isle of Man\").\nUsed_in(\"Euro\", \"Faroe Islands\").\nUsed_in(\"Euro\", \"Greenland\").\nUsed_in(\"Euro\", \"Svalbard and Jan Mayen\").\nUsed_in(\"Euro\", \"Aland Islands\").\nUsed_in(\"Euro\", \"Bouvet Island\").\nUsed_in(\"Euro\", \"French Guiana\").\nUsed_in(\"Euro\", \"Guadeloupe\").\nUsed_in(\"Euro\", \"Martinique\").\nUsed_in(\"Euro\", \"Reunion\").\nUsed_in(\"Euro\", \"Saint Barthelemy\").\nUsed_in(\"Euro\", \"Saint Martin\").\nUsed_in(\"Euro\", \"Saint"]}
{"id": 1438, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Bugs Bunny\", \"Bugs\").\nHas_name(\"root vegetable\", \"carrot\").\n.decl Has_nickname(Object:symbol, Nickname:symbol)\nHas_nickname(\"Bugs Bunny\", \"Bugs\").\nHas_nickname(\"root vegetable\", \"carrot\").\n.decl Answer()\nAnswer() :- Has_name(\"Bugs Bunny\", name), Has_nickname(\"root vegetable\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Bugs Bunny\", \"Bugs\").\nHas_name(\"root vegetable\", \"carrot\").\n.decl Has_nickname(Object:symbol, Nickname:symbol)\nHas_nickname(\"Bugs Bunny\", \"Bugs\").\nHas_nickname(\"root vegetable\", \"carrot\").\n.decl Answer()\nAnswer() :- Has_name(\"Bugs Bunny\", name), Has_nickname(\"root vegetable\", name).\n.output Answer\n\n"]}
{"id": 1439, "answer": true, "completion": ".decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Hammurabi\").\n.decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Jesus\").\n.decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Martin Luther King\").\n.decl Golden_rule(Person:symbol, Person2:symbol)\nGolden_rule(\"Hammurabi\", \"Hammurabi\").\nGolden_rule(\"Hammurabi\", \"Jesus\").\nGolden_rule(\"Hammurabi\", \"Martin Luther King\").\nGolden_rule(\"Jesus\", \"Hammurabi\").\nGolden_rule(\"Jesus\", \"Jesus\").\nGolden_rule(\"Jesus\", \"Martin Luther King\").\nGolden_rule(\"Martin Luther King\", \"Hammurabi\").\nGolden_rule(\"Martin Luther King\", \"Jesus\").\nGolden_rule(\"Martin Luther King\", \"Martin Luther King\").\n.decl Answer()\nAnswer() :- Is_a_Christian(person), Is_a_Christian(person2), Golden_rule(person, person2).\n.output Answer\n\n", "completions": [".decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Hammurabi\").\n.decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Jesus\").\n.decl Is_a_Christian(Person:symbol)\nIs_a_Christian(\"Martin Luther King\").\n.decl Golden_rule(Person:symbol, Person2:symbol)\nGolden_rule(\"Hammurabi\", \"Hammurabi\").\nGolden_rule(\"Hammurabi\", \"Jesus\").\nGolden_rule(\"Hammurabi\", \"Martin Luther King\").\nGolden_rule(\"Jesus\", \"Hammurabi\").\nGolden_rule(\"Jesus\", \"Jesus\").\nGolden_rule(\"Jesus\", \"Martin Luther King\").\nGolden_rule(\"Martin Luther King\", \"Hammurabi\").\nGolden_rule(\"Martin Luther King\", \"Jesus\").\nGolden_rule(\"Martin Luther King\", \"Martin Luther King\").\n.decl Answer()\nAnswer() :- Is_a_Christian(person), Is_a_Christian(person2), Golden_rule(person, person2).\n.output Answer\n\n"]}
{"id": 1440, "answer": false, "completion": ".decl Has_origin_in_century(Religion:symbol, Century:symbol)\nHas_origin_in_century(\"Buddhism\", 19).\nHas_origin_in_century(\"Hinduism\", 19).\nHas_origin_in_century(\"Judaism\", 19).\nHas_origin_in_century(\"Islam\", 19).\n.decl Answer()\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Buddhism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Hinduism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Judaism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Islam\", century).\n.output Answer\n\n", "completions": [".decl Has_origin_in_century(Religion:symbol, Century:symbol)\nHas_origin_in_century(\"Buddhism\", 19).\nHas_origin_in_century(\"Hinduism\", 19).\nHas_origin_in_century(\"Judaism\", 19).\nHas_origin_in_century(\"Islam\", 19).\n.decl Answer()\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Buddhism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Hinduism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Judaism\", century).\nAnswer() :- Has_origin_in_century(religion, century), Has_origin_in_century(\"Islam\", century).\n.output Answer\n\n"]}
{"id": 1441, "answer": false, "completion": ".decl Is_part_of(Book:symbol, Bible:symbol)\nIs_part_of(\"Ten commandments\", \"bible\").\nIs_part_of(\"bible\", \"holy book\").\n.decl Is_not_part_of(Book:symbol, Bible:symbol)\nIs_not_part_of(\"Ten commandments\", \"holy book\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Ten commandments\", bible), Is_not_part_of(\"Ten commandments\", bible).\n.output Answer\n\n", "completions": [".decl Is_part_of(Book:symbol, Bible:symbol)\nIs_part_of(\"Ten commandments\", \"bible\").\nIs_part_of(\"bible\", \"holy book\").\n.decl Is_not_part_of(Book:symbol, Bible:symbol)\nIs_not_part_of(\"Ten commandments\", \"holy book\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Ten commandments\", bible), Is_not_part_of(\"Ten commandments\", bible).\n.output Answer\n\n"]}
{"id": 1442, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"teddy bear\", 0.5).\nHas_size(\"surveillance\", 0.5).\n.decl Answer()\nAnswer() :- Has_size(\"teddy bear\", size1), Has_size(\"surveillance\", size2), size1 > size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"teddy bear\", 0.5).\nHas_size(\"surveillance\", 0.5).\n.decl Answer()\nAnswer() :- Has_size(\"teddy bear\", size1), Has_size(\"surveillance\", size2), size1 > size2.\n.output Answer\n\n"]}
{"id": 1443, "answer": false, "completion": ".decl Has_pay(Person:symbol, Pay:float)\nHas_pay(\"retail associate\", 15).\nHas_pay(\"retailer's CEO\", 100).\n.decl Answer()\nAnswer() :- Has_pay(\"retail associate\", pay1), Has_pay(\"retailer's CEO\", pay2), pay1 > pay2.\n.output Answer\n\n", "completions": [".decl Has_pay(Person:symbol, Pay:float)\nHas_pay(\"retail associate\", 15).\nHas_pay(\"retailer's CEO\", 100).\n.decl Answer()\nAnswer() :- Has_pay(\"retail associate\", pay1), Has_pay(\"retailer's CEO\", pay2), pay1 > pay2.\n.output Answer\n\n"]}
{"id": 1444, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Tame Impala\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hot Potato\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Tame Impala\", n_members1), Has_n_members(\"Hot Potato\", n_members2), n_members1 = n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Tame Impala\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Hot Potato\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Tame Impala\", n_members1), Has_n_members(\"Hot Potato\", n_members2), n_members1 = n_members2.\n.output Answer\n\n"]}
{"id": 1445, "answer": false, "completion": ".decl Has_lactic_acid(Object:symbol, Lactic_acid:float)\nHas_lactic_acid(\"body\", 0.1).\n.decl Answer()\nAnswer() :- Has_lactic_acid(\"body\", lactic_acid), lactic_acid > 0.1.\n.output Answer\n\n", "completions": [".decl Has_lactic_acid(Object:symbol, Lactic_acid:float)\nHas_lactic_acid(\"body\", 0.1).\n.decl Answer()\nAnswer() :- Has_lactic_acid(\"body\", lactic_acid), lactic_acid > 0.1.\n.output Answer\n\n"]}
{"id": 1446, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Tokyo Tower repainted\", \"January\").\nHappens_in_time(\"Tokyo Tower repainted\", \"February\").\nHappens_in_time(\"Tokyo Tower repainted\", \"March\").\nHappens_in_time(\"Tokyo Tower repainted\", \"April\").\nHappens_in_time(\"Tokyo Tower repainted\", \"May\").\nHappens_in_time(\"Tokyo Tower repainted\", \"June\").\nHappens_in_time(\"Tokyo Tower repainted\", \"July\").\nHappens_in_time(\"Tokyo Tower repainted\", \"August\").\nHappens_in_time(\"Tokyo Tower repainted\", \"September\").\nHappens_in_time(\"Tokyo Tower repainted\", \"October\").\nHappens_in_time(\"Tokyo Tower repainted\", \"November\").\nHappens_in_time(\"Tokyo Tower repainted\", \"December\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"President Trump's first term\", \"January\").\nHappens_in_time(\"President Trump's first term\", \"February\").\nHappens_in_time(\"President Trump's first term\", \"March\").\nHappens_in_time(\"President Trump's first term\", \"April\").\nHappens_in_time(\"President Trump's first term\", \"May\").\nHappens_in_time(\"President Trump's first term\", \"June\").\nHappens_in_time(\"President Trump's first term\", \"July\").\nHappens_in_time(\"President Trump's first term\", \"August\").\nHappens_in_time(\"President Trump's first term\", \"September\").\nHappens_in_time(\"President Trump's first term\", \"October\").\nHappens_in_time(\"President Trump's first term\", \"November\").\nHappens_in_time(\"President Trump's first term\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Tokyo Tower repainted\", month1), Happens_in_time(\"President Trump's first term\", month2), month1 > month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Tokyo Tower repainted\", \"January\").\nHappens_in_time(\"Tokyo Tower repainted\", \"February\").\nHappens_in_time(\"Tokyo Tower repainted\", \"March\").\nHappens_in_time(\"Tokyo Tower repainted\", \"April\").\nHappens_in_time(\"Tokyo Tower repainted\", \"May\").\nHappens_in_time(\"Tokyo Tower repainted\", \"June\").\nHappens_in_time(\"Tokyo Tower repainted\", \"July\").\nHappens_in_time(\"Tokyo Tower repainted\", \"August\").\nHappens_in_time(\"Tokyo Tower repainted\", \"September\").\nHappens_in_time(\"Tokyo Tower repainted\", \"October\").\nHappens_in_time(\"Tokyo Tower repainted\", \"November\").\nHappens_in_time(\"Tokyo Tower repainted\", \"December\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"President Trump's first term\", \"January\").\nHappens_in_time(\"President Trump's first term\", \"February\").\nHappens_in_time(\"President Trump's first term\", \"March\").\nHappens_in_time(\"President Trump's first term\", \"April\").\nHappens_in_time(\"President Trump's first term\", \"May\").\nHappens_in_time(\"President Trump's first term\", \"June\").\nHappens_in_time(\"President Trump's first term\", \"July\").\nHappens_in_time(\"President Trump's first term\", \"August\").\nHappens_in_time(\"President Trump's first term\", \"September\").\nHappens_in_time(\"President Trump's first term\", \"October\").\nHappens_in_time(\"President Trump's first term\", \"November\").\nHappens_in_time(\"President Trump's first term\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Tokyo Tower repainted\", month1), Happens_in_time(\"President Trump's first term\", month2), month1 > month2.\n.output Answer\n\n"]}
{"id": 1447, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"unicycle\", 100).\nHas_weight(\"crew of Apollo 15\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"unicycle\", weight1), Has_weight(\"crew of Apollo 15\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"unicycle\", 100).\nHas_weight(\"crew of Apollo 15\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"unicycle\", weight1), Has_weight(\"crew of Apollo 15\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 1448, "answer": false, "completion": ".decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.", "completions": [".decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n.decl Is_law(Law:symbol)\nIs_law(\"court of law\").\n."]}
{"id": 1449, "answer": true, "completion": ".decl Is_easy(Language:symbol)\nIs_easy(\"Newspeak\").\n.decl Answer()\nAnswer() :- Is_easy(\"Newspeak\").\n.output Answer\n\n", "completions": [".decl Is_easy(Language:symbol)\nIs_easy(\"Newspeak\").\n.decl Answer()\nAnswer() :- Is_easy(\"Newspeak\").\n.output Answer\n\n"]}
{"id": 1450, "answer": true, "completion": ".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"Snow White dwarves\", 1).\nHas_strength(\"The Hobbit dwarves\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"Snow White dwarves\", strength1), Has_strength(\"The Hobbit dwarves\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"Snow White dwarves\", 1).\nHas_strength(\"The Hobbit dwarves\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"Snow White dwarves\", strength1), Has_strength(\"The Hobbit dwarves\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1451, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Statue of Unity\", 67).\nHas_height(\"Statue of Liberty\", 46).\nHas_height(\"Lighthouse of Alexandria\", 21).\n.decl Answer()\nAnswer() :- Has_height(\"Statue of Unity\", height1), Has_height(\"Statue of Liberty\", height2), Has_height(\"Lighthouse of Alexandria\", height3), height1 > height2, height1 > height3.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Statue of Unity\", 67).\nHas_height(\"Statue of Liberty\", 46).\nHas_height(\"Lighthouse of Alexandria\", 21).\n.decl Answer()\nAnswer() :- Has_height(\"Statue of Unity\", height1), Has_height(\"Statue of Liberty\", height2), Has_height(\"Lighthouse of Alexandria\", height3), height1 > height2, height1 > height3.\n.output Answer\n\n"]}
{"id": 1452, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Football War\", \"June\").\nHappens_in_time(\"Football War\", \"July\").\n.decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"Football War\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Football War\", month), Last_n_months(\"Football War\", n_months), n_months >= 1.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Football War\", \"June\").\nHappens_in_time(\"Football War\", \"July\").\n.decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"Football War\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Football War\", month), Last_n_months(\"Football War\", n_months), n_months >= 1.\n.output Answer\n\n"]}
{"id": 1453, "answer": true, "completion": ".decl Has_firmness(Object:symbol, Firmness:symbol)\nHas_firmness(\"peach\", \"firm\").\nHas_firmness(\"peach\", \"soft\").\n.decl Answer()\nAnswer() :- Has_firmness(\"peach\", firmness), firmness = \"firm\".\n.output Answer\n\n", "completions": [".decl Has_firmness(Object:symbol, Firmness:symbol)\nHas_firmness(\"peach\", \"firm\").\nHas_firmness(\"peach\", \"soft\").\n.decl Answer()\nAnswer() :- Has_firmness(\"peach\", firmness), firmness = \"firm\".\n.output Answer\n\n"]}
{"id": 1454, "answer": true, "completion": ".decl Has_reference(Person:symbol, Reference:symbol)\nHas_reference(\"Adam Sandler\", \"Cole Spouse\").\nHas_reference(\"Adam Sandler\", \"scuba man doll\").\n.decl Answer()\nAnswer() :- Has_reference(\"Adam Sandler\", reference).\n.output Answer\n\n", "completions": [".decl Has_reference(Person:symbol, Reference:symbol)\nHas_reference(\"Adam Sandler\", \"Cole Spouse\").\nHas_reference(\"Adam Sandler\", \"scuba man doll\").\n.decl Answer()\nAnswer() :- Has_reference(\"Adam Sandler\", reference).\n.output Answer\n\n"]}
{"id": 1455, "answer": false, "completion": ".decl Is_a_saint(Person:symbol)\nIs_a_saint(\"Lhamo Thondup\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Buddhism\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Catholicism\").\n.decl Answer()\nAnswer() :- Is_a_saint(\"Lhamo Thondup\"), Is_a_religion(\"Buddhism\").\nAnswer() :- Is_a_saint(\"Lhamo Thondup\"), Is_a_religion(\"Catholicism\").\n.output Answer\n\n", "completions": [".decl Is_a_saint(Person:symbol)\nIs_a_saint(\"Lhamo Thondup\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Buddhism\").\n.decl Is_a_religion(Religion:symbol)\nIs_a_religion(\"Catholicism\").\n.decl Answer()\nAnswer() :- Is_a_saint(\"Lhamo Thondup\"), Is_a_religion(\"Buddhism\").\nAnswer() :- Is_a_saint(\"Lhamo Thondup\"), Is_a_religion(\"Catholicism\").\n.output Answer\n\n"]}
{"id": 1456, "answer": true, "completion": ".decl Has_heat(Object:symbol, Heat:float)\nHas_heat(\"jalapeno peppers\", 5).\nHas_heat(\"children\", 0).\n.decl Answer()\nAnswer() :- Has_heat(\"jalapeno peppers\", heat), Has_heat(\"children\", heat2), heat > heat2.\n.output Answer\n\n", "completions": [".decl Has_heat(Object:symbol, Heat:float)\nHas_heat(\"jalapeno peppers\", 5).\nHas_heat(\"children\", 0).\n.decl Answer()\nAnswer() :- Has_heat(\"jalapeno peppers\", heat), Has_heat(\"children\", heat2), heat > heat2.\n.output Answer\n\n"]}
{"id": 1457, "answer": true, "completion": ".decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Globo's anchor\", \"Japanese\").\nHas_language(\"Globo's anchor\", \"Portuguese\").\nHas_language(\"Globo's anchor\", \"English\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Globo's anchor\", \"Brazil\").\nHas_country(\"Globo's anchor\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_language(\"Globo's anchor\", language), Has_country(\"Globo's anchor\", country), language == \"Japanese\", country == \"Japan\".\n.output Answer\n\n", "completions": [".decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Globo's anchor\", \"Japanese\").\nHas_language(\"Globo's anchor\", \"Portuguese\").\nHas_language(\"Globo's anchor\", \"English\").\n.decl Has_country(Person:symbol, Country:symbol)\nHas_country(\"Globo's anchor\", \"Brazil\").\nHas_country(\"Globo's anchor\", \"Japan\").\n.decl Answer()\nAnswer() :- Has_language(\"Globo's anchor\", language), Has_country(\"Globo's anchor\", country), language == \"Japanese\", country == \"Japan\".\n.output Answer\n\n"]}
{"id": 1458, "answer": false, "completion": ".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"harbor seal\", \"Washington DC\").\nLives_in(\"seal\", \"Washington DC\").\n.decl Answer()\nAnswer() :- Lives_in(\"harbor seal\", place), Lives_in(\"seal\", place).\n.output Answer\n\n", "completions": [".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"harbor seal\", \"Washington DC\").\nLives_in(\"seal\", \"Washington DC\").\n.decl Answer()\nAnswer() :- Lives_in(\"harbor seal\", place), Lives_in(\"seal\", place).\n.output Answer\n\n"]}
{"id": 1459, "answer": false, "completion": ".decl Has_acceleration(Object:symbol, Acceleration:float)\nHas_acceleration(\"Toyota Supra\", 4.5).\nHas_acceleration(\"Nascar\", 5).\n.decl Answer()\nAnswer() :- Has_acceleration(\"Toyota Supra\", acceleration1), Has_acceleration(\"Nascar\", acceleration2), acceleration1 < acceleration2.\n.output Answer\n\n", "completions": [".decl Has_acceleration(Object:symbol, Acceleration:float)\nHas_acceleration(\"Toyota Supra\", 4.5).\nHas_acceleration(\"Nascar\", 5).\n.decl Answer()\nAnswer() :- Has_acceleration(\"Toyota Supra\", acceleration1), Has_acceleration(\"Nascar\", acceleration2), acceleration1 < acceleration2.\n.output Answer\n\n"]}
{"id": 1460, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"turkey\", 12).\nHas_weight(\"human\", 70).\n.decl Answer()\nAnswer() :- Has_weight(\"turkey\", weight), Has_weight(\"human\", weight2), weight <= weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"turkey\", 12).\nHas_weight(\"human\", 70).\n.decl Answer()\nAnswer() :- Has_weight(\"turkey\", weight), Has_weight(\"human\", weight2), weight <= weight2.\n.output Answer\n\n"]}
{"id": 1461, "answer": false, "completion": ".decl Carves_name(Person:symbol, Item:symbol)\nCarves_name(\"Zorro\", \"sword\").\nCarves_name(\"Zorro\", \"shield\").\nCarves_name(\"Zorro\", \"horse\").\n.decl Answer()\nAnswer() :- Carves_name(\"Zorro\", item), Carves_name(\"Zorro\", item2), item != item2.\n.output Answer\n\n", "completions": [".decl Carves_name(Person:symbol, Item:symbol)\nCarves_name(\"Zorro\", \"sword\").\nCarves_name(\"Zorro\", \"shield\").\nCarves_name(\"Zorro\", \"horse\").\n.decl Answer()\nAnswer() :- Carves_name(\"Zorro\", item), Carves_name(\"Zorro\", item2), item != item2.\n.output Answer\n\n"]}
{"id": 1462, "answer": false, "completion": ".decl Has_capacity(Room:symbol, Capacity:float)\nHas_capacity(\"Viper Room\", 100).\nHas_capacity(\"National Diet building\", 1000).\n.decl Has_location(Room:symbol, Location:symbol)\nHas_location(\"Viper Room\", \"Los Angeles\").\nHas_location(\"National Diet building\", \"Tokyo\").\n.decl Answer()\nAnswer() :- Has_capacity(\"Viper Room\", capacity1), Has_capacity(\"National Diet building\", capacity2), capacity1 > capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Room:symbol, Capacity:float)\nHas_capacity(\"Viper Room\", 100).\nHas_capacity(\"National Diet building\", 1000).\n.decl Has_location(Room:symbol, Location:symbol)\nHas_location(\"Viper Room\", \"Los Angeles\").\nHas_location(\"National Diet building\", \"Tokyo\").\n.decl Answer()\nAnswer() :- Has_capacity(\"Viper Room\", capacity1), Has_capacity(\"National Diet building\", capacity2), capacity1 > capacity2.\n.output Answer\n\n"]}
{"id": 1463, "answer": true, "completion": ".decl Is_a_vegan(Person:symbol)\nIs_a_vegan(\"vegan\").\n.decl Is_a_vegetarian(Person:symbol)\nIs_a_vegetarian(\"vegetarian\").\n.decl Is_a_tuna_substitute(Food:symbol)\nIs_a_tuna_substitute(\"chickpeas\").\n.decl Answer()\nAnswer() :- Is_a_vegan(\"vegan\"), Is_a_vegetarian(\"vegetarian\"), Is_a_tuna_substitute(\"chickpeas\").\n.output Answer\n\n", "completions": [".decl Is_a_vegan(Person:symbol)\nIs_a_vegan(\"vegan\").\n.decl Is_a_vegetarian(Person:symbol)\nIs_a_vegetarian(\"vegetarian\").\n.decl Is_a_tuna_substitute(Food:symbol)\nIs_a_tuna_substitute(\"chickpeas\").\n.decl Answer()\nAnswer() :- Is_a_vegan(\"vegan\"), Is_a_vegetarian(\"vegetarian\"), Is_a_tuna_substitute(\"chickpeas\").\n.output Answer\n\n"]}
{"id": 1464, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Kurt Sutter\", \"Sutter\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Entertainment\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Pictures\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Productions\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Television\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse USA\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Kurt Sutter\", \"Sutter\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Entertainment\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Pictures\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Productions\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse Television\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse USA\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter\", \"Sutterhouse, LLC.\").\nHas_name(\"Kurt Sutter"]}
{"id": 1465, "answer": true, "completion": ".decl Has_strength(Group:symbol, Strength:float)\nHas_strength(\"Swiss Guard\", 100).\nHas_strength(\"Marines\", 200).\n.decl Answer()\nAnswer() :- Has_strength(\"Swiss Guard\", strength1), Has_strength(\"Marines\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Group:symbol, Strength:float)\nHas_strength(\"Swiss Guard\", 100).\nHas_strength(\"Marines\", 200).\n.decl Answer()\nAnswer() :- Has_strength(\"Swiss Guard\", strength1), Has_strength(\"Marines\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1466, "answer": true, "completion": ".decl Has_footprint(Object:symbol, Footprint:symbol)\nHas_footprint(\"human\", \"footprint\").\nHas_footprint(\"rover\", \"footprint\").\nHas_footprint(\"mount sharp\", \"footprint\").\n.decl Answer()\nAnswer() :- Has_footprint(\"human\", footprint), Has_footprint(\"rover\", footprint), Has_footprint(\"mount sharp\", footprint).\n.output Answer\n\n", "completions": [".decl Has_footprint(Object:symbol, Footprint:symbol)\nHas_footprint(\"human\", \"footprint\").\nHas_footprint(\"rover\", \"footprint\").\nHas_footprint(\"mount sharp\", \"footprint\").\n.decl Answer()\nAnswer() :- Has_footprint(\"human\", footprint), Has_footprint(\"rover\", footprint), Has_footprint(\"mount sharp\", footprint).\n.output Answer\n\n"]}
{"id": 1467, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Battle of Falkirk\", \"1280\").\nHappens_in_time(\"Edward II\", \"1280\").\n.decl Was_crucial(Event:symbol, Time:symbol)\nWas_crucial(\"Battle of Falkirk\", \"1280\").\nWas_crucial(\"Edward II\", \"1280\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Battle of Falkirk\", time), Happens_in_time(\"Edward II\", time), Was_crucial(\"Battle of Falkirk\", time), Was_crucial(\"Edward II\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Battle of Falkirk\", \"1280\").\nHappens_in_time(\"Edward II\", \"1280\").\n.decl Was_crucial(Event:symbol, Time:symbol)\nWas_crucial(\"Battle of Falkirk\", \"1280\").\nWas_crucial(\"Edward II\", \"1280\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Battle of Falkirk\", time), Happens_in_time(\"Edward II\", time), Was_crucial(\"Battle of Falkirk\", time), Was_crucial(\"Edward II\", time).\n.output Answer\n\n"]}
{"id": 1468, "answer": true, "completion": ".decl Paid_tribute_in(Emperor:symbol, Currency:symbol)\nPaid_tribute_in(\"Emperor Commodus\", \"Pound sterling\").\n.decl Answer()\nAnswer() :- Paid_tribute_in(\"Emperor Commodus\", currency).\n.output Answer\n\n", "completions": [".decl Paid_tribute_in(Emperor:symbol, Currency:symbol)\nPaid_tribute_in(\"Emperor Commodus\", \"Pound sterling\").\n.decl Answer()\nAnswer() :- Paid_tribute_in(\"Emperor Commodus\", currency).\n.output Answer\n\n"]}
{"id": 1469, "answer": true, "completion": ".decl Has_surface_tension(Object:symbol, Surface_tension:float)\nHas_surface_tension(\"spaghetti\", 0.1).\nHas_surface_tension(\"water\", 0.07).\n.decl Answer()\nAnswer() :- Has_surface_tension(\"spaghetti\", surface_tension1), Has_surface_tension(\"water\", surface_tension2), surface_tension1 > surface_tension2.\n.output Answer\n\n", "completions": [".decl Has_surface_tension(Object:symbol, Surface_tension:float)\nHas_surface_tension(\"spaghetti\", 0.1).\nHas_surface_tension(\"water\", 0.07).\n.decl Answer()\nAnswer() :- Has_surface_tension(\"spaghetti\", surface_tension1), Has_surface_tension(\"water\", surface_tension2), surface_tension1 > surface_tension2.\n.output Answer\n\n"]}
{"id": 1470, "answer": true, "completion": ".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"Carnation Revolution\", 3000).\n.decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"French Revolution\", 10000).\n.decl Answer()\nAnswer() :- Has_n_deaths(\"Carnation Revolution\", n_deaths1), Has_n_deaths(\"French Revolution\", n_deaths2), n_deaths1 > n_deaths2.\n.output Answer\n\n", "completions": [".decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"Carnation Revolution\", 3000).\n.decl Has_n_deaths(Event:symbol, N_deaths:float)\nHas_n_deaths(\"French Revolution\", 10000).\n.decl Answer()\nAnswer() :- Has_n_deaths(\"Carnation Revolution\", n_deaths1), Has_n_deaths(\"French Revolution\", n_deaths2), n_deaths1 > n_deaths2.\n.output Answer\n\n"]}
{"id": 1471, "answer": false, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Triton\", -36).\nHas_temperature(\"zoot suit\", -5).\n.decl Answer()\nAnswer() :- Has_temperature(\"Triton\", temperature1), Has_temperature(\"zoot suit\", temperature2), temperature1 > temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Triton\", -36).\nHas_temperature(\"zoot suit\", -5).\n.decl Answer()\nAnswer() :- Has_temperature(\"Triton\", temperature1), Has_temperature(\"zoot suit\", temperature2), temperature1 > temperature2.\n.output Answer\n\n"]}
{"id": 1472, "answer": true, "completion": ".decl Located_in(Object:symbol, Place:symbol)\nLocated_in(\"Bugs Bunny\", \"Space Mountain\").\n.decl Answer()\nAnswer() :- Located_in(\"Bugs Bunny\", place).\n.output Answer\n\n", "completions": [".decl Located_in(Object:symbol, Place:symbol)\nLocated_in(\"Bugs Bunny\", \"Space Mountain\").\n.decl Answer()\nAnswer() :- Located_in(\"Bugs Bunny\", place).\n.output Answer\n\n"]}
{"id": 1473, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"brewing beer\", \"September\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"brewing beer\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"brewing beer\", month), Happens_every_n_months(\"brewing beer\", n_months), month = \"September\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"brewing beer\", \"September\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"brewing beer\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"brewing beer\", month), Happens_every_n_months(\"brewing beer\", n_months), month = \"September\".\n.output Answer\n\n"]}
{"id": 1474, "answer": false, "completion": ".decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Davy Jones\", \"guitar\").\nPlays_instrument(\"Davy Jones\", \"drums\").\nPlays_instrument(\"Davy Jones\", \"piano\").\nPlays_instrument(\"Davy Jones\", \"bass\").\nPlays_instrument(\"Davy Jones\", \"violin\").\nPlays_instrument(\"Davy Jones\", \"cello\").\nPlays_instrument(\"Davy Jones\", \"saxophone\").\nPlays_instrument(\"Davy Jones\", \"flute\").\nPlays_instrument(\"Davy Jones\", \"harp\").\nPlays_instrument(\"Davy Jones\", \"oboe\").\nPlays_instrument(\"Davy Jones\", \"trombone\").\nPlays_instrument(\"Davy Jones\", \"trumpet\").\nPlays_instrument(\"Davy Jones\", \"clarinet\").\nPlays_instrument(\"Davy Jones\", \"tuba\").\nPlays_instrument(\"Davy Jones\", \"viola\").\nPlays_instrument(\"Davy Jones\", \"french horn\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"xylophone\").\nPlays_instrument(\"Davy Jones\", \"marimba\").\nPlays_instrument(\"Davy Jones\", \"vibraphone\").\nPlays_instrument(\"Davy Jones\", \"bongo\").\nPlays_instrument(\"Davy Jones\", \"drum\").\nPlays_instrument(\"Davy Jones\", \"gong\").\nPlays_instrument(\"Davy Jones\", \"steel drum\").\nPlays_instrument(\"Davy Jones\", \"banjo\").\nPlays_instrument(\"Davy Jones\", \"ukulele\").\nPlays_instrument(\"Davy Jones\", \"tam-tam\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"maracas\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\").\nPlays_instrument(\"Davy Jones\", \"vibra slap\").\nPlays_instrument(\"Davy Jones\", \"timbales\").\nPlays_instrument(\"Davy Jones\", \"claps\").\nPlays_instrument(\"Davy Jones\", \"castanets\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\").\nPlays_instrument(\"Davy Jones\", \"vibra slap\").\nPlays_instrument(\"Davy Jones\", \"timbales\").\nPlays_instrument(\"Davy Jones\", \"claps\").\nPlays_instrument(\"Davy Jones\", \"castanets\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\").", "completions": [".decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Davy Jones\", \"guitar\").\nPlays_instrument(\"Davy Jones\", \"drums\").\nPlays_instrument(\"Davy Jones\", \"piano\").\nPlays_instrument(\"Davy Jones\", \"bass\").\nPlays_instrument(\"Davy Jones\", \"violin\").\nPlays_instrument(\"Davy Jones\", \"cello\").\nPlays_instrument(\"Davy Jones\", \"saxophone\").\nPlays_instrument(\"Davy Jones\", \"flute\").\nPlays_instrument(\"Davy Jones\", \"harp\").\nPlays_instrument(\"Davy Jones\", \"oboe\").\nPlays_instrument(\"Davy Jones\", \"trombone\").\nPlays_instrument(\"Davy Jones\", \"trumpet\").\nPlays_instrument(\"Davy Jones\", \"clarinet\").\nPlays_instrument(\"Davy Jones\", \"tuba\").\nPlays_instrument(\"Davy Jones\", \"viola\").\nPlays_instrument(\"Davy Jones\", \"french horn\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"xylophone\").\nPlays_instrument(\"Davy Jones\", \"marimba\").\nPlays_instrument(\"Davy Jones\", \"vibraphone\").\nPlays_instrument(\"Davy Jones\", \"bongo\").\nPlays_instrument(\"Davy Jones\", \"drum\").\nPlays_instrument(\"Davy Jones\", \"gong\").\nPlays_instrument(\"Davy Jones\", \"steel drum\").\nPlays_instrument(\"Davy Jones\", \"banjo\").\nPlays_instrument(\"Davy Jones\", \"ukulele\").\nPlays_instrument(\"Davy Jones\", \"tam-tam\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"maracas\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\").\nPlays_instrument(\"Davy Jones\", \"vibra slap\").\nPlays_instrument(\"Davy Jones\", \"timbales\").\nPlays_instrument(\"Davy Jones\", \"claps\").\nPlays_instrument(\"Davy Jones\", \"castanets\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\").\nPlays_instrument(\"Davy Jones\", \"vibra slap\").\nPlays_instrument(\"Davy Jones\", \"timbales\").\nPlays_instrument(\"Davy Jones\", \"claps\").\nPlays_instrument(\"Davy Jones\", \"castanets\").\nPlays_instrument(\"Davy Jones\", \"triangle\").\nPlays_instrument(\"Davy Jones\", \"tambourine\").\nPlays_instrument(\"Davy Jones\", \"finger cymbals\").\nPlays_instrument(\"Davy Jones\", \"bass drum\").\nPlays_instrument(\"Davy Jones\", \"cowbell\")."]}
{"id": 1475, "answer": true, "completion": ".decl Has_flavor(Candy:symbol, Flavor:symbol)\nHas_flavor(\"Monoamine Oxidase\", \"mint\").\nHas_flavor(\"Monoamine Oxidase\", \"orange\").\n.decl Has_effect(Flavor:symbol, Effect:symbol)\nHas_effect(\"mint\", \"cheer up\").\nHas_effect(\"orange\", \"cheer up\").\n.decl Answer()\nAnswer() :- Has_flavor(\"Monoamine Oxidase\", flavor), Has_effect(flavor, effect), Has_effect(\"orange\", effect).\n.output Answer\n\n", "completions": [".decl Has_flavor(Candy:symbol, Flavor:symbol)\nHas_flavor(\"Monoamine Oxidase\", \"mint\").\nHas_flavor(\"Monoamine Oxidase\", \"orange\").\n.decl Has_effect(Flavor:symbol, Effect:symbol)\nHas_effect(\"mint\", \"cheer up\").\nHas_effect(\"orange\", \"cheer up\").\n.decl Answer()\nAnswer() :- Has_flavor(\"Monoamine Oxidase\", flavor), Has_effect(flavor, effect), Has_effect(\"orange\", effect).\n.output Answer\n\n"]}
{"id": 1476, "answer": true, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Elizabeth I of England\", \"viscose fiber\").\n.decl Answer()\nAnswer() :- Owns(\"Elizabeth I of England\", object).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Elizabeth I of England\", \"viscose fiber\").\n.decl Answer()\nAnswer() :- Owns(\"Elizabeth I of England\", object).\n.output Answer\n\n"]}
{"id": 1477, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Middle Ages warfare\", \"Middle Ages\").\nHappens_in_time(\"dynamite\", \"Middle Ages\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"dynamite\", time), Happens_in_time(\"Middle Ages warfare\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Middle Ages warfare\", \"Middle Ages\").\nHappens_in_time(\"dynamite\", \"Middle Ages\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"dynamite\", time), Happens_in_time(\"Middle Ages warfare\", time).\n.output Answer\n\n"]}
{"id": 1478, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Europa\", \"Europa\").\nHas_name(\"Europa\", \"Io\").\nHas_name(\"Europa\", \"Ganymede\").\nHas_name(\"Europa\", \"Callisto\").\nHas_name(\"Amunet\", \"Amunet\").\nHas_name(\"Amunet\", \"Amun\").\nHas_name(\"Amunet\", \"Amunet-Geb\").\nHas_name(\"Amunet\", \"Amunet-Re\").\n.decl Answer()\nAnswer() :- Has_name(\"Europa\", name1), Has_name(\"Amunet\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Europa\", \"Europa\").\nHas_name(\"Europa\", \"Io\").\nHas_name(\"Europa\", \"Ganymede\").\nHas_name(\"Europa\", \"Callisto\").\nHas_name(\"Amunet\", \"Amunet\").\nHas_name(\"Amunet\", \"Amun\").\nHas_name(\"Amunet\", \"Amunet-Geb\").\nHas_name(\"Amunet\", \"Amunet-Re\").\n.decl Answer()\nAnswer() :- Has_name(\"Europa\", name1), Has_name(\"Amunet\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 1479, "answer": false, "completion": ".decl Has_gestation_period(Animal:symbol, Gestation_period:float)\nHas_gestation_period(\"kangaroo\", 30).\n.decl Answer()\nAnswer() :- Has_gestation_period(\"kangaroo\", gestation_period), gestation_period > 0.\n.output Answer\n\n", "completions": [".decl Has_gestation_period(Animal:symbol, Gestation_period:float)\nHas_gestation_period(\"kangaroo\", 30).\n.decl Answer()\nAnswer() :- Has_gestation_period(\"kangaroo\", gestation_period), gestation_period > 0.\n.output Answer\n\n"]}
{"id": 1480, "answer": false, "completion": ".decl Lives_in(Person:symbol, County:symbol)\nLives_in(\"Barbara Boxer\", \"Los Angeles County\").\nLives_in(\"Arnold Schwarzenegger\", \"Los Angeles County\").\nLives_in(\"Michael Jackson\", \"Los Angeles County\").\nLives_in(\"Michael Jackson\", \"Orange County\").\nLives_in(\"Michael Jackson\", \"San Diego County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Riverside County\").\nLives_in(\"Michael Jackson\", \"San Bernardino County\").\nLives_in(\"Michael Jackson\", \"Santa Barbara County\").\nLives_in(\"Michael Jackson\", \"San Luis Obispo County\").\nLives_in(\"Michael Jackson\", \"San Benito County\").\nLives_in(\"Michael Jackson\", \"San Mateo County\").\nLives_in(\"Michael Jackson\", \"Santa Clara County\").\nLives_in(\"Michael Jackson\", \"Alameda County\").\nLives_in(\"Michael Jackson\", \"Contra Costa County\").\nLives_in(\"Michael Jackson\", \"Fresno County\").\nLives_in(\"Michael Jackson\", \"Kern County\").\nLives_in(\"Michael Jackson\", \"Kings County\").\nLives_in(\"Michael Jackson\", \"Madera County\").\nLives_in(\"Michael Jackson\", \"Marin County\").\nLives_in(\"Michael Jackson\", \"Napa County\").\nLives_in(\"Michael Jackson\", \"San Joaquin County\").\nLives_in(\"Michael Jackson\", \"Solano County\").\nLives_in(\"Michael Jackson\", \"Sonoma County\").\nLives_in(\"Michael Jackson\", \"Stanislaus County\").\nLives_in(\"Michael Jackson\", \"Tulare County\").\nLives_in(\"Michael Jackson\", \"Tuolumne County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Yolo County\").\nLives_in(\"Michael Jackson\", \"Yuba County\").\nLives_in(\"Michael Jackson\", \"Santa Cruz County\").\nLives_in(\"Michael Jackson\", \"Monterey County\").\nLives_in(\"Michael Jackson\", \"San Benito County\").\nLives_in(\"Michael Jackson\", \"San Luis Obispo County\").\nLives_in(\"Michael Jackson\", \"Santa Barbara County\").\nLives_in(\"Michael Jackson\", \"San Mateo County\").\nLives_in(\"Michael Jackson\", \"Santa Clara County\").\nLives_in(\"Michael Jackson\", \"Alameda County\").\nLives_in(\"Michael Jackson\", \"Contra Costa County\").\nLives_in(\"Michael Jackson\", \"Fresno County\").\nLives_in(\"Michael Jackson\", \"Kern County\").\nLives_in(\"Michael Jackson\", \"Kings County\").\nLives_in(\"Michael Jackson\", \"Madera County\").\nLives_in(\"Michael Jackson\", \"Marin County\").\nLives_in(\"Michael Jackson\", \"Napa County\").\nLives_in(\"Michael Jackson\", \"San Joaquin County\").\nLives_in(\"Michael Jackson\", \"Solano County\").\nLives_in(\"Michael Jackson\", \"Sonoma County\").\nLives_in(\"Michael Jackson\", \"Stanislaus County\").\nLives_in(\"Michael Jackson\", \"Tulare County\").\nLives_in(\"Michael Jackson\", \"Tuolumne County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Yolo County\").\nLives_in(\"Michael Jackson\", \"", "completions": [".decl Lives_in(Person:symbol, County:symbol)\nLives_in(\"Barbara Boxer\", \"Los Angeles County\").\nLives_in(\"Arnold Schwarzenegger\", \"Los Angeles County\").\nLives_in(\"Michael Jackson\", \"Los Angeles County\").\nLives_in(\"Michael Jackson\", \"Orange County\").\nLives_in(\"Michael Jackson\", \"San Diego County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Riverside County\").\nLives_in(\"Michael Jackson\", \"San Bernardino County\").\nLives_in(\"Michael Jackson\", \"Santa Barbara County\").\nLives_in(\"Michael Jackson\", \"San Luis Obispo County\").\nLives_in(\"Michael Jackson\", \"San Benito County\").\nLives_in(\"Michael Jackson\", \"San Mateo County\").\nLives_in(\"Michael Jackson\", \"Santa Clara County\").\nLives_in(\"Michael Jackson\", \"Alameda County\").\nLives_in(\"Michael Jackson\", \"Contra Costa County\").\nLives_in(\"Michael Jackson\", \"Fresno County\").\nLives_in(\"Michael Jackson\", \"Kern County\").\nLives_in(\"Michael Jackson\", \"Kings County\").\nLives_in(\"Michael Jackson\", \"Madera County\").\nLives_in(\"Michael Jackson\", \"Marin County\").\nLives_in(\"Michael Jackson\", \"Napa County\").\nLives_in(\"Michael Jackson\", \"San Joaquin County\").\nLives_in(\"Michael Jackson\", \"Solano County\").\nLives_in(\"Michael Jackson\", \"Sonoma County\").\nLives_in(\"Michael Jackson\", \"Stanislaus County\").\nLives_in(\"Michael Jackson\", \"Tulare County\").\nLives_in(\"Michael Jackson\", \"Tuolumne County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Yolo County\").\nLives_in(\"Michael Jackson\", \"Yuba County\").\nLives_in(\"Michael Jackson\", \"Santa Cruz County\").\nLives_in(\"Michael Jackson\", \"Monterey County\").\nLives_in(\"Michael Jackson\", \"San Benito County\").\nLives_in(\"Michael Jackson\", \"San Luis Obispo County\").\nLives_in(\"Michael Jackson\", \"Santa Barbara County\").\nLives_in(\"Michael Jackson\", \"San Mateo County\").\nLives_in(\"Michael Jackson\", \"Santa Clara County\").\nLives_in(\"Michael Jackson\", \"Alameda County\").\nLives_in(\"Michael Jackson\", \"Contra Costa County\").\nLives_in(\"Michael Jackson\", \"Fresno County\").\nLives_in(\"Michael Jackson\", \"Kern County\").\nLives_in(\"Michael Jackson\", \"Kings County\").\nLives_in(\"Michael Jackson\", \"Madera County\").\nLives_in(\"Michael Jackson\", \"Marin County\").\nLives_in(\"Michael Jackson\", \"Napa County\").\nLives_in(\"Michael Jackson\", \"San Joaquin County\").\nLives_in(\"Michael Jackson\", \"Solano County\").\nLives_in(\"Michael Jackson\", \"Sonoma County\").\nLives_in(\"Michael Jackson\", \"Stanislaus County\").\nLives_in(\"Michael Jackson\", \"Tulare County\").\nLives_in(\"Michael Jackson\", \"Tuolumne County\").\nLives_in(\"Michael Jackson\", \"Ventura County\").\nLives_in(\"Michael Jackson\", \"Yolo County\").\nLives_in(\"Michael Jackson\", \""]}
{"id": 1481, "answer": true, "completion": ".decl Smokes(Person:symbol, Cigarette:symbol)\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes", "completions": [".decl Smokes(Person:symbol, Cigarette:symbol)\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes(\"Rizal\", \"Djarum\").\nSmokes"]}
{"id": 1482, "answer": false, "completion": ".decl War(War:symbol)\nWar(\"Vietnam War\").\nWar(\"Korean War\").\nWar(\"World War II\").\n.decl War_has_fir(War:symbol)\nWar_has_fir(\"Vietnam War\").\nWar_has_fir(\"Korean War\").\n.decl Answer()\nAnswer() :- War(\"War\"), War_has_fir(\"War\").\n.output Answer\n\n", "completions": [".decl War(War:symbol)\nWar(\"Vietnam War\").\nWar(\"Korean War\").\nWar(\"World War II\").\n.decl War_has_fir(War:symbol)\nWar_has_fir(\"Vietnam War\").\nWar_has_fir(\"Korean War\").\n.decl Answer()\nAnswer() :- War(\"War\"), War_has_fir(\"War\").\n.output Answer\n\n"]}
{"id": 1483, "answer": true, "completion": ".decl Located_on(Animal:symbol, Plain:symbol)\nLocated_on(\"goat\", \"abyssal plain\").\n.decl Answer()\nAnswer() :- Located_on(\"goat\", plain).\n.output Answer\n\n", "completions": [".decl Located_on(Animal:symbol, Plain:symbol)\nLocated_on(\"goat\", \"abyssal plain\").\n.decl Answer()\nAnswer() :- Located_on(\"goat\", plain).\n.output Answer\n\n"]}
{"id": 1484, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"penguin\", \"winter\").\nHappens_in_time(\"penguin\", \"summer\").\nHappens_in_time(\"penguin\", \"spring\").\nHappens_in_time(\"penguin\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"September\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"penguin\", season), Happens_in_time(\"penguin\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"penguin\", \"winter\").\nHappens_in_time(\"penguin\", \"summer\").\nHappens_in_time(\"penguin\", \"spring\").\nHappens_in_time(\"penguin\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"September\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"penguin\", season), Happens_in_time(\"penguin\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1485, "answer": true, "completion": ".decl Is_student(Person:symbol, School:symbol)\nIs_student(\"Al-Farabi\", \"Great Sheikh\").\n.decl Answer()\nAnswer() :- Is_student(\"Al-Farabi\", school).\n.output Answer\n\n", "completions": [".decl Is_student(Person:symbol, School:symbol)\nIs_student(\"Al-Farabi\", \"Great Sheikh\").\n.decl Answer()\nAnswer() :- Is_student(\"Al-Farabi\", school).\n.output Answer\n\n"]}
{"id": 1486, "answer": false, "completion": ".decl Ruled(Person:symbol, Place:symbol)\nRuled(\"Richard III\", \"England\").\nRuled(\"Richard III\", \"France\").\nRuled(\"Richard III\", \"Italy\").\nRuled(\"Richard III\", \"Scotland\").\nRuled(\"Richard III\", \"Wales\").\nRuled(\"Richard III\", \"Ireland\").\nRuled(\"Richard III\", \"Australia\").\n.decl Answer()\nAnswer() :- Ruled(\"Richard III\", place), Ruled(\"Richard III\", place2), place != place2.\n.output Answer\n\n", "completions": [".decl Ruled(Person:symbol, Place:symbol)\nRuled(\"Richard III\", \"England\").\nRuled(\"Richard III\", \"France\").\nRuled(\"Richard III\", \"Italy\").\nRuled(\"Richard III\", \"Scotland\").\nRuled(\"Richard III\", \"Wales\").\nRuled(\"Richard III\", \"Ireland\").\nRuled(\"Richard III\", \"Australia\").\n.decl Answer()\nAnswer() :- Ruled(\"Richard III\", place), Ruled(\"Richard III\", place2), place != place2.\n.output Answer\n\n"]}
{"id": 1487, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ronda Rousey\", \"steak\").\nEats(\"Ronda Rousey\", \"chicken\").\nEats(\"Ronda Rousey\", \"salad\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Ronda Rousey\", \"BBQ\").\n.decl Answer()\nAnswer() :- Eats(\"Ronda Rousey\", food), Avoid(\"Ronda Rousey\", food).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ronda Rousey\", \"steak\").\nEats(\"Ronda Rousey\", \"chicken\").\nEats(\"Ronda Rousey\", \"salad\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Ronda Rousey\", \"BBQ\").\n.decl Answer()\nAnswer() :- Eats(\"Ronda Rousey\", food), Avoid(\"Ronda Rousey\", food).\n.output Answer\n\n"]}
{"id": 1488, "answer": false, "completion": ".decl Has_cream(Coffee:symbol, Cream:symbol)\nHas_cream(\"coffee\", \"cream\").\nHas_cream(\"coffee\", \"no cream\").\n.decl Answer()\nAnswer() :- Has_cream(\"coffee\", cream), Has_cream(\"coffee\", no_cream), cream == no_cream.\n.output Answer\n\n", "completions": [".decl Has_cream(Coffee:symbol, Cream:symbol)\nHas_cream(\"coffee\", \"cream\").\nHas_cream(\"coffee\", \"no cream\").\n.decl Answer()\nAnswer() :- Has_cream(\"coffee\", cream), Has_cream(\"coffee\", no_cream), cream == no_cream.\n.output Answer\n\n"]}
{"id": 1489, "answer": true, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"NASCAR\", 200).\nHas_speed(\"electric car\", 100).\n.decl Answer()\nAnswer() :- Has_speed(\"NASCAR\", speed1), Has_speed(\"electric car\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"NASCAR\", 200).\nHas_speed(\"electric car\", 100).\n.decl Answer()\nAnswer() :- Has_speed(\"NASCAR\", speed1), Has_speed(\"electric car\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1490, "answer": false, "completion": ".decl Is_meat(Food:symbol)\nIs_meat(\"beef\").\nIs_meat(\"chicken\").\nIs_meat(\"pork\").\nIs_meat(\"veal\").\n.decl Is_meat_from_animal(Food:symbol, Animal:symbol)\nIs_meat_from_animal(\"beef\", \"cow\").\nIs_meat_from_animal(\"chicken\", \"chicken\").\nIs_meat_from_animal(\"pork\", \"pig\").\nIs_meat_from_animal(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Answer()\nAnswer() :- Is_meat(food), Is_meat_from_animal(food, animal), Is_meat_from_animal_fed_only_grass(food, animal).\n.output Answer\n\n", "completions": [".decl Is_meat(Food:symbol)\nIs_meat(\"beef\").\nIs_meat(\"chicken\").\nIs_meat(\"pork\").\nIs_meat(\"veal\").\n.decl Is_meat_from_animal(Food:symbol, Animal:symbol)\nIs_meat_from_animal(\"beef\", \"cow\").\nIs_meat_from_animal(\"chicken\", \"chicken\").\nIs_meat_from_animal(\"pork\", \"pig\").\nIs_meat_from_animal(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Is_meat_from_animal_fed_only_grass(Food:symbol, Animal:symbol)\nIs_meat_from_animal_fed_only_grass(\"beef\", \"cow\").\nIs_meat_from_animal_fed_only_grass(\"chicken\", \"chicken\").\nIs_meat_from_animal_fed_only_grass(\"pork\", \"pig\").\nIs_meat_from_animal_fed_only_grass(\"veal\", \"cow\").\n.decl Answer()\nAnswer() :- Is_meat(food), Is_meat_from_animal(food, animal), Is_meat_from_animal_fed_only_grass(food, animal).\n.output Answer\n\n"]}
{"id": 1491, "answer": false, "completion": ".decl Has_n_compositions(Person:symbol, N_compositions:float)\nHas_n_compositions(\"Mozart\", 35).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Greek army\", 300).\n.decl Answer()\nAnswer() :- Has_n_compositions(\"Mozart\", n_compositions), Has_n_members(\"Greek army\", n_members), n_compositions > n_members.\n.output Answer\n\n", "completions": [".decl Has_n_compositions(Person:symbol, N_compositions:float)\nHas_n_compositions(\"Mozart\", 35).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Greek army\", 300).\n.decl Answer()\nAnswer() :- Has_n_compositions(\"Mozart\", n_compositions), Has_n_members(\"Greek army\", n_members), n_compositions > n_members.\n.output Answer\n\n"]}
{"id": 1492, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Christopher Walken\", 77).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Christopher Walken\", 1.8).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Christopher Walken\", 80).\n.decl Has_eyes(Person:symbol, Eyes:symbol)\nHas_eyes(\"Christopher Walken\", \"blue\").\n.decl Has_hair(Person:symbol, Hair:symbol)\nHas_hair(\"Christopher Walken\", \"brown\").\n.decl Answer()\nAnswer() :- Has_age(\"Christopher Walken\", age), Has_height(\"Christopher Walken\", height), Has_weight(\"Christopher Walken\", weight), Has_eyes(\"Christopher Walken\", eyes), Has_hair(\"Christopher Walken\", hair), age > 17, height > 1.5, weight > 60, eyes = \"blue\", hair = \"brown\".\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Christopher Walken\", 77).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Christopher Walken\", 1.8).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Christopher Walken\", 80).\n.decl Has_eyes(Person:symbol, Eyes:symbol)\nHas_eyes(\"Christopher Walken\", \"blue\").\n.decl Has_hair(Person:symbol, Hair:symbol)\nHas_hair(\"Christopher Walken\", \"brown\").\n.decl Answer()\nAnswer() :- Has_age(\"Christopher Walken\", age), Has_height(\"Christopher Walken\", height), Has_weight(\"Christopher Walken\", weight), Has_eyes(\"Christopher Walken\", eyes), Has_hair(\"Christopher Walken\", hair), age > 17, height > 1.5, weight > 60, eyes = \"blue\", hair = \"brown\".\n.output Answer\n\n"]}
{"id": 1493, "answer": false, "completion": ".decl Has_side_effect(Object:symbol, Side_effect:symbol)\nHas_side_effect(\"kola nuts\", \"colitis\").\n.decl Has_side_effect(Object:symbol, Side_effect:symbol)\nHas_side_effect(\"kola nuts\", \"diarrhea\").\n.decl Answer()\nAnswer() :- Has_side_effect(\"kola nuts\", side_effect), Has_side_effect(\"kola nuts\", side_effect2), side_effect != side_effect2.\n.output Answer\n\n", "completions": [".decl Has_side_effect(Object:symbol, Side_effect:symbol)\nHas_side_effect(\"kola nuts\", \"colitis\").\n.decl Has_side_effect(Object:symbol, Side_effect:symbol)\nHas_side_effect(\"kola nuts\", \"diarrhea\").\n.decl Answer()\nAnswer() :- Has_side_effect(\"kola nuts\", side_effect), Has_side_effect(\"kola nuts\", side_effect2), side_effect != side_effect2.\n.output Answer\n\n"]}
{"id": 1494, "answer": true, "completion": ".decl Has_fake_news(Person:symbol, Fake_news:float)\nHas_fake_news(\"Jamie Lee Curtis\", 0.5).\n.decl Answer()\nAnswer() :- Has_fake_news(\"Jamie Lee Curtis\", fake_news).\n.output Answer\n\n", "completions": [".decl Has_fake_news(Person:symbol, Fake_news:float)\nHas_fake_news(\"Jamie Lee Curtis\", 0.5).\n.decl Answer()\nAnswer() :- Has_fake_news(\"Jamie Lee Curtis\", fake_news).\n.output Answer\n\n"]}
{"id": 1495, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"release of Final Fantasy VI\", \"1994\").\nHappens_in_time(\"release of Final Fantasy VII\", \"1997\").\nHappens_in_time(\"release of Final Fantasy VIII\", \"1999\").\nHappens_in_time(\"release of Final Fantasy IX\", \"2002\").\nHappens_in_time(\"release of Final Fantasy X\", \"2006\").\nHappens_in_time(\"release of Final Fantasy XII\", \"2006\").\nHappens_in_time(\"release of Final Fantasy XIII\", \"2009\").\nHappens_in_time(\"release of Final Fantasy XIV\", \"2010\").\nHappens_in_time(\"release of Final Fantasy XV\", \"2013\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"release of Final Fantasy VI\", time1), Happens_in_time(\"release of Final Fantasy XV\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"release of Final Fantasy VI\", \"1994\").\nHappens_in_time(\"release of Final Fantasy VII\", \"1997\").\nHappens_in_time(\"release of Final Fantasy VIII\", \"1999\").\nHappens_in_time(\"release of Final Fantasy IX\", \"2002\").\nHappens_in_time(\"release of Final Fantasy X\", \"2006\").\nHappens_in_time(\"release of Final Fantasy XII\", \"2006\").\nHappens_in_time(\"release of Final Fantasy XIII\", \"2009\").\nHappens_in_time(\"release of Final Fantasy XIV\", \"2010\").\nHappens_in_time(\"release of Final Fantasy XV\", \"2013\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"release of Final Fantasy VI\", time1), Happens_in_time(\"release of Final Fantasy XV\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 1496, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"spinal cord\", 0.5).\nHas_price(\"Home Depot\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"spinal cord\", price1), Has_price(\"Home Depot\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"spinal cord\", 0.5).\nHas_price(\"Home Depot\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"spinal cord\", price1), Has_price(\"Home Depot\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1497, "answer": true, "completion": ".decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"World Series\", \"Newcastle\").\nHappens_in_location(\"World Series\", \"New South Wales\").\n.decl Answer()\nAnswer() :- Happens_in_location(\"World Series\", location), location = \"Newcastle\".\n.output Answer\n\n", "completions": [".decl Happens_in_location(Event:symbol, Location:symbol)\nHappens_in_location(\"World Series\", \"Newcastle\").\nHappens_in_location(\"World Series\", \"New South Wales\").\n.decl Answer()\nAnswer() :- Happens_in_location(\"World Series\", location), location = \"Newcastle\".\n.output Answer\n\n"]}
{"id": 1498, "answer": false, "completion": ".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Rhode Island\", 13.4).\nHas_area(\"Bohai Sea\", 7.7).\n.decl Answer()\nAnswer() :- Has_area(\"Rhode Island\", area1), Has_area(\"Bohai Sea\", area2), area1 > area2.\n.output Answer\n\n", "completions": [".decl Has_area(Object:symbol, Area:float)\nHas_area(\"Rhode Island\", 13.4).\nHas_area(\"Bohai Sea\", 7.7).\n.decl Answer()\nAnswer() :- Has_area(\"Rhode Island\", area1), Has_area(\"Bohai Sea\", area2), area1 > area2.\n.output Answer\n\n"]}
{"id": 1499, "answer": false, "completion": ".decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"rap music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"hip hop music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"pop music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"country music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"rock music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"jazz music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"classical music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"electronic music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"folk music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"reggae music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"blues music\").\n.decl Answer()\nAnswer() :- Has_influence(\"cannabis\", genre1), Has_influence(\"cannabis\", genre2), genre1 != genre2.\n.output Answer\n\n", "completions": [".decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"rap music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"hip hop music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"pop music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"country music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"rock music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"jazz music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"classical music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"electronic music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"folk music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"reggae music\").\n.decl Has_influence(Influence:symbol, Genre:symbol)\nHas_influence(\"cannabis\", \"blues music\").\n.decl Answer()\nAnswer() :- Has_influence(\"cannabis\", genre1), Has_influence(\"cannabis\", genre2), genre1 != genre2.\n.output Answer\n\n"]}
{"id": 1500, "answer": false, "completion": ".decl Has_prime_number(Object:symbol, Prime_number:float)\nHas_prime_number(\"table tennis ball\", 2).\nHas_prime_number(\"table tennis racket\", 3).\n.decl Answer()\nAnswer() :- Has_prime_number(\"table tennis ball\", prime_number), Has_prime_number(\"table tennis racket\", prime_number).\n.output Answer\n\n", "completions": [".decl Has_prime_number(Object:symbol, Prime_number:float)\nHas_prime_number(\"table tennis ball\", 2).\nHas_prime_number(\"table tennis racket\", 3).\n.decl Answer()\nAnswer() :- Has_prime_number(\"table tennis ball\", prime_number), Has_prime_number(\"table tennis racket\", prime_number).\n.output Answer\n\n"]}
{"id": 1501, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Marlboro\", \"red\").\nHas_color(\"Marlboro\", \"white\").\nHas_color(\"Marlboro\", \"blue\").\nHas_color(\"French flag\", \"blue\").\nHas_color(\"French flag\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"Marlboro\", color), Has_color(\"French flag\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Marlboro\", \"red\").\nHas_color(\"Marlboro\", \"white\").\nHas_color(\"Marlboro\", \"blue\").\nHas_color(\"French flag\", \"blue\").\nHas_color(\"French flag\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"Marlboro\", color), Has_color(\"French flag\", color).\n.output Answer\n\n"]}
{"id": 1502, "answer": true, "completion": ".decl Knows(Person:symbol, Language:symbol)\nKnows(\"Jesus\", \"Hebrew\").\nKnows(\"Jesus\", \"Greek\").\nKnows(\"Jesus\", \"Aramaic\").\nKnows(\"Jesus\", \"Estonian\").\n.decl Answer()\nAnswer() :- Knows(\"Jesus\", language).\n.output Answer\n\n", "completions": [".decl Knows(Person:symbol, Language:symbol)\nKnows(\"Jesus\", \"Hebrew\").\nKnows(\"Jesus\", \"Greek\").\nKnows(\"Jesus\", \"Aramaic\").\nKnows(\"Jesus\", \"Estonian\").\n.decl Answer()\nAnswer() :- Knows(\"Jesus\", language).\n.output Answer\n\n"]}
{"id": 1503, "answer": true, "completion": ".decl Went_to_school(Person:symbol, School:symbol)\nWent_to_school(\"Jesus\", \"Harvard University\").\n.decl Studied(Person:symbol, Subject:symbol)\nStudied(\"Jesus\", \"railroad engineering\").\n.decl Answer()\nAnswer() :- Went_to_school(\"Jesus\", school), Studied(\"Jesus\", subject), school = \"Harvard University\".\n.output Answer\n\n", "completions": [".decl Went_to_school(Person:symbol, School:symbol)\nWent_to_school(\"Jesus\", \"Harvard University\").\n.decl Studied(Person:symbol, Subject:symbol)\nStudied(\"Jesus\", \"railroad engineering\").\n.decl Answer()\nAnswer() :- Went_to_school(\"Jesus\", school), Studied(\"Jesus\", subject), school = \"Harvard University\".\n.output Answer\n\n"]}
{"id": 1504, "answer": true, "completion": ".decl Has_text(Document:symbol, Text:symbol)\nHas_text(\"Constitution of the Philippines\", \"We the people\").\nHas_text(\"British constitution\", \"We the people\").\n.decl Answer()\nAnswer() :- Has_text(\"Constitution of the Philippines\", text1), Has_text(\"British constitution\", text2), text1 = text2.\n.output Answer\n\n", "completions": [".decl Has_text(Document:symbol, Text:symbol)\nHas_text(\"Constitution of the Philippines\", \"We the people\").\nHas_text(\"British constitution\", \"We the people\").\n.decl Answer()\nAnswer() :- Has_text(\"Constitution of the Philippines\", text1), Has_text(\"British constitution\", text2), text1 = text2.\n.output Answer\n\n"]}
{"id": 1505, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Apollo\", \"Apollo\").\nHas_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Apollo\", \"Apollo\").\nHas_first_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Apollo\", \"Apollo\").\nHas_last_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Answer()\nAnswer() :- Has_name(\"Apollo\", name1), Has_name(\"D'Artagnan\", name2), Has_first_name(\"Apollo\", first_name1), Has_first_name(\"D'Artagnan\", first_name2), Has_last_name(\"Apollo\", last_name1), Has_last_name(\"D'Artagnan\", last_name2), name1 = name2, first_name1 = first_name2, last_name1 = last_name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Apollo\", \"Apollo\").\nHas_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Apollo\", \"Apollo\").\nHas_first_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Apollo\", \"Apollo\").\nHas_last_name(\"D'Artagnan\", \"D'Artagnan\").\n.decl Answer()\nAnswer() :- Has_name(\"Apollo\", name1), Has_name(\"D'Artagnan\", name2), Has_first_name(\"Apollo\", first_name1), Has_first_name(\"D'Artagnan\", first_name2), Has_last_name(\"Apollo\", last_name1), Has_last_name(\"D'Artagnan\", last_name2), name1 = name2, first_name1 = first_name2, last_name1 = last_name2.\n.output Answer\n\n"]}
{"id": 1506, "answer": false, "completion": ".decl Studied_by(Object:symbol, Group:symbol)\nStudied_by(\"gemstone\", \"geologists\").\nStudied_by(\"lapidary\", \"geologists\").\n.decl Answer()\nAnswer() :- Studied_by(\"gemstone\", group), Studied_by(\"lapidary\", group).\n.output Answer\n\n", "completions": [".decl Studied_by(Object:symbol, Group:symbol)\nStudied_by(\"gemstone\", \"geologists\").\nStudied_by(\"lapidary\", \"geologists\").\n.decl Answer()\nAnswer() :- Studied_by(\"gemstone\", group), Studied_by(\"lapidary\", group).\n.output Answer\n\n"]}
{"id": 1507, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Asian black bear\", \"black\").\nHas_color(\"Asian black bear\", \"brown\").\nHas_color(\"Asian black bear\", \"white\").\nHas_color(\"Asian black bear\", \"red\").\n.decl Answer()\nAnswer() :- Has_color(\"Asian black bear\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Asian black bear\", \"black\").\nHas_color(\"Asian black bear\", \"brown\").\nHas_color(\"Asian black bear\", \"white\").\nHas_color(\"Asian black bear\", \"red\").\n.decl Answer()\nAnswer() :- Has_color(\"Asian black bear\", color).\n.output Answer\n\n"]}
{"id": 1508, "answer": false, "completion": ".decl Is_in_time(Event:symbol, Time:symbol)\nIs_in_time(\"quarantine\", \"June\").\nIs_in_time(\"quarantine\", \"July\").\nIs_in_time(\"quarantine\", \"August\").\n.decl Is_in_season(Month:symbol, Season:symbol)\nIs_in_season(\"June\", \"summer\").\nIs_in_season(\"July\", \"summer\").\nIs_in_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- Is_in_time(\"quarantine\", season), Is_in_season(month, season).\n.output Answer\n\n", "completions": [".decl Is_in_time(Event:symbol, Time:symbol)\nIs_in_time(\"quarantine\", \"June\").\nIs_in_time(\"quarantine\", \"July\").\nIs_in_time(\"quarantine\", \"August\").\n.decl Is_in_season(Month:symbol, Season:symbol)\nIs_in_season(\"June\", \"summer\").\nIs_in_season(\"July\", \"summer\").\nIs_in_season(\"August\", \"summer\").\n.decl Answer()\nAnswer() :- Is_in_time(\"quarantine\", season), Is_in_season(month, season).\n.output Answer\n\n"]}
{"id": 1509, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Edward Snowden\", 1.8).\nHas_height(\"Mensa\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Edward Snowden\", height), Has_height(\"Mensa\", height).\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Edward Snowden\", 1.8).\nHas_height(\"Mensa\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Edward Snowden\", height), Has_height(\"Mensa\", height).\n.output Answer\n\n"]}
{"id": 1510, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Leila George\", 1.6).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"model\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Leila George\", height1), Has_height(\"model\", height2), height1 < height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Leila George\", 1.6).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"model\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Leila George\", height1), Has_height(\"model\", height2), height1 < height2.\n.output Answer\n\n"]}
{"id": 1511, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"housekey\", 0.1).\nHas_size(\"modern central processing unit circuit chip\", 0.000001).\n.decl Answer()\nAnswer() :- Has_size(\"modern central processing unit circuit chip\", size1), Has_size(\"housekey\", size2), size1 < size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"housekey\", 0.1).\nHas_size(\"modern central processing unit circuit chip\", 0.000001).\n.decl Answer()\nAnswer() :- Has_size(\"modern central processing unit circuit chip\", size1), Has_size(\"housekey\", size2), size1 < size2.\n.output Answer\n\n"]}
{"id": 1512, "answer": true, "completion": ".decl Is_lawful(Event:symbol)\nIs_lawful(\"arrest\").\n.decl Is_member(Person:symbol, Group:symbol)\nIs_member(\"Sting\", \"The Police\").\n.decl Answer()\nAnswer() :- Is_lawful(\"arrest\"), Is_member(\"Sting\", group), Is_member(person, group).\n.output Answer\n\n", "completions": [".decl Is_lawful(Event:symbol)\nIs_lawful(\"arrest\").\n.decl Is_member(Person:symbol, Group:symbol)\nIs_member(\"Sting\", \"The Police\").\n.decl Answer()\nAnswer() :- Is_lawful(\"arrest\"), Is_member(\"Sting\", group), Is_member(person, group).\n.output Answer\n\n"]}
{"id": 1513, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\nHappens_in_time(\"Thanksgiving\", \"November\").\nHappens_in_time(\"Thanksgiving\", \"December\").\nHappens_in_time(\"Thanksgiving\", \"January\").\nHappens_in_time(\"Thanksgiving\", \"February\").\nHappens_in_time(\"Thanksgiving\", \"March\").\nHappens_in_time(\"Thanksgiving\", \"April\").\nHappens_in_time(\"Thanksgiving\", \"May\").\nHappens_in_time(\"Thanksgiving\", \"June\").\nHappens_in_time(\"Thanksgiving\", \"July\").\nHappens_in_time(\"Thanksgiving\", \"August\").\nHappens_in_time(\"Thanksgiving\", \"September\").\nHappens_in_time(\"Thanksgiving\", \"October\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"November\", \"fall\").\nIn_season(\"December\", \"fall\").\nIn_season(\"January\", \"fall\").\nIn_season(\"February\", \"fall\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), Happens_in_time(\"Thanksgiving\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\nHappens_in_time(\"Thanksgiving\", \"November\").\nHappens_in_time(\"Thanksgiving\", \"December\").\nHappens_in_time(\"Thanksgiving\", \"January\").\nHappens_in_time(\"Thanksgiving\", \"February\").\nHappens_in_time(\"Thanksgiving\", \"March\").\nHappens_in_time(\"Thanksgiving\", \"April\").\nHappens_in_time(\"Thanksgiving\", \"May\").\nHappens_in_time(\"Thanksgiving\", \"June\").\nHappens_in_time(\"Thanksgiving\", \"July\").\nHappens_in_time(\"Thanksgiving\", \"August\").\nHappens_in_time(\"Thanksgiving\", \"September\").\nHappens_in_time(\"Thanksgiving\", \"October\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"November\", \"fall\").\nIn_season(\"December\", \"fall\").\nIn_season(\"January\", \"fall\").\nIn_season(\"February\", \"fall\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), Happens_in_time(\"Thanksgiving\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1514, "answer": true, "completion": ".decl Largest_city(City:symbol, State:symbol)\nLargest_city(\"Albuquerque\", \"New Mexico\").\nLargest_city(\"Santa Fe\", \"New Mexico\").\nLargest_city(\"Taos\", \"New Mexico\").\nLargest_city(\"Las Vegas\", \"New Mexico\").\nLargest_city(\"Los Alamos\", \"New Mexico\").\nLargest_city(\"Farmington\", \"New Mexico\").\nLargest_city(\"Gallup\", \"New Mexico\").\nLargest_city(\"Rio Rancho\", \"New Mexico\").\nLargest_city(\"Clovis\", \"New Mexico\").\nLargest_city(\"Roswell\", \"New Mexico\").\nLargest_city(\"Socorro\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Hobbs\", \"New Mexico\").\nLargest_city(\"Carlsbad\", \"New Mexico\").\nLargest_city(\"Deming\", \"New Mexico\").\nLargest_city(\"Tucumcari\", \"New Mexico\").\nLargest_city(\"Alamogordo\", \"New Mexico\").\nLargest_city(\"White Sands Missile Range\", \"New Mexico\").\nLargest_city(\"Los Lunas\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLarg", "completions": [".decl Largest_city(City:symbol, State:symbol)\nLargest_city(\"Albuquerque\", \"New Mexico\").\nLargest_city(\"Santa Fe\", \"New Mexico\").\nLargest_city(\"Taos\", \"New Mexico\").\nLargest_city(\"Las Vegas\", \"New Mexico\").\nLargest_city(\"Los Alamos\", \"New Mexico\").\nLargest_city(\"Farmington\", \"New Mexico\").\nLargest_city(\"Gallup\", \"New Mexico\").\nLargest_city(\"Rio Rancho\", \"New Mexico\").\nLargest_city(\"Clovis\", \"New Mexico\").\nLargest_city(\"Roswell\", \"New Mexico\").\nLargest_city(\"Socorro\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Hobbs\", \"New Mexico\").\nLargest_city(\"Carlsbad\", \"New Mexico\").\nLargest_city(\"Deming\", \"New Mexico\").\nLargest_city(\"Tucumcari\", \"New Mexico\").\nLargest_city(\"Alamogordo\", \"New Mexico\").\nLargest_city(\"White Sands Missile Range\", \"New Mexico\").\nLargest_city(\"Los Lunas\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLargest_city(\"Las Cruces\", \"New Mexico\").\nLarg"]}
{"id": 1515, "answer": false, "completion": ".decl Is_a_species(Species:symbol, Genus:symbol)\nIs_a_species(\"sable\", \"mustelid\").\nIs_a_species(\"sable\", \"canid\").\n.decl Is_a_genus(Genus:symbol, Family:symbol)\nIs_a_genus(\"mustelid\", \"mustelidae\").\nIs_a_genus(\"canid\", \"canidae\").\n.decl Is_a_family(Family:symbol, Order:symbol)\nIs_a_family(\"mustelidae\", \"carnivora\").\nIs_a_family(\"canidae\", \"carnivora\").\n.decl Is_a_order(Order:symbol, Class:symbol)\nIs_a_order(\"carnivora\", \"mammalia\").\n.decl Is_a_class(Class:symbol, Kingdom:symbol)\nIs_a_class(\"mammalia\", \"animalia\").\n.decl Is_a_kingdom(Kingdom:symbol, Domain:symbol)\nIs_a_kingdom(\"animalia\", \"eukaryota\").\n.decl Is_a_domain(Domain:symbol, Life:symbol)\nIs_a_domain(\"eukaryota\", \"life\").\n.decl Answer()\nAnswer() :- Is_a_species(\"sable\", genus), Is_a_genus(genus, family), Is_a_family(family, order), Is_a_order(order, class), Is_a_class(class, kingdom), Is_a_kingdom(kingdom, domain), Is_a_domain(domain, life), Is_a_species(\"sable\", species), Is_a_species(species, genus).\n.output Answer\n\n", "completions": [".decl Is_a_species(Species:symbol, Genus:symbol)\nIs_a_species(\"sable\", \"mustelid\").\nIs_a_species(\"sable\", \"canid\").\n.decl Is_a_genus(Genus:symbol, Family:symbol)\nIs_a_genus(\"mustelid\", \"mustelidae\").\nIs_a_genus(\"canid\", \"canidae\").\n.decl Is_a_family(Family:symbol, Order:symbol)\nIs_a_family(\"mustelidae\", \"carnivora\").\nIs_a_family(\"canidae\", \"carnivora\").\n.decl Is_a_order(Order:symbol, Class:symbol)\nIs_a_order(\"carnivora\", \"mammalia\").\n.decl Is_a_class(Class:symbol, Kingdom:symbol)\nIs_a_class(\"mammalia\", \"animalia\").\n.decl Is_a_kingdom(Kingdom:symbol, Domain:symbol)\nIs_a_kingdom(\"animalia\", \"eukaryota\").\n.decl Is_a_domain(Domain:symbol, Life:symbol)\nIs_a_domain(\"eukaryota\", \"life\").\n.decl Answer()\nAnswer() :- Is_a_species(\"sable\", genus), Is_a_genus(genus, family), Is_a_family(family, order), Is_a_order(order, class), Is_a_class(class, kingdom), Is_a_kingdom(kingdom, domain), Is_a_domain(domain, life), Is_a_species(\"sable\", species), Is_a_species(species, genus).\n.output Answer\n\n"]}
{"id": 1516, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"sesame seed\", 0.01).\nHas_size(\"wood frog egg\", 0.002).\n.decl Answer()\nAnswer() :- Has_size(\"sesame seed\", size1), Has_size(\"wood frog egg\", size2), size1 > size2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"sesame seed\", 0.01).\nHas_size(\"wood frog egg\", 0.002).\n.decl Answer()\nAnswer() :- Has_size(\"sesame seed\", size1), Has_size(\"wood frog egg\", size2), size1 > size2.\n.output Answer\n\n"]}
{"id": 1517, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"November\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"April\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"May\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"November\", \"winter\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"photographer taking pictures of a plum tree in bloom\", month), In_season(month, season), season != \"spring\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"November\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"April\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"May\").\nHappens_in_time(\"photographer taking pictures of a plum tree in bloom\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"November\", \"winter\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"photographer taking pictures of a plum tree in bloom\", month), In_season(month, season), season != \"spring\".\n.output Answer\n\n"]}
{"id": 1518, "answer": true, "completion": ".decl Has_bite_force(Animal:symbol, Bite_force:float)\nHas_bite_force(\"bull shark\", 35000).\nHas_bite_force(\"crocodile\", 2000).\n.decl Answer()\nAnswer() :- Has_bite_force(\"bull shark\", bite_force1), Has_bite_force(\"crocodile\", bite_force2), bite_force1 > bite_force2.\n.output Answer\n\n", "completions": [".decl Has_bite_force(Animal:symbol, Bite_force:float)\nHas_bite_force(\"bull shark\", 35000).\nHas_bite_force(\"crocodile\", 2000).\n.decl Answer()\nAnswer() :- Has_bite_force(\"bull shark\", bite_force1), Has_bite_force(\"crocodile\", bite_force2), bite_force1 > bite_force2.\n.output Answer\n\n"]}
{"id": 1519, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Mexican Revolution\", \"1910\").\nHappens_in_time(\"Mexican Revolution\", \"1920\").\nHappens_in_time(\"Mexican Revolution\", \"1940\").\nHappens_in_time(\"Mexican Revolution\", \"1950\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Mexican Revolution\", \"Mexico\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Barron Trump\", \"Mexico\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Barron Trump\", time), Happens_in_place(\"Mexican Revolution\", place), Happens_in_place(\"Barron Trump\", place), time > place.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Mexican Revolution\", \"1910\").\nHappens_in_time(\"Mexican Revolution\", \"1920\").\nHappens_in_time(\"Mexican Revolution\", \"1940\").\nHappens_in_time(\"Mexican Revolution\", \"1950\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Mexican Revolution\", \"Mexico\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Barron Trump\", \"Mexico\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Barron Trump\", time), Happens_in_place(\"Mexican Revolution\", place), Happens_in_place(\"Barron Trump\", place), time > place.\n.output Answer\n\n"]}
{"id": 1520, "answer": false, "completion": ".decl Has_temperature(Location:symbol, Temperature:float)\nHas_temperature(\"New York\", -20).\nHas_temperature(\"Florida\", 30).\n.decl Has_death_rate(Location:symbol, Death_rate:float)\nHas_death_rate(\"New York\", 0.1).\nHas_death_rate(\"Florida\", 0.2).\n.decl Answer()\nAnswer() :- Has_temperature(\"New York\", temperature), Has_temperature(\"Florida\", temperature2), Has_death_rate(\"New York\", death_rate), Has_death_rate(\"Florida\", death_rate2), temperature < temperature2, death_rate > death_rate2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Location:symbol, Temperature:float)\nHas_temperature(\"New York\", -20).\nHas_temperature(\"Florida\", 30).\n.decl Has_death_rate(Location:symbol, Death_rate:float)\nHas_death_rate(\"New York\", 0.1).\nHas_death_rate(\"Florida\", 0.2).\n.decl Answer()\nAnswer() :- Has_temperature(\"New York\", temperature), Has_temperature(\"Florida\", temperature2), Has_death_rate(\"New York\", death_rate), Has_death_rate(\"Florida\", death_rate2), temperature < temperature2, death_rate > death_rate2.\n.output Answer\n\n"]}
{"id": 1521, "answer": false, "completion": ".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"death\", 10).\nHas_distance(\"VLTI\", 100).\n.decl Answer()\nAnswer() :- Has_distance(\"death\", distance), Has_distance(\"VLTI\", distance).\n.output Answer\n\n", "completions": [".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"death\", 10).\nHas_distance(\"VLTI\", 100).\n.decl Answer()\nAnswer() :- Has_distance(\"death\", distance), Has_distance(\"VLTI\", distance).\n.output Answer\n\n"]}
{"id": 1522, "answer": false, "completion": ".decl Has_blood_type(Organ:symbol, Blood_type:symbol)\nHas_blood_type(\"heart\", \"O\").\nHas_blood_type(\"heart\", \"AB\").\nHas_blood_type(\"kidney\", \"O\").\nHas_blood_type(\"kidney\", \"A\").\nHas_blood_type(\"kidney\", \"B\").\nHas_blood_type(\"kidney\", \"AB\").\n.decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Alice\", \"O\").\nHas_blood_type(\"Bob\", \"A\").\nHas_blood_type(\"Carol\", \"B\").\nHas_blood_type(\"Dave\", \"AB\").\n.decl Answer()\nAnswer() :- Has_blood_type(\"Alice\", blood_type1), Has_blood_type(\"Bob\", blood_type2), Has_blood_type(\"Carol\", blood_type3), Has_blood_type(\"Dave\", blood_type4), Has_blood_type(\"kidney\", organ), Has_blood_type(person, blood_type1), Has_blood_type(person, blood_type2), Has_blood_type(person, blood_type3), Has_blood_type(person, blood_type4), blood_type1 == blood_type2, blood_type1 == blood_type3, blood_type1 == blood_type4, blood_type2 == blood_type3, blood_type2 == blood_type4, blood_type3 == blood_type4.\n.output Answer\n\n", "completions": [".decl Has_blood_type(Organ:symbol, Blood_type:symbol)\nHas_blood_type(\"heart\", \"O\").\nHas_blood_type(\"heart\", \"AB\").\nHas_blood_type(\"kidney\", \"O\").\nHas_blood_type(\"kidney\", \"A\").\nHas_blood_type(\"kidney\", \"B\").\nHas_blood_type(\"kidney\", \"AB\").\n.decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Alice\", \"O\").\nHas_blood_type(\"Bob\", \"A\").\nHas_blood_type(\"Carol\", \"B\").\nHas_blood_type(\"Dave\", \"AB\").\n.decl Answer()\nAnswer() :- Has_blood_type(\"Alice\", blood_type1), Has_blood_type(\"Bob\", blood_type2), Has_blood_type(\"Carol\", blood_type3), Has_blood_type(\"Dave\", blood_type4), Has_blood_type(\"kidney\", organ), Has_blood_type(person, blood_type1), Has_blood_type(person, blood_type2), Has_blood_type(person, blood_type3), Has_blood_type(person, blood_type4), blood_type1 == blood_type2, blood_type1 == blood_type3, blood_type1 == blood_type4, blood_type2 == blood_type3, blood_type2 == blood_type4, blood_type3 == blood_type4.\n.output Answer\n\n"]}
{"id": 1523, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Pope Leo\", \"Pope Leo\").\nHas_name(\"Ivan the Terrible\", \"Ivan the Terrible\").\n.decl Answer()\nAnswer() :- Has_name(\"Pope Leo\", name1), Has_name(\"Ivan the Terrible\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Pope Leo\", \"Pope Leo\").\nHas_name(\"Ivan the Terrible\", \"Ivan the Terrible\").\n.decl Answer()\nAnswer() :- Has_name(\"Pope Leo\", name1), Has_name(\"Ivan the Terrible\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 1524, "answer": false, "completion": ".decl Was_mercenary(Person:symbol)\nWas_mercenary(\"Williamite\").\nWas_mercenary(\"Jacobite\").\nWas_mercenary(\"Orangeman\").\nWas_mercenary(\"Williamite\").\nWas_mercenary(\"Orangeman\").\nWas_mercenary(\"Orangeman\").\n.decl Fought_for(Person:symbol, Country:symbol)\nFought_for(\"Williamite\", \"England\").\nFought_for(\"Jacobite\", \"England\").\nFought_for(\"Orangeman\", \"England\").\nFought_for(\"Williamite\", \"England\").\nFought_for(\"Orangeman\", \"England\").\nFought_for(\"Orangeman\", \"England\").\n.decl Answer()\nAnswer() :- Was_mercenary(person), Fought_for(person, country).\n.output Answer\n\n", "completions": [".decl Was_mercenary(Person:symbol)\nWas_mercenary(\"Williamite\").\nWas_mercenary(\"Jacobite\").\nWas_mercenary(\"Orangeman\").\nWas_mercenary(\"Williamite\").\nWas_mercenary(\"Orangeman\").\nWas_mercenary(\"Orangeman\").\n.decl Fought_for(Person:symbol, Country:symbol)\nFought_for(\"Williamite\", \"England\").\nFought_for(\"Jacobite\", \"England\").\nFought_for(\"Orangeman\", \"England\").\nFought_for(\"Williamite\", \"England\").\nFought_for(\"Orangeman\", \"England\").\nFought_for(\"Orangeman\", \"England\").\n.decl Answer()\nAnswer() :- Was_mercenary(person), Fought_for(person, country).\n.output Answer\n\n"]}
{"id": 1525, "answer": true, "completion": ".decl Was_involved(Company:symbol, Event:symbol)\nWas_involved(\"Amazon\", \"lunar landing\").\nWas_involved(\"Microsoft\", \"lunar landing\").\nWas_involved(\"Apple\", \"lunar landing\").\n.decl Answer()\nAnswer() :- Was_involved(\"Amazon\", event).\n.output Answer\n\n", "completions": [".decl Was_involved(Company:symbol, Event:symbol)\nWas_involved(\"Amazon\", \"lunar landing\").\nWas_involved(\"Microsoft\", \"lunar landing\").\nWas_involved(\"Apple\", \"lunar landing\").\n.decl Answer()\nAnswer() :- Was_involved(\"Amazon\", event).\n.output Answer\n\n"]}
{"id": 1526, "answer": false, "completion": ".decl Has_day_of_year(Person:symbol, Day_of_year:float)\nHas_day_of_year(\"Dean Cain\", 1).\nHas_day_of_year(\"Will Ferrell\", 4).\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"birthday\", 365).\n.decl Answer()\nAnswer() :- Has_day_of_year(\"Dean Cain\", day_of_year1), Has_day_of_year(\"Will Ferrell\", day_of_year2), Happens_every_n_days(\"birthday\", n_days), day_of_year1 < day_of_year2, day_of_year1 % n_days =:= 0.\n.output Answer\n\n", "completions": [".decl Has_day_of_year(Person:symbol, Day_of_year:float)\nHas_day_of_year(\"Dean Cain\", 1).\nHas_day_of_year(\"Will Ferrell\", 4).\n.decl Happens_every_n_days(Event:symbol, N_days:float)\nHappens_every_n_days(\"birthday\", 365).\n.decl Answer()\nAnswer() :- Has_day_of_year(\"Dean Cain\", day_of_year1), Has_day_of_year(\"Will Ferrell\", day_of_year2), Happens_every_n_days(\"birthday\", n_days), day_of_year1 < day_of_year2, day_of_year1 % n_days =:= 0.\n.output Answer\n\n"]}
{"id": 1527, "answer": false, "completion": ".decl Caste(Person:symbol, Caste:symbol)\nCaste(\"Shankar\", \"Iyer\").\nCaste(\"Shankar\", \"Vaish\").\nCaste(\"Shankar\", \"Kurmi\").\nCaste(\"Shankar\", \"Kongu\").\nCaste(\"Shankar\", \"Kuruba\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shank", "completions": [".decl Caste(Person:symbol, Caste:symbol)\nCaste(\"Shankar\", \"Iyer\").\nCaste(\"Shankar\", \"Vaish\").\nCaste(\"Shankar\", \"Kurmi\").\nCaste(\"Shankar\", \"Kongu\").\nCaste(\"Shankar\", \"Kuruba\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shankar\", \"Muthalai\").\nCaste(\"Shankar\", \"Muthaliga\").\nCaste(\"Shankar\", \"Muthanna\").\nCaste(\"Shankar\", \"Mutharayya\").\nCaste(\"Shank"]}
{"id": 1528, "answer": false, "completion": ".decl Has_real_estate(Person:symbol, Real_estate:float)\nHas_real_estate(\"Hades\", 0.5).\nHas_real_estate(\"Osiris\", 0.5).\n.decl Answer()\nAnswer() :- Has_real_estate(\"Hades\", real_estate1), Has_real_estate(\"Osiris\", real_estate2), real_estate1 > real_estate2.\n.output Answer\n\n", "completions": [".decl Has_real_estate(Person:symbol, Real_estate:float)\nHas_real_estate(\"Hades\", 0.5).\nHas_real_estate(\"Osiris\", 0.5).\n.decl Answer()\nAnswer() :- Has_real_estate(\"Hades\", real_estate1), Has_real_estate(\"Osiris\", real_estate2), real_estate1 > real_estate2.\n.output Answer\n\n"]}
{"id": 1529, "answer": false, "completion": ".decl Has_brand(Object:symbol, Brand:symbol)\nHas_brand(\"iPhone\", \"Apple\").\nHas_brand(\"Samsung Galaxy S4\", \"Samsung\").\n.decl Has_price(Object:symbol, Price:float)\nHas_price(\"iPhone\", 500).\nHas_price(\"Samsung Galaxy S4\", 400).\n.decl Answer()\nAnswer() :- Has_brand(\"General Zod\", brand), Has_price(\"General Zod\", price), Has_brand(\"iPhone\", brand2), Has_price(\"iPhone\", price2), Has_brand(\"Samsung Galaxy S4\", brand3), Has_price(\"Samsung Galaxy S4\", price3), brand2 = brand3, price2 < price3.\n.output Answer\n\n", "completions": [".decl Has_brand(Object:symbol, Brand:symbol)\nHas_brand(\"iPhone\", \"Apple\").\nHas_brand(\"Samsung Galaxy S4\", \"Samsung\").\n.decl Has_price(Object:symbol, Price:float)\nHas_price(\"iPhone\", 500).\nHas_price(\"Samsung Galaxy S4\", 400).\n.decl Answer()\nAnswer() :- Has_brand(\"General Zod\", brand), Has_price(\"General Zod\", price), Has_brand(\"iPhone\", brand2), Has_price(\"iPhone\", price2), Has_brand(\"Samsung Galaxy S4\", brand3), Has_price(\"Samsung Galaxy S4\", price3), brand2 = brand3, price2 < price3.\n.output Answer\n\n"]}
{"id": 1530, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Seder\", \"Passover\").\nHappens_in_time(\"Chipotle Cinnamon Pork Chops\", \"Passover\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Seder\", time), Happens_in_time(\"Chipotle Cinnamon Pork Chops\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Seder\", \"Passover\").\nHappens_in_time(\"Chipotle Cinnamon Pork Chops\", \"Passover\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Seder\", time), Happens_in_time(\"Chipotle Cinnamon Pork Chops\", time).\n.output Answer\n\n"]}
{"id": 1531, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"oranges\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"diarrhea\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"oranges\", n_members1), Has_n_members(\"diarrhea\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"oranges\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"diarrhea\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"oranges\", n_members1), Has_n_members(\"diarrhea\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1532, "answer": false, "completion": ".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"jealousy\", \"emotion\").\nHas_property(\"polyamory\", \"relationship style\").\n.decl Answer()\nAnswer() :- Has_property(\"jealousy\", property1), Has_property(\"polyamory\", property2), property1 = property2.\n.output Answer\n\n", "completions": [".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"jealousy\", \"emotion\").\nHas_property(\"polyamory\", \"relationship style\").\n.decl Answer()\nAnswer() :- Has_property(\"jealousy\", property1), Has_property(\"polyamory\", property2), property1 = property2.\n.output Answer\n\n"]}
{"id": 1533, "answer": false, "completion": ".decl Has_sin(Person:symbol, Sin:symbol)\nHas_sin(\"Christopher Columbus\", \"greed\").\nHas_sin(\"Christopher Columbus\", \"gluttony\").\nHas_sin(\"Christopher Columbus\", \"lust\").\nHas_sin(\"Christopher Columbus\", \"sloth\").\nHas_sin(\"Christopher Columbus\", \"wrath\").\nHas_sin(\"Christopher Columbus\", \"envy\").\nHas_sin(\"Christopher Columbus\", \"pride\").\n.decl Answer()\nAnswer() :- Has_sin(\"Christopher Columbus\", sin1), Has_sin(\"Christopher Columbus\", sin2), Has_sin(\"Christopher Columbus\", sin3), Has_sin(\"Christopher Columbus\", sin4), Has_sin(\"Christopher Columbus\", sin5), Has_sin(\"Christopher Columbus\", sin6), Has_sin(\"Christopher Columbus\", sin7), sin1 = sin2, sin1 = sin3, sin1 = sin4, sin1 = sin5, sin1 = sin6, sin1 = sin7.\n.output Answer\n\n", "completions": [".decl Has_sin(Person:symbol, Sin:symbol)\nHas_sin(\"Christopher Columbus\", \"greed\").\nHas_sin(\"Christopher Columbus\", \"gluttony\").\nHas_sin(\"Christopher Columbus\", \"lust\").\nHas_sin(\"Christopher Columbus\", \"sloth\").\nHas_sin(\"Christopher Columbus\", \"wrath\").\nHas_sin(\"Christopher Columbus\", \"envy\").\nHas_sin(\"Christopher Columbus\", \"pride\").\n.decl Answer()\nAnswer() :- Has_sin(\"Christopher Columbus\", sin1), Has_sin(\"Christopher Columbus\", sin2), Has_sin(\"Christopher Columbus\", sin3), Has_sin(\"Christopher Columbus\", sin4), Has_sin(\"Christopher Columbus\", sin5), Has_sin(\"Christopher Columbus\", sin6), Has_sin(\"Christopher Columbus\", sin7), sin1 = sin2, sin1 = sin3, sin1 = sin4, sin1 = sin5, sin1 = sin6, sin1 = sin7.\n.output Answer\n\n"]}
{"id": 1534, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Wall Street Crash of 1929\", \"October 1929\").\nHappens_in_time(\"Wall Street Crash of 1929\", \"November 1929\").\nHappens_in_time(\"Wall Street Crash of 1929\", \"December 1929\").\n.decl Has_stock_price(Company:symbol, Stock_price:float)\nHas_stock_price(\"General Electric\", 10).\nHas_stock_price(\"Westinghouse\", 5).\nHas_stock_price(\"Boeing\", 8).\nHas_stock_price(\"RCA\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Wall Street Crash of 1929\", time), Has_stock_price(\"General Electric\", price1), Has_stock_price(\"Westinghouse\", price2), Has_stock_price(\"Boeing\", price3), Has_stock_price(\"RCA\", price4), price1 < price2, price2 < price3, price3 < price4.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Wall Street Crash of 1929\", \"October 1929\").\nHappens_in_time(\"Wall Street Crash of 1929\", \"November 1929\").\nHappens_in_time(\"Wall Street Crash of 1929\", \"December 1929\").\n.decl Has_stock_price(Company:symbol, Stock_price:float)\nHas_stock_price(\"General Electric\", 10).\nHas_stock_price(\"Westinghouse\", 5).\nHas_stock_price(\"Boeing\", 8).\nHas_stock_price(\"RCA\", 6).\n.decl Answer()\nAnswer() :- Happens_in_time(\"Wall Street Crash of 1929\", time), Has_stock_price(\"General Electric\", price1), Has_stock_price(\"Westinghouse\", price2), Has_stock_price(\"Boeing\", price3), Has_stock_price(\"RCA\", price4), price1 < price2, price2 < price3, price3 < price4.\n.output Answer\n\n"]}
{"id": 1535, "answer": true, "completion": ".decl Grosses(Movie:symbol, Gross:float)\nGrosses(\"Inception\", 8.5).\nGrosses(\"The Dark Knight\", 2.1).\nGrosses(\"Interstellar\", 1.2).\n.decl Answer()\nAnswer() :- Grosses(\"Inception\", gross1), Grosses(\"The Dark Knight\", gross2), Grosses(\"Interstellar\", gross3), gross1 + gross2 + gross3 > 1000000000000.\n.output Answer\n\n", "completions": [".decl Grosses(Movie:symbol, Gross:float)\nGrosses(\"Inception\", 8.5).\nGrosses(\"The Dark Knight\", 2.1).\nGrosses(\"Interstellar\", 1.2).\n.decl Answer()\nAnswer() :- Grosses(\"Inception\", gross1), Grosses(\"The Dark Knight\", gross2), Grosses(\"Interstellar\", gross3), gross1 + gross2 + gross3 > 1000000000000.\n.output Answer\n\n"]}
{"id": 1536, "answer": true, "completion": ".decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"Homer Simpson\", 10).\n.decl Answer()\nAnswer() :- Has_n_fingers(\"Homer Simpson\", n_fingers1), n_fingers1 >= 5.\n.output Answer\n\n", "completions": [".decl Has_n_fingers(Person:symbol, N_fingers:float)\nHas_n_fingers(\"Homer Simpson\", 10).\n.decl Answer()\nAnswer() :- Has_n_fingers(\"Homer Simpson\", n_fingers1), n_fingers1 >= 5.\n.output Answer\n\n"]}
{"id": 1537, "answer": false, "completion": ".decl Has_played(Person:symbol, Movie:symbol)\nHas_played(\"Robin Williams\", \"Mrs. Doubtfire\").\nHas_played(\"Robin Williams\", \"Good Will Hunting\").\nHas_played(\"Robin Williams\", \"Dead Poets Society\").\nHas_played(\"Robin Williams\", \"Mork and Mindy\").\nHas_played(\"Robin Williams\", \"The Princess Bride\").\nHas_played(\"Robin Williams\", \"Jumanji\").\nHas_played(\"Robin Williams\", \"Good Morning Vietnam\").\nHas_played(\"Robin Williams\", \"Hook\").\nHas_played(\"Robin Williams\", \"Flubber\").\nHas_played(\"Robin Williams\", \"The World According to Garp\").\nHas_played(\"Robin Williams\", \"Dead Poets Society\").\nHas_played(\"Robin Williams\", \"Good Will Hunting\").\nHas_played(\"Robin Williams\", \"Good Morning Vietnam\").\nHas_played(\"Robin Williams\", \"The Princess Bride\").\nHas_played(\"Robin Williams\", \"Mork and Mindy\").\nHas_played(\"Robin Williams\", \"Jumanji\").\nHas_played(\"Robin Williams\", \"Hook\").\nHas_played(\"Robin Williams\", \"Flubber\").\nHas_played(\"Robin Williams\", \"The World According to Garp\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Mrs. Doubtfire\", \"comedy\").\nHas_genre(\"Good Will Hunting\", \"comedy\").\nHas_genre(\"Dead Poets Society\", \"comedy\").\nHas_genre(\"Mork and Mindy\", \"comedy\").\nHas_genre(\"The Princess Bride\", \"comedy\").\nHas_genre(\"Jumanji\", \"comedy\").\nHas_genre(\"Good Morning Vietnam\", \"comedy\").\nHas_genre(\"Hook\", \"comedy\").\nHas_genre(\"Flubber\", \"comedy\").\nHas_genre(\"The World According to Garp\", \"comedy\").\n.decl Answer()\nAnswer() :- Has_played(\"Robin Williams\", movie1), Has_genre(movie1, genre1), Has_genre(\"Mrs. Doubtfire\", genre2), genre1 == genre2.\n.output Answer\n\n", "completions": [".decl Has_played(Person:symbol, Movie:symbol)\nHas_played(\"Robin Williams\", \"Mrs. Doubtfire\").\nHas_played(\"Robin Williams\", \"Good Will Hunting\").\nHas_played(\"Robin Williams\", \"Dead Poets Society\").\nHas_played(\"Robin Williams\", \"Mork and Mindy\").\nHas_played(\"Robin Williams\", \"The Princess Bride\").\nHas_played(\"Robin Williams\", \"Jumanji\").\nHas_played(\"Robin Williams\", \"Good Morning Vietnam\").\nHas_played(\"Robin Williams\", \"Hook\").\nHas_played(\"Robin Williams\", \"Flubber\").\nHas_played(\"Robin Williams\", \"The World According to Garp\").\nHas_played(\"Robin Williams\", \"Dead Poets Society\").\nHas_played(\"Robin Williams\", \"Good Will Hunting\").\nHas_played(\"Robin Williams\", \"Good Morning Vietnam\").\nHas_played(\"Robin Williams\", \"The Princess Bride\").\nHas_played(\"Robin Williams\", \"Mork and Mindy\").\nHas_played(\"Robin Williams\", \"Jumanji\").\nHas_played(\"Robin Williams\", \"Hook\").\nHas_played(\"Robin Williams\", \"Flubber\").\nHas_played(\"Robin Williams\", \"The World According to Garp\").\n.decl Has_genre(Movie:symbol, Genre:symbol)\nHas_genre(\"Mrs. Doubtfire\", \"comedy\").\nHas_genre(\"Good Will Hunting\", \"comedy\").\nHas_genre(\"Dead Poets Society\", \"comedy\").\nHas_genre(\"Mork and Mindy\", \"comedy\").\nHas_genre(\"The Princess Bride\", \"comedy\").\nHas_genre(\"Jumanji\", \"comedy\").\nHas_genre(\"Good Morning Vietnam\", \"comedy\").\nHas_genre(\"Hook\", \"comedy\").\nHas_genre(\"Flubber\", \"comedy\").\nHas_genre(\"The World According to Garp\", \"comedy\").\n.decl Answer()\nAnswer() :- Has_played(\"Robin Williams\", movie1), Has_genre(movie1, genre1), Has_genre(\"Mrs. Doubtfire\", genre2), genre1 == genre2.\n.output Answer\n\n"]}
{"id": 1538, "answer": true, "completion": ".decl Received_funding(Person:symbol, Funding_source:symbol)\nReceived_funding(\"Christopher Columbus\", \"King Ferdinand and Queen Isabella of Spain\").\n.decl Answer()\nAnswer() :- Received_funding(\"Christopher Columbus\", funding_source), funding_source = \"King Ferdinand and Queen Isabella of Spain\".\n.output Answer\n\n", "completions": [".decl Received_funding(Person:symbol, Funding_source:symbol)\nReceived_funding(\"Christopher Columbus\", \"King Ferdinand and Queen Isabella of Spain\").\n.decl Answer()\nAnswer() :- Received_funding(\"Christopher Columbus\", funding_source), funding_source = \"King Ferdinand and Queen Isabella of Spain\".\n.output Answer\n\n"]}
{"id": 1539, "answer": false, "completion": ".decl Crafted(Object:symbol, Craftsman:symbol)\nCrafted(\"Egyptian Lighthouse of Alexandria\", \"Egyptians\").\n.decl Crafted(Object:symbol, Craftsman:symbol)\nCrafted(\"Egyptian Lighthouse of Alexandria\", \"Greeks\").\n.decl Answer()\nAnswer() :- Crafted(\"Egyptian Lighthouse of Alexandria\", \"Greeks\").\n.output Answer\n\n", "completions": [".decl Crafted(Object:symbol, Craftsman:symbol)\nCrafted(\"Egyptian Lighthouse of Alexandria\", \"Egyptians\").\n.decl Crafted(Object:symbol, Craftsman:symbol)\nCrafted(\"Egyptian Lighthouse of Alexandria\", \"Greeks\").\n.decl Answer()\nAnswer() :- Crafted(\"Egyptian Lighthouse of Alexandria\", \"Greeks\").\n.output Answer\n\n"]}
{"id": 1540, "answer": true, "completion": ".decl Ranks(Rank:symbol, Rank_number:float)\nRanks(\"white belt\", 1).\nRanks(\"yellow belt\", 2).\nRanks(\"orange belt\", 3).\nRanks(\"green belt\", 4).\nRanks(\"blue belt\", 5).\nRanks(\"purple belt\", 6).\nRanks(\"brown belt\", 7).\nRanks(\"black belt\", 8).\nRanks(\"red belt\", 9).\nRanks(\"10th dan\", 10).\n.decl Answer()\nAnswer() :- Ranks(\"10th dan\", rank_number).\n.output Answer\n\n", "completions": [".decl Ranks(Rank:symbol, Rank_number:float)\nRanks(\"white belt\", 1).\nRanks(\"yellow belt\", 2).\nRanks(\"orange belt\", 3).\nRanks(\"green belt\", 4).\nRanks(\"blue belt\", 5).\nRanks(\"purple belt\", 6).\nRanks(\"brown belt\", 7).\nRanks(\"black belt\", 8).\nRanks(\"red belt\", 9).\nRanks(\"10th dan\", 10).\n.decl Answer()\nAnswer() :- Ranks(\"10th dan\", rank_number).\n.output Answer\n\n"]}
{"id": 1541, "answer": false, "completion": ".decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cu", "completions": [".decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"El Cactus\", \"Mexican\").\nHas_cuisine(\"El Cactus\", \"Latin American\").\n.decl Has_cuisine(Restaurant:symbol, Cu"]}
{"id": 1542, "answer": false, "completion": ".decl Has_technique(Fighter:symbol, Technique:symbol)\nHas_technique(\"Mike Tyson\", \"gogoplata\").\n.decl Answer()\nAnswer() :- Has_technique(\"Mike Tyson\", technique).\n.output Answer\n\n", "completions": [".decl Has_technique(Fighter:symbol, Technique:symbol)\nHas_technique(\"Mike Tyson\", \"gogoplata\").\n.decl Answer()\nAnswer() :- Has_technique(\"Mike Tyson\", technique).\n.output Answer\n\n"]}
{"id": 1543, "answer": true, "completion": ".decl Made_by(Car:symbol, Company:symbol)\nMade_by(\"Fiat\", \"Fiat Chrysler Automobiles\").\nMade_by(\"Fiat\", \"Chrysler\").\nMade_by(\"Chrysler\", \"Fiat Chrysler Automobiles\").\nMade_by(\"Chrysler\", \"Chrysler\").\nMade_by(\"Honda\", \"Honda\").\nMade_by(\"Toyota\", \"Toyota\").\nMade_by(\"Mazda\", \"Mazda\").\nMade_by(\"Nissan\", \"Nissan\").\nMade_by(\"Suzuki\", \"Suzuki\").\nMade_by(\"Subaru\", \"Subaru\").\nMade_by(\"Mitsubishi\", \"Mitsubishi\").\nMade_by(\"Lexus\", \"Lexus\").\nMade_by(\"Acura\", \"Acura\").\nMade_by(\"BMW\", \"BMW\").\nMade_by(\"Mercedes-Benz\", \"Mercedes-Benz\").\nMade_by(\"Audi\", \"Audi\").\nMade_by(\"Volkswagen\", \"Volkswagen\").\nMade_by(\"Volvo\", \"Volvo\").\nMade_by(\"Hyundai\", \"Hyundai\").\nMade_by(\"Kia\", \"Kia\").\nMade_by(\"Daewoo\", \"Daewoo\").\nMade_by(\"Renault\", \"Renault\").\nMade_by(\"Porsche\", \"Porsche\").\nMade_by(\"Ssangyong\", \"Ssangyong\").\nMade_by(\"Infiniti\", \"Infiniti\").\nMade_by(\"Maserati\", \"Maserati\").\nMade_by(\"Daihatsu\", \"Daihatsu\").\nMade_by(\"Datsun\", \"Datsun\").\nMade_by(\"Ssangyong\", \"Ssangyong\").\nMade_by(\"Geely\", \"Geely\").\nMade_by(\"Great Wall\", \"Great Wall\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"BYD\", \"BYD\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC\").\nMade_by(\"Lifan\", \"Lifan\").\nMade_by(\"Zotye\", \"Zotye\").\nMade_by(\"ZNA\", \"ZNA\").\nMade_by(\"Zhongxing\", \"Zhongxing\").\nMade_by(\"Changhe\", \"Changhe\").\nMade_by(\"Yutong\", \"Yutong\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC\").\nMade_by(\"Lifan\", \"Lifan\").\nMade_by(\"Zotye\", \"Zotye\").\nMade_by(\"ZNA\", \"ZNA\").\nMade_by(\"Zhongxing\", \"Zhongxing\").\nMade_by(\"Changhe\", \"Changhe\").\nMade_by(\"Yutong\", \"Yutong\").\nMade_by(\"Great Wall\", \"Great Wall\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"BYD\", \"BYD\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC", "completions": [".decl Made_by(Car:symbol, Company:symbol)\nMade_by(\"Fiat\", \"Fiat Chrysler Automobiles\").\nMade_by(\"Fiat\", \"Chrysler\").\nMade_by(\"Chrysler\", \"Fiat Chrysler Automobiles\").\nMade_by(\"Chrysler\", \"Chrysler\").\nMade_by(\"Honda\", \"Honda\").\nMade_by(\"Toyota\", \"Toyota\").\nMade_by(\"Mazda\", \"Mazda\").\nMade_by(\"Nissan\", \"Nissan\").\nMade_by(\"Suzuki\", \"Suzuki\").\nMade_by(\"Subaru\", \"Subaru\").\nMade_by(\"Mitsubishi\", \"Mitsubishi\").\nMade_by(\"Lexus\", \"Lexus\").\nMade_by(\"Acura\", \"Acura\").\nMade_by(\"BMW\", \"BMW\").\nMade_by(\"Mercedes-Benz\", \"Mercedes-Benz\").\nMade_by(\"Audi\", \"Audi\").\nMade_by(\"Volkswagen\", \"Volkswagen\").\nMade_by(\"Volvo\", \"Volvo\").\nMade_by(\"Hyundai\", \"Hyundai\").\nMade_by(\"Kia\", \"Kia\").\nMade_by(\"Daewoo\", \"Daewoo\").\nMade_by(\"Renault\", \"Renault\").\nMade_by(\"Porsche\", \"Porsche\").\nMade_by(\"Ssangyong\", \"Ssangyong\").\nMade_by(\"Infiniti\", \"Infiniti\").\nMade_by(\"Maserati\", \"Maserati\").\nMade_by(\"Daihatsu\", \"Daihatsu\").\nMade_by(\"Datsun\", \"Datsun\").\nMade_by(\"Ssangyong\", \"Ssangyong\").\nMade_by(\"Geely\", \"Geely\").\nMade_by(\"Great Wall\", \"Great Wall\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"BYD\", \"BYD\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC\").\nMade_by(\"Lifan\", \"Lifan\").\nMade_by(\"Zotye\", \"Zotye\").\nMade_by(\"ZNA\", \"ZNA\").\nMade_by(\"Zhongxing\", \"Zhongxing\").\nMade_by(\"Changhe\", \"Changhe\").\nMade_by(\"Yutong\", \"Yutong\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC\").\nMade_by(\"Lifan\", \"Lifan\").\nMade_by(\"Zotye\", \"Zotye\").\nMade_by(\"ZNA\", \"ZNA\").\nMade_by(\"Zhongxing\", \"Zhongxing\").\nMade_by(\"Changhe\", \"Changhe\").\nMade_by(\"Yutong\", \"Yutong\").\nMade_by(\"Great Wall\", \"Great Wall\").\nMade_by(\"Brilliance\", \"Brilliance\").\nMade_by(\"BYD\", \"BYD\").\nMade_by(\"Changan\", \"Changan\").\nMade_by(\"Chery\", \"Chery\").\nMade_by(\"JAC\", \"JAC"]}
{"id": 1544, "answer": false, "completion": ".decl Has_viscosity(Object:symbol, Viscosity:float)\nHas_viscosity(\"jello shots\", 0.1).\n.decl Answer()\nAnswer() :- Has_viscosity(\"jello shots\", viscosity), viscosity > 0.1.\n.output Answer\n\n", "completions": [".decl Has_viscosity(Object:symbol, Viscosity:float)\nHas_viscosity(\"jello shots\", 0.1).\n.decl Answer()\nAnswer() :- Has_viscosity(\"jello shots\", viscosity), viscosity > 0.1.\n.output Answer\n\n"]}
{"id": 1545, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"orange\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"green\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"indigo\").\nHas_color(\"rainbow\", \"violet\").\n.decl Has_appearance(Person:symbol, Appearance:symbol)\nHas_appearance(\"Johnny Cash\", \"rainbow-colored outfit\").\n.decl Answer()\nAnswer() :- Has_color(\"rainbow\", color), Has_appearance(\"Johnny Cash\", appearance), color = appearance.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"rainbow\", \"red\").\nHas_color(\"rainbow\", \"orange\").\nHas_color(\"rainbow\", \"yellow\").\nHas_color(\"rainbow\", \"green\").\nHas_color(\"rainbow\", \"blue\").\nHas_color(\"rainbow\", \"indigo\").\nHas_color(\"rainbow\", \"violet\").\n.decl Has_appearance(Person:symbol, Appearance:symbol)\nHas_appearance(\"Johnny Cash\", \"rainbow-colored outfit\").\n.decl Answer()\nAnswer() :- Has_color(\"rainbow\", color), Has_appearance(\"Johnny Cash\", appearance), color = appearance.\n.output Answer\n\n"]}
{"id": 1546, "answer": false, "completion": ".decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"markhor birth\", 3).\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"markhor birth\", 12).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"markhor birth\", n_months1), Last_n_months(\"markhor birth\", n_months2),  n_months1 <= n_months2.\n.output Answer\n\n", "completions": [".decl Last_n_months(Event:symbol, N_months:float)\nLast_n_months(\"markhor birth\", 3).\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"markhor birth\", 12).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"markhor birth\", n_months1), Last_n_months(\"markhor birth\", n_months2),  n_months1 <= n_months2.\n.output Answer\n\n"]}
{"id": 1547, "answer": true, "completion": ".decl Believed_in(Person:symbol, Belief:symbol)\nBelieved_in(\"Mother Theresa\", \"God\").\nBelieved_in(\"Albert Einstein\", \"atheism\").\n.decl Answer()\nAnswer() :- Believed_in(\"Mother Theresa\", belief), Believed_in(\"Albert Einstein\", belief).\n.output Answer\n\n", "completions": [".decl Believed_in(Person:symbol, Belief:symbol)\nBelieved_in(\"Mother Theresa\", \"God\").\nBelieved_in(\"Albert Einstein\", \"atheism\").\n.decl Answer()\nAnswer() :- Believed_in(\"Mother Theresa\", belief), Believed_in(\"Albert Einstein\", belief).\n.output Answer\n\n"]}
{"id": 1548, "answer": true, "completion": ".decl Has_history(Object:symbol, History:symbol)\nHas_history(\"amoeba\", \"history of art\").\n.decl Answer()\nAnswer() :- Has_history(\"amoeba\", history).\n.output Answer\n\n", "completions": [".decl Has_history(Object:symbol, History:symbol)\nHas_history(\"amoeba\", \"history of art\").\n.decl Answer()\nAnswer() :- Has_history(\"amoeba\", history).\n.output Answer\n\n"]}
{"id": 1549, "answer": false, "completion": ".decl Is_in_class(Person:symbol, Class:symbol)\nIs_in_class(\"Maya Angelou\", \"CHE101\").\n.decl Requires(Person:symbol, Book:symbol)\nRequires(\"Maya Angelou\", \"book\").\n.decl Answer()\nAnswer() :- Is_in_class(\"Maya Angelou\", class), Requires(\"Maya Angelou\", book), book = \"book\".\n.output Answer\n\n", "completions": [".decl Is_in_class(Person:symbol, Class:symbol)\nIs_in_class(\"Maya Angelou\", \"CHE101\").\n.decl Requires(Person:symbol, Book:symbol)\nRequires(\"Maya Angelou\", \"book\").\n.decl Answer()\nAnswer() :- Is_in_class(\"Maya Angelou\", class), Requires(\"Maya Angelou\", book), book = \"book\".\n.output Answer\n\n"]}
{"id": 1550, "answer": true, "completion": ".decl Is_celebrated_in_religion(Event:symbol, Religion:symbol)\nIs_celebrated_in_religion(\"Last Supper\", \"Christianity\").\nIs_celebrated_in_religion(\"Last Supper\", \"Judaism\").\nIs_celebrated_in_religion(\"Last Supper\", \"Islam\").\n.decl Answer()\nAnswer() :- Is_celebrated_in_religion(\"Last Supper\", religion).\n.output Answer\n\n", "completions": [".decl Is_celebrated_in_religion(Event:symbol, Religion:symbol)\nIs_celebrated_in_religion(\"Last Supper\", \"Christianity\").\nIs_celebrated_in_religion(\"Last Supper\", \"Judaism\").\nIs_celebrated_in_religion(\"Last Supper\", \"Islam\").\n.decl Answer()\nAnswer() :- Is_celebrated_in_religion(\"Last Supper\", religion).\n.output Answer\n\n"]}
{"id": 1551, "answer": true, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\"Meryl Streep\", \"Vassar College\").\nGraduates(\""]}
{"id": 1552, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"armadillo\", 100).\nHas_mass(\"shield\", 100).\n.decl Answer()\nAnswer() :- Has_mass(\"armadillo\", mass1), Has_mass(\"shield\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"armadillo\", 100).\nHas_mass(\"shield\", 100).\n.decl Answer()\nAnswer() :- Has_mass(\"armadillo\", mass1), Has_mass(\"shield\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 1553, "answer": false, "completion": ".decl Has_doctor_number(Doctor:symbol, Number:float)\nHas_doctor_number(\"10th doctor\", 10).\n.decl Has_favourite_dish(Doctor:symbol, Dish:symbol)\nHas_favourite_dish(\"10th doctor\", \"stuffed pear\").\n.decl Answer()\nAnswer() :- Has_doctor_number(\"10th doctor\", number), Has_favourite_dish(\"10th doctor\", dish), number = 10.\n.output Answer\n\n", "completions": [".decl Has_doctor_number(Doctor:symbol, Number:float)\nHas_doctor_number(\"10th doctor\", 10).\n.decl Has_favourite_dish(Doctor:symbol, Dish:symbol)\nHas_favourite_dish(\"10th doctor\", \"stuffed pear\").\n.decl Answer()\nAnswer() :- Has_doctor_number(\"10th doctor\", number), Has_favourite_dish(\"10th doctor\", dish), number = 10.\n.output Answer\n\n"]}
{"id": 1554, "answer": false, "completion": ".decl Is_known_for(City:symbol, Product:symbol)\nIs_known_for(\"Brooklyn\", \"bread\").\n.decl Answer()\nAnswer() :- Is_known_for(\"Brooklyn\", product).\n.output Answer\n\n", "completions": [".decl Is_known_for(City:symbol, Product:symbol)\nIs_known_for(\"Brooklyn\", \"bread\").\n.decl Answer()\nAnswer() :- Is_known_for(\"Brooklyn\", product).\n.output Answer\n\n"]}
{"id": 1555, "answer": true, "completion": ".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"amoeba\", \"breast cancer\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"amoeba\", \"amoebic dysentery\").\n.decl Answer()\nAnswer() :- Has_cancer(\"amoeba\", cancer), Has_disease(\"amoeba\", disease), cancer != disease.\n.output Answer\n\n", "completions": [".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"amoeba\", \"breast cancer\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"amoeba\", \"amoebic dysentery\").\n.decl Answer()\nAnswer() :- Has_cancer(\"amoeba\", cancer), Has_disease(\"amoeba\", disease), cancer != disease.\n.output Answer\n\n"]}
{"id": 1556, "answer": true, "completion": ".decl Has_fear(Person:symbol, Fear:symbol)\nHas_fear(\"Post Malone\", \"needles\").\n.decl Answer()\nAnswer() :- Has_fear(\"Post Malone\", fear).\n.output Answer\n\n", "completions": [".decl Has_fear(Person:symbol, Fear:symbol)\nHas_fear(\"Post Malone\", \"needles\").\n.decl Answer()\nAnswer() :- Has_fear(\"Post Malone\", fear).\n.output Answer\n\n"]}
{"id": 1557, "answer": true, "completion": ".decl Has_population(City:symbol, Population:float)\nHas_population(\"Gothenburg\", 0.2).\nHas_population(\"Toyota Stadium\", 0.1).\n.decl Answer()\nAnswer() :- Has_population(\"Gothenburg\", population1), Has_population(\"Toyota Stadium\", population2), population1 > population2.\n.output Answer\n\n", "completions": [".decl Has_population(City:symbol, Population:float)\nHas_population(\"Gothenburg\", 0.2).\nHas_population(\"Toyota Stadium\", 0.1).\n.decl Answer()\nAnswer() :- Has_population(\"Gothenburg\", population1), Has_population(\"Toyota Stadium\", population2), population1 > population2.\n.output Answer\n\n"]}
{"id": 1558, "answer": true, "completion": ".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Jujutsu expert\", 10).\nHas_strength(\"Janissary\", 5).\n.decl Answer()\nAnswer() :- Has_strength(\"Jujutsu expert\", strength1), Has_strength(\"Janissary\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Jujutsu expert\", 10).\nHas_strength(\"Janissary\", 5).\n.decl Answer()\nAnswer() :- Has_strength(\"Jujutsu expert\", strength1), Has_strength(\"Janissary\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1559, "answer": true, "completion": ".decl Has_population(Country:symbol, Population:float)\nHas_population(\"Bulgaria\", 8.7).\nHas_population(\"Russia\", 144.5).\nHas_population(\"USA\", 327.2).\n.decl Has_birth_rate(Country:symbol, Birth_rate:float)\nHas_birth_rate(\"Bulgaria\", 13.5).\nHas_birth_rate(\"Russia\", 13.5).\nHas_birth_rate(\"USA\", 13.5).\n.decl Answer()\nAnswer() :- Has_population(\"Bulgaria\", population1), Has_population(\"Russia\", population2), Has_population(\"USA\", population3), Has_birth_rate(\"Bulgaria\", birth_rate1), Has_birth_rate(\"Russia\", birth_rate2), Has_birth_rate(\"USA\", birth_rate3), population1 > population2, population1 > population3, birth_rate1 > birth_rate2, birth_rate1 > birth_rate3.\n.output Answer\n\n", "completions": [".decl Has_population(Country:symbol, Population:float)\nHas_population(\"Bulgaria\", 8.7).\nHas_population(\"Russia\", 144.5).\nHas_population(\"USA\", 327.2).\n.decl Has_birth_rate(Country:symbol, Birth_rate:float)\nHas_birth_rate(\"Bulgaria\", 13.5).\nHas_birth_rate(\"Russia\", 13.5).\nHas_birth_rate(\"USA\", 13.5).\n.decl Answer()\nAnswer() :- Has_population(\"Bulgaria\", population1), Has_population(\"Russia\", population2), Has_population(\"USA\", population3), Has_birth_rate(\"Bulgaria\", birth_rate1), Has_birth_rate(\"Russia\", birth_rate2), Has_birth_rate(\"USA\", birth_rate3), population1 > population2, population1 > population3, birth_rate1 > birth_rate2, birth_rate1 > birth_rate3.\n.output Answer\n\n"]}
{"id": 1560, "answer": true, "completion": ".decl Plays(Player:symbol, Sport:symbol)\nPlays(\"Sania Mirza\", \"badminton\").\nPlays(\"Sania Mirza\", \"tennis\").\nPlays(\"Sania Mirza\", \"table tennis\").\nPlays(\"Sania Mirza\", \"squash\").\nPlays(\"Sania Mirza\", \"cricket\").\nPlays(\"Sania Mirza\", \"basketball\").\nPlays(\"Sania Mirza\", \"golf\").\nPlays(\"Sania Mirza\", \"football\").\nPlays(\"Sania Mirza\", \"rugby\").\nPlays(\"Sania Mirza\", \"hockey\").\nPlays(\"Sania Mirza\", \"baseball\").\nPlays(\"Sania Mirza\", \"badminton\").\nPlays(\"Sania Mirza\", \"bowling\").\nPlays(\"Sania Mirza\", \"volleyball\").\nPlays(\"Sania Mirza\", \"rugby\").\nPlays(\"Sania Mirza\", \"soccer\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing", "completions": [".decl Plays(Player:symbol, Sport:symbol)\nPlays(\"Sania Mirza\", \"badminton\").\nPlays(\"Sania Mirza\", \"tennis\").\nPlays(\"Sania Mirza\", \"table tennis\").\nPlays(\"Sania Mirza\", \"squash\").\nPlays(\"Sania Mirza\", \"cricket\").\nPlays(\"Sania Mirza\", \"basketball\").\nPlays(\"Sania Mirza\", \"golf\").\nPlays(\"Sania Mirza\", \"football\").\nPlays(\"Sania Mirza\", \"rugby\").\nPlays(\"Sania Mirza\", \"hockey\").\nPlays(\"Sania Mirza\", \"baseball\").\nPlays(\"Sania Mirza\", \"badminton\").\nPlays(\"Sania Mirza\", \"bowling\").\nPlays(\"Sania Mirza\", \"volleyball\").\nPlays(\"Sania Mirza\", \"rugby\").\nPlays(\"Sania Mirza\", \"soccer\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing\").\nPlays(\"Sania Mirza\", \"shooting\").\nPlays(\"Sania Mirza\", \"canoeing\").\nPlays(\"Sania Mirza\", \"sailing\").\nPlays(\"Sania Mirza\", \"boxing\").\nPlays(\"Sania Mirza\", \"wrestling\").\nPlays(\"Sania Mirza\", \"gymnastics\").\nPlays(\"Sania Mirza\", \"handball\").\nPlays(\"Sania Mirza\", \"cycling\").\nPlays(\"Sania Mirza\", \"swimming\").\nPlays(\"Sania Mirza\", \"diving\").\nPlays(\"Sania Mirza\", \"archery\").\nPlays(\"Sania Mirza\", \"fencing"]}
{"id": 1561, "answer": false, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"pirate lieutenant\", \"navy officer\").\nIs_a(\"navy officer\", \"military officer\").\nIs_a(\"military officer\", \"person\").\n.decl Answer()\nAnswer() :- Is_a(\"pirate lieutenant\", person).\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"pirate lieutenant\", \"navy officer\").\nIs_a(\"navy officer\", \"military officer\").\nIs_a(\"military officer\", \"person\").\n.decl Answer()\nAnswer() :- Is_a(\"pirate lieutenant\", person).\n.output Answer\n\n"]}
{"id": 1562, "answer": true, "completion": ".decl Has_distance(Object:symbol, Distance:float)\nHas_distance(\"Hwasong-15\", 120000).\nHas_distance(\"Voyager 2\", 120000).\n.decl Answer()\nAnswer() :- Has_distance(\"Hwasong-15\", distance1), Has_distance(\"Voyager 2\", distance2), distance1 < distance2.\n.output Answer\n\n", "completions": [".decl Has_distance(Object:symbol, Distance:float)\nHas_distance(\"Hwasong-15\", 120000).\nHas_distance(\"Voyager 2\", 120000).\n.decl Answer()\nAnswer() :- Has_distance(\"Hwasong-15\", distance1), Has_distance(\"Voyager 2\", distance2), distance1 < distance2.\n.output Answer\n\n"]}
{"id": 1563, "answer": false, "completion": ".decl Has_top(Stove:symbol, Top:symbol)\nHas_top(\"electric stove\", \"glass\").\n.decl Is_made_of(Skillet:symbol, Material:symbol)\nIs_made_of(\"cast iron skillet\", \"iron\").\n.decl Answer()\nAnswer() :- Has_top(\"electric stove\", top), Is_made_of(\"cast iron skillet\", material), top == material.\n.output Answer\n\n", "completions": [".decl Has_top(Stove:symbol, Top:symbol)\nHas_top(\"electric stove\", \"glass\").\n.decl Is_made_of(Skillet:symbol, Material:symbol)\nIs_made_of(\"cast iron skillet\", \"iron\").\n.decl Answer()\nAnswer() :- Has_top(\"electric stove\", top), Is_made_of(\"cast iron skillet\", material), top == material.\n.output Answer\n\n"]}
{"id": 1564, "answer": true, "completion": ".decl Last_n_seconds(Event:symbol, N_seconds:float)\nLast_n_seconds(\"Conan the Barbarian\", 10).\nLast_n_seconds(\"Call of Duty\", 10).\n.decl Happens_every_n_seconds(Event:symbol, N_seconds:float)\nHappens_every_n_seconds(\"Conan the Barbarian\", 1).\nHappens_every_n_seconds(\"Call of Duty\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_seconds(\"Conan the Barbarian\", n_seconds1), Last_n_seconds(\"Call of Duty\", n_seconds2), n_seconds1 <= n_seconds2.\n.output Answer\n\n", "completions": [".decl Last_n_seconds(Event:symbol, N_seconds:float)\nLast_n_seconds(\"Conan the Barbarian\", 10).\nLast_n_seconds(\"Call of Duty\", 10).\n.decl Happens_every_n_seconds(Event:symbol, N_seconds:float)\nHappens_every_n_seconds(\"Conan the Barbarian\", 1).\nHappens_every_n_seconds(\"Call of Duty\", 1).\n.decl Answer()\nAnswer() :- Happens_every_n_seconds(\"Conan the Barbarian\", n_seconds1), Last_n_seconds(\"Call of Duty\", n_seconds2), n_seconds1 <= n_seconds2.\n.output Answer\n\n"]}
{"id": 1565, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"sesame seed\", 0.1).\nHas_density(\"human body\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"sesame seed\", density1), Has_density(\"human body\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"sesame seed\", 0.1).\nHas_density(\"human body\", 0.9).\n.decl Answer()\nAnswer() :- Has_density(\"sesame seed\", density1), Has_density(\"human body\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1566, "answer": false, "completion": ".decl Has_style(Person:symbol, Style:symbol)\nHas_style(\"Ariana Grande\", \"high fashion\").\nHas_style(\"Ariana Grande\", \"comfortable\").\n.decl Has_fashion_label(Person:symbol, Label:symbol)\nHas_fashion_label(\"Ariana Grande\", \"Vogue\").\nHas_fashion_label(\"Ariana Grande\", \"Elle\").\n.decl Answer()\nAnswer() :- Has_style(\"Ariana Grande\", style), Has_fashion_label(\"Ariana Grande\", label), style == \"comfortable\", label == \"Elle\".\n.output Answer\n\n", "completions": [".decl Has_style(Person:symbol, Style:symbol)\nHas_style(\"Ariana Grande\", \"high fashion\").\nHas_style(\"Ariana Grande\", \"comfortable\").\n.decl Has_fashion_label(Person:symbol, Label:symbol)\nHas_fashion_label(\"Ariana Grande\", \"Vogue\").\nHas_fashion_label(\"Ariana Grande\", \"Elle\").\n.decl Answer()\nAnswer() :- Has_style(\"Ariana Grande\", style), Has_fashion_label(\"Ariana Grande\", label), style == \"comfortable\", label == \"Elle\".\n.output Answer\n\n"]}
{"id": 1567, "answer": false, "completion": ".decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"Eric Clapton\", \"John Lennon\").\nHas_similar_taste(\"Eric Clapton\", \"Paul McCartney\").\nHas_similar_taste(\"Eric Clapton\", \"George Harrison\").\nHas_similar_taste(\"Eric Clapton\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"John Lennon\", \"Paul McCartney\").\nHas_similar_taste(\"John Lennon\", \"George Harrison\").\nHas_similar_taste(\"John Lennon\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"Paul McCartney\", \"George Harrison\").\nHas_similar_taste(\"Paul McCartney\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"George Harrison\", \"Ringo Starr\").\n.decl Answer()\nAnswer() :- Has_similar_taste(\"Eric Clapton\", person1), Has_similar_taste(person1, person2), Has_similar_taste(person2, person3), Has_similar_taste(person3, person4), Has_similar_taste(\"Eric Clapton\", person4).\n.output Answer\n\n", "completions": [".decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"Eric Clapton\", \"John Lennon\").\nHas_similar_taste(\"Eric Clapton\", \"Paul McCartney\").\nHas_similar_taste(\"Eric Clapton\", \"George Harrison\").\nHas_similar_taste(\"Eric Clapton\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"John Lennon\", \"Paul McCartney\").\nHas_similar_taste(\"John Lennon\", \"George Harrison\").\nHas_similar_taste(\"John Lennon\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"Paul McCartney\", \"George Harrison\").\nHas_similar_taste(\"Paul McCartney\", \"Ringo Starr\").\n.decl Has_similar_taste(Person_A:symbol, Person_B:symbol)\nHas_similar_taste(\"George Harrison\", \"Ringo Starr\").\n.decl Answer()\nAnswer() :- Has_similar_taste(\"Eric Clapton\", person1), Has_similar_taste(person1, person2), Has_similar_taste(person2, person3), Has_similar_taste(person3, person4), Has_similar_taste(\"Eric Clapton\", person4).\n.output Answer\n\n"]}
{"id": 1568, "answer": false, "completion": ".decl Is_analogous(Court_A:symbol, Court_B:symbol)\nIs_analogous(\"Supreme Court of the United States\", \"High Courts of Justice of Spain\").\n.decl Answer()\nAnswer() :- Is_analogous(\"Supreme Court of the United States\", \"High Courts of Justice of Spain\").\n.output Answer\n\n", "completions": [".decl Is_analogous(Court_A:symbol, Court_B:symbol)\nIs_analogous(\"Supreme Court of the United States\", \"High Courts of Justice of Spain\").\n.decl Answer()\nAnswer() :- Is_analogous(\"Supreme Court of the United States\", \"High Courts of Justice of Spain\").\n.output Answer\n\n"]}
{"id": 1569, "answer": false, "completion": ".decl Knows_a_sea_shanty(Pirate:symbol)\nKnows_a_sea_shanty(\"Jack Sparrow\").\n.decl Answer()\nAnswer() :- Knows_a_sea_shanty(\"Jack Sparrow\").\n.output Answer\n\n", "completions": [".decl Knows_a_sea_shanty(Pirate:symbol)\nKnows_a_sea_shanty(\"Jack Sparrow\").\n.decl Answer()\nAnswer() :- Knows_a_sea_shanty(\"Jack Sparrow\").\n.output Answer\n\n"]}
{"id": 1570, "answer": false, "completion": ".decl Rides(Animal:symbol, Vehicle:symbol)\nRides(\"kangaroo\", \"car\").\nRides(\"kangaroo\", \"motorcycle\").\nRides(\"kangaroo\", \"train\").\nRides(\"kangaroo\", \"airplane\").\n.decl Answer()\nAnswer() :- Rides(\"kangaroo\", vehicle), Rides(\"kangaroo\", vehicle2), vehicle != vehicle2.\n.output Answer\n\n", "completions": [".decl Rides(Animal:symbol, Vehicle:symbol)\nRides(\"kangaroo\", \"car\").\nRides(\"kangaroo\", \"motorcycle\").\nRides(\"kangaroo\", \"train\").\nRides(\"kangaroo\", \"airplane\").\n.decl Answer()\nAnswer() :- Rides(\"kangaroo\", vehicle), Rides(\"kangaroo\", vehicle2), vehicle != vehicle2.\n.output Answer\n\n"]}
{"id": 1571, "answer": false, "completion": ".decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Da Vinci\").\n.decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Michelangelo\").\n.decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Botticelli\").\n.decl Answer()\nAnswer() :- Was_patron_of(\"Lorenzo de Medici\", patron1), Was_patron_of(\"Lorenzo de Medici\", patron2), patron1 != patron2.\n.output Answer\n\n", "completions": [".decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Da Vinci\").\n.decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Michelangelo\").\n.decl Was_patron_of(Person:symbol, Patron:symbol)\nWas_patron_of(\"Lorenzo de Medici\", \"Botticelli\").\n.decl Answer()\nAnswer() :- Was_patron_of(\"Lorenzo de Medici\", patron1), Was_patron_of(\"Lorenzo de Medici\", patron2), patron1 != patron2.\n.output Answer\n\n"]}
{"id": 1572, "answer": true, "completion": ".decl Has_complexity(Game:symbol, Complexity:float)\nHas_complexity(\"chess\", 1).\nHas_complexity(\"Sicilian Defence\", 2).\n.decl Answer()\nAnswer() :- Has_complexity(\"Sicilian Defence\", complexity), Has_complexity(\"chess\", complexity1), complexity > complexity1.\n.output Answer\n\n", "completions": [".decl Has_complexity(Game:symbol, Complexity:float)\nHas_complexity(\"chess\", 1).\nHas_complexity(\"Sicilian Defence\", 2).\n.decl Answer()\nAnswer() :- Has_complexity(\"Sicilian Defence\", complexity), Has_complexity(\"chess\", complexity1), complexity > complexity1.\n.output Answer\n\n"]}
{"id": 1573, "answer": false, "completion": ".decl Ancestor(Person:symbol, Ancestor:symbol)\nAncestor(\"Genghis Khan\", \"Genghis Khan\").\nAncestor(\"Genghis Khan\", \"Chauburym\").\nAncestor(\"Chauburym\", \"Ablai Khan\").\nAncestor(\"Ablai Khan\", \"Tong Yabghu Qaghan\").\nAncestor(\"Tong Yabghu Qaghan\", \"Qutughu\").\nAncestor(\"Qutughu\", \"Qutughu\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu", "completions": [".decl Ancestor(Person:symbol, Ancestor:symbol)\nAncestor(\"Genghis Khan\", \"Genghis Khan\").\nAncestor(\"Genghis Khan\", \"Chauburym\").\nAncestor(\"Chauburym\", \"Ablai Khan\").\nAncestor(\"Ablai Khan\", \"Tong Yabghu Qaghan\").\nAncestor(\"Tong Yabghu Qaghan\", \"Qutughu\").\nAncestor(\"Qutughu\", \"Qutughu\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu Qaghan\").\nAncestor(\"Qutughu\", \"Tong Yabghu"]}
{"id": 1574, "answer": false, "completion": ".decl Has_efficiency(Car:symbol, Efficiency:float)\nHas_efficiency(\"Maruti Suzuki Baleno\", 0.8).\nHas_efficiency(\"Maruti Suzuki Alto\", 0.6).\nHas_efficiency(\"Maruti Suzuki Alto K10\", 0.7).\nHas_efficiency(\"Maruti Suzuki Swift\", 0.9).\nHas_efficiency(\"Maruti Suzuki Swift Dzire\", 0.9).\nHas_efficiency(\"Maruti Suzuki Vitara Brezza\", 0.9).\nHas_efficiency(\"Maruti Suzuki Vitara Brezza ZX\", 0.9).\nHas_efficiency(\"Maruti Suzuki Ciaz\", 0.9).\nHas_efficiency(\"Maruti Suzuki Ciaz VX\", 0.9).\nHas_efficiency(\"Maruti Suzuki S-Cross\", 0.9).\nHas_efficiency(\"Maruti Suzuki S-Cross ZX\", 0.9).\nHas_efficiency(\"Maruti Suzuki Baleno\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Bal", "completions": [".decl Has_efficiency(Car:symbol, Efficiency:float)\nHas_efficiency(\"Maruti Suzuki Baleno\", 0.8).\nHas_efficiency(\"Maruti Suzuki Alto\", 0.6).\nHas_efficiency(\"Maruti Suzuki Alto K10\", 0.7).\nHas_efficiency(\"Maruti Suzuki Swift\", 0.9).\nHas_efficiency(\"Maruti Suzuki Swift Dzire\", 0.9).\nHas_efficiency(\"Maruti Suzuki Vitara Brezza\", 0.9).\nHas_efficiency(\"Maruti Suzuki Vitara Brezza ZX\", 0.9).\nHas_efficiency(\"Maruti Suzuki Ciaz\", 0.9).\nHas_efficiency(\"Maruti Suzuki Ciaz VX\", 0.9).\nHas_efficiency(\"Maruti Suzuki S-Cross\", 0.9).\nHas_efficiency(\"Maruti Suzuki S-Cross ZX\", 0.9).\nHas_efficiency(\"Maruti Suzuki Baleno\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Baleno VX TRZ ZX\", 0.8).\nHas_efficiency(\"Maruti Suzuki Bal"]}
{"id": 1575, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Walkman\", \"1980s\").\nHappens_in_time(\"Hungarian Revolution\", \"1989\").\nHappens_in_time(\"Hungarian Revolution\", \"1956\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Walkman\", time), Happens_in_time(\"Hungarian Revolution\", time), time = \"1980s\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Walkman\", \"1980s\").\nHappens_in_time(\"Hungarian Revolution\", \"1989\").\nHappens_in_time(\"Hungarian Revolution\", \"1956\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Walkman\", time), Happens_in_time(\"Hungarian Revolution\", time), time = \"1980s\".\n.output Answer\n\n"]}
{"id": 1576, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Pantheon in Paris\", \"Pantheon\").\n.decl Answer()\nAnswer() :- Has_name(\"Pantheon in Paris\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Pantheon in Paris\", \"Pantheon\").\n.decl Answer()\nAnswer() :- Has_name(\"Pantheon in Paris\", name).\n.output Answer\n\n"]}
{"id": 1577, "answer": false, "completion": ".decl Has_tip_percentage(Country:symbol, Tip_percentage:float)\nHas_tip_percentage(\"USA\", 15).\nHas_tip_percentage(\"Canada\", 15).\nHas_tip_percentage(\"Italy\", 10).\nHas_tip_percentage(\"France\", 10).\nHas_tip_percentage(\"Germany\", 10).\nHas_tip_percentage(\"Japan\", 0).\n.decl Answer()\nAnswer() :- Has_tip_percentage(country, tip_percentage), tip_percentage = 0.\n.output Answer\n\n", "completions": [".decl Has_tip_percentage(Country:symbol, Tip_percentage:float)\nHas_tip_percentage(\"USA\", 15).\nHas_tip_percentage(\"Canada\", 15).\nHas_tip_percentage(\"Italy\", 10).\nHas_tip_percentage(\"France\", 10).\nHas_tip_percentage(\"Germany\", 10).\nHas_tip_percentage(\"Japan\", 0).\n.decl Answer()\nAnswer() :- Has_tip_percentage(country, tip_percentage), tip_percentage = 0.\n.output Answer\n\n"]}
{"id": 1578, "answer": false, "completion": ".decl Has_immunity(Person:symbol, Immunity:float)\nHas_immunity(\"Vice President of the United States\", 1).\n.decl Answer()\nAnswer() :- Has_immunity(\"Vice President of the United States\", immunity), immunity > 0.\n.output Answer\n\n", "completions": [".decl Has_immunity(Person:symbol, Immunity:float)\nHas_immunity(\"Vice President of the United States\", 1).\n.decl Answer()\nAnswer() :- Has_immunity(\"Vice President of the United States\", immunity), immunity > 0.\n.output Answer\n\n"]}
{"id": 1579, "answer": true, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Bruce Lee\", \"University of Washington\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"University of Washington\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Bruce Lee\", \"University of Washington\"), Ranks(\"University of Washington\", rank), rank > 1.\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Bruce Lee\", \"University of Washington\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"University of Washington\", 1).\n.decl Answer()\nAnswer() :- Graduates(\"Bruce Lee\", \"University of Washington\"), Ranks(\"University of Washington\", rank), rank > 1.\n.output Answer\n\n"]}
{"id": 1580, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"jackfruit\", 1).\nHas_mass(\"pear\", 0.6).\n.decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"pear\", 0.6).\nHas_strength(\"jackfruit\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"jackfruit\", mass), Has_strength(\"pear\", strength), mass > strength.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"jackfruit\", 1).\nHas_mass(\"pear\", 0.6).\n.decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"pear\", 0.6).\nHas_strength(\"jackfruit\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"jackfruit\", mass), Has_strength(\"pear\", strength), mass > strength.\n.output Answer\n\n"]}
{"id": 1581, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"earth completes orbit\", \"1799\").\nHappens_in_time(\"Napoleonic Wars\", \"1799\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"earth completes orbit\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"earth completes orbit\", time), Happens_in_time(\"Napoleonic Wars\", time), Happens_every_n_years(\"earth completes orbit\", n_years).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"earth completes orbit\", \"1799\").\nHappens_in_time(\"Napoleonic Wars\", \"1799\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"earth completes orbit\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"earth completes orbit\", time), Happens_in_time(\"Napoleonic Wars\", time), Happens_every_n_years(\"earth completes orbit\", n_years).\n.output Answer\n\n"]}
{"id": 1582, "answer": true, "completion": ".decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Yakutsk\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Siberia\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"South America\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Australia\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Africa\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Europe\").\n.decl Answer()\nAnswer() :- Is_in_region(\"Coca plant\", \"Yakutsk\").\n.output Answer\n\n", "completions": [".decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Yakutsk\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Siberia\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"South America\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Australia\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Africa\").\n.decl Is_in_region(Plant:symbol, Region:symbol)\nIs_in_region(\"Coca plant\", \"Europe\").\n.decl Answer()\nAnswer() :- Is_in_region(\"Coca plant\", \"Yakutsk\").\n.output Answer\n\n"]}
{"id": 1583, "answer": false, "completion": ".decl Related(Animal_A:symbol, Animal_B:symbol)\nRelated(\"alligator\", \"crocodile\").\nRelated(\"crocodile\", \"alligator\").\n.decl Answer()\nAnswer() :- Related(\"saltwater crocodile\", \"alligator\").\n.output Answer\n\n", "completions": [".decl Related(Animal_A:symbol, Animal_B:symbol)\nRelated(\"alligator\", \"crocodile\").\nRelated(\"crocodile\", \"alligator\").\n.decl Answer()\nAnswer() :- Related(\"saltwater crocodile\", \"alligator\").\n.output Answer\n\n"]}
{"id": 1584, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Rabbi\", \"Judaism\").\nBelongs_to_religion(\"Christian\", \"Christianity\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Rabbi\", religion), Belongs_to_religion(\"Christian\", religion).\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Rabbi\", \"Judaism\").\nBelongs_to_religion(\"Christian\", \"Christianity\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Rabbi\", religion), Belongs_to_religion(\"Christian\", religion).\n.output Answer\n\n"]}
{"id": 1585, "answer": false, "completion": ".decl Highest_recorded_temperature(City:symbol, Temperature:float)\nHighest_recorded_temperature(\"New York\", 100).\n.decl Has_temperature(City:symbol, Temperature:float)\nHas_temperature(\"New York\", 100).\n.decl Answer()\nAnswer() :- Highest_recorded_temperature(\"New York\", highest_recorded_temperature), Has_temperature(\"New York\", temperature), temperature > highest_recorded_temperature.\n.output Answer\n\n", "completions": [".decl Highest_recorded_temperature(City:symbol, Temperature:float)\nHighest_recorded_temperature(\"New York\", 100).\n.decl Has_temperature(City:symbol, Temperature:float)\nHas_temperature(\"New York\", 100).\n.decl Answer()\nAnswer() :- Highest_recorded_temperature(\"New York\", highest_recorded_temperature), Has_temperature(\"New York\", temperature), temperature > highest_recorded_temperature.\n.output Answer\n\n"]}
{"id": 1586, "answer": false, "completion": ".decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Barack Obama\", \"Mayor\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"human\").\nIs_a(\"Barack Obama\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Bloomberg\", \"Mayor\").\nIs_a(\"Michael Bloomberg\", \"human\").\nIs_a(\"Michael Bloomberg\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Dukakis\", \"Governor\").\nIs_a(\"Michael Dukakis\", \"human\").\nIs_a(\"Michael Dukakis\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Jordan\", \"NBA player\").\nIs_a(\"Michael Jordan\", \"human\").\nIs_a(\"Michael Jordan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Powell\", \"Chairman\").\nIs_a(\"Michael Powell\", \"human\").\nIs_a(\"Michael Powell\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Schumacher\", \"Formula One driver\").\nIs_a(\"Michael Schumacher\", \"human\").\nIs_a(\"Michael Schumacher\", \"German\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Scott\", \"Manager\").\nIs_a(\"Michael Scott\", \"human\").\nIs_a(\"Michael Scott\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Strahan\", \"Giants player\").\nIs_a(\"Michael Strahan\", \"human\").\nIs_a(\"Michael Strahan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Wacha\", \"pitcher\").\nIs_a(\"Michael Wacha\", \"human\").\nIs_a(\"Michael Wacha\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Young\", \"Texas Ranger\").\nIs_a(\"Michael Young\", \"human\").\nIs_a(\"Michael Young\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Bloomberg\", \"human\").\nIs_a(\"Michael Bloomberg\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Dukakis\", \"human\").\nIs_a(\"Michael Dukakis\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Jordan\", \"human\").\nIs_a(\"Michael Jordan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Powell\", \"human\").\nIs_a(\"Michael Powell\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Schumacher\", \"human\").\nIs_a(\"Michael Schumacher\", \"German\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Scott\", \"human\").\nIs_a(\"Michael Scott\", \"American\").\n.decl Is_a(Person:symbol, Type:sy", "completions": [".decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Barack Obama\", \"Mayor\").\nIs_a(\"Barack Obama\", \"President\").\nIs_a(\"Barack Obama\", \"human\").\nIs_a(\"Barack Obama\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Bloomberg\", \"Mayor\").\nIs_a(\"Michael Bloomberg\", \"human\").\nIs_a(\"Michael Bloomberg\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Dukakis\", \"Governor\").\nIs_a(\"Michael Dukakis\", \"human\").\nIs_a(\"Michael Dukakis\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Jordan\", \"NBA player\").\nIs_a(\"Michael Jordan\", \"human\").\nIs_a(\"Michael Jordan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Powell\", \"Chairman\").\nIs_a(\"Michael Powell\", \"human\").\nIs_a(\"Michael Powell\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Schumacher\", \"Formula One driver\").\nIs_a(\"Michael Schumacher\", \"human\").\nIs_a(\"Michael Schumacher\", \"German\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Scott\", \"Manager\").\nIs_a(\"Michael Scott\", \"human\").\nIs_a(\"Michael Scott\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Strahan\", \"Giants player\").\nIs_a(\"Michael Strahan\", \"human\").\nIs_a(\"Michael Strahan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Wacha\", \"pitcher\").\nIs_a(\"Michael Wacha\", \"human\").\nIs_a(\"Michael Wacha\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Young\", \"Texas Ranger\").\nIs_a(\"Michael Young\", \"human\").\nIs_a(\"Michael Young\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Bloomberg\", \"human\").\nIs_a(\"Michael Bloomberg\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Dukakis\", \"human\").\nIs_a(\"Michael Dukakis\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Jordan\", \"human\").\nIs_a(\"Michael Jordan\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Powell\", \"human\").\nIs_a(\"Michael Powell\", \"American\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Schumacher\", \"human\").\nIs_a(\"Michael Schumacher\", \"German\").\n.decl Is_a(Person:symbol, Type:symbol)\nIs_a(\"Michael Scott\", \"human\").\nIs_a(\"Michael Scott\", \"American\").\n.decl Is_a(Person:symbol, Type:sy"]}
{"id": 1587, "answer": false, "completion": ".decl Near(Place_A:symbol, Place_B:symbol)\nNear(\"Nepal\", \"India\").\n.decl Answer()\nAnswer() :- Near(\"Nepal\", \"India\").\n.output Answer\n\n", "completions": [".decl Near(Place_A:symbol, Place_B:symbol)\nNear(\"Nepal\", \"India\").\n.decl Answer()\nAnswer() :- Near(\"Nepal\", \"India\").\n.output Answer\n\n"]}
{"id": 1588, "answer": true, "completion": ".decl Has_indoor_outdoor(Event:symbol, Indoor_outdoor:symbol)\nHas_indoor_outdoor(\"rowing competitions\", \"indoor\").\n.decl Answer()\nAnswer() :- Has_indoor_outdoor(\"rowing competitions\", indoor_outdoor), indoor_outdoor = \"indoor\".\n.output Answer\n\n", "completions": [".decl Has_indoor_outdoor(Event:symbol, Indoor_outdoor:symbol)\nHas_indoor_outdoor(\"rowing competitions\", \"indoor\").\n.decl Answer()\nAnswer() :- Has_indoor_outdoor(\"rowing competitions\", indoor_outdoor), indoor_outdoor = \"indoor\".\n.output Answer\n\n"]}
{"id": 1589, "answer": false, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Jamie Brewer\", \"United States Naval Academy\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"United States Naval Academy\", 1).\nRanks(\"United States Naval Academy\", 2).\n.decl Answer()\nAnswer() :- Graduates(\"Jamie Brewer\", \"United States Naval Academy\").\nAnswer() :- Graduates(\"Jamie Brewer\", university2), Ranks(university2, rank2), Ranks(\"United States Naval Academy\", rank1), rank2 <= rank1.\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Jamie Brewer\", \"United States Naval Academy\").\n.decl Ranks(University:symbol, Rank:float)\nRanks(\"United States Naval Academy\", 1).\nRanks(\"United States Naval Academy\", 2).\n.decl Answer()\nAnswer() :- Graduates(\"Jamie Brewer\", \"United States Naval Academy\").\nAnswer() :- Graduates(\"Jamie Brewer\", university2), Ranks(university2, rank2), Ranks(\"United States Naval Academy\", rank1), rank2 <= rank1.\n.output Answer\n\n"]}
{"id": 1590, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"asteroid\", 0.3).\nHas_density(\"city\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"asteroid\", density1), Has_density(\"city\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"asteroid\", 0.3).\nHas_density(\"city\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"asteroid\", density1), Has_density(\"city\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1591, "answer": true, "completion": ".decl Has_n_oscars(Person:symbol, N_oscars:float)\nHas_n_oscars(\"Walt Disney\", 3).\n.decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Walt Disney\", 3).\n.decl Answer()\nAnswer() :- Has_n_oscars(\"Walt Disney\", n_oscars), Has_n_nominations(\"Walt Disney\", n_nominations), n_oscars > n_nominations.\n.output Answer\n\n", "completions": [".decl Has_n_oscars(Person:symbol, N_oscars:float)\nHas_n_oscars(\"Walt Disney\", 3).\n.decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Walt Disney\", 3).\n.decl Answer()\nAnswer() :- Has_n_oscars(\"Walt Disney\", n_oscars), Has_n_nominations(\"Walt Disney\", n_nominations), n_oscars > n_nominations.\n.output Answer\n\n"]}
{"id": 1592, "answer": true, "completion": ".decl Has_sold_out(Event:symbol, Location:symbol)\nHas_sold_out(\"Billy Joel\", \"Astana Arena\").\n.decl Answer()\nAnswer() :- Has_sold_out(\"Billy Joel\", location).\n.output Answer\n\n", "completions": [".decl Has_sold_out(Event:symbol, Location:symbol)\nHas_sold_out(\"Billy Joel\", \"Astana Arena\").\n.decl Answer()\nAnswer() :- Has_sold_out(\"Billy Joel\", location).\n.output Answer\n\n"]}
{"id": 1593, "answer": false, "completion": ".decl Is_part_of(Country:symbol, Continent:symbol)\nIs_part_of(\"Mesopotamia\", \"Asia\").\nIs_part_of(\"China\", \"Asia\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Mesopotamia\", continent), Is_part_of(\"China\", continent).\n.output Answer\n\n", "completions": [".decl Is_part_of(Country:symbol, Continent:symbol)\nIs_part_of(\"Mesopotamia\", \"Asia\").\nIs_part_of(\"China\", \"Asia\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Mesopotamia\", continent), Is_part_of(\"China\", continent).\n.output Answer\n\n"]}
{"id": 1594, "answer": true, "completion": ".decl Has_excommunication(Person:symbol, Excommunication:symbol)\nHas_excommunication(\"Martin Luther King\", \"excommunicated\").\nHas_excommunication(\"Martin Luther King\", \"not excommunicated\").\n.decl Answer()\nAnswer() :- Has_excommunication(\"Martin Luther King\", excommunication).\n.output Answer\n\n", "completions": [".decl Has_excommunication(Person:symbol, Excommunication:symbol)\nHas_excommunication(\"Martin Luther King\", \"excommunicated\").\nHas_excommunication(\"Martin Luther King\", \"not excommunicated\").\n.decl Answer()\nAnswer() :- Has_excommunication(\"Martin Luther King\", excommunication).\n.output Answer\n\n"]}
{"id": 1595, "answer": true, "completion": ".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"John\", \"car\").\nHas_property(\"Mary\", \"car\").\nHas_property(\"John\", \"house\").\nHas_property(\"Mary\", \"house\").\n.decl Works_in_district(Person:symbol, District:symbol)\nWorks_in_district(\"John\", \"management\").\nWorks_in_district(\"Mary\", \"management\").\n.decl Answer()\nAnswer() :- Has_property(person, \"car\"), Works_in_district(person, district).\n.output Answer\n\n", "completions": [".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"John\", \"car\").\nHas_property(\"Mary\", \"car\").\nHas_property(\"John\", \"house\").\nHas_property(\"Mary\", \"house\").\n.decl Works_in_district(Person:symbol, District:symbol)\nWorks_in_district(\"John\", \"management\").\nWorks_in_district(\"Mary\", \"management\").\n.decl Answer()\nAnswer() :- Has_property(person, \"car\"), Works_in_district(person, district).\n.output Answer\n\n"]}
{"id": 1596, "answer": true, "completion": ".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"louvre\", 0.5).\nHas_strength(\"nitric acid\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"nitric acid\", strength), Has_strength(\"louvre\", strength).\n.output Answer\n\n", "completions": [".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"louvre\", 0.5).\nHas_strength(\"nitric acid\", 0.5).\n.decl Answer()\nAnswer() :- Has_strength(\"nitric acid\", strength), Has_strength(\"louvre\", strength).\n.output Answer\n\n"]}
{"id": 1597, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hornets\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"oceanographers\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"hornets\", n_members1), Has_n_members(\"oceanographers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"hornets\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"oceanographers\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"hornets\", n_members1), Has_n_members(\"oceanographers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1598, "answer": false, "completion": ".decl Wears(Person:symbol, Brand:symbol)\nWears(\"Jackie Kennedy\", \"Dolce & Gabbana\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jackie Kennedy's husband's inauguration\", \"January 20, 1961\").\n.decl Answer()\nAnswer() :- Wears(\"Jackie Kennedy\", brand), Happens_in_time(\"Jackie Kennedy's husband's inauguration\", time), brand = \"Dolce & Gabbana\".\n.output Answer\n\n", "completions": [".decl Wears(Person:symbol, Brand:symbol)\nWears(\"Jackie Kennedy\", \"Dolce & Gabbana\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jackie Kennedy's husband's inauguration\", \"January 20, 1961\").\n.decl Answer()\nAnswer() :- Wears(\"Jackie Kennedy\", brand), Happens_in_time(\"Jackie Kennedy's husband's inauguration\", time), brand = \"Dolce & Gabbana\".\n.output Answer\n\n"]}
{"id": 1599, "answer": true, "completion": ".decl Has_n_loggers(Forest:symbol, N_loggers:float)\nHas_n_loggers(\"Amazon rainforest\", 100000).\nHas_n_loggers(\"Congo rainforest\", 100000).\n.decl Has_n_trees(Forest:symbol, N_trees:float)\nHas_n_trees(\"Amazon rainforest\", 1000000).\nHas_n_trees(\"Congo rainforest\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_loggers(forest, n_loggers), Has_n_trees(forest, n_trees), n_loggers > n_trees.\n.output Answer\n\n", "completions": [".decl Has_n_loggers(Forest:symbol, N_loggers:float)\nHas_n_loggers(\"Amazon rainforest\", 100000).\nHas_n_loggers(\"Congo rainforest\", 100000).\n.decl Has_n_trees(Forest:symbol, N_trees:float)\nHas_n_trees(\"Amazon rainforest\", 1000000).\nHas_n_trees(\"Congo rainforest\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_loggers(forest, n_loggers), Has_n_trees(forest, n_trees), n_loggers > n_trees.\n.output Answer\n\n"]}
{"id": 1600, "answer": false, "completion": ".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Arnold Schwarzenegger\", 1).\nHas_strength(\"Hafþór Björnsson\", 1).\n.decl Answer()\nAnswer() :- Has_strength(\"Arnold Schwarzenegger\", strength1), Has_strength(\"Hafþór Björnsson\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Person:symbol, Strength:float)\nHas_strength(\"Arnold Schwarzenegger\", 1).\nHas_strength(\"Hafþór Björnsson\", 1).\n.decl Answer()\nAnswer() :- Has_strength(\"Arnold Schwarzenegger\", strength1), Has_strength(\"Hafþór Björnsson\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1601, "answer": true, "completion": ".decl Is_number(Number:symbol)\nIs_number(\"666\").\n.decl Is_religion(Religion:symbol)\nIs_religion(\"Christianity\").\n.decl Answer()\nAnswer() :- Is_number(\"666\"), Is_religion(\"Christianity\").\n.output Answer\n\n", "completions": [".decl Is_number(Number:symbol)\nIs_number(\"666\").\n.decl Is_religion(Religion:symbol)\nIs_religion(\"Christianity\").\n.decl Answer()\nAnswer() :- Is_number(\"666\"), Is_religion(\"Christianity\").\n.output Answer\n\n"]}
{"id": 1602, "answer": false, "completion": ".decl Has_play(Person:symbol, Play:symbol)\nHas_play(\"Elizabeth I of England\", \"Dido, Queen of Carthage\").\n.decl Has_seen(Person:symbol, Play:symbol)\nHas_seen(\"Elizabeth I of England\", \"Dido, Queen of Carthage\").\n.decl Answer()\nAnswer() :- Has_play(\"Elizabeth I of England\", play), Has_seen(\"Elizabeth I of England\", play).\n.output Answer\n\n", "completions": [".decl Has_play(Person:symbol, Play:symbol)\nHas_play(\"Elizabeth I of England\", \"Dido, Queen of Carthage\").\n.decl Has_seen(Person:symbol, Play:symbol)\nHas_seen(\"Elizabeth I of England\", \"Dido, Queen of Carthage\").\n.decl Answer()\nAnswer() :- Has_play(\"Elizabeth I of England\", play), Has_seen(\"Elizabeth I of England\", play).\n.output Answer\n\n"]}
{"id": 1603, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"European otter\", 1).\nHas_n_members(\"saltwater crocodile\", 70).\n.decl Has_n_members_in_group(Animal:symbol, Group:symbol, N_members:float)\nHas_n_members_in_group(\"European otter\", \"endangered species\", 1).\nHas_n_members_in_group(\"saltwater crocodile\", \"endangered species\", 70).\n.decl Answer()\nAnswer() :- Has_n_members(\"saltwater crocodile\", n_members1), Has_n_members_in_group(\"European otter\", group, n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"European otter\", 1).\nHas_n_members(\"saltwater crocodile\", 70).\n.decl Has_n_members_in_group(Animal:symbol, Group:symbol, N_members:float)\nHas_n_members_in_group(\"European otter\", \"endangered species\", 1).\nHas_n_members_in_group(\"saltwater crocodile\", \"endangered species\", 70).\n.decl Answer()\nAnswer() :- Has_n_members(\"saltwater crocodile\", n_members1), Has_n_members_in_group(\"European otter\", group, n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1604, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"giant panda\", \"black and white\").\nHas_color(\"yin yang\", \"black and white\").\n.decl Answer()\nAnswer() :- Has_color(\"giant panda\", color), Has_color(\"yin yang\", color), color != \"black and white\".\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"giant panda\", \"black and white\").\nHas_color(\"yin yang\", \"black and white\").\n.decl Answer()\nAnswer() :- Has_color(\"giant panda\", color), Has_color(\"yin yang\", color), color != \"black and white\".\n.output Answer\n\n"]}
{"id": 1605, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Persian Gulf War\", \"1990\").\nHappens_in_time(\"Elizabeth II's coronation\", \"1953\").\n.decl Is_queen(Person:symbol, Queen:symbol)\nIs_queen(\"Elizabeth II\", \"Elizabeth II\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Persian Gulf War\", time), Happens_in_time(\"Elizabeth II's coronation\", time), Is_queen(\"Elizabeth II\", queen).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Persian Gulf War\", \"1990\").\nHappens_in_time(\"Elizabeth II's coronation\", \"1953\").\n.decl Is_queen(Person:symbol, Queen:symbol)\nIs_queen(\"Elizabeth II\", \"Elizabeth II\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Persian Gulf War\", time), Happens_in_time(\"Elizabeth II's coronation\", time), Is_queen(\"Elizabeth II\", queen).\n.output Answer\n\n"]}
{"id": 1606, "answer": false, "completion": ".decl Has_effect(Drug:symbol, Effect:symbol)\nHas_effect(\"Modafinil\", \"suicide\").\n.decl Answer()\nAnswer() :- Has_effect(\"Modafinil\", effect), effect = \"suicide\".\n.output Answer\n\n", "completions": [".decl Has_effect(Drug:symbol, Effect:symbol)\nHas_effect(\"Modafinil\", \"suicide\").\n.decl Answer()\nAnswer() :- Has_effect(\"Modafinil\", effect), effect = \"suicide\".\n.output Answer\n\n"]}
{"id": 1607, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members), n_members > 5.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members), n_members > 5.\n.output Answer\n\n"]}
{"id": 1608, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Arnold Schwarzenegger\", 1.85).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Arnold Schwarzenegger\", 100).\n.decl Answer()\nAnswer() :- Has_height(\"Arnold Schwarzenegger\", height), Has_weight(\"Arnold Schwarzenegger\", weight), weight > height.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Arnold Schwarzenegger\", 1.85).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Arnold Schwarzenegger\", 100).\n.decl Answer()\nAnswer() :- Has_height(\"Arnold Schwarzenegger\", height), Has_weight(\"Arnold Schwarzenegger\", weight), weight > height.\n.output Answer\n\n"]}
{"id": 1609, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"atheism\", 0).\nHas_n_members(\"Christianity\", 0).\n.decl Answer()\nAnswer() :- Has_n_members(\"atheism\", n_members1), Has_n_members(\"Christianity\", n_members2), n_members1 > n_members2, n_members1 > 0, n_members2 > 0.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"atheism\", 0).\nHas_n_members(\"Christianity\", 0).\n.decl Answer()\nAnswer() :- Has_n_members(\"atheism\", n_members1), Has_n_members(\"Christianity\", n_members2), n_members1 > n_members2, n_members1 > 0, n_members2 > 0.\n.output Answer\n\n"]}
{"id": 1610, "answer": true, "completion": ".decl Has_setting(Film:symbol, Setting:symbol)\nHas_setting(\"Steven Spielberg's 1998 film\", \"World War I\").\n.decl Has_setting(Film:symbol, Setting:symbol)\nHas_setting(\"Steven Spielberg's 1998 film\", \"World War II\").\n.decl Answer()\nAnswer() :- Has_setting(\"Steven Spielberg's 1998 film\", setting1), Has_setting(\"War Horse\", setting2), setting1 > setting2.\n.output Answer\n\n", "completions": [".decl Has_setting(Film:symbol, Setting:symbol)\nHas_setting(\"Steven Spielberg's 1998 film\", \"World War I\").\n.decl Has_setting(Film:symbol, Setting:symbol)\nHas_setting(\"Steven Spielberg's 1998 film\", \"World War II\").\n.decl Answer()\nAnswer() :- Has_setting(\"Steven Spielberg's 1998 film\", setting1), Has_setting(\"War Horse\", setting2), setting1 > setting2.\n.output Answer\n\n"]}
{"id": 1611, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"bear pelts collection\", \"Autumn\").\nHappens_in_time(\"bear pelts collection\", \"Winter\").\nHappens_in_time(\"bear pelts collection\", \"Spring\").\nHappens_in_time(\"bear pelts collection\", \"Summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"September\", \"Autumn\").\nIn_season(\"October\", \"Autumn\").\nIn_season(\"November\", \"Autumn\").\nIn_season(\"December\", \"Winter\").\nIn_season(\"January\", \"Winter\").\nIn_season(\"February\", \"Winter\").\nIn_season(\"March\", \"Spring\").\nIn_season(\"April\", \"Spring\").\nIn_season(\"May\", \"Spring\").\nIn_season(\"June\", \"Summer\").\nIn_season(\"July\", \"Summer\").\nIn_season(\"August\", \"Summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"bear pelts collection\", season), Happens_in_time(\"bear pelts collection\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"bear pelts collection\", \"Autumn\").\nHappens_in_time(\"bear pelts collection\", \"Winter\").\nHappens_in_time(\"bear pelts collection\", \"Spring\").\nHappens_in_time(\"bear pelts collection\", \"Summer\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"September\", \"Autumn\").\nIn_season(\"October\", \"Autumn\").\nIn_season(\"November\", \"Autumn\").\nIn_season(\"December\", \"Winter\").\nIn_season(\"January\", \"Winter\").\nIn_season(\"February\", \"Winter\").\nIn_season(\"March\", \"Spring\").\nIn_season(\"April\", \"Spring\").\nIn_season(\"May\", \"Spring\").\nIn_season(\"June\", \"Summer\").\nIn_season(\"July\", \"Summer\").\nIn_season(\"August\", \"Summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"bear pelts collection\", season), Happens_in_time(\"bear pelts collection\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1612, "answer": false, "completion": ".decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Morty\").\nHas_parents(\"Morty\", \"Jerry\").\nHas_parents(\"Jerry\", \"Beth\").\nHas_parents(\"Beth\", \"Summer\").\nHas_parents(\"Summer\", \"Morty\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Morty\", \"Rick\").\nHas_parents(\"Jerry\", \"Morty\").\nHas_parents(\"Beth\", \"Jerry\").\nHas_parents(\"Summer\", \"Beth\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Beth\").\nHas_parents(\"Morty\", \"Rick\").\nHas_parents(\"Jerry\", \"Rick\").\nHas_parents(\"Beth\", \"Rick\").\nHas_parents(\"Summer\", \"Rick\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Summer\").\nHas_parents(\"Morty\", \"Summer\").\nHas_parents(\"Jerry\", \"Summer\").\nHas_parents(\"Beth\", \"Summer\").\nHas_parents(\"Summer\", \"Summer\").\n.decl Answer()\nAnswer() :- Has_parents(\"Rick\", parents1), Has_parents(\"Morty\", parents2), Has_parents(\"Jerry\", parents3), Has_parents(\"Beth\", parents4), Has_parents(\"Summer\", parents5), parents1 = parents2, parents2 = parents3, parents3 = parents4, parents4 = parents5.\n.output Answer\n\n", "completions": [".decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Morty\").\nHas_parents(\"Morty\", \"Jerry\").\nHas_parents(\"Jerry\", \"Beth\").\nHas_parents(\"Beth\", \"Summer\").\nHas_parents(\"Summer\", \"Morty\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Morty\", \"Rick\").\nHas_parents(\"Jerry\", \"Morty\").\nHas_parents(\"Beth\", \"Jerry\").\nHas_parents(\"Summer\", \"Beth\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Beth\").\nHas_parents(\"Morty\", \"Rick\").\nHas_parents(\"Jerry\", \"Rick\").\nHas_parents(\"Beth\", \"Rick\").\nHas_parents(\"Summer\", \"Rick\").\n.decl Has_parents(Person:symbol, Parents:symbol)\nHas_parents(\"Rick\", \"Summer\").\nHas_parents(\"Morty\", \"Summer\").\nHas_parents(\"Jerry\", \"Summer\").\nHas_parents(\"Beth\", \"Summer\").\nHas_parents(\"Summer\", \"Summer\").\n.decl Answer()\nAnswer() :- Has_parents(\"Rick\", parents1), Has_parents(\"Morty\", parents2), Has_parents(\"Jerry\", parents3), Has_parents(\"Beth\", parents4), Has_parents(\"Summer\", parents5), parents1 = parents2, parents2 = parents3, parents3 = parents4, parents4 = parents5.\n.output Answer\n\n"]}
{"id": 1613, "answer": true, "completion": ".decl Has_accessibility(Object:symbol, Accessibility:symbol)\nHas_accessibility(\"American wheelchair users\", \"ADA\").\n.decl Answer()\nAnswer() :- Has_accessibility(\"American wheelchair users\", accessibility), accessibility == \"ADA\".\n.output Answer\n\n", "completions": [".decl Has_accessibility(Object:symbol, Accessibility:symbol)\nHas_accessibility(\"American wheelchair users\", \"ADA\").\n.decl Answer()\nAnswer() :- Has_accessibility(\"American wheelchair users\", accessibility), accessibility == \"ADA\".\n.output Answer\n\n"]}
{"id": 1614, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"astrophotography\", \"summer\").\nHappens_in_time(\"astrophotography\", \"winter\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"June\", \"summer\").\nIn_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"astrophotography\", season), Happens_in_time(\"astrophotography\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"astrophotography\", \"summer\").\nHappens_in_time(\"astrophotography\", \"winter\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"June\", \"summer\").\nIn_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"astrophotography\", season), Happens_in_time(\"astrophotography\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 1615, "answer": true, "completion": ".decl Has_n_siblings(Person:symbol, N_siblings:float)\nHas_n_siblings(\"Jane Austen\", 4).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Jane Austen\", 8).\n.decl Answer()\nAnswer() :- Has_n_siblings(\"Jane Austen\", n_siblings), Has_n_children(\"Jane Austen\", n_children), n_siblings > n_children.\n.output Answer\n\n", "completions": [".decl Has_n_siblings(Person:symbol, N_siblings:float)\nHas_n_siblings(\"Jane Austen\", 4).\n.decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Jane Austen\", 8).\n.decl Answer()\nAnswer() :- Has_n_siblings(\"Jane Austen\", n_siblings), Has_n_children(\"Jane Austen\", n_children), n_siblings > n_children.\n.output Answer\n\n"]}
{"id": 1616, "answer": false, "completion": ".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Gomer Pyle\", 1).\nHas_rank(\"lieutenant\", 2).\n.decl Answer()\nAnswer() :- Has_rank(\"Gomer Pyle\", rank1), Has_rank(\"lieutenant\", rank2), rank1 >= rank2.\n.output Answer\n\n", "completions": [".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Gomer Pyle\", 1).\nHas_rank(\"lieutenant\", 2).\n.decl Answer()\nAnswer() :- Has_rank(\"Gomer Pyle\", rank1), Has_rank(\"lieutenant\", rank2), rank1 >= rank2.\n.output Answer\n\n"]}
{"id": 1617, "answer": true, "completion": ".decl Has_surface_temperature(Planet:symbol, Temperature:float)\nHas_surface_temperature(\"Venus\", 462).\n.decl Has_virus(Virus:symbol)\nHas_virus(\"Herpes simplex virus\").\n.decl Answer()\nAnswer() :- Has_surface_temperature(\"Venus\", temperature), Has_virus(\"Herpes simplex virus\"), temperature >= 273.\n.output Answer\n\n", "completions": [".decl Has_surface_temperature(Planet:symbol, Temperature:float)\nHas_surface_temperature(\"Venus\", 462).\n.decl Has_virus(Virus:symbol)\nHas_virus(\"Herpes simplex virus\").\n.decl Answer()\nAnswer() :- Has_surface_temperature(\"Venus\", temperature), Has_virus(\"Herpes simplex virus\"), temperature >= 273.\n.output Answer\n\n"]}
{"id": 1618, "answer": true, "completion": ".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"pig\", \"pig\").\nHas_meaning(\"latin\", \"latin\").\n.decl Has_translation(Word:symbol, Translation:symbol)\nHas_translation(\"pig\", \"igpay\").\nHas_translation(\"latin\", \"atinlay\").\n.decl Answer()\nAnswer() :- Has_meaning(\"pig\", meaning), Has_meaning(\"latin\", meaning), Has_translation(\"pig\", translation), Has_translation(\"latin\", translation).\n.output Answer\n\n", "completions": [".decl Has_meaning(Word:symbol, Meaning:symbol)\nHas_meaning(\"pig\", \"pig\").\nHas_meaning(\"latin\", \"latin\").\n.decl Has_translation(Word:symbol, Translation:symbol)\nHas_translation(\"pig\", \"igpay\").\nHas_translation(\"latin\", \"atinlay\").\n.decl Answer()\nAnswer() :- Has_meaning(\"pig\", meaning), Has_meaning(\"latin\", meaning), Has_translation(\"pig\", translation), Has_translation(\"latin\", translation).\n.output Answer\n\n"]}
{"id": 1619, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Matt Damon\", 1.8).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Matt Damon\", 80).\n.decl Has_fear(Person:symbol, Fear:symbol)\nHas_fear(\"Matt Damon\", \"parachuting\").\n.decl Answer()\nAnswer() :- Has_height(\"Matt Damon\", height), Has_weight(\"Matt Damon\", weight), weight > height.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Matt Damon\", 1.8).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Matt Damon\", 80).\n.decl Has_fear(Person:symbol, Fear:symbol)\nHas_fear(\"Matt Damon\", \"parachuting\").\n.decl Answer()\nAnswer() :- Has_height(\"Matt Damon\", height), Has_weight(\"Matt Damon\", weight), weight > height.\n.output Answer\n\n"]}
{"id": 1620, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pandemic\", \"April\").\nHappens_in_time(\"pandemic\", \"May\").\nHappens_in_time(\"pandemic\", \"June\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"door to door advertising\", \"USA\").\nHappens_in_place(\"door to door advertising\", \"Canada\").\nHappens_in_place(\"door to door advertising\", \"Europe\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pandemic\", time), Happens_in_place(\"door to door advertising\", place), time == place.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"pandemic\", \"April\").\nHappens_in_time(\"pandemic\", \"May\").\nHappens_in_time(\"pandemic\", \"June\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"door to door advertising\", \"USA\").\nHappens_in_place(\"door to door advertising\", \"Canada\").\nHappens_in_place(\"door to door advertising\", \"Europe\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"pandemic\", time), Happens_in_place(\"door to door advertising\", place), time == place.\n.output Answer\n\n"]}
{"id": 1621, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Ivan the Terrible\", \"Byzantine calendar\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Ivan the Terrible\", \"Byzantine calendar\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Ivan the Terrible\", \"Byzantine calendar\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Ivan the Terrible\", \"Byzantine calendar\").\n.output Answer\n\n"]}
{"id": 1622, "answer": true, "completion": ".decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"onion\").\n.decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"salt\").\n.decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"pepper\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"The Onion\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"onion\").\n.decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"salt\").\n.decl Has_ingredient(Recipe:symbol, Ingredient:symbol)\nHas_ingredient(\"The Onion\", \"pepper\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"The Onion\", ingredient).\n.output Answer\n\n"]}
{"id": 1623, "answer": true, "completion": ".decl Lives_in(Person:symbol, Place:symbol)\nLives_in(\"The Doctor\", \"Gallifrey\").\nLives_in(\"Rose Tyler\", \"Earth\").\nLives_in(\"Clara Oswald\", \"Earth\").\n.decl Answer()\nAnswer() :- Lives_in(\"The Doctor\", place), Lives_in(\"Rose Tyler\", place), Lives_in(\"Clara Oswald\", place).\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, Place:symbol)\nLives_in(\"The Doctor\", \"Gallifrey\").\nLives_in(\"Rose Tyler\", \"Earth\").\nLives_in(\"Clara Oswald\", \"Earth\").\n.decl Answer()\nAnswer() :- Lives_in(\"The Doctor\", place), Lives_in(\"Rose Tyler\", place), Lives_in(\"Clara Oswald\", place).\n.output Answer\n\n"]}
{"id": 1624, "answer": false, "completion": ".decl Held_position(Person:symbol, Position:symbol)\nHeld_position(\"Barak Obama\", \"President\").\nHeld_position(\"Francois Mitterrand\", \"President\").\n.decl Answer()\nAnswer() :- Held_position(\"Francois Mitterrand\", position), Held_position(\"Barak Obama\", position).\n.output Answer\n\n", "completions": [".decl Held_position(Person:symbol, Position:symbol)\nHeld_position(\"Barak Obama\", \"President\").\nHeld_position(\"Francois Mitterrand\", \"President\").\n.decl Answer()\nAnswer() :- Held_position(\"Francois Mitterrand\", position), Held_position(\"Barak Obama\", position).\n.output Answer\n\n"]}
{"id": 1625, "answer": true, "completion": ".decl Used_arithmetic(Arithmetic:symbol)\nUsed_arithmetic(\"arithmetic\").\n.decl Answer()\nAnswer() :- Used_arithmetic(\"arithmetic\").\n.output Answer\n\n", "completions": [".decl Used_arithmetic(Arithmetic:symbol)\nUsed_arithmetic(\"arithmetic\").\n.decl Answer()\nAnswer() :- Used_arithmetic(\"arithmetic\").\n.output Answer\n\n"]}
{"id": 1626, "answer": true, "completion": ".decl Is_needed_for(Object:symbol, Activity:symbol)\nIs_needed_for(\"parachute\", \"parachuting\").\nIs_needed_for(\"parachute\", \"skydiving\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snorkeling\").\nIs_needed_for(\"parachute\", \"snowmobiling\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\",", "completions": [".decl Is_needed_for(Object:symbol, Activity:symbol)\nIs_needed_for(\"parachute\", \"parachuting\").\nIs_needed_for(\"parachute\", \"skydiving\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snorkeling\").\nIs_needed_for(\"parachute\", \"snowmobiling\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\", \"snowboarding\").\nIs_needed_for(\"parachute\","]}
{"id": 1627, "answer": false, "completion": ".decl Has_repair_ability(Watchmaker:symbol, Repair_ability:float)\nHas_repair_ability(\"Apple\", 0.9).\nHas_repair_ability(\"Rolex\", 0.8).\nHas_repair_ability(\"Timex\", 0.7).\n.decl Answer()\nAnswer() :- Has_repair_ability(\"Apple\", repair_ability), Has_repair_ability(\"Rolex\", repair_ability2), repair_ability > repair_ability2.\n.output Answer\n\n", "completions": [".decl Has_repair_ability(Watchmaker:symbol, Repair_ability:float)\nHas_repair_ability(\"Apple\", 0.9).\nHas_repair_ability(\"Rolex\", 0.8).\nHas_repair_ability(\"Timex\", 0.7).\n.decl Answer()\nAnswer() :- Has_repair_ability(\"Apple\", repair_ability), Has_repair_ability(\"Rolex\", repair_ability2), repair_ability > repair_ability2.\n.output Answer\n\n"]}
{"id": 1628, "answer": true, "completion": ".decl Has_vowel(Word:symbol)\nHas_vowel(\"apple\").\nHas_vowel(\"ear\").\nHas_vowel(\"igloo\").\nHas_vowel(\"under\").\n.decl Has_consonant(Word:symbol)\nHas_consonant(\"pig\").\nHas_consonant(\"latin\").\n.decl Answer()\nAnswer() :- Has_consonant(word1), Has_vowel(word2), word1 != word2.\n.output Answer\n\n", "completions": [".decl Has_vowel(Word:symbol)\nHas_vowel(\"apple\").\nHas_vowel(\"ear\").\nHas_vowel(\"igloo\").\nHas_vowel(\"under\").\n.decl Has_consonant(Word:symbol)\nHas_consonant(\"pig\").\nHas_consonant(\"latin\").\n.decl Answer()\nAnswer() :- Has_consonant(word1), Has_vowel(word2), word1 != word2.\n.output Answer\n\n"]}
{"id": 1629, "answer": true, "completion": ".decl Has_nationality(Person:symbol, Nationality:symbol)\nHas_nationality(\"Michael Jordan\", \"American\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Michael Jordan\", \"professional cook\").\n.decl Answer()\nAnswer() :- Has_nationality(\"Michael Jordan\", \"American\"), Has_profession(\"Michael Jordan\", \"professional cook\").\n.output Answer\n\n", "completions": [".decl Has_nationality(Person:symbol, Nationality:symbol)\nHas_nationality(\"Michael Jordan\", \"American\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Michael Jordan\", \"professional cook\").\n.decl Answer()\nAnswer() :- Has_nationality(\"Michael Jordan\", \"American\"), Has_profession(\"Michael Jordan\", \"professional cook\").\n.output Answer\n\n"]}
{"id": 1630, "answer": true, "completion": ".decl Friends(Person_A:symbol, Person_B:symbol)\nFriends(\"Jacques Duèze\", \"Richard Dawkins\").\n.decl Answer()\nAnswer() :- Friends(\"Jacques Duèze\", person_b), Friends(person_b, \"Richard Dawkins\").\n.output Answer\n\n", "completions": [".decl Friends(Person_A:symbol, Person_B:symbol)\nFriends(\"Jacques Duèze\", \"Richard Dawkins\").\n.decl Answer()\nAnswer() :- Friends(\"Jacques Duèze\", person_b), Friends(person_b, \"Richard Dawkins\").\n.output Answer\n\n"]}
{"id": 1631, "answer": false, "completion": ".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"spider\", 8).\nHas_n_legs(\"eggplant farmer\", 2).\n.decl Has_n_arms(Animal:symbol, N_arms:float)\nHas_n_arms(\"eggplant farmer\", 2).\n.decl Answer()\nAnswer() :- Has_n_legs(\"spider\", n_legs), Has_n_legs(\"eggplant farmer\", n_legs2), Has_n_arms(\"eggplant farmer\", n_arms), n_legs > n_legs2, n_arms > n_legs2.\n.output Answer\n\n", "completions": [".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"spider\", 8).\nHas_n_legs(\"eggplant farmer\", 2).\n.decl Has_n_arms(Animal:symbol, N_arms:float)\nHas_n_arms(\"eggplant farmer\", 2).\n.decl Answer()\nAnswer() :- Has_n_legs(\"spider\", n_legs), Has_n_legs(\"eggplant farmer\", n_legs2), Has_n_arms(\"eggplant farmer\", n_arms), n_legs > n_legs2, n_arms > n_legs2.\n.output Answer\n\n"]}
{"id": 1632, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Butter Industry\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Cow Industry\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"Butter Industry\", n_members1), Has_n_members(\"Cow Industry\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Butter Industry\", 100).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Cow Industry\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"Butter Industry\", n_members1), Has_n_members(\"Cow Industry\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1633, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chipmunks\", 3).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chocolate chips\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"chipmunks\", n_members1), Has_n_members(\"chocolate chips\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chipmunks\", 3).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"chocolate chips\", 100).\n.decl Answer()\nAnswer() :- Has_n_members(\"chipmunks\", n_members1), Has_n_members(\"chocolate chips\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1634, "answer": false, "completion": ".decl Passes_through(Person:symbol, Station:symbol)\nPasses_through(\"John Smith\", \"30th Street Station\").\nPasses_through(\"Jane Doe\", \"30th Street Station\").\nPasses_through(\"John Smith\", \"Dorton Arena\").\nPasses_through(\"Jane Doe\", \"Dorton Arena\").\n.decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"Dorton Arena\", 40000).\n.decl Answer()\nAnswer() :- Passes_through(person1, station), Passes_through(person2, station), person1 != person2, Has_capacity(station, capacity), capacity > 40000.\n.output Answer\n\n", "completions": [".decl Passes_through(Person:symbol, Station:symbol)\nPasses_through(\"John Smith\", \"30th Street Station\").\nPasses_through(\"Jane Doe\", \"30th Street Station\").\nPasses_through(\"John Smith\", \"Dorton Arena\").\nPasses_through(\"Jane Doe\", \"Dorton Arena\").\n.decl Has_capacity(Object:symbol, Capacity:float)\nHas_capacity(\"Dorton Arena\", 40000).\n.decl Answer()\nAnswer() :- Passes_through(person1, station), Passes_through(person2, station), person1 != person2, Has_capacity(station, capacity), capacity > 40000.\n.output Answer\n\n"]}
{"id": 1635, "answer": false, "completion": ".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"basil\", \"D\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"chocolate\", \"D\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"basil\", vitamin), Has_vitamin(\"chocolate\", vitamin).\n.output Answer\n\n", "completions": [".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"basil\", \"D\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"chocolate\", \"D\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"basil\", vitamin), Has_vitamin(\"chocolate\", vitamin).\n.output Answer\n\n"]}
{"id": 1636, "answer": false, "completion": ".decl Spoken_in(Language:symbol, Country:symbol)\nSpoken_in(\"Cantonese\", \"China\").\nSpoken_in(\"Japanese\", \"Japan\").\n.decl Answer()\nAnswer() :- Spoken_in(\"Cantonese\", country), Spoken_in(\"Japanese\", country).\n.output Answer\n\n", "completions": [".decl Spoken_in(Language:symbol, Country:symbol)\nSpoken_in(\"Cantonese\", \"China\").\nSpoken_in(\"Japanese\", \"Japan\").\n.decl Answer()\nAnswer() :- Spoken_in(\"Cantonese\", country), Spoken_in(\"Japanese\", country).\n.output Answer\n\n"]}
{"id": 1637, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Amy Winehouse\", \"Amy\").\nHas_name(\"Amy Winehouse\", \"Winehouse\").\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Brexit\", \"Brexit\").\n.decl Answer()\nAnswer() :- Has_name(\"Amy Winehouse\", name1), Has_name(\"Brexit\", name2), name1 = name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Amy Winehouse\", \"Amy\").\nHas_name(\"Amy Winehouse\", \"Winehouse\").\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Brexit\", \"Brexit\").\n.decl Answer()\nAnswer() :- Has_name(\"Amy Winehouse\", name1), Has_name(\"Brexit\", name2), name1 = name2.\n.output Answer\n\n"]}
{"id": 1638, "answer": false, "completion": ".decl Has_price(Color:symbol, Price:float)\nHas_price(\"blue\", 1000).\nHas_price(\"red\", 500).\nHas_price(\"yellow\", 100).\n.decl Answer()\nAnswer() :- Has_price(\"blue\", price1), Has_price(\"red\", price2), Has_price(\"yellow\", price3), price1 > price2, price1 > price3.\n.output Answer\n\n", "completions": [".decl Has_price(Color:symbol, Price:float)\nHas_price(\"blue\", 1000).\nHas_price(\"red\", 500).\nHas_price(\"yellow\", 100).\n.decl Answer()\nAnswer() :- Has_price(\"blue\", price1), Has_price(\"red\", price2), Has_price(\"yellow\", price3), price1 > price2, price1 > price3.\n.output Answer\n\n"]}
{"id": 1639, "answer": true, "completion": ".decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Canterbury Tales\", \"One Thousand and One Nights\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"One Thousand and One Nights\", \"The Canterbury Tales\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Canterbury Tales\", \"The Decameron\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Decameron\", \"One Thousand and One Nights\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"One Thousand and One Nights\", \"The Decameron\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Decameron\", \"The Canterbury Tales\").\n.decl Answer()\nAnswer() :- Written_before(\"The Canterbury Tales\", book1), Written_before(book1, \"One Thousand and One Nights\"), Written_before(\"One Thousand and One Nights\", book2), Written_before(book2, \"The Decameron\"), Written_before(\"The Decameron\", \"The Canterbury Tales\").\n.output Answer\n\n", "completions": [".decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Canterbury Tales\", \"One Thousand and One Nights\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"One Thousand and One Nights\", \"The Canterbury Tales\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Canterbury Tales\", \"The Decameron\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Decameron\", \"One Thousand and One Nights\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"One Thousand and One Nights\", \"The Decameron\").\n.decl Written_before(Book_A:symbol, Book_B:symbol)\nWritten_before(\"The Decameron\", \"The Canterbury Tales\").\n.decl Answer()\nAnswer() :- Written_before(\"The Canterbury Tales\", book1), Written_before(book1, \"One Thousand and One Nights\"), Written_before(\"One Thousand and One Nights\", book2), Written_before(book2, \"The Decameron\"), Written_before(\"The Decameron\", \"The Canterbury Tales\").\n.output Answer\n\n"]}
{"id": 1640, "answer": false, "completion": ".decl Has_phylum(Organism:symbol, Phylum:symbol)\nHas_phylum(\"cnidarian\", \"Cnidaria\").\nHas_phylum(\"human\", \"Primates\").\n.decl Has_class(Organism:symbol, Class:symbol)\nHas_class(\"cnidarian\", \"Cnidaria\").\nHas_class(\"human\", \"Primates\").\n.decl Has_order(Organism:symbol, Order:symbol)\nHas_order(\"cnidarian\", \"Cnidaria\").\nHas_order(\"human\", \"Primates\").\n.decl Has_family(Organism:symbol, Family:symbol)\nHas_family(\"cnidarian\", \"Cnidaria\").\nHas_family(\"human\", \"Primates\").\n.decl Has_genus(Organism:symbol, Genus:symbol)\nHas_genus(\"cnidarian\", \"Cnidaria\").\nHas_genus(\"human\", \"Primates\").\n.decl Has_species(Organism:symbol, Species:symbol)\nHas_species(\"cnidarian\", \"Cnidaria\").\nHas_species(\"human\", \"Primates\").\n.decl Answer()\nAnswer() :- Has_phylum(\"cnidarian\", phylum), Has_phylum(\"human\", phylum), Has_class(\"cnidarian\", class), Has_class(\"human\", class), Has_order(\"cnidarian\", order), Has_order(\"human\", order), Has_family(\"cnidarian\", family), Has_family(\"human\", family), Has_genus(\"cnidarian\", genus), Has_genus(\"human\", genus), Has_species(\"cnidarian\", species), Has_species(\"human\", species), phylum = class, class = order, order = family, family = genus, genus = species.\n.output Answer\n\n", "completions": [".decl Has_phylum(Organism:symbol, Phylum:symbol)\nHas_phylum(\"cnidarian\", \"Cnidaria\").\nHas_phylum(\"human\", \"Primates\").\n.decl Has_class(Organism:symbol, Class:symbol)\nHas_class(\"cnidarian\", \"Cnidaria\").\nHas_class(\"human\", \"Primates\").\n.decl Has_order(Organism:symbol, Order:symbol)\nHas_order(\"cnidarian\", \"Cnidaria\").\nHas_order(\"human\", \"Primates\").\n.decl Has_family(Organism:symbol, Family:symbol)\nHas_family(\"cnidarian\", \"Cnidaria\").\nHas_family(\"human\", \"Primates\").\n.decl Has_genus(Organism:symbol, Genus:symbol)\nHas_genus(\"cnidarian\", \"Cnidaria\").\nHas_genus(\"human\", \"Primates\").\n.decl Has_species(Organism:symbol, Species:symbol)\nHas_species(\"cnidarian\", \"Cnidaria\").\nHas_species(\"human\", \"Primates\").\n.decl Answer()\nAnswer() :- Has_phylum(\"cnidarian\", phylum), Has_phylum(\"human\", phylum), Has_class(\"cnidarian\", class), Has_class(\"human\", class), Has_order(\"cnidarian\", order), Has_order(\"human\", order), Has_family(\"cnidarian\", family), Has_family(\"human\", family), Has_genus(\"cnidarian\", genus), Has_genus(\"human\", genus), Has_species(\"cnidarian\", species), Has_species(\"human\", species), phylum = class, class = order, order = family, family = genus, genus = species.\n.output Answer\n\n"]}
{"id": 1641, "answer": false, "completion": ".decl Read_by(Book:symbol, Group:symbol)\nRead_by(\"Little Women\", \"veterans of the civil war\").\n.decl Answer()\nAnswer() :- Read_by(\"Little Women\", group), group = \"veterans of the civil war\".\n.output Answer\n\n", "completions": [".decl Read_by(Book:symbol, Group:symbol)\nRead_by(\"Little Women\", \"veterans of the civil war\").\n.decl Answer()\nAnswer() :- Read_by(\"Little Women\", group), group = \"veterans of the civil war\".\n.output Answer\n\n"]}
{"id": 1642, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"sloth\", 2).\n.decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"sloth\", 9.8).\n.decl Answer()\nAnswer() :- Has_mass(\"sloth\", mass), Has_gravity(\"sloth\", gravity), mass * gravity < 0.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"sloth\", 2).\n.decl Has_gravity(Object:symbol, Gravity:float)\nHas_gravity(\"sloth\", 9.8).\n.decl Answer()\nAnswer() :- Has_mass(\"sloth\", mass), Has_gravity(\"sloth\", gravity), mass * gravity < 0.\n.output Answer\n\n"]}
{"id": 1643, "answer": false, "completion": ".decl Has_team(Person:symbol, Team:symbol)\nHas_team(\"birdwatcher\", \"Eagles\").\n.decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"game\", \"Philadelphia\").\n.decl Answer()\nAnswer() :- Has_team(\"birdwatcher\", team), Has_location(\"game\", location), team = location.\n.output Answer\n\n", "completions": [".decl Has_team(Person:symbol, Team:symbol)\nHas_team(\"birdwatcher\", \"Eagles\").\n.decl Has_location(Event:symbol, Location:symbol)\nHas_location(\"game\", \"Philadelphia\").\n.decl Answer()\nAnswer() :- Has_team(\"birdwatcher\", team), Has_location(\"game\", location), team = location.\n.output Answer\n\n"]}
{"id": 1644, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"fungal life-form\", \"green\").\nHas_color(\"copper\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"fungal life-form\", color), Has_color(\"copper\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"fungal life-form\", \"green\").\nHas_color(\"copper\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"fungal life-form\", color), Has_color(\"copper\", color).\n.output Answer\n\n"]}
{"id": 1645, "answer": false, "completion": ".decl Is_near(Object_A:symbol, Object_B:symbol)\nIs_near(\"beaver dam\", \"land\").\n.decl Answer()\nAnswer() :- Is_near(\"beaver dam\", object_a), Is_near(\"land\", object_b), object_a != object_b.\n.output Answer\n\n", "completions": [".decl Is_near(Object_A:symbol, Object_B:symbol)\nIs_near(\"beaver dam\", \"land\").\n.decl Answer()\nAnswer() :- Is_near(\"beaver dam\", object_a), Is_near(\"land\", object_b), object_a != object_b.\n.output Answer\n\n"]}
{"id": 1646, "answer": false, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"quartz\", 14).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"oxygen\", 8).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"quartz\", atomic_number1), Has_atomic_number(\"oxygen\", atomic_number2), atomic_number1 > atomic_number2.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"quartz\", 14).\n.decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"oxygen\", 8).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"quartz\", atomic_number1), Has_atomic_number(\"oxygen\", atomic_number2), atomic_number1 > atomic_number2.\n.output Answer\n\n"]}
{"id": 1647, "answer": false, "completion": ".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Illuminati\", 6).\n.decl Has_n_cards(Game:symbol, N_cards:float)\nHas_n_cards(\"Illuminati\", 120).\n.decl Answer()\nAnswer() :- Has_n_players(\"Illuminati\", n_players), Has_n_cards(\"Illuminati\", n_cards), n_players * n_cards > 1000.\n.output Answer\n\n", "completions": [".decl Has_n_players(Game:symbol, N_players:float)\nHas_n_players(\"Illuminati\", 6).\n.decl Has_n_cards(Game:symbol, N_cards:float)\nHas_n_cards(\"Illuminati\", 120).\n.decl Answer()\nAnswer() :- Has_n_players(\"Illuminati\", n_players), Has_n_cards(\"Illuminati\", n_cards), n_players * n_cards > 1000.\n.output Answer\n\n"]}
{"id": 1648, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Bing\", 0.5).\nHas_mass(\"basket\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"Bing\", mass1), Has_mass(\"basket\", mass2), mass1 <= mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"Bing\", 0.5).\nHas_mass(\"basket\", 1).\n.decl Answer()\nAnswer() :- Has_mass(\"Bing\", mass1), Has_mass(\"basket\", mass2), mass1 <= mass2.\n.output Answer\n\n"]}
{"id": 1649, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"opening of the Parc des Princes\", \"June\").\nHappens_in_time(\"opening of the Parc des Princes\", \"July\").\nHappens_in_time(\"opening of the Parc des Princes\", \"August\").\nHappens_in_time(\"opening of the Parc des Princes\", \"September\").\nHappens_in_time(\"opening of the Parc des Princes\", \"October\").\nHappens_in_time(\"opening of the Parc des Princes\", \"November\").\nHappens_in_time(\"opening of the Parc des Princes\", \"December\").\nHappens_in_time(\"opening of the Parc des Princes\", \"January\").\nHappens_in_time(\"opening of the Parc des Princes\", \"February\").\nHappens_in_time(\"opening of the Parc des Princes\", \"March\").\nHappens_in_time(\"opening of the Parc des Princes\", \"April\").\nHappens_in_time(\"opening of the Parc des Princes\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"opening of the Parc des Princes\", \"June\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"opening of the Parc des Princes\", \"June\").\nHappens_in_time(\"opening of the Parc des Princes\", \"July\").\nHappens_in_time(\"opening of the Parc des Princes\", \"August\").\nHappens_in_time(\"opening of the Parc des Princes\", \"September\").\nHappens_in_time(\"opening of the Parc des Princes\", \"October\").\nHappens_in_time(\"opening of the Parc des Princes\", \"November\").\nHappens_in_time(\"opening of the Parc des Princes\", \"December\").\nHappens_in_time(\"opening of the Parc des Princes\", \"January\").\nHappens_in_time(\"opening of the Parc des Princes\", \"February\").\nHappens_in_time(\"opening of the Parc des Princes\", \"March\").\nHappens_in_time(\"opening of the Parc des Princes\", \"April\").\nHappens_in_time(\"opening of the Parc des Princes\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"opening of the Parc des Princes\", \"June\").\n.output Answer\n\n"]}
{"id": 1650, "answer": false, "completion": ".decl Sponsors(Organization:symbol, Event:symbol)\nSponsors(\"Chick-fil-A\", \"Pride parade\").\n.decl Answer()\nAnswer() :- Sponsors(\"Chick-fil-A\", \"Pride parade\").\n.output Answer\n\n", "completions": [".decl Sponsors(Organization:symbol, Event:symbol)\nSponsors(\"Chick-fil-A\", \"Pride parade\").\n.decl Answer()\nAnswer() :- Sponsors(\"Chick-fil-A\", \"Pride parade\").\n.output Answer\n\n"]}
{"id": 1651, "answer": true, "completion": ".decl Borders(Country_A:symbol, Country_B:symbol)\nBorders(\"Canada\", \"United States\").\nBorders(\"Canada\", \"Mexico\").\nBorders(\"United States\", \"Canada\").\nBorders(\"United States\", \"Mexico\").\nBorders(\"Mexico\", \"United States\").\n.decl Answer()\nAnswer() :- Borders(\"Great Lakes\", country1), Borders(country1, country2), Borders(country2, \"Great Lakes\").\n.output Answer\n\n", "completions": [".decl Borders(Country_A:symbol, Country_B:symbol)\nBorders(\"Canada\", \"United States\").\nBorders(\"Canada\", \"Mexico\").\nBorders(\"United States\", \"Canada\").\nBorders(\"United States\", \"Mexico\").\nBorders(\"Mexico\", \"United States\").\n.decl Answer()\nAnswer() :- Borders(\"Great Lakes\", country1), Borders(country1, country2), Borders(country2, \"Great Lakes\").\n.output Answer\n\n"]}
{"id": 1652, "answer": true, "completion": ".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Jon Brower Minnoch\", 0.5).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Jon Brower Minnoch\", 1.8).\n.decl Has_bmi(Person:symbol, BMI:float)\nHas_bmi(\"Jon Brower Minnoch\", BMI) :- Has_weight(\"Jon Brower Minnoch\", weight), Has_height(\"Jon Brower Minnoch\", height), BMI is weight / height^2.\n.decl Answer()\nAnswer() :- Has_bmi(\"Jon Brower Minnoch\", BMI), BMI < 18.5.\n.output Answer\n\n", "completions": [".decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Jon Brower Minnoch\", 0.5).\n.decl Has_height(Person:symbol, Height:float)\nHas_height(\"Jon Brower Minnoch\", 1.8).\n.decl Has_bmi(Person:symbol, BMI:float)\nHas_bmi(\"Jon Brower Minnoch\", BMI) :- Has_weight(\"Jon Brower Minnoch\", weight), Has_height(\"Jon Brower Minnoch\", height), BMI is weight / height^2.\n.decl Answer()\nAnswer() :- Has_bmi(\"Jon Brower Minnoch\", BMI), BMI < 18.5.\n.output Answer\n\n"]}
{"id": 1653, "answer": true, "completion": ".decl Signed(Person:symbol, Document:symbol)\nSigned(\"Larry King\", \"Magna Carta\").\n.decl Answer()\nAnswer() :- Signed(\"Larry King\", document).\n.output Answer\n\n", "completions": [".decl Signed(Person:symbol, Document:symbol)\nSigned(\"Larry King\", \"Magna Carta\").\n.decl Answer()\nAnswer() :- Signed(\"Larry King\", document).\n.output Answer\n\n"]}
{"id": 1654, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Phobos\", \"phobos\").\nHas_name(\"Pavor\", \"pavor\").\n.decl Has_origin(Object:symbol, Origin:symbol)\nHas_origin(\"Phobos\", \"greek\").\nHas_origin(\"Pavor\", \"roman\").\n.decl Answer()\nAnswer() :- Has_name(\"Phobos\", name), Has_name(\"Pavor\", name), Has_origin(\"Phobos\", origin), Has_origin(\"Pavor\", origin), name = origin.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Phobos\", \"phobos\").\nHas_name(\"Pavor\", \"pavor\").\n.decl Has_origin(Object:symbol, Origin:symbol)\nHas_origin(\"Phobos\", \"greek\").\nHas_origin(\"Pavor\", \"roman\").\n.decl Answer()\nAnswer() :- Has_name(\"Phobos\", name), Has_name(\"Pavor\", name), Has_origin(\"Phobos\", origin), Has_origin(\"Pavor\", origin), name = origin.\n.output Answer\n\n"]}
{"id": 1655, "answer": false, "completion": ".decl Has_reasons(Animal_A:symbol, Reasons:symbol)\nHas_reasons(\"snake\", \"fear\").\nHas_reasons(\"snake\", \"venom\").\nHas_reasons(\"honey badger\", \"stings\").\nHas_reasons(\"honey badger\", \"bile\").\n.decl Answer()\nAnswer() :- Has_reasons(\"snake\", reason), Has_reasons(\"honey badger\", reason).\n.output Answer\n\n", "completions": [".decl Has_reasons(Animal_A:symbol, Reasons:symbol)\nHas_reasons(\"snake\", \"fear\").\nHas_reasons(\"snake\", \"venom\").\nHas_reasons(\"honey badger\", \"stings\").\nHas_reasons(\"honey badger\", \"bile\").\n.decl Answer()\nAnswer() :- Has_reasons(\"snake\", reason), Has_reasons(\"honey badger\", reason).\n.output Answer\n\n"]}
{"id": 1656, "answer": false, "completion": ".decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"honey badger\", \"tail\").\nHas_body_part(\"honey badger\", \"teeth\").\nHas_body_part(\"honey badger\", \"paws\").\nHas_body_part(\"hyena\", \"teeth\").\nHas_body_part(\"hyena\", \"paws\").\n.decl Answer()\nAnswer() :- Has_body_part(\"honey badger\", body_part), Has_body_part(\"hyena\", body_part), body_part \\= \"teeth\", body_part \\= \"paws\".\n.output Answer\n\n", "completions": [".decl Has_body_part(Animal:symbol, Body_part:symbol)\nHas_body_part(\"honey badger\", \"tail\").\nHas_body_part(\"honey badger\", \"teeth\").\nHas_body_part(\"honey badger\", \"paws\").\nHas_body_part(\"hyena\", \"teeth\").\nHas_body_part(\"hyena\", \"paws\").\n.decl Answer()\nAnswer() :- Has_body_part(\"honey badger\", body_part), Has_body_part(\"hyena\", body_part), body_part \\= \"teeth\", body_part \\= \"paws\".\n.output Answer\n\n"]}
{"id": 1657, "answer": false, "completion": ".decl Has_buoyancy(Object:symbol, Buoyancy:float)\nHas_buoyancy(\"water\", 1).\nHas_buoyancy(\"wood\", 0.2).\nHas_buoyancy(\"air\", 0).\n.decl Answer()\nAnswer() :- Has_buoyancy(\"wood\", buoyancy), Has_buoyancy(\"water\", buoyancy).\n.output Answer\n\n", "completions": [".decl Has_buoyancy(Object:symbol, Buoyancy:float)\nHas_buoyancy(\"water\", 1).\nHas_buoyancy(\"wood\", 0.2).\nHas_buoyancy(\"air\", 0).\n.decl Answer()\nAnswer() :- Has_buoyancy(\"wood\", buoyancy), Has_buoyancy(\"water\", buoyancy).\n.output Answer\n\n"]}
{"id": 1658, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Muslim world\", 1.5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Israel\", 0.5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Muslim world\", n_members1), Has_n_members(\"Israel\", n_members2), n_members1 < n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Muslim world\", 1.5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Israel\", 0.5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Muslim world\", n_members1), Has_n_members(\"Israel\", n_members2), n_members1 < n_members2.\n.output Answer\n\n"]}
{"id": 1659, "answer": true, "completion": ".decl Has_network(Person:symbol, Network:symbol)\nHas_network(\"Kim Il-sung\", \"LinkedIn\").\n.decl Answer()\nAnswer() :- Has_network(\"Kim Il-sung\", network).\n.output Answer\n\n", "completions": [".decl Has_network(Person:symbol, Network:symbol)\nHas_network(\"Kim Il-sung\", \"LinkedIn\").\n.decl Answer()\nAnswer() :- Has_network(\"Kim Il-sung\", network).\n.output Answer\n\n"]}
{"id": 1660, "answer": false, "completion": ".decl Has_health_benefit(Substance:symbol, Benefit:symbol)\nHas_health_benefit(\"ethanol\", \"good\").\nHas_health_benefit(\"ethanol\", \"bad\").\n.decl Answer()\nAnswer() :- Has_health_benefit(\"ethanol\", benefit), benefit == \"good\".\n.output Answer\n\n", "completions": [".decl Has_health_benefit(Substance:symbol, Benefit:symbol)\nHas_health_benefit(\"ethanol\", \"good\").\nHas_health_benefit(\"ethanol\", \"bad\").\n.decl Answer()\nAnswer() :- Has_health_benefit(\"ethanol\", benefit), benefit == \"good\".\n.output Answer\n\n"]}
{"id": 1661, "answer": true, "completion": ".decl Plays(Person:symbol, Sport:symbol)\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis", "completions": [".decl Plays(Person:symbol, Sport:symbol)\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis\").\nPlays(\"Michael Jackson\", \"basketball\").\nPlays(\"Michael Jackson\", \"baseball\").\nPlays(\"Michael Jackson\", \"football\").\nPlays(\"Michael Jackson\", \"rugby\").\nPlays(\"Michael Jackson\", \"volleyball\").\nPlays(\"Michael Jackson\", \"hockey\").\nPlays(\"Michael Jackson\", \"soccer\").\nPlays(\"Michael Jackson\", \"badminton\").\nPlays(\"Michael Jackson\", \"table tennis\").\nPlays(\"Michael Jackson\", \"golf\").\nPlays(\"Michael Jackson\", \"cricket\").\nPlays(\"Michael Jackson\", \"bowling\").\nPlays(\"Michael Jackson\", \"darts\").\nPlays(\"Michael Jackson\", \"tennis"]}
{"id": 1662, "answer": true, "completion": ".decl Has_ingestion_method(Animal:symbol, Method:symbol)\nHas_ingestion_method(\"human\", \"ingestion\").\nHas_ingestion_method(\"bee\", \"sting\").\n.decl Has_ingestion_target(Animal:symbol, Target:symbol)\nHas_ingestion_target(\"human\", \"bee\").\n.decl Answer()\nAnswer() :- Has_ingestion_method(\"bee\", method), Has_ingestion_target(\"human\", target), method = ingestion, target = bee.\n.output Answer\n\n", "completions": [".decl Has_ingestion_method(Animal:symbol, Method:symbol)\nHas_ingestion_method(\"human\", \"ingestion\").\nHas_ingestion_method(\"bee\", \"sting\").\n.decl Has_ingestion_target(Animal:symbol, Target:symbol)\nHas_ingestion_target(\"human\", \"bee\").\n.decl Answer()\nAnswer() :- Has_ingestion_method(\"bee\", method), Has_ingestion_target(\"human\", target), method = ingestion, target = bee.\n.output Answer\n\n"]}
{"id": 1663, "answer": true, "completion": ".decl Has_knowledge(Person:symbol, Knowledge:symbol)\nHas_knowledge(\"Elon Musk\", \"astrology\").\nHas_knowledge(\"Elon Musk\", \"physics\").\n.decl Answer()\nAnswer() :- Has_knowledge(\"Elon Musk\", knowledge1), Has_knowledge(\"Elon Musk\", knowledge2), knowledge1 != knowledge2.\n.output Answer\n\n", "completions": [".decl Has_knowledge(Person:symbol, Knowledge:symbol)\nHas_knowledge(\"Elon Musk\", \"astrology\").\nHas_knowledge(\"Elon Musk\", \"physics\").\n.decl Answer()\nAnswer() :- Has_knowledge(\"Elon Musk\", knowledge1), Has_knowledge(\"Elon Musk\", knowledge2), knowledge1 != knowledge2.\n.output Answer\n\n"]}
{"id": 1664, "answer": true, "completion": ".decl Has_longevity(Show:symbol, Years:float)\nHas_longevity(\"Coast to Coast AM\", 30).\nHas_longevity(\"Rush Limbaugh Show\", 20).\n.decl Answer()\nAnswer() :- Has_longevity(\"Coast to Coast AM\", longevity1), Has_longevity(\"Rush Limbaugh Show\", longevity2), longevity1 > longevity2.\n.output Answer\n\n", "completions": [".decl Has_longevity(Show:symbol, Years:float)\nHas_longevity(\"Coast to Coast AM\", 30).\nHas_longevity(\"Rush Limbaugh Show\", 20).\n.decl Answer()\nAnswer() :- Has_longevity(\"Coast to Coast AM\", longevity1), Has_longevity(\"Rush Limbaugh Show\", longevity2), longevity1 > longevity2.\n.output Answer\n\n"]}
{"id": 1665, "answer": false, "completion": ".decl Has_label(Object:symbol, Label:symbol)\nHas_label(\"eagle\", \"skill-training youth group\").\nHas_label(\"young bear\", \"skill-training youth group\").\n.decl Answer()\nAnswer() :- Has_label(\"eagle\", label), Has_label(\"young bear\", label).\n.output Answer\n\n", "completions": [".decl Has_label(Object:symbol, Label:symbol)\nHas_label(\"eagle\", \"skill-training youth group\").\nHas_label(\"young bear\", \"skill-training youth group\").\n.decl Answer()\nAnswer() :- Has_label(\"eagle\", label), Has_label(\"young bear\", label).\n.output Answer\n\n"]}
{"id": 1666, "answer": true, "completion": ".decl Has_wind_speed(Event:symbol, Wind_speed:float)\nHas_wind_speed(\"hurricane\", 100).\nHas_wind_speed(\"parachuting\", 10).\n.decl Answer()\nAnswer() :- Has_wind_speed(\"hurricane\", wind_speed1), Has_wind_speed(\"parachuting\", wind_speed2), wind_speed1 >= wind_speed2.\n.output Answer\n\n", "completions": [".decl Has_wind_speed(Event:symbol, Wind_speed:float)\nHas_wind_speed(\"hurricane\", 100).\nHas_wind_speed(\"parachuting\", 10).\n.decl Answer()\nAnswer() :- Has_wind_speed(\"hurricane\", wind_speed1), Has_wind_speed(\"parachuting\", wind_speed2), wind_speed1 >= wind_speed2.\n.output Answer\n\n"]}
{"id": 1667, "answer": false, "completion": ".decl Is_made_of(Object:symbol, Material:symbol)\nIs_made_of(\"wool\", \"fiber\").\nIs_made_of(\"wool\", \"water\").\n.decl Answer()\nAnswer() :- Is_made_of(\"wool\", material), material \\= \"water\".\n.output Answer\n\n", "completions": [".decl Is_made_of(Object:symbol, Material:symbol)\nIs_made_of(\"wool\", \"fiber\").\nIs_made_of(\"wool\", \"water\").\n.decl Answer()\nAnswer() :- Is_made_of(\"wool\", material), material \\= \"water\".\n.output Answer\n\n"]}
{"id": 1668, "answer": true, "completion": ".decl Has_zip_code(Person:symbol, Zip_code:symbol)\nHas_zip_code(\"John\", \"12345\").\nHas_zip_code(\"John\", \"54321\").\nHas_zip_code(\"Mary\", \"54321\").\nHas_zip_code(\"Mary\", \"12345\").\n.decl Has_memorized(Person:symbol, Percent:float)\nHas_memorized(\"John\", 0.6).\nHas_memorized(\"Mary\", 0.6).\n.decl Answer()\nAnswer() :- Has_zip_code(\"Person\", zip_code), Has_memorized(\"Person\", percent), percent < 0.5.\n.output Answer\n\n", "completions": [".decl Has_zip_code(Person:symbol, Zip_code:symbol)\nHas_zip_code(\"John\", \"12345\").\nHas_zip_code(\"John\", \"54321\").\nHas_zip_code(\"Mary\", \"54321\").\nHas_zip_code(\"Mary\", \"12345\").\n.decl Has_memorized(Person:symbol, Percent:float)\nHas_memorized(\"John\", 0.6).\nHas_memorized(\"Mary\", 0.6).\n.decl Answer()\nAnswer() :- Has_zip_code(\"Person\", zip_code), Has_memorized(\"Person\", percent), percent < 0.5.\n.output Answer\n\n"]}
{"id": 1669, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"dinosaur\", \"age of dinosaurs\").\nHappens_in_time(\"history of Europe\", \"age of dinosaurs\").\nHappens_in_time(\"history of Europe\", \"age of humans\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"history of Europe\", time), Happens_in_time(\"dinosaur\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"dinosaur\", \"age of dinosaurs\").\nHappens_in_time(\"history of Europe\", \"age of dinosaurs\").\nHappens_in_time(\"history of Europe\", \"age of humans\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"history of Europe\", time), Happens_in_time(\"dinosaur\", time).\n.output Answer\n\n"]}
{"id": 1670, "answer": true, "completion": ".decl Has_pain_intensity(Event:symbol, Pain_intensity:float)\nHas_pain_intensity(\"Florence Nightingale's death\", 10).\nHas_pain_intensity(\"Saint Peter's death\", 0).\n.decl Answer()\nAnswer() :- Has_pain_intensity(\"Florence Nightingale's death\", pain_intensity1), Has_pain_intensity(\"Saint Peter's death\", pain_intensity2), pain_intensity1 > pain_intensity2.\n.output Answer\n\n", "completions": [".decl Has_pain_intensity(Event:symbol, Pain_intensity:float)\nHas_pain_intensity(\"Florence Nightingale's death\", 10).\nHas_pain_intensity(\"Saint Peter's death\", 0).\n.decl Answer()\nAnswer() :- Has_pain_intensity(\"Florence Nightingale's death\", pain_intensity1), Has_pain_intensity(\"Saint Peter's death\", pain_intensity2), pain_intensity1 > pain_intensity2.\n.output Answer\n\n"]}
{"id": 1671, "answer": false, "completion": ".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"firewall\", 10).\nHas_strength(\"hammer\", 5).\n.decl Answer()\nAnswer() :- Has_strength(\"firewall\", strength1), Has_strength(\"hammer\", strength2), strength1 < strength2.\n.output Answer\n\n", "completions": [".decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"firewall\", 10).\nHas_strength(\"hammer\", 5).\n.decl Answer()\nAnswer() :- Has_strength(\"firewall\", strength1), Has_strength(\"hammer\", strength2), strength1 < strength2.\n.output Answer\n\n"]}
{"id": 1672, "answer": true, "completion": ".decl Has_n_theses(Person:symbol, N_theses:float)\nHas_n_theses(\"Martin Luther\", 3).\n.decl Has_n_days(Person:symbol, N_days:float)\nHas_n_days(\"Martin Luther\", 365).\n.decl Answer()\nAnswer() :- Has_n_theses(\"Martin Luther\", n_theses), Has_n_days(\"Martin Luther\", n_days), n_theses / n_days >= 0.5.\n.output Answer\n\n", "completions": [".decl Has_n_theses(Person:symbol, N_theses:float)\nHas_n_theses(\"Martin Luther\", 3).\n.decl Has_n_days(Person:symbol, N_days:float)\nHas_n_days(\"Martin Luther\", 365).\n.decl Answer()\nAnswer() :- Has_n_theses(\"Martin Luther\", n_theses), Has_n_days(\"Martin Luther\", n_days), n_theses / n_days >= 0.5.\n.output Answer\n\n"]}
{"id": 1673, "answer": false, "completion": ".decl Has_n_options(Box:symbol, N_options:float)\nHas_n_options(\"A1\", 9).\nHas_n_options(\"A2\", 9).\nHas_n_options(\"A3\", 9).\nHas_n_options(\"A4\", 9).\nHas_n_options(\"A5\", 9).\nHas_n_options(\"A6\", 9).\nHas_n_options(\"A7\", 9).\nHas_n_options(\"A8\", 9).\nHas_n_options(\"A9\", 9).\nHas_n_options(\"B1\", 9).\nHas_n_options(\"B2\", 9).\nHas_n_options(\"B3\", 9).\nHas_n_options(\"B4\", 9).\nHas_n_options(\"B5\", 9).\nHas_n_options(\"B6\", 9).\nHas_n_options(\"B7\", 9).\nHas_n_options(\"B8\", 9).\nHas_n_options(\"B9\", 9).\nHas_n_options(\"C1\", 9).\nHas_n_options(\"C2\", 9).\nHas_n_options(\"C3\", 9).\nHas_n_options(\"C4\", 9).\nHas_n_options(\"C5\", 9).\nHas_n_options(\"C6\", 9).\nHas_n_options(\"C7\", 9).\nHas_n_options(\"C8\", 9).\nHas_n_options(\"C9\", 9).\nHas_n_options(\"D1\", 9).\nHas_n_options(\"D2\", 9).\nHas_n_options(\"D3\", 9).\nHas_n_options(\"D4\", 9).\nHas_n_options(\"D5\", 9).\nHas_n_options(\"D6\", 9).\nHas_n_options(\"D7\", 9).\nHas_n_options(\"D8\", 9).\nHas_n_options(\"D9\", 9).\nHas_n_options(\"E1\", 9).\nHas_n_options(\"E2\", 9).\nHas_n_options(\"E3\", 9).\nHas_n_options(\"E4\", 9).\nHas_n_options(\"E5\", 9).\nHas_n_options(\"E6\", 9).\nHas_n_options(\"E7\", 9).\nHas_n_options(\"E8\", 9).\nHas_n_options(\"E9\", 9).\nHas_n_options(\"F1\", 9).\nHas_n_options(\"F2\", 9).\nHas_n_options(\"F3\", 9).\nHas_n_options(\"F4\", 9).\nHas_n_options(\"F5\", 9).\nHas_n_options(\"F6\", 9).\nHas_n_options(\"F7\", 9).\nHas_n_options(\"F8\", 9).\nHas_n_options(\"F9\", 9).\nHas_n_options(\"G1\", 9).\nHas_n_options(\"G2\", 9).\nHas_n_options(\"G3\", 9).\nHas_n_options(\"G4\", 9).\nHas_n_options(\"G5\", 9).\nHas_n_options(\"G6\", 9).\nHas_n_options(\"G7\", 9).\nHas_n_options(\"G8\", 9).\nHas_n_options(\"G9\", 9).\nHas_n_options(\"H1\", 9).\nHas_n_options(\"H2\", 9).", "completions": [".decl Has_n_options(Box:symbol, N_options:float)\nHas_n_options(\"A1\", 9).\nHas_n_options(\"A2\", 9).\nHas_n_options(\"A3\", 9).\nHas_n_options(\"A4\", 9).\nHas_n_options(\"A5\", 9).\nHas_n_options(\"A6\", 9).\nHas_n_options(\"A7\", 9).\nHas_n_options(\"A8\", 9).\nHas_n_options(\"A9\", 9).\nHas_n_options(\"B1\", 9).\nHas_n_options(\"B2\", 9).\nHas_n_options(\"B3\", 9).\nHas_n_options(\"B4\", 9).\nHas_n_options(\"B5\", 9).\nHas_n_options(\"B6\", 9).\nHas_n_options(\"B7\", 9).\nHas_n_options(\"B8\", 9).\nHas_n_options(\"B9\", 9).\nHas_n_options(\"C1\", 9).\nHas_n_options(\"C2\", 9).\nHas_n_options(\"C3\", 9).\nHas_n_options(\"C4\", 9).\nHas_n_options(\"C5\", 9).\nHas_n_options(\"C6\", 9).\nHas_n_options(\"C7\", 9).\nHas_n_options(\"C8\", 9).\nHas_n_options(\"C9\", 9).\nHas_n_options(\"D1\", 9).\nHas_n_options(\"D2\", 9).\nHas_n_options(\"D3\", 9).\nHas_n_options(\"D4\", 9).\nHas_n_options(\"D5\", 9).\nHas_n_options(\"D6\", 9).\nHas_n_options(\"D7\", 9).\nHas_n_options(\"D8\", 9).\nHas_n_options(\"D9\", 9).\nHas_n_options(\"E1\", 9).\nHas_n_options(\"E2\", 9).\nHas_n_options(\"E3\", 9).\nHas_n_options(\"E4\", 9).\nHas_n_options(\"E5\", 9).\nHas_n_options(\"E6\", 9).\nHas_n_options(\"E7\", 9).\nHas_n_options(\"E8\", 9).\nHas_n_options(\"E9\", 9).\nHas_n_options(\"F1\", 9).\nHas_n_options(\"F2\", 9).\nHas_n_options(\"F3\", 9).\nHas_n_options(\"F4\", 9).\nHas_n_options(\"F5\", 9).\nHas_n_options(\"F6\", 9).\nHas_n_options(\"F7\", 9).\nHas_n_options(\"F8\", 9).\nHas_n_options(\"F9\", 9).\nHas_n_options(\"G1\", 9).\nHas_n_options(\"G2\", 9).\nHas_n_options(\"G3\", 9).\nHas_n_options(\"G4\", 9).\nHas_n_options(\"G5\", 9).\nHas_n_options(\"G6\", 9).\nHas_n_options(\"G7\", 9).\nHas_n_options(\"G8\", 9).\nHas_n_options(\"G9\", 9).\nHas_n_options(\"H1\", 9).\nHas_n_options(\"H2\", 9)."]}
{"id": 1674, "answer": true, "completion": ".decl Belongs_to_party(Person:symbol, Party:symbol)\nBelongs_to_party(\"Alistair Darling\", \"Labour Party\").\nBelongs_to_party(\"Alistair Darling\", \"Conservative Party\").\n.decl Answer()\nAnswer() :- Belongs_to_party(\"Alistair Darling\", \"Labour Party\").\nAnswer() :- Belongs_to_party(\"Alistair Darling\", party2), party2 \\= \"Labour Party\".\n.output Answer\n\n", "completions": [".decl Belongs_to_party(Person:symbol, Party:symbol)\nBelongs_to_party(\"Alistair Darling\", \"Labour Party\").\nBelongs_to_party(\"Alistair Darling\", \"Conservative Party\").\n.decl Answer()\nAnswer() :- Belongs_to_party(\"Alistair Darling\", \"Labour Party\").\nAnswer() :- Belongs_to_party(\"Alistair Darling\", party2), party2 \\= \"Labour Party\".\n.output Answer\n\n"]}
{"id": 1675, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Beauty and the Beast\", 3).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"inanimate objects\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"inanimate objects\", n_members1), Has_n_members(\"Beauty and the Beast\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Beauty and the Beast\", 3).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"inanimate objects\", 3).\n.decl Answer()\nAnswer() :- Has_n_members(\"inanimate objects\", n_members1), Has_n_members(\"Beauty and the Beast\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1676, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bottlenose dolphins\", 6).\nHas_n_members(\"human women\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"bottlenose dolphins\", n_members1), Has_n_members(\"human women\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"bottlenose dolphins\", 6).\nHas_n_members(\"human women\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"bottlenose dolphins\", n_members1), Has_n_members(\"human women\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1677, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Scooby Doo\", 0.5).\nHas_volume(\"kangaroo pouch\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"Scooby Doo\", volume1), Has_volume(\"kangaroo pouch\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Scooby Doo\", 0.5).\nHas_volume(\"kangaroo pouch\", 1).\n.decl Answer()\nAnswer() :- Has_volume(\"Scooby Doo\", volume1), Has_volume(\"kangaroo pouch\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 1678, "answer": false, "completion": ".decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"", "completions": [".decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\"Roberts family\", 5).\n.decl Has_n_actors(Family:symbol, N_actors:float)\nHas_n_actors(\""]}
{"id": 1679, "answer": false, "completion": ".decl Has_focal_length(Object:symbol, Focal_length:float)\nHas_focal_length(\"binoculars\", 10).\nHas_focal_length(\"telescope\", 20).\n.decl Answer()\nAnswer() :- Has_focal_length(\"binoculars\", focal_length1), Has_focal_length(\"telescope\", focal_length2), focal_length1 > focal_length2.\n.output Answer\n\n", "completions": [".decl Has_focal_length(Object:symbol, Focal_length:float)\nHas_focal_length(\"binoculars\", 10).\nHas_focal_length(\"telescope\", 20).\n.decl Answer()\nAnswer() :- Has_focal_length(\"binoculars\", focal_length1), Has_focal_length(\"telescope\", focal_length2), focal_length1 > focal_length2.\n.output Answer\n\n"]}
{"id": 1680, "answer": true, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ringo Starr\", \"pot roast\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Ringo Starr\", \"pot roast\").\n.decl Answer()\nAnswer() :- Avoid(\"Ringo Starr\", food), Eats(\"Ringo Starr\", food).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Ringo Starr\", \"pot roast\").\n.decl Avoid(Person:symbol, Food:symbol)\nAvoid(\"Ringo Starr\", \"pot roast\").\n.decl Answer()\nAnswer() :- Avoid(\"Ringo Starr\", food), Eats(\"Ringo Starr\", food).\n.output Answer\n\n"]}
{"id": 1681, "answer": false, "completion": ".decl Has_diagnosis(Person:symbol, Diagnosis:symbol)\nHas_diagnosis(\"John\", \"Great Depression\").\n.decl Has_symptom(Diagnosis:symbol, Symptom:symbol)\nHas_symptom(\"Great Depression\", \"sad\").\n.decl Answer()\nAnswer() :- Has_diagnosis(\"John\", diagnosis), Has_symptom(diagnosis, symptom).\n.output Answer\n\n", "completions": [".decl Has_diagnosis(Person:symbol, Diagnosis:symbol)\nHas_diagnosis(\"John\", \"Great Depression\").\n.decl Has_symptom(Diagnosis:symbol, Symptom:symbol)\nHas_symptom(\"Great Depression\", \"sad\").\n.decl Answer()\nAnswer() :- Has_diagnosis(\"John\", diagnosis), Has_symptom(diagnosis, symptom).\n.output Answer\n\n"]}
{"id": 1682, "answer": true, "completion": ".decl Has_temperature(Planet:symbol, Temperature:float)\nHas_temperature(\"Mercury\", -173).\nHas_temperature(\"Venus\", 464).\nHas_temperature(\"Earth\", 15).\nHas_temperature(\"Mars\", -85).\nHas_temperature(\"Jupiter\", -148).\nHas_temperature(\"Saturn\", -178).\nHas_temperature(\"Uranus\", -195).\nHas_temperature(\"Neptune\", -201).\n.decl Answer()\nAnswer() :- Has_temperature(\"Mercury\", temperature), temperature > 0.\n.output Answer\n\n", "completions": [".decl Has_temperature(Planet:symbol, Temperature:float)\nHas_temperature(\"Mercury\", -173).\nHas_temperature(\"Venus\", 464).\nHas_temperature(\"Earth\", 15).\nHas_temperature(\"Mars\", -85).\nHas_temperature(\"Jupiter\", -148).\nHas_temperature(\"Saturn\", -178).\nHas_temperature(\"Uranus\", -195).\nHas_temperature(\"Neptune\", -201).\n.decl Answer()\nAnswer() :- Has_temperature(\"Mercury\", temperature), temperature > 0.\n.output Answer\n\n"]}
{"id": 1683, "answer": true, "completion": ".decl Reads(Person:symbol, Book:symbol)\nReads(\"Helen Keller\", \"Harry Potter and the Sorcerer's Stone\").\n.decl Writes(Person:symbol, Book:symbol)\nWrites(\"J. K. Rowling\", \"Harry Potter and the Sorcerer's Stone\").\n.decl Answer()\nAnswer() :- Reads(\"Helen Keller\", book), Writes(\"J. K. Rowling\", book).\n.output Answer\n\n", "completions": [".decl Reads(Person:symbol, Book:symbol)\nReads(\"Helen Keller\", \"Harry Potter and the Sorcerer's Stone\").\n.decl Writes(Person:symbol, Book:symbol)\nWrites(\"J. K. Rowling\", \"Harry Potter and the Sorcerer's Stone\").\n.decl Answer()\nAnswer() :- Reads(\"Helen Keller\", book), Writes(\"J. K. Rowling\", book).\n.output Answer\n\n"]}
{"id": 1684, "answer": true, "completion": ".decl Has_military_rank(Person:symbol, Military_rank:symbol)\nHas_military_rank(\"John Rambo\", \"Lieutenant Colonel\").\nHas_military_rank(\"John Rambo\", \"Colonel\").\nHas_military_rank(\"John Rambo\", \"Major\").\nHas_military_rank(\"John Rambo\", \"Captain\").\nHas_military_rank(\"John Rambo\", \"First Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Second Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Sergeant\").\nHas_military_rank(\"John Rambo\", \"Corporal\").\nHas_military_rank(\"John Rambo\", \"Private First Class\").\nHas_military_rank(\"John Rambo\", \"Private\").\n.decl Has_military_discipline(Person:symbol, Military_discipline:float)\nHas_military_discipline(\"John Rambo\", 0.5).\n.decl Answer()\nAnswer() :- Has_military_rank(\"John Rambo\", military_rank), Has_military_discipline(\"John Rambo\", military_discipline), military_discipline > 0.5.\n.output Answer\n\n", "completions": [".decl Has_military_rank(Person:symbol, Military_rank:symbol)\nHas_military_rank(\"John Rambo\", \"Lieutenant Colonel\").\nHas_military_rank(\"John Rambo\", \"Colonel\").\nHas_military_rank(\"John Rambo\", \"Major\").\nHas_military_rank(\"John Rambo\", \"Captain\").\nHas_military_rank(\"John Rambo\", \"First Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Second Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Lieutenant\").\nHas_military_rank(\"John Rambo\", \"Sergeant\").\nHas_military_rank(\"John Rambo\", \"Corporal\").\nHas_military_rank(\"John Rambo\", \"Private First Class\").\nHas_military_rank(\"John Rambo\", \"Private\").\n.decl Has_military_discipline(Person:symbol, Military_discipline:float)\nHas_military_discipline(\"John Rambo\", 0.5).\n.decl Answer()\nAnswer() :- Has_military_rank(\"John Rambo\", military_rank), Has_military_discipline(\"John Rambo\", military_discipline), military_discipline > 0.5.\n.output Answer\n\n"]}
{"id": 1685, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jay Thomas\", \"Clayton Moore\").\n.decl Has_enemy(Person:symbol, Enemy:symbol)\nHas_enemy(\"Jay Thomas\", \"Clayton Moore\").\n.decl Answer()\nAnswer() :- Has_name(\"Jay Thomas\", name), Has_enemy(\"Jay Thomas\", enemy), name = enemy.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Jay Thomas\", \"Clayton Moore\").\n.decl Has_enemy(Person:symbol, Enemy:symbol)\nHas_enemy(\"Jay Thomas\", \"Clayton Moore\").\n.decl Answer()\nAnswer() :- Has_name(\"Jay Thomas\", name), Has_enemy(\"Jay Thomas\", enemy), name = enemy.\n.output Answer\n\n"]}
{"id": 1686, "answer": false, "completion": ".decl Has_email(Person:symbol, Email:symbol)\nHas_email(\"Douglas Adams\", \"douglas@gmail.com\").\nHas_email(\"Douglas Adams\", \"douglas@yahoo.com\").\n.decl Answer()\nAnswer() :- Has_email(\"Douglas Adams\", email).\n.output Answer\n\n", "completions": [".decl Has_email(Person:symbol, Email:symbol)\nHas_email(\"Douglas Adams\", \"douglas@gmail.com\").\nHas_email(\"Douglas Adams\", \"douglas@yahoo.com\").\n.decl Answer()\nAnswer() :- Has_email(\"Douglas Adams\", email).\n.output Answer\n\n"]}
{"id": 1687, "answer": false, "completion": ".decl Has_danger(Manipulation:symbol)\nHas_danger(\"chiropractic manipulation\").\n.decl Has_danger(Manipulation:symbol, Danger:symbol)\nHas_danger(\"chiropractic manipulation\", \"death\").\n.decl Answer()\nAnswer() :- Has_danger(\"chiropractic manipulation\").\nAnswer() :- Has_danger(\"chiropractic manipulation\", danger), danger != \"death\".\n.output Answer\n\n", "completions": [".decl Has_danger(Manipulation:symbol)\nHas_danger(\"chiropractic manipulation\").\n.decl Has_danger(Manipulation:symbol, Danger:symbol)\nHas_danger(\"chiropractic manipulation\", \"death\").\n.decl Answer()\nAnswer() :- Has_danger(\"chiropractic manipulation\").\nAnswer() :- Has_danger(\"chiropractic manipulation\", danger), danger != \"death\".\n.output Answer\n\n"]}
{"id": 1688, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Olivia Newton-John\", \"Olivia\").\nHas_name(\"Olivia Newton-John\", \"Newton-John\").\n.decl Has_n_letters(Name:symbol, N_letters:float)\nHas_n_letters(\"Olivia\", 6).\nHas_n_letters(\"Newton-John\", 9).\n.decl Answer()\nAnswer() :- Has_name(\"Olivia Newton-John\", name), Has_n_letters(name, n_letters), n_letters > 10.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Olivia Newton-John\", \"Olivia\").\nHas_name(\"Olivia Newton-John\", \"Newton-John\").\n.decl Has_n_letters(Name:symbol, N_letters:float)\nHas_n_letters(\"Olivia\", 6).\nHas_n_letters(\"Newton-John\", 9).\n.decl Answer()\nAnswer() :- Has_name(\"Olivia Newton-John\", name), Has_n_letters(name, n_letters), n_letters > 10.\n.output Answer\n\n"]}
{"id": 1689, "answer": true, "completion": ".decl Is_composite(Number:float)\nIs_composite(4).\nIs_composite(6).\nIs_composite(8).\nIs_composite(9).\nIs_composite(10).\nIs_composite(12).\nIs_composite(14).\nIs_composite(15).\nIs_composite(16).\nIs_composite(18).\nIs_composite(20).\nIs_composite(21).\nIs_composite(22).\nIs_composite(24).\nIs_composite(25).\nIs_composite(26).\nIs_composite(27).\nIs_composite(28).\nIs_composite(30).\nIs_composite(32).\nIs_composite(33).\nIs_composite(34).\nIs_composite(35).\nIs_composite(36).\nIs_composite(38).\nIs_composite(39).\nIs_composite(40).\nIs_composite(42).\nIs_composite(44).\nIs_composite(45).\nIs_composite(46).\nIs_composite(48).\nIs_composite(49).\nIs_composite(50).\nIs_composite(51).\nIs_composite(52).\nIs_composite(54).\nIs_composite(55).\nIs_composite(56).\nIs_composite(57).\nIs_composite(58).\nIs_composite(60).\nIs_composite(62).\nIs_composite(63).\nIs_composite(64).\nIs_composite(65).\nIs_composite(66).\nIs_composite(68).\nIs_composite(69).\nIs_composite(70).\nIs_composite(72).\nIs_composite(74).\nIs_composite(75).\nIs_composite(76).\nIs_composite(77).\nIs_composite(78).\nIs_composite(80).\nIs_composite(81).\nIs_composite(82).\nIs_composite(84).\nIs_composite(85).\nIs_composite(86).\nIs_composite(87).\nIs_composite(88).\nIs_composite(90).\nIs_composite(91).\nIs_composite(92).\nIs_composite(93).\nIs_composite(94).\nIs_composite(95).\nIs_composite(96).\nIs_composite(98).\nIs_composite(99).\nIs_composite(100).\n.decl Answer()\nAnswer() :- Is_composite(casio_founding_year).\n.output Answer\n\n", "completions": [".decl Is_composite(Number:float)\nIs_composite(4).\nIs_composite(6).\nIs_composite(8).\nIs_composite(9).\nIs_composite(10).\nIs_composite(12).\nIs_composite(14).\nIs_composite(15).\nIs_composite(16).\nIs_composite(18).\nIs_composite(20).\nIs_composite(21).\nIs_composite(22).\nIs_composite(24).\nIs_composite(25).\nIs_composite(26).\nIs_composite(27).\nIs_composite(28).\nIs_composite(30).\nIs_composite(32).\nIs_composite(33).\nIs_composite(34).\nIs_composite(35).\nIs_composite(36).\nIs_composite(38).\nIs_composite(39).\nIs_composite(40).\nIs_composite(42).\nIs_composite(44).\nIs_composite(45).\nIs_composite(46).\nIs_composite(48).\nIs_composite(49).\nIs_composite(50).\nIs_composite(51).\nIs_composite(52).\nIs_composite(54).\nIs_composite(55).\nIs_composite(56).\nIs_composite(57).\nIs_composite(58).\nIs_composite(60).\nIs_composite(62).\nIs_composite(63).\nIs_composite(64).\nIs_composite(65).\nIs_composite(66).\nIs_composite(68).\nIs_composite(69).\nIs_composite(70).\nIs_composite(72).\nIs_composite(74).\nIs_composite(75).\nIs_composite(76).\nIs_composite(77).\nIs_composite(78).\nIs_composite(80).\nIs_composite(81).\nIs_composite(82).\nIs_composite(84).\nIs_composite(85).\nIs_composite(86).\nIs_composite(87).\nIs_composite(88).\nIs_composite(90).\nIs_composite(91).\nIs_composite(92).\nIs_composite(93).\nIs_composite(94).\nIs_composite(95).\nIs_composite(96).\nIs_composite(98).\nIs_composite(99).\nIs_composite(100).\n.decl Answer()\nAnswer() :- Is_composite(casio_founding_year).\n.output Answer\n\n"]}
{"id": 1690, "answer": false, "completion": ".decl Has_grip(Object:symbol, Grip:float)\nHas_grip(\"Hades\", 0.9).\nHas_grip(\"Underworld\", 0.8).\n.decl Answer()\nAnswer() :- Has_grip(\"Hades\", grip1), Has_grip(\"Underworld\", grip2), grip1 > grip2.\n.output Answer\n\n", "completions": [".decl Has_grip(Object:symbol, Grip:float)\nHas_grip(\"Hades\", 0.9).\nHas_grip(\"Underworld\", 0.8).\n.decl Answer()\nAnswer() :- Has_grip(\"Hades\", grip1), Has_grip(\"Underworld\", grip2), grip1 > grip2.\n.output Answer\n\n"]}
{"id": 1691, "answer": true, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"George W. Bush\", \"English\").\nSpeaks(\"George W. Bush\", \"Mandarin\").\nSpeaks(\"George W. Bush\", \"Cantonese\").\n.decl Answer()\nAnswer() :- Speaks(\"George W. Bush\", language), language = \"Cantonese\".\n.output Answer\n\n", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"George W. Bush\", \"English\").\nSpeaks(\"George W. Bush\", \"Mandarin\").\nSpeaks(\"George W. Bush\", \"Cantonese\").\n.decl Answer()\nAnswer() :- Speaks(\"George W. Bush\", language), language = \"Cantonese\".\n.output Answer\n\n"]}
{"id": 1692, "answer": true, "completion": ".decl Is_crucifixion_a_crime(Country:symbol)\nIs_crucifixion_a_crime(\"United States\").\n.decl Is_crucifixion_a_crime(Country:symbol)\nIs_crucifixion_a_crime(\"Canada\").\n.decl Answer()\nAnswer() :- Is_crucifixion_a_crime(\"United States\"), Is_crucifixion_a_crime(\"Canada\").\n.output Answer\n\n", "completions": [".decl Is_crucifixion_a_crime(Country:symbol)\nIs_crucifixion_a_crime(\"United States\").\n.decl Is_crucifixion_a_crime(Country:symbol)\nIs_crucifixion_a_crime(\"Canada\").\n.decl Answer()\nAnswer() :- Is_crucifixion_a_crime(\"United States\"), Is_crucifixion_a_crime(\"Canada\").\n.output Answer\n\n"]}
{"id": 1693, "answer": true, "completion": ".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"crash\", \"stroke\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"crash\", \"car\").\n.decl Has_cause_effect(Cause:symbol, Effect:symbol)\nHas_cause_effect(\"stroke\", \"car\").\n.decl Answer()\nAnswer() :- Has_cause(\"crash\", cause), Has_effect(\"crash\", effect), Has_cause_effect(cause, effect).\n.output Answer\n\n", "completions": [".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"crash\", \"stroke\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"crash\", \"car\").\n.decl Has_cause_effect(Cause:symbol, Effect:symbol)\nHas_cause_effect(\"stroke\", \"car\").\n.decl Answer()\nAnswer() :- Has_cause(\"crash\", cause), Has_effect(\"crash\", effect), Has_cause_effect(cause, effect).\n.output Answer\n\n"]}
{"id": 1694, "answer": false, "completion": ".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Harry Potter and the Philosopher's Stone\", \"fantasy\").\nHas_genre(\"Harry Potter and the Chamber of Secrets\", \"fantasy\").\nHas_genre(\"Harry Potter and the Prisoner of Azkaban\", \"fantasy\").\nHas_genre(\"Harry Potter and the Goblet of Fire\", \"fantasy\").\nHas_genre(\"Harry Potter and the Order of the Phoenix\", \"fantasy\").\nHas_genre(\"Harry Potter and the Half-Blood Prince\", \"fantasy\").\nHas_genre(\"Harry Potter and the Deathly Hallows\", \"fantasy\").\nHas_genre(\"And Then There Were None\", \"mystery\").\n.decl Answer()\nAnswer() :- Has_genre(\"Harry Potter and the Philosopher's Stone\", genre), Has_genre(\"Harry Potter and the Chamber of Secrets\", genre), Has_genre(\"Harry Potter and the Prisoner of Azkaban\", genre), Has_genre(\"Harry Potter and the Goblet of Fire\", genre), Has_genre(\"Harry Potter and the Order of the Phoenix\", genre), Has_genre(\"Harry Potter and the Half-Blood Prince\", genre), Has_genre(\"Harry Potter and the Deathly Hallows\", genre), Has_genre(\"And Then There Were None\", genre).\n.output Answer\n\n", "completions": [".decl Has_genre(Book:symbol, Genre:symbol)\nHas_genre(\"Harry Potter and the Philosopher's Stone\", \"fantasy\").\nHas_genre(\"Harry Potter and the Chamber of Secrets\", \"fantasy\").\nHas_genre(\"Harry Potter and the Prisoner of Azkaban\", \"fantasy\").\nHas_genre(\"Harry Potter and the Goblet of Fire\", \"fantasy\").\nHas_genre(\"Harry Potter and the Order of the Phoenix\", \"fantasy\").\nHas_genre(\"Harry Potter and the Half-Blood Prince\", \"fantasy\").\nHas_genre(\"Harry Potter and the Deathly Hallows\", \"fantasy\").\nHas_genre(\"And Then There Were None\", \"mystery\").\n.decl Answer()\nAnswer() :- Has_genre(\"Harry Potter and the Philosopher's Stone\", genre), Has_genre(\"Harry Potter and the Chamber of Secrets\", genre), Has_genre(\"Harry Potter and the Prisoner of Azkaban\", genre), Has_genre(\"Harry Potter and the Goblet of Fire\", genre), Has_genre(\"Harry Potter and the Order of the Phoenix\", genre), Has_genre(\"Harry Potter and the Half-Blood Prince\", genre), Has_genre(\"Harry Potter and the Deathly Hallows\", genre), Has_genre(\"And Then There Were None\", genre).\n.output Answer\n\n"]}
{"id": 1695, "answer": false, "completion": ".decl Has_bullet(Sport:symbol)\nHas_bullet(\"archery\").\nHas_bullet(\"fencing\").\nHas_bullet(\"shooting\").\n.decl Answer()\nAnswer() :- Has_bullet(\"archery\").\nAnswer() :- Has_bullet(\"fencing\").\nAnswer() :- Has_bullet(\"shooting\").\n.output Answer\n\n", "completions": [".decl Has_bullet(Sport:symbol)\nHas_bullet(\"archery\").\nHas_bullet(\"fencing\").\nHas_bullet(\"shooting\").\n.decl Answer()\nAnswer() :- Has_bullet(\"archery\").\nAnswer() :- Has_bullet(\"fencing\").\nAnswer() :- Has_bullet(\"shooting\").\n.output Answer\n\n"]}
{"id": 1696, "answer": true, "completion": ".decl Has_native_name(Language:symbol, Native_name:symbol)\nHas_native_name(\"English\", \"English\").\nHas_native_name(\"Chinese\", \"中文\").\nHas_native_name(\"Japanese\", \"日本語\").\nHas_native_name(\"Korean\", \"한국어\").\n.decl Answer()\nAnswer() :- Has_native_name(\"American\", native_name), Has_native_name(\"American\", language), Has_native_name(language, native_name).\n.output Answer\n\n", "completions": [".decl Has_native_name(Language:symbol, Native_name:symbol)\nHas_native_name(\"English\", \"English\").\nHas_native_name(\"Chinese\", \"中文\").\nHas_native_name(\"Japanese\", \"日本語\").\nHas_native_name(\"Korean\", \"한국어\").\n.decl Answer()\nAnswer() :- Has_native_name(\"American\", native_name), Has_native_name(\"American\", language), Has_native_name(language, native_name).\n.output Answer\n\n"]}
{"id": 1697, "answer": false, "completion": ".decl Watches(Person:symbol, Movie:symbol)\nWatches(\"Guinea Bissauan\", \"No Country for Old Men\").\nWatches(\"Guinea Bissauan\", \"The Big Lebowski\").\n.decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Guinea Bissauan\", \"English\").\n.decl Answer()\nAnswer() :- Watches(\"Guinea Bissauan\", movie), Has_language(\"Guinea Bissauan\", language), language != \"English\".\n.output Answer\n\n", "completions": [".decl Watches(Person:symbol, Movie:symbol)\nWatches(\"Guinea Bissauan\", \"No Country for Old Men\").\nWatches(\"Guinea Bissauan\", \"The Big Lebowski\").\n.decl Has_language(Person:symbol, Language:symbol)\nHas_language(\"Guinea Bissauan\", \"English\").\n.decl Answer()\nAnswer() :- Watches(\"Guinea Bissauan\", movie), Has_language(\"Guinea Bissauan\", language), language != \"English\".\n.output Answer\n\n"]}
{"id": 1698, "answer": true, "completion": ".decl Has_moustache(Person:symbol)\nHas_moustache(\"Tom Cruise\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache", "completions": [".decl Has_moustache(Person:symbol)\nHas_moustache(\"Tom Cruise\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache(\"Jackie Chan\").\nHas_moustache"]}
{"id": 1699, "answer": true, "completion": ".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Jeremy Irons\", \"sweep picking\").\n.decl Answer()\nAnswer() :- Has_skill(\"Jeremy Irons\", skill).\n.output Answer\n\n", "completions": [".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Jeremy Irons\", \"sweep picking\").\n.decl Answer()\nAnswer() :- Has_skill(\"Jeremy Irons\", skill).\n.output Answer\n\n"]}
{"id": 1700, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Vietnamese people\", 100000000).\n.decl Answer()\nAnswer() :- Has_n_members(\"Vietnamese people\", n_members), n_members > 100000000.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Vietnamese people\", 100000000).\n.decl Answer()\nAnswer() :- Has_n_members(\"Vietnamese people\", n_members), n_members > 100000000.\n.output Answer\n\n"]}
{"id": 1701, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Seuss\", \"Theodor Seuss Geisel\").\n.decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Dr. Seuss\", 1904).\n.decl Answer()\nAnswer() :- Has_name(\"Dr. Seuss\", name), Has_birth_year(\"Dr. Seuss\", birth_year), birth_year < 1904.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Seuss\", \"Theodor Seuss Geisel\").\n.decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Dr. Seuss\", 1904).\n.decl Answer()\nAnswer() :- Has_name(\"Dr. Seuss\", name), Has_birth_year(\"Dr. Seuss\", birth_year), birth_year < 1904.\n.output Answer\n\n"]}
{"id": 1702, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Alfa Romeo\", 200000).\nHas_price(\"Starbucks\", 0.5).\n.decl Answer()\nAnswer() :- Has_price(\"Alfa Romeo\", price1), Has_price(\"Starbucks\", price2), price1 < price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Alfa Romeo\", 200000).\nHas_price(\"Starbucks\", 0.5).\n.decl Answer()\nAnswer() :- Has_price(\"Alfa Romeo\", price1), Has_price(\"Starbucks\", price2), price1 < price2.\n.output Answer\n\n"]}
{"id": 1703, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"drain fly\", \"black\").\nHas_color(\"drain fly\", \"brown\").\nHas_color(\"drain fly\", \"red\").\nHas_color(\"drain fly\", \"yellow\").\nHas_color(\"drain fly\", \"white\").\nHas_color(\"drain fly\", \"green\").\nHas_color(\"drain fly\", \"blue\").\nHas_color(\"drain fly\", \"purple\").\nHas_color(\"drain fly\", \"orange\").\nHas_color(\"drain fly\", \"pink\").\nHas_color(\"drain fly\", \"gray\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"silver\").\nHas_color(\"drain fly\", \"tan\").\nHas_color(\"drain fly\", \"teal\").\nHas_color(\"drain fly\", \"violet\").\nHas_color(\"drain fly\", \"indigo\").\nHas_color(\"drain fly\", \"magenta\").\nHas_color(\"drain fly\", \"cyan\").\nHas_color(\"drain fly\", \"turquoise\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"olive\").\nHas_color(\"drain fly\", \"navy\").\nHas_color(\"drain fly\", \"khaki\").\nHas_color(\"drain fly\", \"tan\").\nHas_color(\"drain fly\", \"beige\").\nHas_color(\"drain fly\", \"azure\").\nHas_color(\"drain fly\", \"lavender\").\nHas_color(\"drain fly\", \"silver\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"plum\").\nHas_color(\"drain fly\", \"rose\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"mauve\").\nHas_color(\"drain fly\", \"aqua\").\nHas_color(\"drain fly\", \"aquamarine\").\nHas_color(\"drain fly\", \"beige\").\nHas_color(\"drain fly\", \"black\").\nHas_color(\"drain fly\", \"blue\").\nHas_color(\"drain fly\", \"brown\").\nHas_color(\"drain fly\", \"chartreuse\").\nHas_color(\"drain fly\", \"chocolate\").\nHas_color(\"drain fly\", \"coral\").\nHas_color(\"drain fly\", \"crimson\").\nHas_color(\"drain fly\", \"cyan\").\nHas_color(\"drain fly\", \"fuchsia\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"gray\").\nHas_color(\"drain fly\", \"green\").\nHas_color(\"drain fly\", \"indigo\").\nHas_color(\"drain fly\", \"ivory\").\nHas_color(\"drain fly\", \"khaki\").\nHas_color(\"drain fly\", \"lavender\").\nHas_color(\"drain fly\", \"lime\").\nHas_color(\"drain fly\", \"magenta\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"navy\").\nHas_color(\"drain fly\", \"olive\").\nHas_color(\"drain fly\", \"orange\").\nHas_color(\"drain fly\", \"orchid\").\nHas_color(\"drain fly\", \"plum\").\nHas_color(\"drain fly\",", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"drain fly\", \"black\").\nHas_color(\"drain fly\", \"brown\").\nHas_color(\"drain fly\", \"red\").\nHas_color(\"drain fly\", \"yellow\").\nHas_color(\"drain fly\", \"white\").\nHas_color(\"drain fly\", \"green\").\nHas_color(\"drain fly\", \"blue\").\nHas_color(\"drain fly\", \"purple\").\nHas_color(\"drain fly\", \"orange\").\nHas_color(\"drain fly\", \"pink\").\nHas_color(\"drain fly\", \"gray\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"silver\").\nHas_color(\"drain fly\", \"tan\").\nHas_color(\"drain fly\", \"teal\").\nHas_color(\"drain fly\", \"violet\").\nHas_color(\"drain fly\", \"indigo\").\nHas_color(\"drain fly\", \"magenta\").\nHas_color(\"drain fly\", \"cyan\").\nHas_color(\"drain fly\", \"turquoise\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"olive\").\nHas_color(\"drain fly\", \"navy\").\nHas_color(\"drain fly\", \"khaki\").\nHas_color(\"drain fly\", \"tan\").\nHas_color(\"drain fly\", \"beige\").\nHas_color(\"drain fly\", \"azure\").\nHas_color(\"drain fly\", \"lavender\").\nHas_color(\"drain fly\", \"silver\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"plum\").\nHas_color(\"drain fly\", \"rose\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"mauve\").\nHas_color(\"drain fly\", \"aqua\").\nHas_color(\"drain fly\", \"aquamarine\").\nHas_color(\"drain fly\", \"beige\").\nHas_color(\"drain fly\", \"black\").\nHas_color(\"drain fly\", \"blue\").\nHas_color(\"drain fly\", \"brown\").\nHas_color(\"drain fly\", \"chartreuse\").\nHas_color(\"drain fly\", \"chocolate\").\nHas_color(\"drain fly\", \"coral\").\nHas_color(\"drain fly\", \"crimson\").\nHas_color(\"drain fly\", \"cyan\").\nHas_color(\"drain fly\", \"fuchsia\").\nHas_color(\"drain fly\", \"gold\").\nHas_color(\"drain fly\", \"gray\").\nHas_color(\"drain fly\", \"green\").\nHas_color(\"drain fly\", \"indigo\").\nHas_color(\"drain fly\", \"ivory\").\nHas_color(\"drain fly\", \"khaki\").\nHas_color(\"drain fly\", \"lavender\").\nHas_color(\"drain fly\", \"lime\").\nHas_color(\"drain fly\", \"magenta\").\nHas_color(\"drain fly\", \"maroon\").\nHas_color(\"drain fly\", \"navy\").\nHas_color(\"drain fly\", \"olive\").\nHas_color(\"drain fly\", \"orange\").\nHas_color(\"drain fly\", \"orchid\").\nHas_color(\"drain fly\", \"plum\").\nHas_color(\"drain fly\","]}
{"id": 1704, "answer": true, "completion": ".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"golden eagle\", \"bird\").\nIs_a(\"golden eagle\", \"scavenger\").\nIs_a(\"golden eagle\", \"animal\").\n.decl Is_a(Class:symbol, Superclass:symbol)\nIs_a(\"bird\", \"animal\").\nIs_a(\"scavenger\", \"animal\").\n.decl Answer()\nAnswer() :- Is_a(\"golden eagle\", \"scavenger\").\nAnswer() :- Is_a(\"golden eagle\", class1), Is_a(class1, superclass1), Is_a(\"bird\", superclass1).\n.output Answer\n\n", "completions": [".decl Is_a(Animal:symbol, Class:symbol)\nIs_a(\"golden eagle\", \"bird\").\nIs_a(\"golden eagle\", \"scavenger\").\nIs_a(\"golden eagle\", \"animal\").\n.decl Is_a(Class:symbol, Superclass:symbol)\nIs_a(\"bird\", \"animal\").\nIs_a(\"scavenger\", \"animal\").\n.decl Answer()\nAnswer() :- Is_a(\"golden eagle\", \"scavenger\").\nAnswer() :- Is_a(\"golden eagle\", class1), Is_a(class1, superclass1), Is_a(\"bird\", superclass1).\n.output Answer\n\n"]}
{"id": 1705, "answer": true, "completion": ".decl Has_price(Food:symbol, Price:float)\nHas_price(\"hamburger\", 3).\nHas_price(\"hamburger\", 2).\nHas_price(\"hamburger\", 1).\nHas_price(\"hamburger\", 0.5).\nHas_price(\"hamburger\", 0.1).\nHas_price(\"apple\", 0.5).\nHas_price(\"apple\", 0.1).\nHas_price(\"apple\", 0.05).\nHas_price(\"apple\", 0.01).\nHas_price(\"apple\", 0.005).\nHas_price(\"apple\", 0.001).\nHas_price(\"apple\", 0.0005).\nHas_price(\"apple\", 0.0001).\nHas_price(\"apple\", 0.00005).\nHas_price(\"apple\", 0.00001).\nHas_price(\"apple\", 0.000005).\nHas_price(\"apple\", 0.000001).\nHas_price(\"apple\", 0.0000005).\nHas_price(\"apple\", 0.0000001).\nHas_price(\"apple\", 0.00000005).\nHas_price(\"apple\", 0.00000001).\nHas_price(\"apple\", 0.000000005).\nHas_price(\"apple\", 0.000000001).\nHas_price(\"apple\", 0.0000000005).\nHas_price(\"apple\", 0.0000000001).\nHas_price(\"apple\", 0.00000000005).\nHas_price(\"apple\", 0.00000000001).\nHas_price(\"apple\", 0.000000000005).\nHas_price(\"apple\", 0.000000000001).\nHas_price(\"apple\", 0.0000000000005).\nHas_price(\"apple\", 0.0000000000001).\nHas_price(\"apple\", 0.00000000000005).\nHas_price(\"apple\", 0.00000000000001).\nHas_price(\"apple\", 0.000000000000005).\nHas_price(\"apple\", 0.000000000000001).\nHas_price(\"apple\", 0.0000000000000005).\nHas_price(\"apple\", 0.0000000000000001).\nHas_price(\"apple\", 0.00000000000000005).\nHas_price(\"apple\", 0.00000000000000001).\nHas_price(\"apple\", 0.0000000000000000005).\nHas_price(\"apple\", 0.0000000000000000001).\nHas_price(\"apple\", 0.00000000000000000005).\nHas_price(\"apple\", 0.00000000000000000001).\nHas_price(\"apple\", 0.000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000000000001", "completions": [".decl Has_price(Food:symbol, Price:float)\nHas_price(\"hamburger\", 3).\nHas_price(\"hamburger\", 2).\nHas_price(\"hamburger\", 1).\nHas_price(\"hamburger\", 0.5).\nHas_price(\"hamburger\", 0.1).\nHas_price(\"apple\", 0.5).\nHas_price(\"apple\", 0.1).\nHas_price(\"apple\", 0.05).\nHas_price(\"apple\", 0.01).\nHas_price(\"apple\", 0.005).\nHas_price(\"apple\", 0.001).\nHas_price(\"apple\", 0.0005).\nHas_price(\"apple\", 0.0001).\nHas_price(\"apple\", 0.00005).\nHas_price(\"apple\", 0.00001).\nHas_price(\"apple\", 0.000005).\nHas_price(\"apple\", 0.000001).\nHas_price(\"apple\", 0.0000005).\nHas_price(\"apple\", 0.0000001).\nHas_price(\"apple\", 0.00000005).\nHas_price(\"apple\", 0.00000001).\nHas_price(\"apple\", 0.000000005).\nHas_price(\"apple\", 0.000000001).\nHas_price(\"apple\", 0.0000000005).\nHas_price(\"apple\", 0.0000000001).\nHas_price(\"apple\", 0.00000000005).\nHas_price(\"apple\", 0.00000000001).\nHas_price(\"apple\", 0.000000000005).\nHas_price(\"apple\", 0.000000000001).\nHas_price(\"apple\", 0.0000000000005).\nHas_price(\"apple\", 0.0000000000001).\nHas_price(\"apple\", 0.00000000000005).\nHas_price(\"apple\", 0.00000000000001).\nHas_price(\"apple\", 0.000000000000005).\nHas_price(\"apple\", 0.000000000000001).\nHas_price(\"apple\", 0.0000000000000005).\nHas_price(\"apple\", 0.0000000000000001).\nHas_price(\"apple\", 0.00000000000000005).\nHas_price(\"apple\", 0.00000000000000001).\nHas_price(\"apple\", 0.0000000000000000005).\nHas_price(\"apple\", 0.0000000000000000001).\nHas_price(\"apple\", 0.00000000000000000005).\nHas_price(\"apple\", 0.00000000000000000001).\nHas_price(\"apple\", 0.000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000000001).\nHas_price(\"apple\", 0.0000000000000000000000000005).\nHas_price(\"apple\", 0.0000000000000000000000000001).\nHas_price(\"apple\", 0.00000000000000000000000000005).\nHas_price(\"apple\", 0.00000000000000000000000000001).\nHas_price(\"apple\", 0.000000000000000000000000000005).\nHas_price(\"apple\", 0.000000000000000000000000000001"]}
{"id": 1706, "answer": false, "completion": ".decl Lives_on(Animal:symbol, Place:symbol)\nLives_on(\"bald eagle\", \"Mount Sharp\").\nLives_on(\"bald eagle\", \"Mount Everest\").\nLives_on(\"bald eagle\", \"Mount McKinley\").\n.decl Answer()\nAnswer() :- Lives_on(\"bald eagle\", place), Lives_on(\"bald eagle\", \"Mount Sharp\").\n.output Answer\n\n", "completions": [".decl Lives_on(Animal:symbol, Place:symbol)\nLives_on(\"bald eagle\", \"Mount Sharp\").\nLives_on(\"bald eagle\", \"Mount Everest\").\nLives_on(\"bald eagle\", \"Mount McKinley\").\n.decl Answer()\nAnswer() :- Lives_on(\"bald eagle\", place), Lives_on(\"bald eagle\", \"Mount Sharp\").\n.output Answer\n\n"]}
{"id": 1707, "answer": false, "completion": ".decl Cures(Medicine:symbol, Disease:symbol)\nCures(\"penicillin\", \"learning disability\").\n.decl Answer()\nAnswer() :- Cures(\"penicillin\", disease), Cures(\"penicillin\", disease2), disease != disease2.\n.output Answer\n\n", "completions": [".decl Cures(Medicine:symbol, Disease:symbol)\nCures(\"penicillin\", \"learning disability\").\n.decl Answer()\nAnswer() :- Cures(\"penicillin\", disease), Cures(\"penicillin\", disease2), disease != disease2.\n.output Answer\n\n"]}
{"id": 1708, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Danica McKellar\", 11).\nHas_age(\"Neil Armstrong\", 82).\n.decl Has_education(Person:symbol, Education:symbol)\nHas_education(\"Neil Armstrong\", \"high school\").\nHas_education(\"Danica McKellar\", \"high school\").\n.decl Answer()\nAnswer() :- Has_age(\"Danica McKellar\", age), Has_age(\"Neil Armstrong\", age), age < 18.\nAnswer() :- Has_education(\"Danica McKellar\", education), Has_education(\"Neil Armstrong\", education), education = \"high school\".\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Danica McKellar\", 11).\nHas_age(\"Neil Armstrong\", 82).\n.decl Has_education(Person:symbol, Education:symbol)\nHas_education(\"Neil Armstrong\", \"high school\").\nHas_education(\"Danica McKellar\", \"high school\").\n.decl Answer()\nAnswer() :- Has_age(\"Danica McKellar\", age), Has_age(\"Neil Armstrong\", age), age < 18.\nAnswer() :- Has_education(\"Danica McKellar\", education), Has_education(\"Neil Armstrong\", education), education = \"high school\".\n.output Answer\n\n"]}
{"id": 1709, "answer": false, "completion": ".decl Has_limbs(Animal:symbol)\nHas_limbs(\"Goblin shark\").\n.decl Can_ride_bikes(Animal:symbol)\nCan_ride_bikes(\"Goblin shark\").\n.decl Answer()\nAnswer() :- Has_limbs(\"Goblin shark\"), Can_ride_bikes(\"Goblin shark\").\n.output Answer\n\n", "completions": [".decl Has_limbs(Animal:symbol)\nHas_limbs(\"Goblin shark\").\n.decl Can_ride_bikes(Animal:symbol)\nCan_ride_bikes(\"Goblin shark\").\n.decl Answer()\nAnswer() :- Has_limbs(\"Goblin shark\"), Can_ride_bikes(\"Goblin shark\").\n.output Answer\n\n"]}
{"id": 1710, "answer": false, "completion": ".decl Has_n_pairs_of_eyes(Animal:symbol, N_pairs_of_eyes:float)\nHas_n_pairs_of_eyes(\"northern fur seal\", 2).\nHas_n_pairs_of_eyes(\"human\", 2).\n.decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"northern fur seal\", 4).\nHas_n_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_pairs_of_eyes(\"northern fur seal\", n_pairs_of_eyes), Has_n_legs(\"northern fur seal\", n_legs), n_pairs_of_eyes > n_legs.\n.output Answer\n\n", "completions": [".decl Has_n_pairs_of_eyes(Animal:symbol, N_pairs_of_eyes:float)\nHas_n_pairs_of_eyes(\"northern fur seal\", 2).\nHas_n_pairs_of_eyes(\"human\", 2).\n.decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"northern fur seal\", 4).\nHas_n_legs(\"human\", 2).\n.decl Answer()\nAnswer() :- Has_n_pairs_of_eyes(\"northern fur seal\", n_pairs_of_eyes), Has_n_legs(\"northern fur seal\", n_legs), n_pairs_of_eyes > n_legs.\n.output Answer\n\n"]}
{"id": 1711, "answer": false, "completion": ".decl Age(Person:symbol, Age:float)\nAge(\"Michael Bloomberg\", 76).\nAge(\"Barack Obama\", 55).\nAge(\"Bill Clinton\", 55).\nAge(\"George W. Bush\", 55).\nAge(\"George H. W. Bush\", 70).\nAge(\"Ronald Reagan\", 77).\nAge(\"Jimmy Carter\", 74).\nAge(\"Gerald Ford\", 82).\nAge(\"Richard Nixon\", 82).\nAge(\"Lyndon Johnson\", 81).\nAge(\"John F. Kennedy\", 46).\nAge(\"Dwight D. Eisenhower\", 78).\nAge(\"Harry S. Truman\", 82).\nAge(\"Franklin D. Roosevelt\", 60).\n.decl Satisfies(Person:symbol, Condition:symbol)\nSatisfies(\"Michael Bloomberg\", \"NYPD police officer age requirement\").\nSatisfies(\"Barack Obama\", \"NYPD police officer age requirement\").\nSatisfies(\"Bill Clinton\", \"NYPD police officer age requirement\").\nSatisfies(\"George W. Bush\", \"NYPD police officer age requirement\").\nSatisfies(\"George H. W. Bush\", \"NYPD police officer age requirement\").\nSatisfies(\"Ronald Reagan\", \"NYPD police officer age requirement\").\nSatisfies(\"Jimmy Carter\", \"NYPD police officer age requirement\").\nSatisfies(\"Gerald Ford\", \"NYPD police officer age requirement\").\nSatisfies(\"Richard Nixon\", \"NYPD police officer age requirement\").\nSatisfies(\"Lyndon Johnson\", \"NYPD police officer age requirement\").\nSatisfies(\"John F. Kennedy\", \"NYPD police officer age requirement\").\nSatisfies(\"Dwight D. Eisenhower\", \"NYPD police officer age requirement\").\nSatisfies(\"Harry S. Truman\", \"NYPD police officer age requirement\").\nSatisfies(\"Franklin D. Roosevelt\", \"NYPD police officer age requirement\").\n.decl Answer()\nAnswer() :- Age(\"Michael Bloomberg\", age1), Satisfies(\"Michael Bloomberg\", condition), Age(\"Barack Obama\", age2), Satisfies(\"Barack Obama\", condition), Age(\"Bill Clinton\", age3), Satisfies(\"Bill Clinton\", condition), Age(\"George W. Bush\", age4), Satisfies(\"George W. Bush\", condition), Age(\"George H. W. Bush\", age5), Satisfies(\"George H. W. Bush\", condition), Age(\"Ronald Reagan\", age6), Satisfies(\"Ronald Reagan\", condition), Age(\"Jimmy Carter\", age7), Satisfies(\"Jimmy Carter\", condition), Age(\"Gerald Ford\", age8), Satisfies(\"Gerald Ford\", condition), Age(\"Richard Nixon\", age9), Satisfies(\"Richard Nixon\", condition), Age(\"Lyndon Johnson\", age10), Satisfies(\"Lyndon Johnson\", condition), Age(\"John F. Kennedy\", age11), Satisfies(\"John F. Kennedy\", condition), Age(\"Dwight D. Eisenhower\", age12), Satisfies(\"Dwight D. Eisenhower\", condition), Age(\"Harry S. Truman\", age13), Satisfies(\"Harry S. Truman\", condition), Age(\"Franklin D. Roosevelt\", age14), Satisfies(\"Franklin D. Roosevelt\", condition), age1 >= 55, age2 >= 55, age3 >= 55, age4 >= 55, age5 >= 55, age6 >= 55, age7 >= 55, age8 >= 55, age9 >= 55, age10 >= 55, age11 >= 55, age12 >= 55, age13 >= 55, age14 >= 55.\n.output Answer\n\n", "completions": [".decl Age(Person:symbol, Age:float)\nAge(\"Michael Bloomberg\", 76).\nAge(\"Barack Obama\", 55).\nAge(\"Bill Clinton\", 55).\nAge(\"George W. Bush\", 55).\nAge(\"George H. W. Bush\", 70).\nAge(\"Ronald Reagan\", 77).\nAge(\"Jimmy Carter\", 74).\nAge(\"Gerald Ford\", 82).\nAge(\"Richard Nixon\", 82).\nAge(\"Lyndon Johnson\", 81).\nAge(\"John F. Kennedy\", 46).\nAge(\"Dwight D. Eisenhower\", 78).\nAge(\"Harry S. Truman\", 82).\nAge(\"Franklin D. Roosevelt\", 60).\n.decl Satisfies(Person:symbol, Condition:symbol)\nSatisfies(\"Michael Bloomberg\", \"NYPD police officer age requirement\").\nSatisfies(\"Barack Obama\", \"NYPD police officer age requirement\").\nSatisfies(\"Bill Clinton\", \"NYPD police officer age requirement\").\nSatisfies(\"George W. Bush\", \"NYPD police officer age requirement\").\nSatisfies(\"George H. W. Bush\", \"NYPD police officer age requirement\").\nSatisfies(\"Ronald Reagan\", \"NYPD police officer age requirement\").\nSatisfies(\"Jimmy Carter\", \"NYPD police officer age requirement\").\nSatisfies(\"Gerald Ford\", \"NYPD police officer age requirement\").\nSatisfies(\"Richard Nixon\", \"NYPD police officer age requirement\").\nSatisfies(\"Lyndon Johnson\", \"NYPD police officer age requirement\").\nSatisfies(\"John F. Kennedy\", \"NYPD police officer age requirement\").\nSatisfies(\"Dwight D. Eisenhower\", \"NYPD police officer age requirement\").\nSatisfies(\"Harry S. Truman\", \"NYPD police officer age requirement\").\nSatisfies(\"Franklin D. Roosevelt\", \"NYPD police officer age requirement\").\n.decl Answer()\nAnswer() :- Age(\"Michael Bloomberg\", age1), Satisfies(\"Michael Bloomberg\", condition), Age(\"Barack Obama\", age2), Satisfies(\"Barack Obama\", condition), Age(\"Bill Clinton\", age3), Satisfies(\"Bill Clinton\", condition), Age(\"George W. Bush\", age4), Satisfies(\"George W. Bush\", condition), Age(\"George H. W. Bush\", age5), Satisfies(\"George H. W. Bush\", condition), Age(\"Ronald Reagan\", age6), Satisfies(\"Ronald Reagan\", condition), Age(\"Jimmy Carter\", age7), Satisfies(\"Jimmy Carter\", condition), Age(\"Gerald Ford\", age8), Satisfies(\"Gerald Ford\", condition), Age(\"Richard Nixon\", age9), Satisfies(\"Richard Nixon\", condition), Age(\"Lyndon Johnson\", age10), Satisfies(\"Lyndon Johnson\", condition), Age(\"John F. Kennedy\", age11), Satisfies(\"John F. Kennedy\", condition), Age(\"Dwight D. Eisenhower\", age12), Satisfies(\"Dwight D. Eisenhower\", condition), Age(\"Harry S. Truman\", age13), Satisfies(\"Harry S. Truman\", condition), Age(\"Franklin D. Roosevelt\", age14), Satisfies(\"Franklin D. Roosevelt\", condition), age1 >= 55, age2 >= 55, age3 >= 55, age4 >= 55, age5 >= 55, age6 >= 55, age7 >= 55, age8 >= 55, age9 >= 55, age10 >= 55, age11 >= 55, age12 >= 55, age13 >= 55, age14 >= 55.\n.output Answer\n\n"]}
{"id": 1712, "answer": false, "completion": ".decl Can_solve_sudoku(Person:symbol)\nCan_solve_sudoku(\"infant\").\n.decl Answer()\nAnswer() :- Can_solve_sudoku(\"infant\").\n.output Answer\n\n", "completions": [".decl Can_solve_sudoku(Person:symbol)\nCan_solve_sudoku(\"infant\").\n.decl Answer()\nAnswer() :- Can_solve_sudoku(\"infant\").\n.output Answer\n\n"]}
{"id": 1713, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"cucumber\", \"green\").\nHas_color(\"cucumber\", \"yellow\").\nHas_color(\"cucumber\", \"red\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pickled cucumber\", \"red\").\n.decl Answer()\nAnswer() :- Has_color(\"cucumber\", color), Has_color(\"pickled cucumber\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"cucumber\", \"green\").\nHas_color(\"cucumber\", \"yellow\").\nHas_color(\"cucumber\", \"red\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pickled cucumber\", \"red\").\n.decl Answer()\nAnswer() :- Has_color(\"cucumber\", color), Has_color(\"pickled cucumber\", color).\n.output Answer\n\n"]}
{"id": 1714, "answer": true, "completion": ".decl Has_character(Object:symbol, Character:symbol)\nHas_character(\"coding\", \"a\").\nHas_character(\"coding\", \"b\").\nHas_character(\"coding\", \"c\").\nHas_character(\"coding\", \"d\").\nHas_character(\"coding\", \"e\").\nHas_character(\"coding\", \"f\").\nHas_character(\"coding\", \"g\").\nHas_character(\"coding\", \"h\").\nHas_character(\"coding\", \"i\").\nHas_character(\"coding\", \"j\").\nHas_character(\"coding\", \"k\").\nHas_character(\"coding\", \"l\").\nHas_character(\"coding\", \"m\").\nHas_character(\"coding\", \"n\").\nHas_character(\"coding\", \"o\").\nHas_character(\"coding\", \"p\").\nHas_character(\"coding\", \"q\").\nHas_character(\"coding\", \"r\").\nHas_character(\"coding\", \"s\").\nHas_character(\"coding\", \"t\").\nHas_character(\"coding\", \"u\").\nHas_character(\"coding\", \"v\").\nHas_character(\"coding\", \"w\").\nHas_character(\"coding\", \"x\").\nHas_character(\"coding\", \"y\").\nHas_character(\"coding\", \"z\").\n.decl Answer()\nAnswer() :- Has_character(\"coding\", character1), Has_character(\"coding\", character2), Has_character(\"coding\", character3), Has_character(\"coding\", character4), Has_character(\"coding\", character5), Has_character(\"coding\", character6), Has_character(\"coding\", character7), Has_character(\"coding\", character8), Has_character(\"coding\", character9), Has_character(\"coding\", character10), Has_character(\"coding\", character11), Has_character(\"coding\", character12), Has_character(\"coding\", character13), Has_character(\"coding\", character14), Has_character(\"coding\", character15), Has_character(\"coding\", character16), Has_character(\"coding\", character17), Has_character(\"coding\", character18), Has_character(\"coding\", character19), Has_character(\"coding\", character20), Has_character(\"coding\", character21), Has_character(\"coding\", character22), Has_character(\"coding\", character23), Has_character(\"coding\", character24), Has_character(\"coding\", character25), Has_character(\"coding\", character26), Has_character(\"coding\", character27), Has_character(\"coding\", character28), Has_character(\"coding\", character29), Has_character(\"coding\", character30), Has_character(\"coding\", character31), Has_character(\"coding\", character32), Has_character(\"coding\", character33), Has_character(\"coding\", character34), Has_character(\"coding\", character35), Has_character(\"coding\", character36), Has_character(\"coding\", character37), Has_character(\"coding\", character38), Has_character(\"coding\", character39), Has_character(\"coding\", character40), Has_character(\"coding\", character41), Has_character(\"coding\", character42), Has_character(\"coding\", character43), Has_character(\"coding\", character44), Has_character(\"coding\", character45), Has_character(\"coding\", character46), Has_character(\"coding\", character47), Has_character(\"coding\", character48), Has_character(\"coding\",", "completions": [".decl Has_character(Object:symbol, Character:symbol)\nHas_character(\"coding\", \"a\").\nHas_character(\"coding\", \"b\").\nHas_character(\"coding\", \"c\").\nHas_character(\"coding\", \"d\").\nHas_character(\"coding\", \"e\").\nHas_character(\"coding\", \"f\").\nHas_character(\"coding\", \"g\").\nHas_character(\"coding\", \"h\").\nHas_character(\"coding\", \"i\").\nHas_character(\"coding\", \"j\").\nHas_character(\"coding\", \"k\").\nHas_character(\"coding\", \"l\").\nHas_character(\"coding\", \"m\").\nHas_character(\"coding\", \"n\").\nHas_character(\"coding\", \"o\").\nHas_character(\"coding\", \"p\").\nHas_character(\"coding\", \"q\").\nHas_character(\"coding\", \"r\").\nHas_character(\"coding\", \"s\").\nHas_character(\"coding\", \"t\").\nHas_character(\"coding\", \"u\").\nHas_character(\"coding\", \"v\").\nHas_character(\"coding\", \"w\").\nHas_character(\"coding\", \"x\").\nHas_character(\"coding\", \"y\").\nHas_character(\"coding\", \"z\").\n.decl Answer()\nAnswer() :- Has_character(\"coding\", character1), Has_character(\"coding\", character2), Has_character(\"coding\", character3), Has_character(\"coding\", character4), Has_character(\"coding\", character5), Has_character(\"coding\", character6), Has_character(\"coding\", character7), Has_character(\"coding\", character8), Has_character(\"coding\", character9), Has_character(\"coding\", character10), Has_character(\"coding\", character11), Has_character(\"coding\", character12), Has_character(\"coding\", character13), Has_character(\"coding\", character14), Has_character(\"coding\", character15), Has_character(\"coding\", character16), Has_character(\"coding\", character17), Has_character(\"coding\", character18), Has_character(\"coding\", character19), Has_character(\"coding\", character20), Has_character(\"coding\", character21), Has_character(\"coding\", character22), Has_character(\"coding\", character23), Has_character(\"coding\", character24), Has_character(\"coding\", character25), Has_character(\"coding\", character26), Has_character(\"coding\", character27), Has_character(\"coding\", character28), Has_character(\"coding\", character29), Has_character(\"coding\", character30), Has_character(\"coding\", character31), Has_character(\"coding\", character32), Has_character(\"coding\", character33), Has_character(\"coding\", character34), Has_character(\"coding\", character35), Has_character(\"coding\", character36), Has_character(\"coding\", character37), Has_character(\"coding\", character38), Has_character(\"coding\", character39), Has_character(\"coding\", character40), Has_character(\"coding\", character41), Has_character(\"coding\", character42), Has_character(\"coding\", character43), Has_character(\"coding\", character44), Has_character(\"coding\", character45), Has_character(\"coding\", character46), Has_character(\"coding\", character47), Has_character(\"coding\", character48), Has_character(\"coding\","]}
{"id": 1715, "answer": false, "completion": ".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"Mary\", \"female\").\nHas_gender(\"John\", \"male\").\n.decl Has_menstruation(Person:symbol, Menstruation:symbol)\nHas_menstruation(\"Mary\", \"yes\").\nHas_menstruation(\"John\", \"no\").\n.decl Answer()\nAnswer() :- Has_gender(\"person\", \"male\"), Has_menstruation(\"person\", \"yes\").\n.output Answer\n\n", "completions": [".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"Mary\", \"female\").\nHas_gender(\"John\", \"male\").\n.decl Has_menstruation(Person:symbol, Menstruation:symbol)\nHas_menstruation(\"Mary\", \"yes\").\nHas_menstruation(\"John\", \"no\").\n.decl Answer()\nAnswer() :- Has_gender(\"person\", \"male\"), Has_menstruation(\"person\", \"yes\").\n.output Answer\n\n"]}
{"id": 1716, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"skiing\", \"winter\").\nHappens_in_time(\"skiing\", \"spring\").\nHappens_in_time(\"skiing\", \"summer\").\nHappens_in_time(\"skiing\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\nIn_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"skiing\", month), In_season(month, season), season == \"summer\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"skiing\", \"winter\").\nHappens_in_time(\"skiing\", \"spring\").\nHappens_in_time(\"skiing\", \"summer\").\nHappens_in_time(\"skiing\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\nIn_season(\"March\", \"spring\").\nIn_season(\"April\", \"spring\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"July\", \"summer\").\nIn_season(\"August\", \"summer\").\nIn_season(\"September\", \"fall\").\nIn_season(\"October\", \"fall\").\nIn_season(\"November\", \"fall\").\nIn_season(\"December\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"skiing\", month), In_season(month, season), season == \"summer\".\n.output Answer\n\n"]}
{"id": 1717, "answer": true, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"dog\", \"kibble\").\nEats(\"cat\", \"kibble\").\nEats(\"llama\", \"kibble\").\nEats(\"peacock\", \"kibble\").\nEats(\"pig\", \"kibble\").\nEats(\"cow\", \"kibble\").\nEats(\"horse\", \"kibble\").\nEats(\"goat\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"deer\", \"kibble\").\nEats(\"duck\", \"kibble\").\nEats(\"fox\", \"kibble\").\nEats(\"bear\", \"kibble\").\nEats(\"lion\", \"kibble\").\nEats(\"tiger\", \"kibble\").\nEats(\"wolf\", \"kibble\").\nEats(\"chicken\", \"kibble\").\nEats(\"snake\", \"kibble\").\nEats(\"bird\", \"kibble\").\nEats(\"hamster\", \"kibble\").\nEats(\"shark\", \"kibble\").\nEats(\"shrimp\", \"kibble\").\nEats(\"squirrel\", \"kibble\").\nEats(\"rabbit\", \"kibble\").\nEats(\"mouse\", \"kibble\").\nEats(\"turtle\", \"kibble\").\nEats(\"beaver\", \"kibble\").\nEats(\"crocodile\", \"kibble\").\nEats(\"alligator\", \"kibble\").\nEats(\"cobra\", \"kibble\").\nEats(\"eagle\", \"kibble\").\nEats(\"falcon\", \"kibble\").\nEats(\"owl\", \"kibble\").\nEats(\"parrot\", \"kibble\").\nEats(\"penguin\", \"kibble\").\nEats(\"pigeon\", \"kibble\").\nEats(\"hummingbird\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"pig\", \"kibble\").\nEats(\"cow\", \"kibble\").\nEats(\"horse\", \"kibble\").\nEats(\"goat\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"deer\", \"kibble\").\nEats(\"duck\", \"kibble\").\nEats(\"fox\", \"kibble\").\nEats(\"bear\", \"kibble\").\nEats(\"lion\", \"kibble\").\nEats(\"tiger\", \"kibble\").\nEats(\"wolf\", \"kibble\").\nEats(\"chicken\", \"kibble\").\nEats(\"snake\", \"kibble\").\nEats(\"bird\", \"kibble\").\nEats(\"hamster\", \"kibble\").\nEats(\"shark\", \"kibble\").\nEats(\"shrimp\", \"kibble\").\nEats(\"squirrel\", \"kibble\").\nEats(\"rabbit\", \"kibble\").\nEats(\"mouse\", \"kibble\").\nEats(\"turtle\", \"kibble\").\nEats(\"beaver\", \"kibble\").\nEats(\"crocodile\", \"kibble\").\nEats(\"alligator\", \"kibble\").\nEats(\"cobra\", \"kibble\").\nEats(\"eagle\", \"kibble\").\nEats(\"falcon\", \"kibble\").\nEats(\"owl\", \"kibble\").\nEats(\"parrot\", \"kibble\").\nEats(\"penguin\", \"kibble\").\nEats(\"pigeon\", \"kibble\").\nEats(\"hummingbird\", \"kibble\").\nEats(\"goose\", \"", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"dog\", \"kibble\").\nEats(\"cat\", \"kibble\").\nEats(\"llama\", \"kibble\").\nEats(\"peacock\", \"kibble\").\nEats(\"pig\", \"kibble\").\nEats(\"cow\", \"kibble\").\nEats(\"horse\", \"kibble\").\nEats(\"goat\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"deer\", \"kibble\").\nEats(\"duck\", \"kibble\").\nEats(\"fox\", \"kibble\").\nEats(\"bear\", \"kibble\").\nEats(\"lion\", \"kibble\").\nEats(\"tiger\", \"kibble\").\nEats(\"wolf\", \"kibble\").\nEats(\"chicken\", \"kibble\").\nEats(\"snake\", \"kibble\").\nEats(\"bird\", \"kibble\").\nEats(\"hamster\", \"kibble\").\nEats(\"shark\", \"kibble\").\nEats(\"shrimp\", \"kibble\").\nEats(\"squirrel\", \"kibble\").\nEats(\"rabbit\", \"kibble\").\nEats(\"mouse\", \"kibble\").\nEats(\"turtle\", \"kibble\").\nEats(\"beaver\", \"kibble\").\nEats(\"crocodile\", \"kibble\").\nEats(\"alligator\", \"kibble\").\nEats(\"cobra\", \"kibble\").\nEats(\"eagle\", \"kibble\").\nEats(\"falcon\", \"kibble\").\nEats(\"owl\", \"kibble\").\nEats(\"parrot\", \"kibble\").\nEats(\"penguin\", \"kibble\").\nEats(\"pigeon\", \"kibble\").\nEats(\"hummingbird\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"pig\", \"kibble\").\nEats(\"cow\", \"kibble\").\nEats(\"horse\", \"kibble\").\nEats(\"goat\", \"kibble\").\nEats(\"goose\", \"kibble\").\nEats(\"deer\", \"kibble\").\nEats(\"duck\", \"kibble\").\nEats(\"fox\", \"kibble\").\nEats(\"bear\", \"kibble\").\nEats(\"lion\", \"kibble\").\nEats(\"tiger\", \"kibble\").\nEats(\"wolf\", \"kibble\").\nEats(\"chicken\", \"kibble\").\nEats(\"snake\", \"kibble\").\nEats(\"bird\", \"kibble\").\nEats(\"hamster\", \"kibble\").\nEats(\"shark\", \"kibble\").\nEats(\"shrimp\", \"kibble\").\nEats(\"squirrel\", \"kibble\").\nEats(\"rabbit\", \"kibble\").\nEats(\"mouse\", \"kibble\").\nEats(\"turtle\", \"kibble\").\nEats(\"beaver\", \"kibble\").\nEats(\"crocodile\", \"kibble\").\nEats(\"alligator\", \"kibble\").\nEats(\"cobra\", \"kibble\").\nEats(\"eagle\", \"kibble\").\nEats(\"falcon\", \"kibble\").\nEats(\"owl\", \"kibble\").\nEats(\"parrot\", \"kibble\").\nEats(\"penguin\", \"kibble\").\nEats(\"pigeon\", \"kibble\").\nEats(\"hummingbird\", \"kibble\").\nEats(\"goose\", \""]}
{"id": 1718, "answer": true, "completion": ".decl Has_n_days(Month:symbol, N_days:float)\nHas_n_days(\"January\", 31).\nHas_n_days(\"February\", 28).\nHas_n_days(\"March\", 31).\nHas_n_days(\"April\", 30).\nHas_n_days(\"May\", 31).\nHas_n_days(\"June\", 30).\nHas_n_days(\"July\", 31).\nHas_n_days(\"August\", 31).\nHas_n_days(\"September\", 30).\nHas_n_days(\"October\", 31).\nHas_n_days(\"November\", 30).\nHas_n_days(\"December\", 31).\n.decl Has_n_days_in_year(Year:symbol, N_days:float)\nHas_n_days_in_year(\"solar year\", 365).\n.decl Answer()\nAnswer() :- Has_n_days(\"January\", n_days1), Has_n_days(\"February\", n_days2), Has_n_days(\"March\", n_days3), Has_n_days(\"April\", n_days4), Has_n_days(\"May\", n_days5), Has_n_days(\"June\", n_days6), Has_n_days(\"July\", n_days7), Has_n_days(\"August\", n_days8), Has_n_days(\"September\", n_days9), Has_n_days(\"October\", n_days10), Has_n_days(\"November\", n_days11), Has_n_days(\"December\", n_days12), Has_n_days_in_year(\"solar year\", n_days_in_year), n_days1 + n_days2 + n_days3 + n_days4 + n_days5 + n_days6 + n_days7 + n_days8 + n_days9 + n_days10 + n_days11 + n_days12 = n_days_in_year.\n.output Answer\n\n", "completions": [".decl Has_n_days(Month:symbol, N_days:float)\nHas_n_days(\"January\", 31).\nHas_n_days(\"February\", 28).\nHas_n_days(\"March\", 31).\nHas_n_days(\"April\", 30).\nHas_n_days(\"May\", 31).\nHas_n_days(\"June\", 30).\nHas_n_days(\"July\", 31).\nHas_n_days(\"August\", 31).\nHas_n_days(\"September\", 30).\nHas_n_days(\"October\", 31).\nHas_n_days(\"November\", 30).\nHas_n_days(\"December\", 31).\n.decl Has_n_days_in_year(Year:symbol, N_days:float)\nHas_n_days_in_year(\"solar year\", 365).\n.decl Answer()\nAnswer() :- Has_n_days(\"January\", n_days1), Has_n_days(\"February\", n_days2), Has_n_days(\"March\", n_days3), Has_n_days(\"April\", n_days4), Has_n_days(\"May\", n_days5), Has_n_days(\"June\", n_days6), Has_n_days(\"July\", n_days7), Has_n_days(\"August\", n_days8), Has_n_days(\"September\", n_days9), Has_n_days(\"October\", n_days10), Has_n_days(\"November\", n_days11), Has_n_days(\"December\", n_days12), Has_n_days_in_year(\"solar year\", n_days_in_year), n_days1 + n_days2 + n_days3 + n_days4 + n_days5 + n_days6 + n_days7 + n_days8 + n_days9 + n_days10 + n_days11 + n_days12 = n_days_in_year.\n.output Answer\n\n"]}
{"id": 1719, "answer": true, "completion": ".decl Is_route(Route:symbol)\nIs_route(\"Route 66\").\n.decl Is_known(Route:symbol)\nIs_known(\"Route 66\").\n.decl Answer()\nAnswer() :- Is_route(\"Route 66\"), !Is_known(\"Route 66\").\n.output Answer\n\n", "completions": [".decl Is_route(Route:symbol)\nIs_route(\"Route 66\").\n.decl Is_known(Route:symbol)\nIs_known(\"Route 66\").\n.decl Answer()\nAnswer() :- Is_route(\"Route 66\"), !Is_known(\"Route 66\").\n.output Answer\n\n"]}
{"id": 1720, "answer": true, "completion": ".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"pancake\", \"round\").\nHas_shape(\"pot\", \"round\").\n.decl Answer()\nAnswer() :- Has_shape(\"pancake\", shape), Has_shape(\"pot\", shape).\n.output Answer\n\n", "completions": [".decl Has_shape(Object:symbol, Shape:symbol)\nHas_shape(\"pancake\", \"round\").\nHas_shape(\"pot\", \"round\").\n.decl Answer()\nAnswer() :- Has_shape(\"pancake\", shape), Has_shape(\"pot\", shape).\n.output Answer\n\n"]}
{"id": 1721, "answer": true, "completion": ".decl Used(Person:symbol, Software:symbol)\nUsed(\"Malcolm X\", \"Unicode\").\n.decl Answer()\nAnswer() :- Used(\"Malcolm X\", software).\n.output Answer\n\n", "completions": [".decl Used(Person:symbol, Software:symbol)\nUsed(\"Malcolm X\", \"Unicode\").\n.decl Answer()\nAnswer() :- Used(\"Malcolm X\", software).\n.output Answer\n\n"]}
{"id": 1722, "answer": false, "completion": ".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"NYC to Raleigh NC\", 2.5).\n.decl Has_speed(Event:symbol, Speed:float)\nHas_speed(\"Toyota Hiux\", 60).\n.decl Answer()\nAnswer() :- Has_distance(\"NYC to Raleigh NC\", distance), Has_speed(\"Toyota Hiux\", speed), distance / speed < 3.\n.output Answer\n\n", "completions": [".decl Has_distance(Event:symbol, Distance:float)\nHas_distance(\"NYC to Raleigh NC\", 2.5).\n.decl Has_speed(Event:symbol, Speed:float)\nHas_speed(\"Toyota Hiux\", 60).\n.decl Answer()\nAnswer() :- Has_distance(\"NYC to Raleigh NC\", distance), Has_speed(\"Toyota Hiux\", speed), distance / speed < 3.\n.output Answer\n\n"]}
{"id": 1723, "answer": true, "completion": ".decl Allergic_to(Person:symbol, Allergen:symbol)\nAllergic_to(\"John\", \"tricharboxylic acid\").\nAllergic_to(\"Mary\", \"tricharboxylic acid\").\n.decl Has_tricharboxylic_acid(Object:symbol)\nHas_tricharboxylic_acid(\"watermelon\").\n.decl Answer()\nAnswer() :- Allergic_to(person, \"tricharboxylic acid\"), Has_tricharboxylic_acid(object).\n.output Answer\n\n", "completions": [".decl Allergic_to(Person:symbol, Allergen:symbol)\nAllergic_to(\"John\", \"tricharboxylic acid\").\nAllergic_to(\"Mary\", \"tricharboxylic acid\").\n.decl Has_tricharboxylic_acid(Object:symbol)\nHas_tricharboxylic_acid(\"watermelon\").\n.decl Answer()\nAnswer() :- Allergic_to(person, \"tricharboxylic acid\"), Has_tricharboxylic_acid(object).\n.output Answer\n\n"]}
{"id": 1724, "answer": true, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"Ethiopian cuisine\", \"shrimp\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Ethiopian cuisine\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"Ethiopian cuisine\", \"shrimp\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"Ethiopian cuisine\", ingredient).\n.output Answer\n\n"]}
{"id": 1725, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"San Antonio\", \"1836\").\nHappens_in_time(\"San Antonio\", \"1837\").\nHappens_in_time(\"San Antonio\", \"1838\").\nHappens_in_time(\"San Antonio\", \"1839\").\nHappens_in_time(\"San Antonio\", \"1840\").\nHappens_in_time(\"San Antonio\", \"1841\").\nHappens_in_time(\"San Antonio\", \"1842\").\nHappens_in_time(\"San Antonio\", \"1843\").\nHappens_in_time(\"San Antonio\", \"1844\").\nHappens_in_time(\"San Antonio\", \"1845\").\nHappens_in_time(\"San Antonio\", \"1846\").\nHappens_in_time(\"San Antonio\", \"1847\").\nHappens_in_time(\"San Antonio\", \"1848\").\nHappens_in_time(\"San Antonio\", \"1849\").\nHappens_in_time(\"San Antonio\", \"1850\").\nHappens_in_time(\"San Antonio\", \"1851\").\nHappens_in_time(\"San Antonio\", \"1852\").\nHappens_in_time(\"San Antonio\", \"1853\").\nHappens_in_time(\"San Antonio\", \"1854\").\nHappens_in_time(\"San Antonio\", \"1855\").\nHappens_in_time(\"San Antonio\", \"1856\").\nHappens_in_time(\"San Antonio\", \"1857\").\nHappens_in_time(\"San Antonio\", \"1858\").\nHappens_in_time(\"San Antonio\", \"1859\").\nHappens_in_time(\"San Antonio\", \"1860\").\nHappens_in_time(\"San Antonio\", \"1861\").\nHappens_in_time(\"San Antonio\", \"1862\").\nHappens_in_time(\"San Antonio\", \"1863\").\nHappens_in_time(\"San Antonio\", \"1864\").\nHappens_in_time(\"San Antonio\", \"1865\").\nHappens_in_time(\"San Antonio\", \"1866\").\nHappens_in_time(\"San Antonio\", \"1867\").\nHappens_in_time(\"San Antonio\", \"1868\").\nHappens_in_time(\"San Antonio\", \"1869\").\nHappens_in_time(\"San Antonio\", \"1870\").\nHappens_in_time(\"San Antonio\", \"1871\").\nHappens_in_time(\"San Antonio\", \"1872\").\nHappens_in_time(\"San Antonio\", \"1873\").\nHappens_in_time(\"San Antonio\", \"1874\").\nHappens_in_time(\"San Antonio\", \"1875\").\nHappens_in_time(\"San Antonio\", \"1876\").\nHappens_in_time(\"San Antonio\", \"1877\").\nHappens_in_time(\"San Antonio\", \"1878\").\nHappens_in_time(\"San Antonio\", \"1879\").\nHappens_in_time(\"San Antonio\", \"1880\").\nHappens_in_time(\"San Antonio\", \"1881\").\nHappens_in_time(\"San Antonio\", \"1882\").\nHappens_in_time(\"San Antonio\", \"1883\").\nHappens_in_time(\"San Antonio\",", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"San Antonio\", \"1836\").\nHappens_in_time(\"San Antonio\", \"1837\").\nHappens_in_time(\"San Antonio\", \"1838\").\nHappens_in_time(\"San Antonio\", \"1839\").\nHappens_in_time(\"San Antonio\", \"1840\").\nHappens_in_time(\"San Antonio\", \"1841\").\nHappens_in_time(\"San Antonio\", \"1842\").\nHappens_in_time(\"San Antonio\", \"1843\").\nHappens_in_time(\"San Antonio\", \"1844\").\nHappens_in_time(\"San Antonio\", \"1845\").\nHappens_in_time(\"San Antonio\", \"1846\").\nHappens_in_time(\"San Antonio\", \"1847\").\nHappens_in_time(\"San Antonio\", \"1848\").\nHappens_in_time(\"San Antonio\", \"1849\").\nHappens_in_time(\"San Antonio\", \"1850\").\nHappens_in_time(\"San Antonio\", \"1851\").\nHappens_in_time(\"San Antonio\", \"1852\").\nHappens_in_time(\"San Antonio\", \"1853\").\nHappens_in_time(\"San Antonio\", \"1854\").\nHappens_in_time(\"San Antonio\", \"1855\").\nHappens_in_time(\"San Antonio\", \"1856\").\nHappens_in_time(\"San Antonio\", \"1857\").\nHappens_in_time(\"San Antonio\", \"1858\").\nHappens_in_time(\"San Antonio\", \"1859\").\nHappens_in_time(\"San Antonio\", \"1860\").\nHappens_in_time(\"San Antonio\", \"1861\").\nHappens_in_time(\"San Antonio\", \"1862\").\nHappens_in_time(\"San Antonio\", \"1863\").\nHappens_in_time(\"San Antonio\", \"1864\").\nHappens_in_time(\"San Antonio\", \"1865\").\nHappens_in_time(\"San Antonio\", \"1866\").\nHappens_in_time(\"San Antonio\", \"1867\").\nHappens_in_time(\"San Antonio\", \"1868\").\nHappens_in_time(\"San Antonio\", \"1869\").\nHappens_in_time(\"San Antonio\", \"1870\").\nHappens_in_time(\"San Antonio\", \"1871\").\nHappens_in_time(\"San Antonio\", \"1872\").\nHappens_in_time(\"San Antonio\", \"1873\").\nHappens_in_time(\"San Antonio\", \"1874\").\nHappens_in_time(\"San Antonio\", \"1875\").\nHappens_in_time(\"San Antonio\", \"1876\").\nHappens_in_time(\"San Antonio\", \"1877\").\nHappens_in_time(\"San Antonio\", \"1878\").\nHappens_in_time(\"San Antonio\", \"1879\").\nHappens_in_time(\"San Antonio\", \"1880\").\nHappens_in_time(\"San Antonio\", \"1881\").\nHappens_in_time(\"San Antonio\", \"1882\").\nHappens_in_time(\"San Antonio\", \"1883\").\nHappens_in_time(\"San Antonio\","]}
{"id": 1726, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"neon\", 10).\nHas_atomic_number(\"sodium\", 11).\nHas_atomic_number(\"magnesium\", 12).\nHas_atomic_number(\"aluminum\", 13).\nHas_atomic_number(\"silicon\", 14).\nHas_atomic_number(\"phosphorus\", 15).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"argon\", 18).\nHas_atomic_number(\"potassium\", 19).\nHas_atomic_number(\"calcium\", 20).\nHas_atomic_number(\"scandium\", 21).\nHas_atomic_number(\"titanium\", 22).\nHas_atomic_number(\"vanadium\", 23).\nHas_atomic_number(\"chromium\", 24).\nHas_atomic_number(\"manganese\", 25).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"cobalt\", 27).\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"copper\", 29).\nHas_atomic_number(\"zinc\", 30).\nHas_atomic_number(\"gallium\", 31).\nHas_atomic_number(\"germanium\", 32).\nHas_atomic_number(\"arsenic\", 33).\nHas_atomic_number(\"selenium\", 34).\nHas_atomic_number(\"bromine\", 35).\nHas_atomic_number(\"krypton\", 36).\nHas_atomic_number(\"rubidium\", 37).\nHas_atomic_number(\"strontium\", 38).\nHas_atomic_number(\"yttrium\", 39).\nHas_atomic_number(\"zirconium\", 40).\nHas_atomic_number(\"niobium\", 41).\nHas_atomic_number(\"molybdenum\", 42).\nHas_atomic_number(\"technetium\", 43).\nHas_atomic_number(\"ruthenium\", 44).\nHas_atomic_number(\"rhodium\", 45).\nHas_atomic_number(\"palladium\", 46).\nHas_atomic_number(\"silver\", 47).\nHas_atomic_number(\"cadmium\", 48).\nHas_atomic_number(\"indium\", 49).\nHas_atomic_number(\"tin\", 50).\nHas_atomic_number(\"antimony\", 51).\nHas_atomic_number(\"tellurium\", 52).\nHas_atomic_number(\"iodine\", 53).\nHas_atomic_number(\"xenon\", 54).\nHas_atomic_number(\"cesium\", 55).\nHas_atomic_number(\"barium\", 56).\nHas_atomic_number(\"lanthanum\", 57).\nHas_atomic_number(\"cerium\", 58).\nHas_atomic_number(\"praseodymium\", 59).\nHas_atomic_number(\"neodymium\", 60).\nHas_atomic_number(\"promethium\", 61).\nHas_atomic_number(\"samarium\", 62).\nHas_atomic_number(\"europium\", 63).\nHas_atomic_number(\"gadolinium\", 64).\nHas_atomic_number(\"terbium\", 65).\nHas_atomic_number(\"dysprosium\", 66).\nHas_atomic_number(\"holmium\", 67).\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"hydrogen\", 1).\nHas_atomic_number(\"carbon\", 6).\nHas_atomic_number(\"nitrogen\", 7).\nHas_atomic_number(\"oxygen\", 8).\nHas_atomic_number(\"neon\", 10).\nHas_atomic_number(\"sodium\", 11).\nHas_atomic_number(\"magnesium\", 12).\nHas_atomic_number(\"aluminum\", 13).\nHas_atomic_number(\"silicon\", 14).\nHas_atomic_number(\"phosphorus\", 15).\nHas_atomic_number(\"sulfur\", 16).\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"argon\", 18).\nHas_atomic_number(\"potassium\", 19).\nHas_atomic_number(\"calcium\", 20).\nHas_atomic_number(\"scandium\", 21).\nHas_atomic_number(\"titanium\", 22).\nHas_atomic_number(\"vanadium\", 23).\nHas_atomic_number(\"chromium\", 24).\nHas_atomic_number(\"manganese\", 25).\nHas_atomic_number(\"iron\", 26).\nHas_atomic_number(\"cobalt\", 27).\nHas_atomic_number(\"nickel\", 28).\nHas_atomic_number(\"copper\", 29).\nHas_atomic_number(\"zinc\", 30).\nHas_atomic_number(\"gallium\", 31).\nHas_atomic_number(\"germanium\", 32).\nHas_atomic_number(\"arsenic\", 33).\nHas_atomic_number(\"selenium\", 34).\nHas_atomic_number(\"bromine\", 35).\nHas_atomic_number(\"krypton\", 36).\nHas_atomic_number(\"rubidium\", 37).\nHas_atomic_number(\"strontium\", 38).\nHas_atomic_number(\"yttrium\", 39).\nHas_atomic_number(\"zirconium\", 40).\nHas_atomic_number(\"niobium\", 41).\nHas_atomic_number(\"molybdenum\", 42).\nHas_atomic_number(\"technetium\", 43).\nHas_atomic_number(\"ruthenium\", 44).\nHas_atomic_number(\"rhodium\", 45).\nHas_atomic_number(\"palladium\", 46).\nHas_atomic_number(\"silver\", 47).\nHas_atomic_number(\"cadmium\", 48).\nHas_atomic_number(\"indium\", 49).\nHas_atomic_number(\"tin\", 50).\nHas_atomic_number(\"antimony\", 51).\nHas_atomic_number(\"tellurium\", 52).\nHas_atomic_number(\"iodine\", 53).\nHas_atomic_number(\"xenon\", 54).\nHas_atomic_number(\"cesium\", 55).\nHas_atomic_number(\"barium\", 56).\nHas_atomic_number(\"lanthanum\", 57).\nHas_atomic_number(\"cerium\", 58).\nHas_atomic_number(\"praseodymium\", 59).\nHas_atomic_number(\"neodymium\", 60).\nHas_atomic_number(\"promethium\", 61).\nHas_atomic_number(\"samarium\", 62).\nHas_atomic_number(\"europium\", 63).\nHas_atomic_number(\"gadolinium\", 64).\nHas_atomic_number(\"terbium\", 65).\nHas_atomic_number(\"dysprosium\", 66).\nHas_atomic_number(\"holmium\", 67).\n"]}
{"id": 1727, "answer": true, "completion": ".decl Belts(Belt:symbol, Color:symbol)\nBelts(\"white belt\", \"white\").\nBelts(\"blue belt\", \"blue\").\nBelts(\"purple belt\", \"purple\").\nBelts(\"brown belt\", \"brown\").\nBelts(\"black belt\", \"black\").\n.decl Has_strength(Belt:symbol, Strength:float)\nHas_strength(\"white belt\", 1).\nHas_strength(\"blue belt\", 2).\nHas_strength(\"purple belt\", 3).\nHas_strength(\"brown belt\", 4).\nHas_strength(\"black belt\", 5).\n.decl Has_strength(Belt:symbol, Strength:float)\nHas_strength(\"white belt\", 1).\nHas_strength(\"blue belt\", 2).\nHas_strength(\"purple belt\", 3).\nHas_strength(\"brown belt\", 4).\nHas_strength(\"black belt\", 5).\n.decl Answer()\nAnswer() :- Belts(\"white belt\", belt), Has_strength(belt, strength1), Has_strength(\"Jon Jones\", strength2), strength1 > strength2.\n.output Answer\n\n", "completions": [".decl Belts(Belt:symbol, Color:symbol)\nBelts(\"white belt\", \"white\").\nBelts(\"blue belt\", \"blue\").\nBelts(\"purple belt\", \"purple\").\nBelts(\"brown belt\", \"brown\").\nBelts(\"black belt\", \"black\").\n.decl Has_strength(Belt:symbol, Strength:float)\nHas_strength(\"white belt\", 1).\nHas_strength(\"blue belt\", 2).\nHas_strength(\"purple belt\", 3).\nHas_strength(\"brown belt\", 4).\nHas_strength(\"black belt\", 5).\n.decl Has_strength(Belt:symbol, Strength:float)\nHas_strength(\"white belt\", 1).\nHas_strength(\"blue belt\", 2).\nHas_strength(\"purple belt\", 3).\nHas_strength(\"brown belt\", 4).\nHas_strength(\"black belt\", 5).\n.decl Answer()\nAnswer() :- Belts(\"white belt\", belt), Has_strength(belt, strength1), Has_strength(\"Jon Jones\", strength2), strength1 > strength2.\n.output Answer\n\n"]}
{"id": 1728, "answer": false, "completion": ".decl Has_character(Person:symbol, Character:symbol)\nHas_character(\"Darth Vader\", \"evil\").\nHas_character(\"Severus Snape\", \"evil\").\n.decl Answer()\nAnswer() :- Has_character(\"Darth Vader\", character), Has_character(\"Severus Snape\", character).\n.output Answer\n\n", "completions": [".decl Has_character(Person:symbol, Character:symbol)\nHas_character(\"Darth Vader\", \"evil\").\nHas_character(\"Severus Snape\", \"evil\").\n.decl Answer()\nAnswer() :- Has_character(\"Darth Vader\", character), Has_character(\"Severus Snape\", character).\n.output Answer\n\n"]}
{"id": 1729, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"weather phenomena\", \"June\").\nHappens_in_time(\"weather phenomena\", \"September\").\nHappens_in_time(\"weather phenomena\", \"October\").\nHappens_in_time(\"weather phenomena\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"weather phenomena\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"weather phenomena\", month), Happens_every_n_months(\"weather phenomena\", n_months), month = \"September\" | month = \"October\" | month = \"November\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"weather phenomena\", \"June\").\nHappens_in_time(\"weather phenomena\", \"September\").\nHappens_in_time(\"weather phenomena\", \"October\").\nHappens_in_time(\"weather phenomena\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"weather phenomena\", 3).\n.decl Answer()\nAnswer() :- Happens_in_time(\"weather phenomena\", month), Happens_every_n_months(\"weather phenomena\", n_months), month = \"September\" | month = \"October\" | month = \"November\".\n.output Answer\n\n"]}
{"id": 1730, "answer": false, "completion": ".decl Influences(Person:symbol, Genre:symbol)\nInfluences(\"Johann Sebastian Bach\", \"baroque\").\nInfluences(\"Johann Sebastian Bach\", \"classical\").\nInfluences(\"Johann Sebastian Bach\", \"opera\").\nInfluences(\"Johann Sebastian Bach\", \"heavy metal\").\n.decl Has_influenced(Genre:symbol, Genre_influenced:symbol)\nHas_influenced(\"baroque\", \"classical\").\nHas_influenced(\"baroque\", \"opera\").\nHas_influenced(\"classical\", \"opera\").\nHas_influenced(\"classical\", \"heavy metal\").\nHas_influenced(\"opera\", \"heavy metal\").\n.decl Answer()\nAnswer() :- Influences(\"Johann Sebastian Bach\", genre), Has_influenced(genre, genre_influenced).\n.output Answer\n\n", "completions": [".decl Influences(Person:symbol, Genre:symbol)\nInfluences(\"Johann Sebastian Bach\", \"baroque\").\nInfluences(\"Johann Sebastian Bach\", \"classical\").\nInfluences(\"Johann Sebastian Bach\", \"opera\").\nInfluences(\"Johann Sebastian Bach\", \"heavy metal\").\n.decl Has_influenced(Genre:symbol, Genre_influenced:symbol)\nHas_influenced(\"baroque\", \"classical\").\nHas_influenced(\"baroque\", \"opera\").\nHas_influenced(\"classical\", \"opera\").\nHas_influenced(\"classical\", \"heavy metal\").\nHas_influenced(\"opera\", \"heavy metal\").\n.decl Answer()\nAnswer() :- Influences(\"Johann Sebastian Bach\", genre), Has_influenced(genre, genre_influenced).\n.output Answer\n\n"]}
{"id": 1731, "answer": true, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"cheetah\", 80).\nHas_mass(\"Big Show\", 500).\n.decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"cheetah\", 100).\nHas_strength(\"Big Show\", 1000).\n.decl Answer()\nAnswer() :- Has_mass(\"cheetah\", mass1), Has_mass(\"Big Show\", mass2), Has_strength(\"cheetah\", strength1), Has_strength(\"Big Show\", strength2), mass1 * strength1 > mass2 * strength2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"cheetah\", 80).\nHas_mass(\"Big Show\", 500).\n.decl Has_strength(Object:symbol, Strength:float)\nHas_strength(\"cheetah\", 100).\nHas_strength(\"Big Show\", 1000).\n.decl Answer()\nAnswer() :- Has_mass(\"cheetah\", mass1), Has_mass(\"Big Show\", mass2), Has_strength(\"cheetah\", strength1), Has_strength(\"Big Show\", strength2), mass1 * strength1 > mass2 * strength2.\n.output Answer\n\n"]}
{"id": 1732, "answer": true, "completion": ".decl Is_good_at(Person:symbol, Task:symbol)\nIs_good_at(\"paratrooper\", \"mountain rescue\").\nIs_good_at(\"mountain rescuer\", \"mountain rescue\").\n.decl Answer()\nAnswer() :- Is_good_at(\"paratrooper\", task), Is_good_at(\"mountain rescuer\", task).\n.output Answer\n\n", "completions": [".decl Is_good_at(Person:symbol, Task:symbol)\nIs_good_at(\"paratrooper\", \"mountain rescue\").\nIs_good_at(\"mountain rescuer\", \"mountain rescue\").\n.decl Answer()\nAnswer() :- Is_good_at(\"paratrooper\", task), Is_good_at(\"mountain rescuer\", task).\n.output Answer\n\n"]}
{"id": 1733, "answer": false, "completion": ".decl Has_association(Object:symbol, Association:symbol)\nHas_association(\"celery\", \"death\").\n.decl Has_culture(Culture:symbol)\nHas_culture(\"Chinese\").\nHas_culture(\"Japanese\").\nHas_culture(\"Korean\").\n.decl Answer()\nAnswer() :- Has_association(\"celery\", association), Has_culture(culture), culture = association.\n.output Answer\n\n", "completions": [".decl Has_association(Object:symbol, Association:symbol)\nHas_association(\"celery\", \"death\").\n.decl Has_culture(Culture:symbol)\nHas_culture(\"Chinese\").\nHas_culture(\"Japanese\").\nHas_culture(\"Korean\").\n.decl Answer()\nAnswer() :- Has_association(\"celery\", association), Has_culture(culture), culture = association.\n.output Answer\n\n"]}
{"id": 1734, "answer": false, "completion": ".decl President(Person:symbol, Party:symbol)\nPresident(\"Woodrow Wilson\", \"Democrat\").\nPresident(\"Warren Harding\", \"Republican\").\nPresident(\"Calvin Coolidge\", \"Republican\").\nPresident(\"Herbert Hoover\", \"Republican\").\nPresident(\"Franklin D. Roosevelt\", \"Democrat\").\nPresident(\"Harry S. Truman\", \"Democrat\").\nPresident(\"Dwight D. Eisenhower\", \"Republican\").\nPresident(\"John F. Kennedy\", \"Democrat\").\nPresident(\"Lyndon B. Johnson\", \"Democrat\").\nPresident(\"Richard Nixon\", \"Republican\").\nPresident(\"Gerald Ford\", \"Republican\").\nPresident(\"Jimmy Carter\", \"Democrat\").\nPresident(\"Ronald Reagan\", \"Republican\").\nPresident(\"George H. W. Bush\", \"Republican\").\nPresident(\"Bill Clinton\", \"Democrat\").\nPresident(\"George W. Bush\", \"Republican\").\nPresident(\"Barack Obama\", \"Democrat\").\n.decl Answer()\nAnswer() :- President(person1, party1), President(person2, party2), President(person3, party3), person1 != person2, person1 != person3, person2 != person3, party1 != party2, party1 != party3, party2 != party3.\n.output Answer\n\n", "completions": [".decl President(Person:symbol, Party:symbol)\nPresident(\"Woodrow Wilson\", \"Democrat\").\nPresident(\"Warren Harding\", \"Republican\").\nPresident(\"Calvin Coolidge\", \"Republican\").\nPresident(\"Herbert Hoover\", \"Republican\").\nPresident(\"Franklin D. Roosevelt\", \"Democrat\").\nPresident(\"Harry S. Truman\", \"Democrat\").\nPresident(\"Dwight D. Eisenhower\", \"Republican\").\nPresident(\"John F. Kennedy\", \"Democrat\").\nPresident(\"Lyndon B. Johnson\", \"Democrat\").\nPresident(\"Richard Nixon\", \"Republican\").\nPresident(\"Gerald Ford\", \"Republican\").\nPresident(\"Jimmy Carter\", \"Democrat\").\nPresident(\"Ronald Reagan\", \"Republican\").\nPresident(\"George H. W. Bush\", \"Republican\").\nPresident(\"Bill Clinton\", \"Democrat\").\nPresident(\"George W. Bush\", \"Republican\").\nPresident(\"Barack Obama\", \"Democrat\").\n.decl Answer()\nAnswer() :- President(person1, party1), President(person2, party2), President(person3, party3), person1 != person2, person1 != person3, person2 != person3, party1 != party2, party1 != party3, party2 != party3.\n.output Answer\n\n"]}
{"id": 1735, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American troops in Vietnam\", 150000).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American troops in Vietnam\", \"1965\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"American troops in Vietnam\", year), Has_n_members(\"American troops in Vietnam\", n_members), n_members < 150000.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American troops in Vietnam\", 150000).\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"American troops in Vietnam\", \"1965\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"American troops in Vietnam\", year), Has_n_members(\"American troops in Vietnam\", n_members), n_members < 150000.\n.output Answer\n\n"]}
{"id": 1736, "answer": false, "completion": ".decl Has_n_pages(Paper:symbol, N_pages:float)\nHas_n_pages(\"thesis paper\", 100).\nHas_n_pages(\"kindergarten assignment\", 10).\n.decl Answer()\nAnswer() :- Has_n_pages(\"thesis paper\", n_pages1), Has_n_pages(\"kindergarten assignment\", n_pages2), n_pages1 > n_pages2.\n.output Answer\n\n", "completions": [".decl Has_n_pages(Paper:symbol, N_pages:float)\nHas_n_pages(\"thesis paper\", 100).\nHas_n_pages(\"kindergarten assignment\", 10).\n.decl Answer()\nAnswer() :- Has_n_pages(\"thesis paper\", n_pages1), Has_n_pages(\"kindergarten assignment\", n_pages2), n_pages1 > n_pages2.\n.output Answer\n\n"]}
{"id": 1737, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"cephalophore\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"cephalophore\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"cephalophore\", n_members1), Has_n_members(\"cephalophore\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"cephalophore\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"cephalophore\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"cephalophore\", n_members1), Has_n_members(\"cephalophore\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1738, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Wehrmacht\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Allies\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Wehrmacht\", n_members1), Has_n_members(\"Allies\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Wehrmacht\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Allies\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"Wehrmacht\", n_members1), Has_n_members(\"Allies\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1739, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Lil Wayne\", 16).\n.decl Has_age_limit(Person:symbol, Age_limit:float)\nHas_age_limit(\"Lil Wayne\", 18).\n.decl Answer()\nAnswer() :- Has_age(\"Lil Wayne\", age), Has_age_limit(\"Lil Wayne\", age_limit), age >= age_limit.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Lil Wayne\", 16).\n.decl Has_age_limit(Person:symbol, Age_limit:float)\nHas_age_limit(\"Lil Wayne\", 18).\n.decl Answer()\nAnswer() :- Has_age(\"Lil Wayne\", age), Has_age_limit(\"Lil Wayne\", age_limit), age >= age_limit.\n.output Answer\n\n"]}
{"id": 1740, "answer": true, "completion": ".decl Taught_by(Person:symbol, Teacher:symbol)\nTaught_by(\"Lord Voldemort\", \"Professor Dumbledore\").\n.decl Answer()\nAnswer() :- Taught_by(\"Lord Voldemort\", person1), Taught_by(person1, person2), person2 = \"Professor Dumbledore\".\n.output Answer\n\n", "completions": [".decl Taught_by(Person:symbol, Teacher:symbol)\nTaught_by(\"Lord Voldemort\", \"Professor Dumbledore\").\n.decl Answer()\nAnswer() :- Taught_by(\"Lord Voldemort\", person1), Taught_by(person1, person2), person2 = \"Professor Dumbledore\".\n.output Answer\n\n"]}
{"id": 1741, "answer": false, "completion": ".decl Has_name(Location:symbol, Name:symbol)\nHas_name(\"Olympia Washington\", \"Olympia\").\nHas_name(\"Hephaestus's workshop\", \"Olympia\").\n.decl Answer()\nAnswer() :- Has_name(\"Olympia Washington\", name), Has_name(\"Hephaestus's workshop\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Location:symbol, Name:symbol)\nHas_name(\"Olympia Washington\", \"Olympia\").\nHas_name(\"Hephaestus's workshop\", \"Olympia\").\n.decl Answer()\nAnswer() :- Has_name(\"Olympia Washington\", name), Has_name(\"Hephaestus's workshop\", name).\n.output Answer\n\n"]}
{"id": 1742, "answer": true, "completion": ".decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Answer()\nAnswer() :- Is_acronym(\"JPEG\", meaning1), Is_acronym(\"JPEG\", meaning2), Is_acronym(\"JPEG\", meaning3), meaning1 = meaning2, meaning2 = meaning3.\n.output Answer\n\n", "completions": [".decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Is_acronym(Acronym:symbol, Meaning:symbol)\nIs_acronym(\"JPEG\", \"joint photographic experts group\").\n.decl Answer()\nAnswer() :- Is_acronym(\"JPEG\", meaning1), Is_acronym(\"JPEG\", meaning2), Is_acronym(\"JPEG\", meaning3), meaning1 = meaning2, meaning2 = meaning3.\n.output Answer\n\n"]}
{"id": 1743, "answer": true, "completion": ".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Mickey Mouse\", 0.01).\nHas_price(\"Zazzle\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"Mickey Mouse\", price1), Has_price(\"Zazzle\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Product:symbol, Price:float)\nHas_price(\"Mickey Mouse\", 0.01).\nHas_price(\"Zazzle\", 0.01).\n.decl Answer()\nAnswer() :- Has_price(\"Mickey Mouse\", price1), Has_price(\"Zazzle\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1744, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Watergate scandal\", \"June 1972\").\nHappens_in_time(\"Watergate scandal\", \"July 1972\").\nHappens_in_time(\"Watergate scandal\", \"August 1972\").\nHappens_in_time(\"Watergate scandal\", \"September 1972\").\nHappens_in_time(\"Watergate scandal\", \"October 1972\").\nHappens_in_time(\"Watergate scandal\", \"November 1972\").\nHappens_in_time(\"Watergate scandal\", \"December 1972\").\nHappens_in_time(\"Watergate scandal\", \"January 1973\").\nHappens_in_time(\"Watergate scandal\", \"February 1973\").\nHappens_in_time(\"Watergate scandal\", \"March 1973\").\nHappens_in_time(\"Watergate scandal\", \"April 1973\").\nHappens_in_time(\"Watergate scandal\", \"May 1973\").\nHappens_in_time(\"Watergate scandal\", \"June 1973\").\nHappens_in_time(\"Watergate scandal\", \"July 1973\").\nHappens_in_time(\"Watergate scandal\", \"August 1973\").\nHappens_in_time(\"Watergate scandal\", \"September 1973\").\nHappens_in_time(\"Watergate scandal\", \"October 1973\").\nHappens_in_time(\"Watergate scandal\", \"November 1973\").\nHappens_in_time(\"Watergate scandal\", \"December 1973\").\nHappens_in_time(\"Watergate scandal\", \"January 1974\").\nHappens_in_time(\"Watergate scandal\", \"February 1974\").\nHappens_in_time(\"Watergate scandal\", \"March 1974\").\nHappens_in_time(\"Watergate scandal\", \"April 1974\").\nHappens_in_time(\"Watergate scandal\", \"May 1974\").\nHappens_in_time(\"Watergate scandal\", \"June 1974\").\nHappens_in_time(\"Watergate scandal\", \"July 1974\").\nHappens_in_time(\"Watergate scandal\", \"August 1974\").\nHappens_in_time(\"Watergate scandal\", \"September 1974\").\nHappens_in_time(\"Watergate scandal\", \"October 1974\").\nHappens_in_time(\"Watergate scandal\", \"November 1974\").\nHappens_in_time(\"Watergate scandal\", \"December 1974\").\nHappens_in_time(\"Watergate scandal\", \"January 1975\").\nHappens_in_time(\"Watergate scandal\", \"February 1975\").\nHappens_in_time(\"Watergate scandal\", \"March 1975\").\nHappens_in_time(\"Watergate scandal\", \"April 1975\").\nHappens_in_time(\"Watergate scandal\", \"May 1975\").\nHappens_in_time(\"Watergate scandal\", \"June 1975\").\nHappens_in_time(\"Watergate scandal\", \"July 1975\").\nHappens_in_time(\"Watergate scandal\", \"August 1975\").\nHappens_in_time(\"Watergate scandal\", \"September 1975\").\nHappens_in_time(\"Watergate scandal\", \"October 1975\").\nHappens_in_time(\"Watergate scandal\", \"November 1975\").\nHappens_in_time(\"Watergate scandal\", \"December 1975\").\nHappens_in_time(\"Watergate scandal\", \"January 1976\").\nHappens_in_time(\"Watergate scandal\", \"February 1976\").\nHappens_in_time(\"Watergate scandal\", \"March", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Watergate scandal\", \"June 1972\").\nHappens_in_time(\"Watergate scandal\", \"July 1972\").\nHappens_in_time(\"Watergate scandal\", \"August 1972\").\nHappens_in_time(\"Watergate scandal\", \"September 1972\").\nHappens_in_time(\"Watergate scandal\", \"October 1972\").\nHappens_in_time(\"Watergate scandal\", \"November 1972\").\nHappens_in_time(\"Watergate scandal\", \"December 1972\").\nHappens_in_time(\"Watergate scandal\", \"January 1973\").\nHappens_in_time(\"Watergate scandal\", \"February 1973\").\nHappens_in_time(\"Watergate scandal\", \"March 1973\").\nHappens_in_time(\"Watergate scandal\", \"April 1973\").\nHappens_in_time(\"Watergate scandal\", \"May 1973\").\nHappens_in_time(\"Watergate scandal\", \"June 1973\").\nHappens_in_time(\"Watergate scandal\", \"July 1973\").\nHappens_in_time(\"Watergate scandal\", \"August 1973\").\nHappens_in_time(\"Watergate scandal\", \"September 1973\").\nHappens_in_time(\"Watergate scandal\", \"October 1973\").\nHappens_in_time(\"Watergate scandal\", \"November 1973\").\nHappens_in_time(\"Watergate scandal\", \"December 1973\").\nHappens_in_time(\"Watergate scandal\", \"January 1974\").\nHappens_in_time(\"Watergate scandal\", \"February 1974\").\nHappens_in_time(\"Watergate scandal\", \"March 1974\").\nHappens_in_time(\"Watergate scandal\", \"April 1974\").\nHappens_in_time(\"Watergate scandal\", \"May 1974\").\nHappens_in_time(\"Watergate scandal\", \"June 1974\").\nHappens_in_time(\"Watergate scandal\", \"July 1974\").\nHappens_in_time(\"Watergate scandal\", \"August 1974\").\nHappens_in_time(\"Watergate scandal\", \"September 1974\").\nHappens_in_time(\"Watergate scandal\", \"October 1974\").\nHappens_in_time(\"Watergate scandal\", \"November 1974\").\nHappens_in_time(\"Watergate scandal\", \"December 1974\").\nHappens_in_time(\"Watergate scandal\", \"January 1975\").\nHappens_in_time(\"Watergate scandal\", \"February 1975\").\nHappens_in_time(\"Watergate scandal\", \"March 1975\").\nHappens_in_time(\"Watergate scandal\", \"April 1975\").\nHappens_in_time(\"Watergate scandal\", \"May 1975\").\nHappens_in_time(\"Watergate scandal\", \"June 1975\").\nHappens_in_time(\"Watergate scandal\", \"July 1975\").\nHappens_in_time(\"Watergate scandal\", \"August 1975\").\nHappens_in_time(\"Watergate scandal\", \"September 1975\").\nHappens_in_time(\"Watergate scandal\", \"October 1975\").\nHappens_in_time(\"Watergate scandal\", \"November 1975\").\nHappens_in_time(\"Watergate scandal\", \"December 1975\").\nHappens_in_time(\"Watergate scandal\", \"January 1976\").\nHappens_in_time(\"Watergate scandal\", \"February 1976\").\nHappens_in_time(\"Watergate scandal\", \"March"]}
{"id": 1745, "answer": false, "completion": ".decl Was_lead_guitarist(Person:symbol, Metallica:symbol)\nWas_lead_guitarist(\"James Hetfield\", \"Metallica\").\nWas_lead_guitarist(\"Kirk Hammett\", \"Metallica\").\nWas_lead_guitarist(\"Dave Mustaine\", \"Metallica\").\nWas_lead_guitarist(\"Cliff Burton\", \"Metallica\").\n.decl Was_in_band(Person:symbol, Band:symbol)\nWas_in_band(\"Dave Mustaine\", \"Metallica\").\nWas_in_band(\"Cliff Burton\", \"Metallica\").\n.decl Answer()\nAnswer() :- Was_lead_guitarist(\"Dave Mustaine\", Metallica), Was_in_band(\"Dave Mustaine\", Metallica), Was_in_band(\"Cliff Burton\", Metallica).\n.output Answer\n\n", "completions": [".decl Was_lead_guitarist(Person:symbol, Metallica:symbol)\nWas_lead_guitarist(\"James Hetfield\", \"Metallica\").\nWas_lead_guitarist(\"Kirk Hammett\", \"Metallica\").\nWas_lead_guitarist(\"Dave Mustaine\", \"Metallica\").\nWas_lead_guitarist(\"Cliff Burton\", \"Metallica\").\n.decl Was_in_band(Person:symbol, Band:symbol)\nWas_in_band(\"Dave Mustaine\", \"Metallica\").\nWas_in_band(\"Cliff Burton\", \"Metallica\").\n.decl Answer()\nAnswer() :- Was_lead_guitarist(\"Dave Mustaine\", Metallica), Was_in_band(\"Dave Mustaine\", Metallica), Was_in_band(\"Cliff Burton\", Metallica).\n.output Answer\n\n"]}
{"id": 1746, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Iggy Pop\", \"Iggy\").\nHas_name(\"Iggy Pop\", \"Pop\").\n.decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Iggy Pop\", \"Iggy Pop Senior\").\n.decl Answer()\nAnswer() :- Has_name(\"Iggy Pop\", name), Has_father(\"Iggy Pop\", father), Has_name(father, name).\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Iggy Pop\", \"Iggy\").\nHas_name(\"Iggy Pop\", \"Pop\").\n.decl Has_father(Person:symbol, Father:symbol)\nHas_father(\"Iggy Pop\", \"Iggy Pop Senior\").\n.decl Answer()\nAnswer() :- Has_name(\"Iggy Pop\", name), Has_father(\"Iggy Pop\", father), Has_name(father, name).\n.output Answer\n\n"]}
{"id": 1747, "answer": true, "completion": ".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Shiva\", \"Holy Land\").\n.decl Is_holy(Place:symbol)\nIs_holy(\"Holy Land\").\n.decl Answer()\nAnswer() :- Visits(\"Shiva\", place), Is_holy(place).\n.output Answer\n\n", "completions": [".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Shiva\", \"Holy Land\").\n.decl Is_holy(Place:symbol)\nIs_holy(\"Holy Land\").\n.decl Answer()\nAnswer() :- Visits(\"Shiva\", place), Is_holy(place).\n.output Answer\n\n"]}
{"id": 1748, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"coca leaves\", 0.1).\nHas_weight(\"coca\", 0.1).\n.decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"coca leaves\", 0.1).\nHas_weight(\"coca\", 0.1).\n.decl Answer()\nAnswer() :- Has_weight(\"coca leaves\", weight1), Has_weight(\"coca\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"coca leaves\", 0.1).\nHas_weight(\"coca\", 0.1).\n.decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"coca leaves\", 0.1).\nHas_weight(\"coca\", 0.1).\n.decl Answer()\nAnswer() :- Has_weight(\"coca leaves\", weight1), Has_weight(\"coca\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 1749, "answer": true, "completion": ".decl Has_formation_type(Object:symbol, Formation_type:symbol)\nHas_formation_type(\"black swan\", \"pile\").\nHas_formation_type(\"black swan\", \"flight\").\nHas_formation_type(\"black swan\", \"flock\").\n.decl Has_longest_word(Formation_type:symbol, Longest_word:symbol)\nHas_longest_word(\"pile\", \"pile\").\nHas_longest_word(\"flight\", \"flight\").\nHas_longest_word(\"flock\", \"flock\").\n.decl Answer()\nAnswer() :- Has_formation_type(\"black swan\", formation_type), Has_longest_word(formation_type, longest_word), longest_word = \"flock\".\n.output Answer\n\n", "completions": [".decl Has_formation_type(Object:symbol, Formation_type:symbol)\nHas_formation_type(\"black swan\", \"pile\").\nHas_formation_type(\"black swan\", \"flight\").\nHas_formation_type(\"black swan\", \"flock\").\n.decl Has_longest_word(Formation_type:symbol, Longest_word:symbol)\nHas_longest_word(\"pile\", \"pile\").\nHas_longest_word(\"flight\", \"flight\").\nHas_longest_word(\"flock\", \"flock\").\n.decl Answer()\nAnswer() :- Has_formation_type(\"black swan\", formation_type), Has_longest_word(formation_type, longest_word), longest_word = \"flock\".\n.output Answer\n\n"]}
{"id": 1750, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"C-SPAN\", \"C-SPAN\").\nHas_name(\"outer space\", \"outer space\").\n.decl Answer()\nAnswer() :- Has_name(\"C-SPAN\", name), Has_name(\"outer space\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"C-SPAN\", \"C-SPAN\").\nHas_name(\"outer space\", \"outer space\").\n.decl Answer()\nAnswer() :- Has_name(\"C-SPAN\", name), Has_name(\"outer space\", name).\n.output Answer\n\n"]}
{"id": 1751, "answer": true, "completion": ".decl Can_shake(Object:symbol, Shake:symbol)\nCan_shake(\"glass\", \"yes\").\nCan_shake(\"glass\", \"no\").\nCan_shake(\"Kelly Clarkson's voice\", \"yes\").\nCan_shake(\"Kelly Clarkson's voice\", \"no\").\n.decl Answer()\nAnswer() :- Can_shake(\"glass\", shake), Can_shake(\"Kelly Clarkson's voice\", shake).\n.output Answer\n\n", "completions": [".decl Can_shake(Object:symbol, Shake:symbol)\nCan_shake(\"glass\", \"yes\").\nCan_shake(\"glass\", \"no\").\nCan_shake(\"Kelly Clarkson's voice\", \"yes\").\nCan_shake(\"Kelly Clarkson's voice\", \"no\").\n.decl Answer()\nAnswer() :- Can_shake(\"glass\", shake), Can_shake(\"Kelly Clarkson's voice\", shake).\n.output Answer\n\n"]}
{"id": 1752, "answer": true, "completion": ".decl Gives_present(Santa_Claus:symbol, Person:symbol)\nGives_present(\"Santa Claus\", \"Joffrey Baratheon\").\n.decl Answer()\nAnswer() :- Gives_present(\"Santa Claus\", person).\n.output Answer\n\n", "completions": [".decl Gives_present(Santa_Claus:symbol, Person:symbol)\nGives_present(\"Santa Claus\", \"Joffrey Baratheon\").\n.decl Answer()\nAnswer() :- Gives_present(\"Santa Claus\", person).\n.output Answer\n\n"]}
{"id": 1753, "answer": false, "completion": ".decl Has_family(Plant:symbol, Family:symbol)\nHas_family(\"asparagus\", \"Liliaceae\").\nHas_family(\"slime lilies\", \"Liliaceae\").\n.decl Answer()\nAnswer() :- Has_family(\"slime lilies\", family), Has_family(\"asparagus\", family), family \\= \"Liliaceae\".\n.output Answer\n\n", "completions": [".decl Has_family(Plant:symbol, Family:symbol)\nHas_family(\"asparagus\", \"Liliaceae\").\nHas_family(\"slime lilies\", \"Liliaceae\").\n.decl Answer()\nAnswer() :- Has_family(\"slime lilies\", family), Has_family(\"asparagus\", family), family \\= \"Liliaceae\".\n.output Answer\n\n"]}
{"id": 1754, "answer": true, "completion": ".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Christopher Columbus\", \"America\").\nVisited(\"Christopher Columbus\", \"Antarctica\").\n.decl Answer()\nAnswer() :- Visited(\"Christopher Columbus\", place), place = \"Antarctica\".\n.output Answer\n\n", "completions": [".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Christopher Columbus\", \"America\").\nVisited(\"Christopher Columbus\", \"Antarctica\").\n.decl Answer()\nAnswer() :- Visited(\"Christopher Columbus\", place), place = \"Antarctica\".\n.output Answer\n\n"]}
{"id": 1755, "answer": true, "completion": ".decl Has_legs(Animal:symbol, N_legs:float)\nHas_legs(\"snake\", 0).\nHas_legs(\"snowshoe\", 4).\n.decl Answer()\nAnswer() :- Has_legs(\"snake\", n_legs1), Has_legs(\"snowshoe\", n_legs2), n_legs1 >= n_legs2.\n.output Answer\n\n", "completions": [".decl Has_legs(Animal:symbol, N_legs:float)\nHas_legs(\"snake\", 0).\nHas_legs(\"snowshoe\", 4).\n.decl Answer()\nAnswer() :- Has_legs(\"snake\", n_legs1), Has_legs(\"snowshoe\", n_legs2), n_legs1 >= n_legs2.\n.output Answer\n\n"]}
{"id": 1756, "answer": true, "completion": ".decl Is_an_anesthetist(Person:symbol)\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_", "completions": [".decl Is_an_anesthetist(Person:symbol)\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_an_anesthetist(\"Dr. John Snow\").\nIs_"]}
{"id": 1757, "answer": true, "completion": ".decl Has_noise_level(Object:symbol, Noise_level:float)\nHas_noise_level(\"airplanes\", 75).\nHas_noise_level(\"Orange County, California\", 60).\n.decl Answer()\nAnswer() :- Has_noise_level(\"Orange County, California\", noise_level), Has_noise_level(\"airplanes\", noise_level2), noise_level > noise_level2.\n.output Answer\n\n", "completions": [".decl Has_noise_level(Object:symbol, Noise_level:float)\nHas_noise_level(\"airplanes\", 75).\nHas_noise_level(\"Orange County, California\", 60).\n.decl Answer()\nAnswer() :- Has_noise_level(\"Orange County, California\", noise_level), Has_noise_level(\"airplanes\", noise_level2), noise_level > noise_level2.\n.output Answer\n\n"]}
{"id": 1758, "answer": false, "completion": ".decl Parent_of(Person:symbol, Child:symbol)\nParent_of(\"Charlemagne\", \"Charles Martel\").\nParent_of(\"Charles Martel\", \"Pepin the Short\").\nParent_of(\"Pepin the Short\", \"Charlemagne\").\n.decl Battle_of(Battle:symbol, Year:float)\nBattle_of(\"Battle of Tours\", 732).\n.decl Answer()\nAnswer() :- Parent_of(\"Charlemagne\", child), Battle_of(\"Battle of Tours\", year), year < 732.\n.output Answer\n\n", "completions": [".decl Parent_of(Person:symbol, Child:symbol)\nParent_of(\"Charlemagne\", \"Charles Martel\").\nParent_of(\"Charles Martel\", \"Pepin the Short\").\nParent_of(\"Pepin the Short\", \"Charlemagne\").\n.decl Battle_of(Battle:symbol, Year:float)\nBattle_of(\"Battle of Tours\", 732).\n.decl Answer()\nAnswer() :- Parent_of(\"Charlemagne\", child), Battle_of(\"Battle of Tours\", year), year < 732.\n.output Answer\n\n"]}
{"id": 1759, "answer": false, "completion": ".decl Interviewed(Person:symbol, Interviewer:symbol)\nInterviewed(\"Walt Disney\", \"Morton Heilig\").\nInterviewed(\"Walt Disney\", \"David Letterman\").\nInterviewed(\"Walt Disney\", \"Tom Brokaw\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"W", "completions": [".decl Interviewed(Person:symbol, Interviewer:symbol)\nInterviewed(\"Walt Disney\", \"Morton Heilig\").\nInterviewed(\"Walt Disney\", \"David Letterman\").\nInterviewed(\"Walt Disney\", \"Tom Brokaw\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"Walt Disney\", \"Walter Cronkite\").\nInterviewed(\"W"]}
{"id": 1760, "answer": false, "completion": ".decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Super Mario\", \"Illinois\").\n.decl Has_education_level(Person:symbol, Education_level:symbol)\nHas_education_level(\"Super Mario\", \"college\").\n.decl Answer()\nAnswer() :- Has_state(\"Super Mario\", state), Has_education_level(\"Super Mario\", education_level), state != \"Illinois\".\n.output Answer\n\n", "completions": [".decl Has_state(Person:symbol, State:symbol)\nHas_state(\"Super Mario\", \"Illinois\").\n.decl Has_education_level(Person:symbol, Education_level:symbol)\nHas_education_level(\"Super Mario\", \"college\").\n.decl Answer()\nAnswer() :- Has_state(\"Super Mario\", state), Has_education_level(\"Super Mario\", education_level), state != \"Illinois\".\n.output Answer\n\n"]}
{"id": 1761, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"tonsilitis surgery\", \"2020\").\nHappens_in_time(\"tonsilitis\", \"2020\").\nHappens_in_time(\"strep throat\", \"2020\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"tonsilitis surgery\", \"2019\").\nHappens_in_time(\"tonsilitis\", \"2019\").\nHappens_in_time(\"strep throat\", \"2019\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"tonsilitis surgery\", \"2020\"), Happens_in_time(\"tonsilitis\", \"2020\"), Happens_in_time(\"strep throat\", \"2020\"), not Happens_in_time(\"tonsilitis surgery\", \"2019\"), not Happens_in_time(\"tonsilitis\", \"2019\"), not Happens_in_time(\"strep throat\", \"2019\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"tonsilitis surgery\", \"2020\").\nHappens_in_time(\"tonsilitis\", \"2020\").\nHappens_in_time(\"strep throat\", \"2020\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"tonsilitis surgery\", \"2019\").\nHappens_in_time(\"tonsilitis\", \"2019\").\nHappens_in_time(\"strep throat\", \"2019\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"tonsilitis surgery\", \"2020\"), Happens_in_time(\"tonsilitis\", \"2020\"), Happens_in_time(\"strep throat\", \"2020\"), not Happens_in_time(\"tonsilitis surgery\", \"2019\"), not Happens_in_time(\"tonsilitis\", \"2019\"), not Happens_in_time(\"strep throat\", \"2019\").\n.output Answer\n\n"]}
{"id": 1762, "answer": false, "completion": ".decl Has_n_wins(Driver:symbol, N_wins:float)\nHas_n_wins(\"William Franklyn-Miller\", 0).\n.decl Has_n_races(Driver:symbol, N_races:float)\nHas_n_races(\"William Franklyn-Miller\", 0).\n.decl Answer()\nAnswer() :- Has_n_wins(\"William Franklyn-Miller\", n_wins), Has_n_races(\"William Franklyn-Miller\", n_races), n_wins > n_races.\n.output Answer\n\n", "completions": [".decl Has_n_wins(Driver:symbol, N_wins:float)\nHas_n_wins(\"William Franklyn-Miller\", 0).\n.decl Has_n_races(Driver:symbol, N_races:float)\nHas_n_races(\"William Franklyn-Miller\", 0).\n.decl Answer()\nAnswer() :- Has_n_wins(\"William Franklyn-Miller\", n_wins), Has_n_races(\"William Franklyn-Miller\", n_races), n_wins > n_races.\n.output Answer\n\n"]}
{"id": 1763, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pink\", \"pink\").\nHas_color(\"white\", \"white\").\nHas_color(\"green\", \"green\").\nHas_color(\"red\", \"red\").\nHas_color(\"blue\", \"blue\").\nHas_color(\"orange\", \"orange\").\nHas_color(\"azure\", \"azure\").\nHas_color(\"violet\", \"violet\").\nHas_color(\"yellow\", \"yellow\").\nHas_color(\"black\", \"black\").\n.decl Has_n_colors(Object:symbol, N_colors:float)\nHas_n_colors(\"pink\", 1).\nHas_n_colors(\"white\", 1).\nHas_n_colors(\"green\", 1).\nHas_n_colors(\"red\", 1).\nHas_n_colors(\"blue\", 1).\nHas_n_colors(\"orange\", 1).\nHas_n_colors(\"azure\", 1).\nHas_n_colors(\"violet\", 1).\nHas_n_colors(\"yellow\", 1).\nHas_n_colors(\"black\", 1).\n.decl Answer()\nAnswer() :- Has_n_colors(\"pink\", n_colors1), Has_n_colors(\"white\", n_colors2), Has_n_colors(\"green\", n_colors3), Has_n_colors(\"red\", n_colors4), Has_n_colors(\"blue\", n_colors5), Has_n_colors(\"orange\", n_colors6), Has_n_colors(\"azure\", n_colors7), Has_n_colors(\"violet\", n_colors8), Has_n_colors(\"yellow\", n_colors9), Has_n_colors(\"black\", n_colors10), n_colors1 + n_colors2 + n_colors3 + n_colors4 + n_colors5 + n_colors6 + n_colors7 + n_colors8 + n_colors9 + n_colors10 >= 4.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"pink\", \"pink\").\nHas_color(\"white\", \"white\").\nHas_color(\"green\", \"green\").\nHas_color(\"red\", \"red\").\nHas_color(\"blue\", \"blue\").\nHas_color(\"orange\", \"orange\").\nHas_color(\"azure\", \"azure\").\nHas_color(\"violet\", \"violet\").\nHas_color(\"yellow\", \"yellow\").\nHas_color(\"black\", \"black\").\n.decl Has_n_colors(Object:symbol, N_colors:float)\nHas_n_colors(\"pink\", 1).\nHas_n_colors(\"white\", 1).\nHas_n_colors(\"green\", 1).\nHas_n_colors(\"red\", 1).\nHas_n_colors(\"blue\", 1).\nHas_n_colors(\"orange\", 1).\nHas_n_colors(\"azure\", 1).\nHas_n_colors(\"violet\", 1).\nHas_n_colors(\"yellow\", 1).\nHas_n_colors(\"black\", 1).\n.decl Answer()\nAnswer() :- Has_n_colors(\"pink\", n_colors1), Has_n_colors(\"white\", n_colors2), Has_n_colors(\"green\", n_colors3), Has_n_colors(\"red\", n_colors4), Has_n_colors(\"blue\", n_colors5), Has_n_colors(\"orange\", n_colors6), Has_n_colors(\"azure\", n_colors7), Has_n_colors(\"violet\", n_colors8), Has_n_colors(\"yellow\", n_colors9), Has_n_colors(\"black\", n_colors10), n_colors1 + n_colors2 + n_colors3 + n_colors4 + n_colors5 + n_colors6 + n_colors7 + n_colors8 + n_colors9 + n_colors10 >= 4.\n.output Answer\n\n"]}
{"id": 1764, "answer": true, "completion": ".decl Has_capacity(Event:symbol, Capacity:float)\nHas_capacity(\"Coachella\", 100000).\nHas_capacity(\"Los Angeles Memorial Sports Arena\", 15000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Coachella\", capacity1), Has_capacity(\"Los Angeles Memorial Sports Arena\", capacity2), capacity1 > capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Event:symbol, Capacity:float)\nHas_capacity(\"Coachella\", 100000).\nHas_capacity(\"Los Angeles Memorial Sports Arena\", 15000).\n.decl Answer()\nAnswer() :- Has_capacity(\"Coachella\", capacity1), Has_capacity(\"Los Angeles Memorial Sports Arena\", capacity2), capacity1 > capacity2.\n.output Answer\n\n"]}
{"id": 1765, "answer": true, "completion": ".decl Abitur(Person:symbol)\nAbitur(\"Moon Jae-in\").\n.decl Answer()\nAnswer() :- Abitur(\"Moon Jae-in\").\n.output Answer\n\n", "completions": [".decl Abitur(Person:symbol)\nAbitur(\"Moon Jae-in\").\n.decl Answer()\nAnswer() :- Abitur(\"Moon Jae-in\").\n.output Answer\n\n"]}
{"id": 1766, "answer": false, "completion": ".decl Has_state(Location:symbol, State:symbol)\nHas_state(\"Dallas\", \"Texas\").\nHas_state(\"Austin\", \"Texas\").\nHas_state(\"Houston\", \"Texas\").\n.decl Has_population(State:symbol, Population:float)\nHas_population(\"Texas\", 25).\n.decl Answer()\nAnswer() :- Has_state(\"Bandy\", state), Has_population(state, population), population > 25.\n.output Answer\n\n", "completions": [".decl Has_state(Location:symbol, State:symbol)\nHas_state(\"Dallas\", \"Texas\").\nHas_state(\"Austin\", \"Texas\").\nHas_state(\"Houston\", \"Texas\").\n.decl Has_population(State:symbol, Population:float)\nHas_population(\"Texas\", 25).\n.decl Answer()\nAnswer() :- Has_state(\"Bandy\", state), Has_population(state, population), population > 25.\n.output Answer\n\n"]}
{"id": 1767, "answer": false, "completion": ".decl Has_samples(Mission:symbol, Samples:float)\nHas_samples(\"Curiosity\", 10).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Lacus Temporis\", 1).\n.decl Answer()\nAnswer() :- Has_samples(\"Curiosity\", samples), Has_volume(\"Lacus Temporis\", volume), samples > volume.\n.output Answer\n\n", "completions": [".decl Has_samples(Mission:symbol, Samples:float)\nHas_samples(\"Curiosity\", 10).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Lacus Temporis\", 1).\n.decl Answer()\nAnswer() :- Has_samples(\"Curiosity\", samples), Has_volume(\"Lacus Temporis\", volume), samples > volume.\n.output Answer\n\n"]}
{"id": 1768, "answer": false, "completion": ".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"pancreas removal\", \"bankruptcy\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"pancreas removal\", \"bankruptcy\").\n.decl Answer()\nAnswer() :- Has_cause(\"pancreas removal\", cause), Has_effect(\"pancreas removal\", effect), cause == effect.\n.output Answer\n\n", "completions": [".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"pancreas removal\", \"bankruptcy\").\n.decl Has_effect(Event:symbol, Effect:symbol)\nHas_effect(\"pancreas removal\", \"bankruptcy\").\n.decl Answer()\nAnswer() :- Has_cause(\"pancreas removal\", cause), Has_effect(\"pancreas removal\", effect), cause == effect.\n.output Answer\n\n"]}
{"id": 1769, "answer": false, "completion": ".decl Has_condition(Object:symbol, Condition:symbol)\nHas_condition(\"sunscreen\", \"sunburn\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition", "completions": [".decl Has_condition(Object:symbol, Condition:symbol)\nHas_condition(\"sunscreen\", \"sunburn\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition(\"sunscreen\", \"sunscreen allergy\").\nHas_condition"]}
{"id": 1770, "answer": false, "completion": ".decl Has_rules(Person:symbol, Rules:symbol)\nHas_rules(\"Lord Voldemort\", \"Hogwarts\").\n.decl Has_rule(Rule:symbol, Rule_text:symbol)\nHas_rule(\"Hogwarts\", \"no muggle-borns\").\n.decl Answer()\nAnswer() :- Has_rules(\"Lord Voldemort\", rules), Has_rule(rule, rules), rule = \"no muggle-borns\".\n.output Answer\n\n", "completions": [".decl Has_rules(Person:symbol, Rules:symbol)\nHas_rules(\"Lord Voldemort\", \"Hogwarts\").\n.decl Has_rule(Rule:symbol, Rule_text:symbol)\nHas_rule(\"Hogwarts\", \"no muggle-borns\").\n.decl Answer()\nAnswer() :- Has_rules(\"Lord Voldemort\", rules), Has_rule(rule, rules), rule = \"no muggle-borns\".\n.output Answer\n\n"]}
{"id": 1771, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"moon cakes\", 0.5).\nHas_density(\"Chinatown, Manhattan\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"moon cakes\", density1), Has_density(\"Chinatown, Manhattan\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"moon cakes\", 0.5).\nHas_density(\"Chinatown, Manhattan\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"moon cakes\", density1), Has_density(\"Chinatown, Manhattan\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1772, "answer": false, "completion": ".decl Resides_in(Person:symbol, Place:symbol)\nResides_in(\"Felipe Calderon\", \"Mexico\").\nResides_in(\"New Mexico\", \"USA\").\n.decl Answer()\nAnswer() :- Resides_in(\"Felipe Calderon\", \"New Mexico\").\n.output Answer\n\n", "completions": [".decl Resides_in(Person:symbol, Place:symbol)\nResides_in(\"Felipe Calderon\", \"Mexico\").\nResides_in(\"New Mexico\", \"USA\").\n.decl Answer()\nAnswer() :- Resides_in(\"Felipe Calderon\", \"New Mexico\").\n.output Answer\n\n"]}
{"id": 1773, "answer": false, "completion": ".decl Is_a_print_of(Print:symbol, Painting:symbol)\nIs_a_print_of(\"print of a Van Goh\", \"Van Goh\").\n.decl Is_a_painting_by(Painting:symbol, Artist:symbol)\nIs_a_painting_by(\"Van Goh\", \"Van Goh\").\n.decl Answer()\nAnswer() :- Is_a_print_of(print, painting), Is_a_painting_by(painting, artist), print = print1, painting = painting1, artist = artist1, print1 = painting1, painting1 = artist1.\n.output Answer\n\n", "completions": [".decl Is_a_print_of(Print:symbol, Painting:symbol)\nIs_a_print_of(\"print of a Van Goh\", \"Van Goh\").\n.decl Is_a_painting_by(Painting:symbol, Artist:symbol)\nIs_a_painting_by(\"Van Goh\", \"Van Goh\").\n.decl Answer()\nAnswer() :- Is_a_print_of(print, painting), Is_a_painting_by(painting, artist), print = print1, painting = painting1, artist = artist1, print1 = painting1, painting1 = artist1.\n.output Answer\n\n"]}
{"id": 1774, "answer": true, "completion": ".decl Is_near(Place_A:symbol, Place_B:symbol)\nIs_near(\"Cornwall\", \"Bristol\").\nIs_near(\"Cornwall\", \"Bath\").\nIs_near(\"Bristol\", \"London\").\nIs_near(\"Bath\", \"London\").\nIs_near(\"London\", \"Bristol\").\nIs_near(\"London\", \"Bath\").\nIs_near(\"Bristol\", \"Bath\").\nIs_near(\"Bristol\", \"Bristol\").\nIs_near(\"Bath\", \"Bristol\").\nIs_near(\"Bath\", \"Bath\").\n.decl Answer()\nAnswer() :- Is_near(\"Bristol\", birthplace), Is_near(\"Bath\", birthplace), Is_near(\"London\", birthplace).\n.output Answer\n\n", "completions": [".decl Is_near(Place_A:symbol, Place_B:symbol)\nIs_near(\"Cornwall\", \"Bristol\").\nIs_near(\"Cornwall\", \"Bath\").\nIs_near(\"Bristol\", \"London\").\nIs_near(\"Bath\", \"London\").\nIs_near(\"London\", \"Bristol\").\nIs_near(\"London\", \"Bath\").\nIs_near(\"Bristol\", \"Bath\").\nIs_near(\"Bristol\", \"Bristol\").\nIs_near(\"Bath\", \"Bristol\").\nIs_near(\"Bath\", \"Bath\").\n.decl Answer()\nAnswer() :- Is_near(\"Bristol\", birthplace), Is_near(\"Bath\", birthplace), Is_near(\"London\", birthplace).\n.output Answer\n\n"]}
{"id": 1775, "answer": false, "completion": ".decl Votes(Person:symbol, Candidate:symbol)\nVotes(\"Elijah Cummings\", \"Joe Biden\").\n.decl Answer()\nAnswer() :- Votes(\"Elijah Cummings\", \"Joe Biden\").\n.output Answer\n\n", "completions": [".decl Votes(Person:symbol, Candidate:symbol)\nVotes(\"Elijah Cummings\", \"Joe Biden\").\n.decl Answer()\nAnswer() :- Votes(\"Elijah Cummings\", \"Joe Biden\").\n.output Answer\n\n"]}
{"id": 1776, "answer": false, "completion": ".decl Has_power(Character:symbol, Power:float)\nHas_power(\"Lord Voldemort\", 0.5).\nHas_power(\"Final Fantasy\", 0.5).\n.decl Has_spell(Character:symbol, Spell:symbol)\nHas_spell(\"Lord Voldemort\", \"Silence\").\nHas_spell(\"Final Fantasy\", \"Silence\").\n.decl Answer()\nAnswer() :- Has_power(\"Lord Voldemort\", power1), Has_power(\"Final Fantasy\", power2), Has_spell(\"Lord Voldemort\", spell), Has_spell(\"Final Fantasy\", spell), power1 > power2.\n.output Answer\n\n", "completions": [".decl Has_power(Character:symbol, Power:float)\nHas_power(\"Lord Voldemort\", 0.5).\nHas_power(\"Final Fantasy\", 0.5).\n.decl Has_spell(Character:symbol, Spell:symbol)\nHas_spell(\"Lord Voldemort\", \"Silence\").\nHas_spell(\"Final Fantasy\", \"Silence\").\n.decl Answer()\nAnswer() :- Has_power(\"Lord Voldemort\", power1), Has_power(\"Final Fantasy\", power2), Has_spell(\"Lord Voldemort\", spell), Has_spell(\"Final Fantasy\", spell), power1 > power2.\n.output Answer\n\n"]}
{"id": 1777, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"chlorine\", 1).\nHas_price(\"dollar store\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"chlorine\", price1), Has_price(\"dollar store\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"chlorine\", 1).\nHas_price(\"dollar store\", 1).\n.decl Answer()\nAnswer() :- Has_price(\"chlorine\", price1), Has_price(\"dollar store\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1778, "answer": false, "completion": ".decl Is_viable_execution_method(Execution_method:symbol, Ship_type:symbol)\nIs_viable_execution_method(\"hanging\", \"ship\").\nIs_viable_execution_method(\"hanging\", \"airplane\").\n.decl Is_viable_ship_type(Ship_type:symbol)\nIs_viable_ship_type(\"ship\").\n.decl Answer()\nAnswer() :- Is_viable_execution_method(\"hanging\", ship_type), Is_viable_ship_type(ship_type).\n.output Answer\n\n", "completions": [".decl Is_viable_execution_method(Execution_method:symbol, Ship_type:symbol)\nIs_viable_execution_method(\"hanging\", \"ship\").\nIs_viable_execution_method(\"hanging\", \"airplane\").\n.decl Is_viable_ship_type(Ship_type:symbol)\nIs_viable_ship_type(\"ship\").\n.decl Answer()\nAnswer() :- Is_viable_execution_method(\"hanging\", ship_type), Is_viable_ship_type(ship_type).\n.output Answer\n\n"]}
{"id": 1779, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mickey Mouse\", \"Mickey\").\nHas_name(\"Mickey Mouse\", \"Mouse\").\nHas_name(\"Donald Duck\", \"Donald\").\nHas_name(\"Donald Duck\", \"Duck\").\nHas_name(\"Minnie Mouse\", \"Minnie\").\nHas_name(\"Minnie Mouse\", \"Mouse\").\nHas_name(\"Goofy\", \"Goofy\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Mickey Mouse\", \"mouse\").\nHas_job(\"Donald Duck\", \"duck\").\nHas_job(\"Minnie Mouse\", \"mouse\").\nHas_job(\"Goofy\", \"dog\").\n.decl Answer()\nAnswer() :- Has_name(\"Mickey Mouse\", name1), Has_name(\"Donald Duck\", name2), Has_name(\"Minnie Mouse\", name3), Has_name(\"Goofy\", name4), Has_job(\"Mickey Mouse\", job1), Has_job(\"Donald Duck\", job2), Has_job(\"Minnie Mouse\", job3), Has_job(\"Goofy\", job4), name1 = name2, name1 = name3, name1 = name4, job1 = job2, job1 = job3, job1 = job4.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mickey Mouse\", \"Mickey\").\nHas_name(\"Mickey Mouse\", \"Mouse\").\nHas_name(\"Donald Duck\", \"Donald\").\nHas_name(\"Donald Duck\", \"Duck\").\nHas_name(\"Minnie Mouse\", \"Minnie\").\nHas_name(\"Minnie Mouse\", \"Mouse\").\nHas_name(\"Goofy\", \"Goofy\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Mickey Mouse\", \"mouse\").\nHas_job(\"Donald Duck\", \"duck\").\nHas_job(\"Minnie Mouse\", \"mouse\").\nHas_job(\"Goofy\", \"dog\").\n.decl Answer()\nAnswer() :- Has_name(\"Mickey Mouse\", name1), Has_name(\"Donald Duck\", name2), Has_name(\"Minnie Mouse\", name3), Has_name(\"Goofy\", name4), Has_job(\"Mickey Mouse\", job1), Has_job(\"Donald Duck\", job2), Has_job(\"Minnie Mouse\", job3), Has_job(\"Goofy\", job4), name1 = name2, name1 = name3, name1 = name4, job1 = job2, job1 = job3, job1 = job4.\n.output Answer\n\n"]}
{"id": 1780, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"hair\", 0.1).\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"hair\", density1), Has_density(\"pear\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"hair\", 0.1).\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"hair\", density1), Has_density(\"pear\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1781, "answer": true, "completion": ".decl Has_value(Currency:symbol, Value:float)\nHas_value(\"penny\", 1).\nHas_value(\"dollar\", 100).\n.decl Answer()\nAnswer() :- Has_value(\"penny\", value1), Has_value(\"dollar\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Currency:symbol, Value:float)\nHas_value(\"penny\", 1).\nHas_value(\"dollar\", 100).\n.decl Answer()\nAnswer() :- Has_value(\"penny\", value1), Has_value(\"dollar\", value2), value1 > value2.\n.output Answer\n\n"]}
{"id": 1782, "answer": true, "completion": ".decl Has_name(Monster:symbol, Name:symbol)\nHas_name(\"witches\", \"Babayaga\").\nHas_name(\"witches\", \"Banshee\").\nHas_name(\"witches\", \"Boggart\").\nHas_name(\"witches\", \"Cerberus\").\nHas_name(\"witches\", \"Charybdis\").\nHas_name(\"witches\", \"Crocotta\").\nHas_name(\"witches\", \"Draugr\").\nHas_name(\"witches\", \"Drekavac\").\nHas_name(\"witches\", \"Dullahan\").\nHas_name(\"witches\", \"Goblin\").\nHas_name(\"witches\", \"Golem\").\nHas_name(\"witches\", \"Gorgon\").\nHas_name(\"witches\", \"Grindylow\").\nHas_name(\"witches\", \"Hippogriff\").\nHas_name(\"witches\", \"Imp\").\nHas_name(\"witches\", \"Kelpie\").\nHas_name(\"witches\", \"Kraken\").\nHas_name(\"witches\", \"Lamia\").\nHas_name(\"witches\", \"Manticore\").\nHas_name(\"witches\", \"Medusa\").\nHas_name(\"witches\", \"Mermaid\").\nHas_name(\"witches\", \"Necromancer\").\nHas_name(\"witches\", \"Nymph\").\nHas_name(\"witches\", \"Ogre\").\nHas_name(\"witches\", \"Orang-Pansy\").\nHas_name(\"witches\", \"Pegasus\").\nHas_name(\"witches\", \"Pixie\").\nHas_name(\"witches\", \"Poltergeist\").\nHas_name(\"witches\", \"Redcap\").\nHas_name(\"witches\", \"Salamander\").\nHas_name(\"witches\", \"Siren\").\nHas_name(\"witches\", \"Sphinx\").\nHas_name(\"witches\", \"Sprite\").\nHas_name(\"witches\", \"Troll\").\nHas_name(\"witches\", \"Unicorn\").\nHas_name(\"witches\", \"Vampire\").\nHas_name(\"witches\", \"Wendigo\").\nHas_name(\"witches\", \"Witch\").\nHas_name(\"witches\", \"Wyvern\").\nHas_name(\"witches\", \"Yeti\").\n.decl Answer()\nAnswer() :- Has_name(\"witches\", name1), Has_name(\"witches\", name2), name1 > name2.\n.output Answer\n\n", "completions": [".decl Has_name(Monster:symbol, Name:symbol)\nHas_name(\"witches\", \"Babayaga\").\nHas_name(\"witches\", \"Banshee\").\nHas_name(\"witches\", \"Boggart\").\nHas_name(\"witches\", \"Cerberus\").\nHas_name(\"witches\", \"Charybdis\").\nHas_name(\"witches\", \"Crocotta\").\nHas_name(\"witches\", \"Draugr\").\nHas_name(\"witches\", \"Drekavac\").\nHas_name(\"witches\", \"Dullahan\").\nHas_name(\"witches\", \"Goblin\").\nHas_name(\"witches\", \"Golem\").\nHas_name(\"witches\", \"Gorgon\").\nHas_name(\"witches\", \"Grindylow\").\nHas_name(\"witches\", \"Hippogriff\").\nHas_name(\"witches\", \"Imp\").\nHas_name(\"witches\", \"Kelpie\").\nHas_name(\"witches\", \"Kraken\").\nHas_name(\"witches\", \"Lamia\").\nHas_name(\"witches\", \"Manticore\").\nHas_name(\"witches\", \"Medusa\").\nHas_name(\"witches\", \"Mermaid\").\nHas_name(\"witches\", \"Necromancer\").\nHas_name(\"witches\", \"Nymph\").\nHas_name(\"witches\", \"Ogre\").\nHas_name(\"witches\", \"Orang-Pansy\").\nHas_name(\"witches\", \"Pegasus\").\nHas_name(\"witches\", \"Pixie\").\nHas_name(\"witches\", \"Poltergeist\").\nHas_name(\"witches\", \"Redcap\").\nHas_name(\"witches\", \"Salamander\").\nHas_name(\"witches\", \"Siren\").\nHas_name(\"witches\", \"Sphinx\").\nHas_name(\"witches\", \"Sprite\").\nHas_name(\"witches\", \"Troll\").\nHas_name(\"witches\", \"Unicorn\").\nHas_name(\"witches\", \"Vampire\").\nHas_name(\"witches\", \"Wendigo\").\nHas_name(\"witches\", \"Witch\").\nHas_name(\"witches\", \"Wyvern\").\nHas_name(\"witches\", \"Yeti\").\n.decl Answer()\nAnswer() :- Has_name(\"witches\", name1), Has_name(\"witches\", name2), name1 > name2.\n.output Answer\n\n"]}
{"id": 1783, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Beatles\", 4).\nHas_n_members(\"The Rolling Stones\", 7).\nHas_n_members(\"The Who\", 4).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'J", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"The Beatles\", 4).\nHas_n_members(\"The Rolling Stones\", 7).\nHas_n_members(\"The Who\", 4).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'Jays\", 4).\nHas_n_members(\"The Temptations\", 5).\nHas_n_members(\"The Supremes\", 4).\nHas_n_members(\"The Four Tops\", 4).\nHas_n_members(\"The Four Seasons\", 4).\nHas_n_members(\"The Jackson 5\", 5).\nHas_n_members(\"The O'J"]}
{"id": 1784, "answer": true, "completion": ".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Gianni Schicchi\", \"St. Vitus's Dance\").\n.decl Has_competition_type(Competition:symbol, Competition_type:symbol)\nHas_competition_type(\"ballet competition\", \"ballet\").\n.decl Answer()\nAnswer() :- Has_disease(\"Gianni Schicchi\", disease), Has_competition_type(\"ballet competition\", competition_type), competition_type = \"ballet\".\n.output Answer\n\n", "completions": [".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Gianni Schicchi\", \"St. Vitus's Dance\").\n.decl Has_competition_type(Competition:symbol, Competition_type:symbol)\nHas_competition_type(\"ballet competition\", \"ballet\").\n.decl Answer()\nAnswer() :- Has_disease(\"Gianni Schicchi\", disease), Has_competition_type(\"ballet competition\", competition_type), competition_type = \"ballet\".\n.output Answer\n\n"]}
{"id": 1785, "answer": false, "completion": ".decl Is_part_of(Object:symbol, Galaxy:symbol)\nIs_part_of(\"Phobos\", \"Mars\").\nIs_part_of(\"Phobos\", \"Andromeda\").\n.decl Is_part_of(Object:symbol, Galaxy:symbol)\nIs_part_of(\"Deimos\", \"Mars\").\nIs_part_of(\"Deimos\", \"Andromeda\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Phobos\", galaxy), Is_part_of(\"Deimos\", galaxy).\n.output Answer\n\n", "completions": [".decl Is_part_of(Object:symbol, Galaxy:symbol)\nIs_part_of(\"Phobos\", \"Mars\").\nIs_part_of(\"Phobos\", \"Andromeda\").\n.decl Is_part_of(Object:symbol, Galaxy:symbol)\nIs_part_of(\"Deimos\", \"Mars\").\nIs_part_of(\"Deimos\", \"Andromeda\").\n.decl Answer()\nAnswer() :- Is_part_of(\"Phobos\", galaxy), Is_part_of(\"Deimos\", galaxy).\n.output Answer\n\n"]}
{"id": 1786, "answer": true, "completion": ".decl Equivalent(God_A:symbol, God_B:symbol)\nEquivalent(\"Hermes\", \"Vulcan\").\n.decl Answer()\nAnswer() :- Equivalent(\"Hermes\", god1), Equivalent(\"Vulcan\", god2), god1 == god2.\n.output Answer\n\n", "completions": [".decl Equivalent(God_A:symbol, God_B:symbol)\nEquivalent(\"Hermes\", \"Vulcan\").\n.decl Answer()\nAnswer() :- Equivalent(\"Hermes\", god1), Equivalent(\"Vulcan\", god2), god1 == god2.\n.output Answer\n\n"]}
{"id": 1787, "answer": false, "completion": ".decl Is_a(Animal:symbol, Kind:symbol)\nIs_a(\"ocelot\", \"cat\").\nIs_a(\"kindergartener\", \"person\").\n.decl Is_a(Animal:symbol, Kind:symbol)\nIs_a(\"cat\", \"animal\").\nIs_a(\"person\", \"animal\").\n.decl Answer()\nAnswer() :- Is_a(\"ocelot\", \"kindergartener\").\nAnswer() :- Is_a(\"ocelot\", animal), Is_a(animal, \"kindergartener\").\n.output Answer\n\n", "completions": [".decl Is_a(Animal:symbol, Kind:symbol)\nIs_a(\"ocelot\", \"cat\").\nIs_a(\"kindergartener\", \"person\").\n.decl Is_a(Animal:symbol, Kind:symbol)\nIs_a(\"cat\", \"animal\").\nIs_a(\"person\", \"animal\").\n.decl Answer()\nAnswer() :- Is_a(\"ocelot\", \"kindergartener\").\nAnswer() :- Is_a(\"ocelot\", animal), Is_a(animal, \"kindergartener\").\n.output Answer\n\n"]}
{"id": 1788, "answer": false, "completion": ".decl Was_part_of(State:symbol, Army:symbol)\nWas_part_of(\"Alaska\", \"Northern Army\").\n.decl Answer()\nAnswer() :- Was_part_of(\"Alaska\", army), Was_part_of(\"Alaska\", \"Southern Army\").\n.output Answer\n\n", "completions": [".decl Was_part_of(State:symbol, Army:symbol)\nWas_part_of(\"Alaska\", \"Northern Army\").\n.decl Answer()\nAnswer() :- Was_part_of(\"Alaska\", army), Was_part_of(\"Alaska\", \"Southern Army\").\n.output Answer\n\n"]}
{"id": 1789, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Year's Eve\", \"December\").\nHappens_in_time(\"New Year's Eve\", \"January\").\nHappens_in_time(\"New Year's Eve\", \"February\").\nHappens_in_time(\"New Year's Eve\", \"March\").\nHappens_in_time(\"New Year's Eve\", \"April\").\nHappens_in_time(\"New Year's Eve\", \"May\").\nHappens_in_time(\"New Year's Eve\", \"June\").\nHappens_in_time(\"New Year's Eve\", \"July\").\nHappens_in_time(\"New Year's Eve\", \"August\").\nHappens_in_time(\"New Year's Eve\", \"September\").\nHappens_in_time(\"New Year's Eve\", \"October\").\nHappens_in_time(\"New Year's Eve\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Bacchus's birthday\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"Bacchus's birthday\", n_months1), Happens_in_time(\"New Year's Eve\", month),  n_months1 <= month.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Year's Eve\", \"December\").\nHappens_in_time(\"New Year's Eve\", \"January\").\nHappens_in_time(\"New Year's Eve\", \"February\").\nHappens_in_time(\"New Year's Eve\", \"March\").\nHappens_in_time(\"New Year's Eve\", \"April\").\nHappens_in_time(\"New Year's Eve\", \"May\").\nHappens_in_time(\"New Year's Eve\", \"June\").\nHappens_in_time(\"New Year's Eve\", \"July\").\nHappens_in_time(\"New Year's Eve\", \"August\").\nHappens_in_time(\"New Year's Eve\", \"September\").\nHappens_in_time(\"New Year's Eve\", \"October\").\nHappens_in_time(\"New Year's Eve\", \"November\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"Bacchus's birthday\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"Bacchus's birthday\", n_months1), Happens_in_time(\"New Year's Eve\", month),  n_months1 <= month.\n.output Answer\n\n"]}
{"id": 1790, "answer": false, "completion": ".decl Has_similar_property(God_A:symbol, God_B:symbol)\nHas_similar_property(\"Poseidon\", \"Vulcan\").\n.decl Answer()\nAnswer() :- Has_similar_property(\"Poseidon\", god1), Has_similar_property(\"Vulcan\", god2), god1 = god2.\n.output Answer\n\n", "completions": [".decl Has_similar_property(God_A:symbol, God_B:symbol)\nHas_similar_property(\"Poseidon\", \"Vulcan\").\n.decl Answer()\nAnswer() :- Has_similar_property(\"Poseidon\", god1), Has_similar_property(\"Vulcan\", god2), god1 = god2.\n.output Answer\n\n"]}
{"id": 1791, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"travelers\", \"1840s\").\nHappens_in_time(\"sea shanties\", \"1840s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"travelers\", time), Happens_in_time(\"sea shanties\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"travelers\", \"1840s\").\nHappens_in_time(\"sea shanties\", \"1840s\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"travelers\", time), Happens_in_time(\"sea shanties\", time).\n.output Answer\n\n"]}
{"id": 1792, "answer": false, "completion": ".decl Has_antiviral_property(Drug:symbol, HIV:symbol)\nHas_antiviral_property(\"morphine\", \"HIV\").\n.decl Answer()\nAnswer() :- Has_antiviral_property(\"morphine\", HIV).\n.output Answer\n\n", "completions": [".decl Has_antiviral_property(Drug:symbol, HIV:symbol)\nHas_antiviral_property(\"morphine\", \"HIV\").\n.decl Answer()\nAnswer() :- Has_antiviral_property(\"morphine\", HIV).\n.output Answer\n\n"]}
{"id": 1793, "answer": true, "completion": ".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Jupiter Asc", "completions": [".decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"The Wachowskis\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lana Wachowski\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"Jupiter Ascending\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix Reloaded\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Lilly Wachowski\", \"The Matrix Revolutions\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"The Matrix\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Cloud Atlas\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"V for Vendetta\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Speed Racer\").\n.decl Directed(Person:symbol, Movie:symbol)\nDirected(\"Joel Silver\", \"Jupiter Asc"]}
{"id": 1794, "answer": false, "completion": ".decl Has_menu(Store:symbol, Menu:symbol)\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\n.decl Has_menu(Store:symbol, Menu:symbol)\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\n.decl Answer()\nAnswer() :- Has_menu(\"Starbucks\", \"coffee\"), Has_menu(\"Starbucks\", \"tea\"), Has_menu(\"Starbucks\", \"sandwiches\"), Has_menu(\"Starbucks\", \"pastries\"), Has_menu(\"Starbucks\", \"soda\"), Has_menu(\"Starbucks\", \"frappuccinos\"), Has_menu(\"Starbucks\", \"mochas\"), Has_menu(\"Starbucks\", \"breakfast\"), Has_menu(\"Starbucks\", \"lunch\"), Has_menu(\"Starbucks\", \"dinner\"), Has_menu(\"Starbucks\", \"dessert\"), Has_menu(\"Starbucks\", \"baked goods\"), Has_menu(\"Starbucks\", \"beverages\"), Has_menu(\"Starbucks\", \"sides\"), Has_menu(\"Starbucks\", \"kids\").\n.output Answer\n\n\n", "completions": [".decl Has_menu(Store:symbol, Menu:symbol)\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\n.decl Has_menu(Store:symbol, Menu:symbol)\nHas_menu(\"Starbucks\", \"coffee\").\nHas_menu(\"Starbucks\", \"tea\").\nHas_menu(\"Starbucks\", \"sandwiches\").\nHas_menu(\"Starbucks\", \"pastries\").\nHas_menu(\"Starbucks\", \"soda\").\nHas_menu(\"Starbucks\", \"frappuccinos\").\nHas_menu(\"Starbucks\", \"mochas\").\nHas_menu(\"Starbucks\", \"breakfast\").\nHas_menu(\"Starbucks\", \"lunch\").\nHas_menu(\"Starbucks\", \"dinner\").\nHas_menu(\"Starbucks\", \"dessert\").\nHas_menu(\"Starbucks\", \"baked goods\").\nHas_menu(\"Starbucks\", \"beverages\").\nHas_menu(\"Starbucks\", \"sides\").\nHas_menu(\"Starbucks\", \"kids\").\n.decl Answer()\nAnswer() :- Has_menu(\"Starbucks\", \"coffee\"), Has_menu(\"Starbucks\", \"tea\"), Has_menu(\"Starbucks\", \"sandwiches\"), Has_menu(\"Starbucks\", \"pastries\"), Has_menu(\"Starbucks\", \"soda\"), Has_menu(\"Starbucks\", \"frappuccinos\"), Has_menu(\"Starbucks\", \"mochas\"), Has_menu(\"Starbucks\", \"breakfast\"), Has_menu(\"Starbucks\", \"lunch\"), Has_menu(\"Starbucks\", \"dinner\"), Has_menu(\"Starbucks\", \"dessert\"), Has_menu(\"Starbucks\", \"baked goods\"), Has_menu(\"Starbucks\", \"beverages\"), Has_menu(\"Starbucks\", \"sides\"), Has_menu(\"Starbucks\", \"kids\").\n.output Answer\n\n\n"]}
{"id": 1795, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"mario\", 0.5).\nHas_speed(\"mushroom\", 1.5).\n.decl Answer()\nAnswer() :- Has_speed(\"mario\", speed1), Has_speed(\"mushroom\", speed2), speed1 < speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"mario\", 0.5).\nHas_speed(\"mushroom\", 1.5).\n.decl Answer()\nAnswer() :- Has_speed(\"mario\", speed1), Has_speed(\"mushroom\", speed2), speed1 < speed2.\n.output Answer\n\n"]}
{"id": 1796, "answer": false, "completion": ".decl Is_lieutenant(Person:symbol)\nIs_lieutenant(\"child\").\n.decl Is_child(Person:symbol)\nIs_child(\"child\").\n.decl Answer()\nAnswer() :- Is_lieutenant(\"child\"), Is_child(\"child\").\n.output Answer\n\n", "completions": [".decl Is_lieutenant(Person:symbol)\nIs_lieutenant(\"child\").\n.decl Is_child(Person:symbol)\nIs_child(\"child\").\n.decl Answer()\nAnswer() :- Is_lieutenant(\"child\"), Is_child(\"child\").\n.output Answer\n\n"]}
{"id": 1797, "answer": false, "completion": ".decl Has_keyboard_layout(Device:symbol, Layout:symbol)\nHas_keyboard_layout(\"computer\", \"QWERTY\").\n.decl Has_speed(Device:symbol, Speed:float)\nHas_speed(\"computer\", 0.1).\n.decl Answer()\nAnswer() :- Has_keyboard_layout(\"computer\", layout), Has_speed(\"computer\", speed), speed > 0.1.\n.output Answer\n\n", "completions": [".decl Has_keyboard_layout(Device:symbol, Layout:symbol)\nHas_keyboard_layout(\"computer\", \"QWERTY\").\n.decl Has_speed(Device:symbol, Speed:float)\nHas_speed(\"computer\", 0.1).\n.decl Answer()\nAnswer() :- Has_keyboard_layout(\"computer\", layout), Has_speed(\"computer\", speed), speed > 0.1.\n.output Answer\n\n"]}
{"id": 1798, "answer": true, "completion": ".decl Has_party(Person:symbol, Party:symbol)\nHas_party(\"Nancy Pelosi\", \"Democrat\").\nHas_party(\"Gerald Ford\", \"Republican\").\n.decl Answer()\nAnswer() :- Has_party(\"Nancy Pelosi\", party1), Has_party(\"Gerald Ford\", party2), party1 = party2.\n.output Answer\n\n", "completions": [".decl Has_party(Person:symbol, Party:symbol)\nHas_party(\"Nancy Pelosi\", \"Democrat\").\nHas_party(\"Gerald Ford\", \"Republican\").\n.decl Answer()\nAnswer() :- Has_party(\"Nancy Pelosi\", party1), Has_party(\"Gerald Ford\", party2), party1 = party2.\n.output Answer\n\n"]}
{"id": 1799, "answer": false, "completion": ".decl Has_plant(Plant:symbol, Place:symbol)\nHas_plant(\"Sweet Potato\", \"field\").\nHas_plant(\"corn\", \"field\").\nHas_plant(\"wheat\", \"field\").\n.decl Answer()\nAnswer() :- Has_plant(\"Sweet Potato\", place), Has_plant(\"corn\", place), Has_plant(\"wheat\", place).\n.output Answer\n\n", "completions": [".decl Has_plant(Plant:symbol, Place:symbol)\nHas_plant(\"Sweet Potato\", \"field\").\nHas_plant(\"corn\", \"field\").\nHas_plant(\"wheat\", \"field\").\n.decl Answer()\nAnswer() :- Has_plant(\"Sweet Potato\", place), Has_plant(\"corn\", place), Has_plant(\"wheat\", place).\n.output Answer\n\n"]}
{"id": 1800, "answer": false, "completion": ".decl Has_spinal_cord(Animal:symbol, Spinal_cord:bool)\nHas_spinal_cord(\"hedgehog\", true).\nHas_spinal_cord(\"snake\", false).\nHas_spinal_cord(\"bird\", true).\n.decl Answer()\nAnswer() :- Has_spinal_cord(\"hedgehog\", spinal_cord), Has_spinal_cord(\"snake\", spinal_cord), Has_spinal_cord(\"bird\", spinal_cord), spinal_cord == false.\n.output Answer\n\n", "completions": [".decl Has_spinal_cord(Animal:symbol, Spinal_cord:bool)\nHas_spinal_cord(\"hedgehog\", true).\nHas_spinal_cord(\"snake\", false).\nHas_spinal_cord(\"bird\", true).\n.decl Answer()\nAnswer() :- Has_spinal_cord(\"hedgehog\", spinal_cord), Has_spinal_cord(\"snake\", spinal_cord), Has_spinal_cord(\"bird\", spinal_cord), spinal_cord == false.\n.output Answer\n\n"]}
{"id": 1801, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"paresthesia\", \"white\").\nHas_color(\"pigment\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"paresthesia\", color), Has_color(\"pigment\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"paresthesia\", \"white\").\nHas_color(\"pigment\", \"white\").\n.decl Answer()\nAnswer() :- Has_color(\"paresthesia\", color), Has_color(\"pigment\", color).\n.output Answer\n\n"]}
{"id": 1802, "answer": false, "completion": ".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mary, Queen of Scots\", \"Elizabeth I\").\nHas_ancestor(\"Elizabeth I\", \"George III\").\nHas_ancestor(\"George III\", \"George II\").\nHas_ancestor(\"George II\", \"George I\").\nHas_ancestor(\"George I\", \"James I\").\nHas_ancestor(\"James I\", \"Mary, Queen of Scots\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Mary, Queen of Scots\", ancestor), Has_ancestor(person, ancestor).\n.output Answer\n\n", "completions": [".decl Has_ancestor(Person:symbol, Ancestor:symbol)\nHas_ancestor(\"Mary, Queen of Scots\", \"Elizabeth I\").\nHas_ancestor(\"Elizabeth I\", \"George III\").\nHas_ancestor(\"George III\", \"George II\").\nHas_ancestor(\"George II\", \"George I\").\nHas_ancestor(\"George I\", \"James I\").\nHas_ancestor(\"James I\", \"Mary, Queen of Scots\").\n.decl Answer()\nAnswer() :- Has_ancestor(\"Mary, Queen of Scots\", ancestor), Has_ancestor(person, ancestor).\n.output Answer\n\n"]}
{"id": 1803, "answer": false, "completion": ".decl Voted_for(Citizen:symbol, Candidate:symbol)\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\n", "completions": [".decl Voted_for(Citizen:symbol, Candidate:symbol)\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\nVoted_for(\"Sarah\", \"Boris Johnson\").\nVoted_for(\"Sarah\", \"Jo Swinson\").\n"]}
{"id": 1804, "answer": true, "completion": ".decl Is_handed(Person:symbol, Handedness:symbol)\nIs_handed(\"Tom Cruise\", \"right\").\nIs_handed(\"Tom Cruise\", \"left\").\nIs_handed(\"Tom Cruise\", \"both\").\n.decl Uses_ASL(Person:symbol, ASL:symbol)\nUses_ASL(\"Tom Cruise\", \"right\").\nUses_ASL(\"Tom Cruise\", \"left\").\nUses_ASL(\"Tom Cruise\", \"both\").\n.decl Answer()\nAnswer() :- Is_handed(\"Tom Cruise\", handedness), Uses_ASL(\"Tom Cruise\", asl), handedness = asl.\n.output Answer\n\n", "completions": [".decl Is_handed(Person:symbol, Handedness:symbol)\nIs_handed(\"Tom Cruise\", \"right\").\nIs_handed(\"Tom Cruise\", \"left\").\nIs_handed(\"Tom Cruise\", \"both\").\n.decl Uses_ASL(Person:symbol, ASL:symbol)\nUses_ASL(\"Tom Cruise\", \"right\").\nUses_ASL(\"Tom Cruise\", \"left\").\nUses_ASL(\"Tom Cruise\", \"both\").\n.decl Answer()\nAnswer() :- Is_handed(\"Tom Cruise\", handedness), Uses_ASL(\"Tom Cruise\", asl), handedness = asl.\n.output Answer\n\n"]}
{"id": 1805, "answer": true, "completion": ".decl Spoke_language(Group:symbol, Language:symbol)\nSpoke_language(\"confederate states\", \"Old English\").\n.decl Answer()\nAnswer() :- Spoke_language(\"confederate states\", language).\n.output Answer\n\n", "completions": [".decl Spoke_language(Group:symbol, Language:symbol)\nSpoke_language(\"confederate states\", \"Old English\").\n.decl Answer()\nAnswer() :- Spoke_language(\"confederate states\", language).\n.output Answer\n\n"]}
{"id": 1806, "answer": true, "completion": ".decl Has_identity(Organization:symbol, Identity:symbol)\nHas_identity(\"Fiat\", \"Fiat Chrysler\").\nHas_identity(\"Chrysler\", \"Fiat Chrysler\").\n.decl Answer()\nAnswer() :- Has_identity(\"Fiat\", identity), Has_identity(\"Chrysler\", identity).\n.output Answer\n\n", "completions": [".decl Has_identity(Organization:symbol, Identity:symbol)\nHas_identity(\"Fiat\", \"Fiat Chrysler\").\nHas_identity(\"Chrysler\", \"Fiat Chrysler\").\n.decl Answer()\nAnswer() :- Has_identity(\"Fiat\", identity), Has_identity(\"Chrysler\", identity).\n.output Answer\n\n"]}
{"id": 1807, "answer": true, "completion": ".decl Has_capsaicin(Object:symbol, Capsaicin:float)\nHas_capsaicin(\"pepper\", 0.1).\nHas_capsaicin(\"chili\", 0.1).\nHas_capsaicin(\"chili powder\", 0.1).\nHas_capsaicin(\"pepper powder\", 0.1).\nHas_capsaicin(\"pepper sauce\", 0.1).\nHas_capsaicin(\"salsa\", 0.1).\nHas_capsaicin(\"sauce\", 0.1).\nHas_capsaicin(\"soup\", 0.1).\nHas_capsaicin(\"sauce\", 0.1).\nHas_capsaicin(\"soup\", 0.1).\nHas_capsaicin(\"sauce\", 0_1).\nHas_capsaicin(\"soup\", 0_1).\n.decl Answer()\nAnswer() :- Has_capsaicin(\"pepper\", capsaicin1), Has_capsaicin(\"chili\", capsaicin2), Has_capsaicin(\"chili powder\", capsaicin3), Has_capsaicin(\"pepper powder\", capsaicin4), Has_capsaicin(\"pepper sauce\", capsaicin5), Has_capsaicin(\"salsa\", capsaicin6), Has_capsaicin(\"sauce\", capsaicin7), Has_capsaicin(\"soup\", capsaicin8), capsaicin1 > capsaicin2, capsaicin1 > capsaicin3, capsaicin1 > capsaicin4, capsaicin1 > capsaicin5, capsaicin1 > capsaicin6, capsaicin1 > capsaicin7, capsaicin1 > capsaicin8.\n.output Answer\n\n", "completions": [".decl Has_capsaicin(Object:symbol, Capsaicin:float)\nHas_capsaicin(\"pepper\", 0.1).\nHas_capsaicin(\"chili\", 0.1).\nHas_capsaicin(\"chili powder\", 0.1).\nHas_capsaicin(\"pepper powder\", 0.1).\nHas_capsaicin(\"pepper sauce\", 0.1).\nHas_capsaicin(\"salsa\", 0.1).\nHas_capsaicin(\"sauce\", 0.1).\nHas_capsaicin(\"soup\", 0.1).\nHas_capsaicin(\"sauce\", 0.1).\nHas_capsaicin(\"soup\", 0.1).\nHas_capsaicin(\"sauce\", 0_1).\nHas_capsaicin(\"soup\", 0_1).\n.decl Answer()\nAnswer() :- Has_capsaicin(\"pepper\", capsaicin1), Has_capsaicin(\"chili\", capsaicin2), Has_capsaicin(\"chili powder\", capsaicin3), Has_capsaicin(\"pepper powder\", capsaicin4), Has_capsaicin(\"pepper sauce\", capsaicin5), Has_capsaicin(\"salsa\", capsaicin6), Has_capsaicin(\"sauce\", capsaicin7), Has_capsaicin(\"soup\", capsaicin8), capsaicin1 > capsaicin2, capsaicin1 > capsaicin3, capsaicin1 > capsaicin4, capsaicin1 > capsaicin5, capsaicin1 > capsaicin6, capsaicin1 > capsaicin7, capsaicin1 > capsaicin8.\n.output Answer\n\n"]}
{"id": 1808, "answer": false, "completion": ".decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"Capricorn\", \"goat\").\nHas_part(\"Capricorn\", \"sea monster\").\nHas_part(\"Capricorn\", \"ram\").\n.decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"chimera\", \"goat\").\nHas_part(\"chimera\", \"sea monster\").\nHas_part(\"chimera\", \"ram\").\n.decl Answer()\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part1).\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part2), part1 != part2.\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part2), Has_part(\"chimera\", part3), part1 != part2, part1 != part3, part2 != part3.\n.output Answer\n\n", "completions": [".decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"Capricorn\", \"goat\").\nHas_part(\"Capricorn\", \"sea monster\").\nHas_part(\"Capricorn\", \"ram\").\n.decl Has_part(Object:symbol, Part:symbol)\nHas_part(\"chimera\", \"goat\").\nHas_part(\"chimera\", \"sea monster\").\nHas_part(\"chimera\", \"ram\").\n.decl Answer()\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part1).\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part2), part1 != part2.\nAnswer() :- Has_part(\"Capricorn\", part1), Has_part(\"chimera\", part2), Has_part(\"chimera\", part3), part1 != part2, part1 != part3, part2 != part3.\n.output Answer\n\n"]}
{"id": 1809, "answer": false, "completion": ".decl Was_lit_by(Street:symbol, Noble_gas:symbol)\nWas_lit_by(\"Shibuya\", \"neon\").\nWas_lit_by(\"Shibuya\", \"argon\").\nWas_lit_by(\"Shibuya\", \"xenon\").\n.decl Was_lit_by(Street:symbol, Gas:symbol)\nWas_lit_by(\"Shibuya\", \"neon\").\nWas_lit_by(\"Shibuya\", \"argon\").\nWas_lit_by(\"Shibuya\", \"xenon\").\n.decl Answer()\nAnswer() :- Was_lit_by(\"Shibuya\", \"neon\").\nAnswer() :- Was_lit_by(\"Shibuya\", \"argon\").\nAnswer() :- Was_lit_by(\"Shibuya\", \"xenon\").\n.output Answer\n\n", "completions": [".decl Was_lit_by(Street:symbol, Noble_gas:symbol)\nWas_lit_by(\"Shibuya\", \"neon\").\nWas_lit_by(\"Shibuya\", \"argon\").\nWas_lit_by(\"Shibuya\", \"xenon\").\n.decl Was_lit_by(Street:symbol, Gas:symbol)\nWas_lit_by(\"Shibuya\", \"neon\").\nWas_lit_by(\"Shibuya\", \"argon\").\nWas_lit_by(\"Shibuya\", \"xenon\").\n.decl Answer()\nAnswer() :- Was_lit_by(\"Shibuya\", \"neon\").\nAnswer() :- Was_lit_by(\"Shibuya\", \"argon\").\nAnswer() :- Was_lit_by(\"Shibuya\", \"xenon\").\n.output Answer\n\n"]}
{"id": 1810, "answer": true, "completion": ".decl Has_prison_time(Person:symbol, Prison_time:float)\nHas_prison_time(\"Michael Vick\", 18).\nHas_prison_time(\"Shooting Bald Eagle\", 25).\n.decl Answer()\nAnswer() :- Has_prison_time(\"Michael Vick\", time1), Has_prison_time(\"Shooting Bald Eagle\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Has_prison_time(Person:symbol, Prison_time:float)\nHas_prison_time(\"Michael Vick\", 18).\nHas_prison_time(\"Shooting Bald Eagle\", 25).\n.decl Answer()\nAnswer() :- Has_prison_time(\"Michael Vick\", time1), Has_prison_time(\"Shooting Bald Eagle\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 1811, "answer": false, "completion": ".decl Borders(Country:symbol, Ocean:symbol)\nBorders(\"United States of America\", \"Pacific Ocean\").\nBorders(\"United States of America\", \"Atlantic Ocean\").\nBorders(\"India\", \"Indian Ocean\").\n.decl Answer()\nAnswer() :- Borders(\"United States of America\", ocean), Borders(\"India\", ocean).\n.output Answer\n\n", "completions": [".decl Borders(Country:symbol, Ocean:symbol)\nBorders(\"United States of America\", \"Pacific Ocean\").\nBorders(\"United States of America\", \"Atlantic Ocean\").\nBorders(\"India\", \"Indian Ocean\").\n.decl Answer()\nAnswer() :- Borders(\"United States of America\", ocean), Borders(\"India\", ocean).\n.output Answer\n\n"]}
{"id": 1812, "answer": false, "completion": ".decl Has_hypothetical_occupation(Person:symbol, Occupation:symbol)\nHas_hypothetical_occupation(\"Sophist\", \"lawyer\").\n.decl Answer()\nAnswer() :- Has_hypothetical_occupation(\"Sophist\", occupation).\n.output Answer\n\n", "completions": [".decl Has_hypothetical_occupation(Person:symbol, Occupation:symbol)\nHas_hypothetical_occupation(\"Sophist\", \"lawyer\").\n.decl Answer()\nAnswer() :- Has_hypothetical_occupation(\"Sophist\", occupation).\n.output Answer\n\n"]}
{"id": 1813, "answer": true, "completion": ".decl Has_sugar_content(Object:symbol, Sugar_content:float)\nHas_sugar_content(\"Krispy Kreme glazed doughnuts\", 0.5).\nHas_sugar_content(\"AHA daily sugar allowance\", 0.1).\n.decl Answer()\nAnswer() :- Has_sugar_content(\"Krispy Kreme glazed doughnuts\", sugar_content1), Has_sugar_content(\"AHA daily sugar allowance\", sugar_content2), sugar_content1 > sugar_content2.\n.output Answer\n\n", "completions": [".decl Has_sugar_content(Object:symbol, Sugar_content:float)\nHas_sugar_content(\"Krispy Kreme glazed doughnuts\", 0.5).\nHas_sugar_content(\"AHA daily sugar allowance\", 0.1).\n.decl Answer()\nAnswer() :- Has_sugar_content(\"Krispy Kreme glazed doughnuts\", sugar_content1), Has_sugar_content(\"AHA daily sugar allowance\", sugar_content2), sugar_content1 > sugar_content2.\n.output Answer\n\n"]}
{"id": 1814, "answer": true, "completion": ".decl Has_runtime(Movie:symbol, Runtime:float)\nHas_runtime(\"The Matrix\", 136).\n.decl Has_release_year(Movie:symbol, Release_year:float)\nHas_release_year(\"The Matrix\", 1999).\n.decl Answer()\nAnswer() :- Has_runtime(\"The Matrix\", runtime), Has_release_year(\"The Matrix\", release_year), runtime > 90, release_year < 2000.\n.output Answer\n\n", "completions": [".decl Has_runtime(Movie:symbol, Runtime:float)\nHas_runtime(\"The Matrix\", 136).\n.decl Has_release_year(Movie:symbol, Release_year:float)\nHas_release_year(\"The Matrix\", 1999).\n.decl Answer()\nAnswer() :- Has_runtime(\"The Matrix\", runtime), Has_release_year(\"The Matrix\", release_year), runtime > 90, release_year < 2000.\n.output Answer\n\n"]}
{"id": 1815, "answer": true, "completion": ".decl Is_banned(Person:symbol)\nIs_banned(\"Emperor of China\").\nIs_banned(\"Emperor of Japan\").\nIs_banned(\"Emperor of Russia\").\n.decl Is_forbidden(Place:symbol)\nIs_forbidden(\"Forbidden City\").\n.decl Answer()\nAnswer() :- Is_banned(person), Is_forbidden(place), person != place.\n.output Answer\n\n", "completions": [".decl Is_banned(Person:symbol)\nIs_banned(\"Emperor of China\").\nIs_banned(\"Emperor of Japan\").\nIs_banned(\"Emperor of Russia\").\n.decl Is_forbidden(Place:symbol)\nIs_forbidden(\"Forbidden City\").\n.decl Answer()\nAnswer() :- Is_banned(person), Is_forbidden(place), person != place.\n.output Answer\n\n"]}
{"id": 1816, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Bangladesh\", 0.8).\nHas_value(\"Fibonacci number\", 1.618033988749895).\n.decl Answer()\nAnswer() :- Has_value(\"Bangladesh\", value1), Has_value(\"Fibonacci number\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Bangladesh\", 0.8).\nHas_value(\"Fibonacci number\", 1.618033988749895).\n.decl Answer()\nAnswer() :- Has_value(\"Bangladesh\", value1), Has_value(\"Fibonacci number\", value2), value1 > value2.\n.output Answer\n\n"]}
{"id": 1817, "answer": false, "completion": ".decl Is_conducted_by(Event:symbol, Conductor:symbol)\nIs_conducted_by(\"solo piano performance\", \"a conductor\").\n.decl Answer()\nAnswer() :- Is_conducted_by(\"solo piano performance\", conductor).\n.output Answer\n\n", "completions": [".decl Is_conducted_by(Event:symbol, Conductor:symbol)\nIs_conducted_by(\"solo piano performance\", \"a conductor\").\n.decl Answer()\nAnswer() :- Is_conducted_by(\"solo piano performance\", conductor).\n.output Answer\n\n"]}
{"id": 1818, "answer": false, "completion": ".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Jackson Pollock\", \"Paul Jackson Pollock\").\nHas_parent(\"Jackson Pollock\", \"Lee Krasner\").\n.decl Answer()\nAnswer() :- Has_parent(\"Jackson Pollock\", parent1), Has_parent(\"Jackson Pollock\", parent2), parent1 \\= parent2.\n.output Answer\n\n", "completions": [".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Jackson Pollock\", \"Paul Jackson Pollock\").\nHas_parent(\"Jackson Pollock\", \"Lee Krasner\").\n.decl Answer()\nAnswer() :- Has_parent(\"Jackson Pollock\", parent1), Has_parent(\"Jackson Pollock\", parent2), parent1 \\= parent2.\n.output Answer\n\n"]}
{"id": 1819, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"winter solstice\", \"December\").\nHappens_in_time(\"winter solstice\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"winter solstice\", month), In_season(month, season), Happens_in_time(\"winter solstice\", \"July\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"winter solstice\", \"December\").\nHappens_in_time(\"winter solstice\", \"June\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"June\", \"summer\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"winter solstice\", month), In_season(month, season), Happens_in_time(\"winter solstice\", \"July\").\n.output Answer\n\n"]}
{"id": 1820, "answer": false, "completion": ".decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Tuvalu\", 200).\nHas_n_visitors(\"Niue\", 50).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Tuvalu\", n_visitors1), Has_n_visitors(\"Niue\", n_visitors2), n_visitors1 > n_visitors2.\n.output Answer\n\n", "completions": [".decl Has_n_visitors(Location:symbol, N_visitors:float)\nHas_n_visitors(\"Tuvalu\", 200).\nHas_n_visitors(\"Niue\", 50).\n.decl Answer()\nAnswer() :- Has_n_visitors(\"Tuvalu\", n_visitors1), Has_n_visitors(\"Niue\", n_visitors2), n_visitors1 > n_visitors2.\n.output Answer\n\n"]}
{"id": 1821, "answer": true, "completion": ".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"A Tale of Two Cities\", \"Charles Dickens\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"A Tale of Two Cities\", \"A Tale of Two Cities\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"The Bible\", \"The Bible\").\n.decl Answer()\nAnswer() :- Has_author(\"A Tale of Two Cities\", author), Has_author(\"The Bible\", author), Has_title(\"A Tale of Two Cities\", title), Has_title(\"The Bible\", title), title = \"A Tale of Two Cities\".\n.output Answer\n\n", "completions": [".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"A Tale of Two Cities\", \"Charles Dickens\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"A Tale of Two Cities\", \"A Tale of Two Cities\").\n.decl Has_title(Book:symbol, Title:symbol)\nHas_title(\"The Bible\", \"The Bible\").\n.decl Answer()\nAnswer() :- Has_author(\"A Tale of Two Cities\", author), Has_author(\"The Bible\", author), Has_title(\"A Tale of Two Cities\", title), Has_title(\"The Bible\", title), title = \"A Tale of Two Cities\".\n.output Answer\n\n"]}
{"id": 1822, "answer": true, "completion": ".decl Has_n_bits(Object:symbol, N_bits:float)\nHas_n_bits(\"binary number\", 8).\nHas_n_bits(\"standard alphabet\", 26).\n.decl Has_n_characters(Object:symbol, N_characters:float)\nHas_n_characters(\"binary number\", 8).\nHas_n_characters(\"standard alphabet\", 26).\n.decl Answer()\nAnswer() :- Has_n_bits(\"binary number\", n_bits1), Has_n_characters(\"standard alphabet\", n_characters2), n_bits1 >= n_characters2.\n.output Answer\n\n", "completions": [".decl Has_n_bits(Object:symbol, N_bits:float)\nHas_n_bits(\"binary number\", 8).\nHas_n_bits(\"standard alphabet\", 26).\n.decl Has_n_characters(Object:symbol, N_characters:float)\nHas_n_characters(\"binary number\", 8).\nHas_n_characters(\"standard alphabet\", 26).\n.decl Answer()\nAnswer() :- Has_n_bits(\"binary number\", n_bits1), Has_n_characters(\"standard alphabet\", n_characters2), n_bits1 >= n_characters2.\n.output Answer\n\n"]}
{"id": 1823, "answer": true, "completion": ".decl Influences(Person:symbol, Style:symbol)\nInfluences(\"Andy Warhol\", \"Art Deco\").\n.decl Answer()\nAnswer() :- Influences(\"Andy Warhol\", style), Influences(person, style).\n.output Answer\n\n", "completions": [".decl Influences(Person:symbol, Style:symbol)\nInfluences(\"Andy Warhol\", \"Art Deco\").\n.decl Answer()\nAnswer() :- Influences(\"Andy Warhol\", style), Influences(person, style).\n.output Answer\n\n"]}
{"id": 1824, "answer": true, "completion": ".decl Has_recommended_food(Pregnancy:symbol, Food:symbol)\nHas_recommended_food(\"pregnant\", \"ginger\").\n.decl Answer()\nAnswer() :- Has_recommended_food(\"pregnant\", food).\n.output Answer\n\n", "completions": [".decl Has_recommended_food(Pregnancy:symbol, Food:symbol)\nHas_recommended_food(\"pregnant\", \"ginger\").\n.decl Answer()\nAnswer() :- Has_recommended_food(\"pregnant\", food).\n.output Answer\n\n"]}
{"id": 1825, "answer": false, "completion": ".decl Has_power(Object:symbol, Power:float)\nHas_power(\"spinach\", 0.1).\nHas_power(\"comic movie\", 0.1).\n.decl Answer()\nAnswer() :- Has_power(\"spinach\", power1), Has_power(\"comic movie\", power2), power1 > power2.\n.output Answer\n\n", "completions": [".decl Has_power(Object:symbol, Power:float)\nHas_power(\"spinach\", 0.1).\nHas_power(\"comic movie\", 0.1).\n.decl Answer()\nAnswer() :- Has_power(\"spinach\", power1), Has_power(\"comic movie\", power2), power1 > power2.\n.output Answer\n\n"]}
{"id": 1826, "answer": false, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"star\", 10000).\nHas_temperature(\"acetylene\", 300).\n.decl Answer()\nAnswer() :- Has_temperature(\"acetylene\", temperature1), Has_temperature(\"star\", temperature2), temperature1 > temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"star\", 10000).\nHas_temperature(\"acetylene\", 300).\n.decl Answer()\nAnswer() :- Has_temperature(\"acetylene\", temperature1), Has_temperature(\"star\", temperature2), temperature1 > temperature2.\n.output Answer\n\n"]}
{"id": 1827, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Donatello\", 1.8).\nHas_height(\"Sistine Chapel\", 35).\nHas_height(\"adult male\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"adult male\", height1), Has_height(\"Donatello\", height2), height1 > height2, Has_height(\"Sistine Chapel\", height3), height1 > height3.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Donatello\", 1.8).\nHas_height(\"Sistine Chapel\", 35).\nHas_height(\"adult male\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"adult male\", height1), Has_height(\"Donatello\", height2), height1 > height2, Has_height(\"Sistine Chapel\", height3), height1 > height3.\n.output Answer\n\n"]}
{"id": 1828, "answer": true, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"sodium\", 11).\n.decl Has_atomic_weight(Element:symbol, Atomic_weight:float)\nHas_atomic_weight(\"chlorine\", 35.45).\nHas_atomic_weight(\"sodium\", 22.99).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"chlorine\", atomic_number1), Has_atomic_number(\"sodium\", atomic_number2), Has_atomic_weight(\"chlorine\", atomic_weight1), Has_atomic_weight(\"sodium\", atomic_weight2), atomic_number1 + atomic_number2 > atomic_weight1 + atomic_weight2.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"chlorine\", 17).\nHas_atomic_number(\"sodium\", 11).\n.decl Has_atomic_weight(Element:symbol, Atomic_weight:float)\nHas_atomic_weight(\"chlorine\", 35.45).\nHas_atomic_weight(\"sodium\", 22.99).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"chlorine\", atomic_number1), Has_atomic_number(\"sodium\", atomic_number2), Has_atomic_weight(\"chlorine\", atomic_weight1), Has_atomic_weight(\"sodium\", atomic_weight2), atomic_number1 + atomic_number2 > atomic_weight1 + atomic_weight2.\n.output Answer\n\n"]}
{"id": 1829, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Spanish American War\", \"1898\").\nHappens_in_time(\"Spanish American War\", \"1899\").\nHappens_in_time(\"Spanish American War\", \"1900\").\nHappens_in_time(\"Spanish American War\", \"1901\").\nHappens_in_time(\"Spanish American War\", \"1902\").\nHappens_in_time(\"Spanish American War\", \"1903\").\nHappens_in_time(\"Spanish American War\", \"1904\").\nHappens_in_time(\"Spanish American War\", \"1905\").\nHappens_in_time(\"Spanish American War\", \"1906\").\nHappens_in_time(\"Spanish American War\", \"1907\").\nHappens_in_time(\"Spanish American War\", \"1908\").\nHappens_in_time(\"Spanish American War\", \"1909\").\nHappens_in_time(\"Spanish American War\", \"1910\").\nHappens_in_time(\"Spanish American War\", \"1911\").\nHappens_in_time(\"Spanish American War\", \"1912\").\nHappens_in_time(\"Spanish American War\", \"1913\").\nHappens_in_time(\"Spanish American War\", \"1914\").\nHappens_in_time(\"Spanish American War\", \"1915\").\nHappens_in_time(\"Spanish American War\", \"1916\").\nHappens_in_time(\"Spanish American War\", \"1917\").\nHappens_in_time(\"Spanish American War\", \"1918\").\nHappens_in_time(\"Spanish American War\", \"1919\").\nHappens_in_time(\"Spanish American War\", \"1920\").\nHappens_in_time(\"Spanish American War\", \"1921\").\nHappens_in_time(\"Spanish American War\", \"1922\").\nHappens_in_time(\"Spanish American War\", \"1923\").\nHappens_in_time(\"Spanish American War\", \"1924\").\nHappens_in_time(\"Spanish American War\", \"1925\").\nHappens_in_time(\"Spanish American War\", \"1926\").\nHappens_in_time(\"Spanish American War\", \"1927\").\nHappens_in_time(\"Spanish American War\", \"1928\").\nHappens_in_time(\"Spanish American War\", \"1929\").\nHappens_in_time(\"Spanish American War\", \"1930\").\nHappens_in_time(\"Spanish American War\", \"1931\").\nHappens_in_time(\"Spanish American War\", \"1932\").\nHappens_in_time(\"Spanish American War\", \"1933\").\nHappens_in_time(\"Spanish American War\", \"1934\").\nHappens_in_time(\"Spanish American War\", \"1935\").\nHappens_in_time(\"Spanish American War\", \"1936\").\nHappens_in_time(\"Spanish American War\", \"1937\").\nHappens_in_time(\"Spanish American War\", \"1938\").\nHappens_in_time(\"Spanish American War\", \"1939\").\nHappens_in_time(\"Spanish American War\", \"1940\").\nHappens_in_time(\"Spanish American War\", \"1941\").\nHappens_in_time(\"Spanish American War\", \"1942\").\nHappens_in_time(\"Spanish American War\", \"1943\").", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Spanish American War\", \"1898\").\nHappens_in_time(\"Spanish American War\", \"1899\").\nHappens_in_time(\"Spanish American War\", \"1900\").\nHappens_in_time(\"Spanish American War\", \"1901\").\nHappens_in_time(\"Spanish American War\", \"1902\").\nHappens_in_time(\"Spanish American War\", \"1903\").\nHappens_in_time(\"Spanish American War\", \"1904\").\nHappens_in_time(\"Spanish American War\", \"1905\").\nHappens_in_time(\"Spanish American War\", \"1906\").\nHappens_in_time(\"Spanish American War\", \"1907\").\nHappens_in_time(\"Spanish American War\", \"1908\").\nHappens_in_time(\"Spanish American War\", \"1909\").\nHappens_in_time(\"Spanish American War\", \"1910\").\nHappens_in_time(\"Spanish American War\", \"1911\").\nHappens_in_time(\"Spanish American War\", \"1912\").\nHappens_in_time(\"Spanish American War\", \"1913\").\nHappens_in_time(\"Spanish American War\", \"1914\").\nHappens_in_time(\"Spanish American War\", \"1915\").\nHappens_in_time(\"Spanish American War\", \"1916\").\nHappens_in_time(\"Spanish American War\", \"1917\").\nHappens_in_time(\"Spanish American War\", \"1918\").\nHappens_in_time(\"Spanish American War\", \"1919\").\nHappens_in_time(\"Spanish American War\", \"1920\").\nHappens_in_time(\"Spanish American War\", \"1921\").\nHappens_in_time(\"Spanish American War\", \"1922\").\nHappens_in_time(\"Spanish American War\", \"1923\").\nHappens_in_time(\"Spanish American War\", \"1924\").\nHappens_in_time(\"Spanish American War\", \"1925\").\nHappens_in_time(\"Spanish American War\", \"1926\").\nHappens_in_time(\"Spanish American War\", \"1927\").\nHappens_in_time(\"Spanish American War\", \"1928\").\nHappens_in_time(\"Spanish American War\", \"1929\").\nHappens_in_time(\"Spanish American War\", \"1930\").\nHappens_in_time(\"Spanish American War\", \"1931\").\nHappens_in_time(\"Spanish American War\", \"1932\").\nHappens_in_time(\"Spanish American War\", \"1933\").\nHappens_in_time(\"Spanish American War\", \"1934\").\nHappens_in_time(\"Spanish American War\", \"1935\").\nHappens_in_time(\"Spanish American War\", \"1936\").\nHappens_in_time(\"Spanish American War\", \"1937\").\nHappens_in_time(\"Spanish American War\", \"1938\").\nHappens_in_time(\"Spanish American War\", \"1939\").\nHappens_in_time(\"Spanish American War\", \"1940\").\nHappens_in_time(\"Spanish American War\", \"1941\").\nHappens_in_time(\"Spanish American War\", \"1942\").\nHappens_in_time(\"Spanish American War\", \"1943\")."]}
{"id": 1830, "answer": true, "completion": ".decl Has_viewership(Event:symbol, Viewership:float)\nHas_viewership(\"Downton Abbey finale\", 20).\n.decl Has_population(Country:symbol, Population:float)\nHas_population(\"Kazakhstan\", 17.04).\n.decl Answer()\nAnswer() :- Has_viewership(\"Downton Abbey finale\", viewership), Has_population(\"Kazakhstan\", population), viewership > population.\n.output Answer\n\n", "completions": [".decl Has_viewership(Event:symbol, Viewership:float)\nHas_viewership(\"Downton Abbey finale\", 20).\n.decl Has_population(Country:symbol, Population:float)\nHas_population(\"Kazakhstan\", 17.04).\n.decl Answer()\nAnswer() :- Has_viewership(\"Downton Abbey finale\", viewership), Has_population(\"Kazakhstan\", population), viewership > population.\n.output Answer\n\n"]}
{"id": 1831, "answer": true, "completion": ".decl Has_potential_lethal_effect(Project:symbol)\nHas_potential_lethal_effect(\"Do It Yourself parachute\").\nHas_potential_lethal_effect(\"Do It Yourself rocket\").\nHas_potential_lethal_effect(\"Do It Yourself jetpack\").\n.decl Has_potential_lethal_effect_on(Project:symbol, Object:symbol)\nHas_potential_lethal_effect_on(\"Do It Yourself parachute\", \"human\").\nHas_potential_lethal_effect_on(\"Do It Yourself parachute\", \"parachute\").\nHas_potential_lethal_effect_on(\"Do It Yourself rocket\", \"human\").\nHas_potential_lethal_effect_on(\"Do It Yourself jetpack\", \"human\").\n.decl Answer()\nAnswer() :- Has_potential_lethal_effect(project), Has_potential_lethal_effect_on(project, object).\n.output Answer\n\n", "completions": [".decl Has_potential_lethal_effect(Project:symbol)\nHas_potential_lethal_effect(\"Do It Yourself parachute\").\nHas_potential_lethal_effect(\"Do It Yourself rocket\").\nHas_potential_lethal_effect(\"Do It Yourself jetpack\").\n.decl Has_potential_lethal_effect_on(Project:symbol, Object:symbol)\nHas_potential_lethal_effect_on(\"Do It Yourself parachute\", \"human\").\nHas_potential_lethal_effect_on(\"Do It Yourself parachute\", \"parachute\").\nHas_potential_lethal_effect_on(\"Do It Yourself rocket\", \"human\").\nHas_potential_lethal_effect_on(\"Do It Yourself jetpack\", \"human\").\n.decl Answer()\nAnswer() :- Has_potential_lethal_effect(project), Has_potential_lethal_effect_on(project, object).\n.output Answer\n\n"]}
{"id": 1832, "answer": false, "completion": ".decl Has_lifespan(Animal:symbol, Lifespan:float)\nHas_lifespan(\"chipmunk\", 4).\n.decl Has_birth_rate(Animal:symbol, Birth_rate:float)\nHas_birth_rate(\"chipmunk\", 0.5).\n.decl Answer()\nAnswer() :- Has_lifespan(\"chipmunk\", lifespan), Has_birth_rate(\"chipmunk\", birth_rate), lifespan < 2 / birth_rate.\n.output Answer\n\n", "completions": [".decl Has_lifespan(Animal:symbol, Lifespan:float)\nHas_lifespan(\"chipmunk\", 4).\n.decl Has_birth_rate(Animal:symbol, Birth_rate:float)\nHas_birth_rate(\"chipmunk\", 0.5).\n.decl Answer()\nAnswer() :- Has_lifespan(\"chipmunk\", lifespan), Has_birth_rate(\"chipmunk\", birth_rate), lifespan < 2 / birth_rate.\n.output Answer\n\n"]}
{"id": 1833, "answer": true, "completion": ".decl Plays_video_game(Person:symbol, Video_game:symbol)\nPlays_video_game(\"Super Mario\", \"Super Mario 64\").\nPlays_video_game(\"Super Mario\", \"Super Mario Galaxy\").\nPlays_video_game(\"Super Mario\", \"Super Mario Sunshine\").\n.decl Uses_electricity(Video_game:symbol)\nUses_electricity(\"Super Mario 64\").\nUses_electricity(\"Super Mario Galaxy\").\nUses_electricity(\"Super Mario Sunshine\").\n.decl Answer()\nAnswer() :- Plays_video_game(\"Super Mario\", video_game), Uses_electricity(video_game).\n.output Answer\n\n", "completions": [".decl Plays_video_game(Person:symbol, Video_game:symbol)\nPlays_video_game(\"Super Mario\", \"Super Mario 64\").\nPlays_video_game(\"Super Mario\", \"Super Mario Galaxy\").\nPlays_video_game(\"Super Mario\", \"Super Mario Sunshine\").\n.decl Uses_electricity(Video_game:symbol)\nUses_electricity(\"Super Mario 64\").\nUses_electricity(\"Super Mario Galaxy\").\nUses_electricity(\"Super Mario Sunshine\").\n.decl Answer()\nAnswer() :- Plays_video_game(\"Super Mario\", video_game), Uses_electricity(video_game).\n.output Answer\n\n"]}
{"id": 1834, "answer": true, "completion": ".decl Survives_in_orbit(Animal:symbol, Orbit:symbol)\nSurvives_in_orbit(\"Chinese mountain cat\", \"Earth\").\nSurvives_in_orbit(\"Chinese mountain cat\", \"Mars\").\nSurvives_in_orbit(\"Chinese mountain cat\", \"Venus\").\n.decl Survives_in_atmosphere(Animal:symbol, Atmosphere:symbol)\nSurvives_in_atmosphere(\"Chinese mountain cat\", \"Earth\").\nSurvives_in_atmosphere(\"Chinese mountain cat\", \"Mars\").\n.decl Answer()\nAnswer() :- Survives_in_orbit(\"Chinese mountain cat\", orbit), Survives_in_atmosphere(animal, atmosphere), orbit != atmosphere.\n.output Answer\n\n", "completions": [".decl Survives_in_orbit(Animal:symbol, Orbit:symbol)\nSurvives_in_orbit(\"Chinese mountain cat\", \"Earth\").\nSurvives_in_orbit(\"Chinese mountain cat\", \"Mars\").\nSurvives_in_orbit(\"Chinese mountain cat\", \"Venus\").\n.decl Survives_in_atmosphere(Animal:symbol, Atmosphere:symbol)\nSurvives_in_atmosphere(\"Chinese mountain cat\", \"Earth\").\nSurvives_in_atmosphere(\"Chinese mountain cat\", \"Mars\").\n.decl Answer()\nAnswer() :- Survives_in_orbit(\"Chinese mountain cat\", orbit), Survives_in_atmosphere(animal, atmosphere), orbit != atmosphere.\n.output Answer\n\n"]}
{"id": 1835, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"rock\", 0.2).\nHas_density(\"air\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"rock\", density1), Has_density(\"air\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"rock\", 0.2).\nHas_density(\"air\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"rock\", density1), Has_density(\"air\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1836, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Burger King\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Snow Shoe Manufacturers Association\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Burger King\", n_members1), Has_n_members(\"Snow Shoe Manufacturers Association\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Burger King\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Snow Shoe Manufacturers Association\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Burger King\", n_members1), Has_n_members(\"Snow Shoe Manufacturers Association\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1837, "answer": false, "completion": ".decl Used_in_movie(Object:symbol, Movie:symbol)\nUsed_in_movie(\"USB flash drive\", \"The Godfather\").\n.decl Answer()\nAnswer() :- Used_in_movie(\"USB flash drive\", movie).\n.output Answer\n\n", "completions": [".decl Used_in_movie(Object:symbol, Movie:symbol)\nUsed_in_movie(\"USB flash drive\", \"The Godfather\").\n.decl Answer()\nAnswer() :- Used_in_movie(\"USB flash drive\", movie).\n.output Answer\n\n"]}
{"id": 1838, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Years Day\", \"January\").\nHappens_in_time(\"New Years Day\", \"December\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"New Years Day\", \"1999\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"New Years Day\", month), Happens_in_year(\"New Years Day\", year), month = \"December\", year = \"1999\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Years Day\", \"January\").\nHappens_in_time(\"New Years Day\", \"December\").\n.decl Happens_in_year(Event:symbol, Year:symbol)\nHappens_in_year(\"New Years Day\", \"1999\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"New Years Day\", month), Happens_in_year(\"New Years Day\", year), month = \"December\", year = \"1999\".\n.output Answer\n\n"]}
{"id": 1839, "answer": false, "completion": ".decl Was_president(President:symbol, Year:symbol)\nWas_president(\"Woodrow Wilson\", 1913).\nWas_president(\"Woodrow Wilson\", 1915).\nWas_president(\"Woodrow Wilson\", 1918).\nWas_president(\"Woodrow Wilson\", 1921).\nWas_president(\"Woodrow Wilson\", 1923).\nWas_president(\"Woodrow Wilson\", 1925).\nWas_president(\"Woodrow Wilson\", 1927).\nWas_president(\"Woodrow Wilson\", 1929).\nWas_president(\"Woodrow Wilson\", 1933).\nWas_president(\"Woodrow Wilson\", 1945).\nWas_president(\"Harry S. Truman\", 1945).\nWas_president(\"Harry S. Truman\", 1953).\nWas_president(\"Dwight D. Eisenhower\", 1953).\nWas_president(\"Dwight D. Eisenhower\", 1961).\nWas_president(\"John F. Kennedy\", 1961).\nWas_president(\"John F. Kennedy\", 1963).\nWas_president(\"Lyndon B. Johnson\", 1963).\nWas_president(\"Lyndon B. Johnson\", 1969).\nWas_president(\"Richard Nixon\", 1969).\nWas_president(\"Richard Nixon\", 1973).\nWas_president(\"Richard Nixon\", 1974).\nWas_president(\"Gerald Ford\", 1974).\nWas_president(\"Jimmy Carter\", 1977).\nWas_president(\"Jimmy Carter\", 1981).\nWas_president(\"Ronald Reagan\", 1981).\nWas_president(\"Ronald Reagan\", 1989).\nWas_president(\"George H. W. Bush\", 1989).\nWas_president(\"George H. W. Bush\", 1993).\nWas_president(\"William J. Clinton\", 1993).\nWas_president(\"William J. Clinton\", 2001).\nWas_president(\"George W. Bush\", 2001).\nWas_president(\"George W. Bush\", 2009).\nWas_president(\"Barack Obama\", 2009).\n.decl Answer()\nAnswer() :- Was_president(\"Woodrow Wilson\", year), Was_president(\"Harry S. Truman\", year), Was_president(\"Dwight D. Eisenhower\", year), Was_president(\"John F. Kennedy\", year), Was_president(\"Lyndon B. Johnson\", year), Was_president(\"Richard Nixon\", year), Was_president(\"Gerald Ford\", year), Was_president(\"Jimmy Carter\", year), Was_president(\"Ronald Reagan\", year), Was_president(\"George H. W. Bush\", year), Was_president(\"William J. Clinton\", year), Was_president(\"George W. Bush\", year), Was_president(\"Barack Obama\", year), year < 1945.\n.output Answer\n\n", "completions": [".decl Was_president(President:symbol, Year:symbol)\nWas_president(\"Woodrow Wilson\", 1913).\nWas_president(\"Woodrow Wilson\", 1915).\nWas_president(\"Woodrow Wilson\", 1918).\nWas_president(\"Woodrow Wilson\", 1921).\nWas_president(\"Woodrow Wilson\", 1923).\nWas_president(\"Woodrow Wilson\", 1925).\nWas_president(\"Woodrow Wilson\", 1927).\nWas_president(\"Woodrow Wilson\", 1929).\nWas_president(\"Woodrow Wilson\", 1933).\nWas_president(\"Woodrow Wilson\", 1945).\nWas_president(\"Harry S. Truman\", 1945).\nWas_president(\"Harry S. Truman\", 1953).\nWas_president(\"Dwight D. Eisenhower\", 1953).\nWas_president(\"Dwight D. Eisenhower\", 1961).\nWas_president(\"John F. Kennedy\", 1961).\nWas_president(\"John F. Kennedy\", 1963).\nWas_president(\"Lyndon B. Johnson\", 1963).\nWas_president(\"Lyndon B. Johnson\", 1969).\nWas_president(\"Richard Nixon\", 1969).\nWas_president(\"Richard Nixon\", 1973).\nWas_president(\"Richard Nixon\", 1974).\nWas_president(\"Gerald Ford\", 1974).\nWas_president(\"Jimmy Carter\", 1977).\nWas_president(\"Jimmy Carter\", 1981).\nWas_president(\"Ronald Reagan\", 1981).\nWas_president(\"Ronald Reagan\", 1989).\nWas_president(\"George H. W. Bush\", 1989).\nWas_president(\"George H. W. Bush\", 1993).\nWas_president(\"William J. Clinton\", 1993).\nWas_president(\"William J. Clinton\", 2001).\nWas_president(\"George W. Bush\", 2001).\nWas_president(\"George W. Bush\", 2009).\nWas_president(\"Barack Obama\", 2009).\n.decl Answer()\nAnswer() :- Was_president(\"Woodrow Wilson\", year), Was_president(\"Harry S. Truman\", year), Was_president(\"Dwight D. Eisenhower\", year), Was_president(\"John F. Kennedy\", year), Was_president(\"Lyndon B. Johnson\", year), Was_president(\"Richard Nixon\", year), Was_president(\"Gerald Ford\", year), Was_president(\"Jimmy Carter\", year), Was_president(\"Ronald Reagan\", year), Was_president(\"George H. W. Bush\", year), Was_president(\"William J. Clinton\", year), Was_president(\"George W. Bush\", year), Was_president(\"Barack Obama\", year), year < 1945.\n.output Answer\n\n"]}
{"id": 1840, "answer": true, "completion": ".decl Belongs_to_family(Animal:symbol, Family:symbol)\nBelongs_to_family(\"gryllidae\", \"Gryllidae\").\nBelongs_to_family(\"gryllidae\", \"Gryllinae\").\nBelongs_to_family(\"gryllidae\", \"Gryllodes\").\nBelongs_to_family(\"gryllidae\", \"Gryllodes sigillatus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus bimaculatus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp.\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.))))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)))))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gry", "completions": [".decl Belongs_to_family(Animal:symbol, Family:symbol)\nBelongs_to_family(\"gryllidae\", \"Gryllidae\").\nBelongs_to_family(\"gryllidae\", \"Gryllinae\").\nBelongs_to_family(\"gryllidae\", \"Gryllodes\").\nBelongs_to_family(\"gryllidae\", \"Gryllodes sigillatus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus bimaculatus\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp.\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.))))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp.)))))\").\nBelongs_to_family(\"gryllidae\", \"Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gryllus sp. (formerly Gryllus domesticus) (formerly Gryllus bimaculatus) (formerly Gry"]}
{"id": 1841, "answer": false, "completion": ".decl Is_a_room(Room:symbol)\nIs_a_room(\"office\").\nIs_a_room(\"bedroom\").\n.decl Is_a_pet(Pet:symbol)\nIs_a_pet(\"macaque\").\nIs_a_pet(\"cat\").\n.decl Is_a_pet_of_species(Pet:symbol, Species:symbol)\nIs_a_pet_of_species(\"macaque\", \"macaca mulatta\").\nIs_a_pet_of_species(\"cat\", \"Felis catus\").\n.decl Is_a_room_of_species(Room:symbol, Species:symbol)\nIs_a_room_of_species(\"office\", \"Homo sapiens\").\nIs_a_room_of_species(\"bedroom\", \"Felis catus\").\n.decl Answer()\nAnswer() :- Is_a_room(\"office\"), Is_a_pet(\"macaque\"), Is_a_pet_of_species(\"macaque\", species), Is_a_room_of_species(\"office\", species).\n.output Answer\n\n", "completions": [".decl Is_a_room(Room:symbol)\nIs_a_room(\"office\").\nIs_a_room(\"bedroom\").\n.decl Is_a_pet(Pet:symbol)\nIs_a_pet(\"macaque\").\nIs_a_pet(\"cat\").\n.decl Is_a_pet_of_species(Pet:symbol, Species:symbol)\nIs_a_pet_of_species(\"macaque\", \"macaca mulatta\").\nIs_a_pet_of_species(\"cat\", \"Felis catus\").\n.decl Is_a_room_of_species(Room:symbol, Species:symbol)\nIs_a_room_of_species(\"office\", \"Homo sapiens\").\nIs_a_room_of_species(\"bedroom\", \"Felis catus\").\n.decl Answer()\nAnswer() :- Is_a_room(\"office\"), Is_a_pet(\"macaque\"), Is_a_pet_of_species(\"macaque\", species), Is_a_room_of_species(\"office\", species).\n.output Answer\n\n"]}
{"id": 1842, "answer": false, "completion": ".decl Has_genre(Music_video:symbol, Genre:symbol)\nHas_genre(\"Pink\", \"pop\").\nHas_genre(\"Pink\", \"dance\").\nHas_genre(\"Pink\", \"electronic\").\n.decl Has_trigger(Genre:symbol, Trigger:symbol)\nHas_trigger(\"pop\", \"eating disorder\").\nHas_trigger(\"dance\", \"eating disorder\").\nHas_trigger(\"electronic\", \"eating disorder\").\n.decl Answer()\nAnswer() :- Has_genre(\"Pink\", genre), Has_trigger(genre, trigger), trigger == \"eating disorder\".\n.output Answer\n\n", "completions": [".decl Has_genre(Music_video:symbol, Genre:symbol)\nHas_genre(\"Pink\", \"pop\").\nHas_genre(\"Pink\", \"dance\").\nHas_genre(\"Pink\", \"electronic\").\n.decl Has_trigger(Genre:symbol, Trigger:symbol)\nHas_trigger(\"pop\", \"eating disorder\").\nHas_trigger(\"dance\", \"eating disorder\").\nHas_trigger(\"electronic\", \"eating disorder\").\n.decl Answer()\nAnswer() :- Has_genre(\"Pink\", genre), Has_trigger(genre, trigger), trigger == \"eating disorder\".\n.output Answer\n\n"]}
{"id": 1843, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"brewing\", \"prison\").\nHappens_in_time(\"brewing\", \"prison cell\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"brewing\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"brewing\", time), Happens_every_n_months(\"brewing\", n_months), time = \"prison cell\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"brewing\", \"prison\").\nHappens_in_time(\"brewing\", \"prison cell\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"brewing\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"brewing\", time), Happens_every_n_months(\"brewing\", n_months), time = \"prison cell\".\n.output Answer\n\n"]}
{"id": 1844, "answer": false, "completion": ".decl From_region(Person:symbol, Region:symbol)\nFrom_region(\"John\", \"New England\").\nFrom_region(\"John\", \"New York\").\nFrom_region(\"John\", \"Massachusetts\").\nFrom_region(\"John\", \"Rhode Island\").\nFrom_region(\"John\", \"Connecticut\").\nFrom_region(\"John\", \"Vermont\").\nFrom_region(\"John\", \"Maine\").\n.decl Grows(Crop:symbol, Region:symbol)\nGrows(\"coffee\", \"New England\").\nGrows(\"coffee\", \"New York\").\nGrows(\"coffee\", \"Massachusetts\").\nGrows(\"coffee\", \"Rhode Island\").\nGrows(\"coffee\", \"Connecticut\").\nGrows(\"coffee\", \"Vermont\").\nGrows(\"coffee\", \"Maine\").\n.decl Answer()\nAnswer() :- From_region(\"John\", region), Grows(\"coffee\", region).\n.output Answer\n\n", "completions": [".decl From_region(Person:symbol, Region:symbol)\nFrom_region(\"John\", \"New England\").\nFrom_region(\"John\", \"New York\").\nFrom_region(\"John\", \"Massachusetts\").\nFrom_region(\"John\", \"Rhode Island\").\nFrom_region(\"John\", \"Connecticut\").\nFrom_region(\"John\", \"Vermont\").\nFrom_region(\"John\", \"Maine\").\n.decl Grows(Crop:symbol, Region:symbol)\nGrows(\"coffee\", \"New England\").\nGrows(\"coffee\", \"New York\").\nGrows(\"coffee\", \"Massachusetts\").\nGrows(\"coffee\", \"Rhode Island\").\nGrows(\"coffee\", \"Connecticut\").\nGrows(\"coffee\", \"Vermont\").\nGrows(\"coffee\", \"Maine\").\n.decl Answer()\nAnswer() :- From_region(\"John\", region), Grows(\"coffee\", region).\n.output Answer\n\n"]}
{"id": 1845, "answer": false, "completion": ".decl Has_similarity(Object_A:symbol, Object_B:symbol, Similarity:float)\nHas_similarity(\"krabby patty\", \"cheeseburger\", 0.8).\n.decl Answer()\nAnswer() :- Has_similarity(\"krabby patty\", \"cheeseburger\", similarity), similarity > 0.5.\n.output Answer\n\n", "completions": [".decl Has_similarity(Object_A:symbol, Object_B:symbol, Similarity:float)\nHas_similarity(\"krabby patty\", \"cheeseburger\", 0.8).\n.decl Answer()\nAnswer() :- Has_similarity(\"krabby patty\", \"cheeseburger\", similarity), similarity > 0.5.\n.output Answer\n\n"]}
{"id": 1846, "answer": false, "completion": ".decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Boeing 737\", 72).\n.decl Has_n_chief_justices(Group:symbol, N_chief_justices:float)\nHas_n_chief_justices(\"United States\", 9).\n.decl Answer()\nAnswer() :- Has_n_seats(\"Boeing 737\", n_seats), Has_n_chief_justices(\"United States\", n_chief_justices), n_seats < n_chief_justices.\n.output Answer\n\n", "completions": [".decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Boeing 737\", 72).\n.decl Has_n_chief_justices(Group:symbol, N_chief_justices:float)\nHas_n_chief_justices(\"United States\", 9).\n.decl Answer()\nAnswer() :- Has_n_seats(\"Boeing 737\", n_seats), Has_n_chief_justices(\"United States\", n_chief_justices), n_seats < n_chief_justices.\n.output Answer\n\n"]}
{"id": 1847, "answer": false, "completion": ".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"crocodile\", \"Great Salt Lake\").\nLives_in(\"alligator\", \"Great Salt Lake\").\n.decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"crocodile\", \"Mississippi River\").\nLives_in(\"alligator\", \"Mississippi River\").\n.decl Answer()\nAnswer() :- Lives_in(\"crocodile\", place), Lives_in(\"alligator\", place), place = \"Great Salt Lake\".\n.output Answer\n\n", "completions": [".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"crocodile\", \"Great Salt Lake\").\nLives_in(\"alligator\", \"Great Salt Lake\").\n.decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"crocodile\", \"Mississippi River\").\nLives_in(\"alligator\", \"Mississippi River\").\n.decl Answer()\nAnswer() :- Lives_in(\"crocodile\", place), Lives_in(\"alligator\", place), place = \"Great Salt Lake\".\n.output Answer\n\n"]}
{"id": 1848, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Saudi Aramco\", \"1946\").\nHappens_in_time(\"assassination\", \"1946\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"assassination\", time), Happens_in_time(\"Saudi Aramco\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Saudi Aramco\", \"1946\").\nHappens_in_time(\"assassination\", \"1946\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"assassination\", time), Happens_in_time(\"Saudi Aramco\", time).\n.output Answer\n\n"]}
{"id": 1849, "answer": false, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"crab curry\", \"crab\").\nHas_ingredient(\"crab cakes\", \"crab\").\nHas_ingredient(\"crab soup\", \"crab\").\n.decl Has_season(Event:symbol, Season:symbol)\nHas_season(\"crab festival\", \"winter\").\nHas_season(\"crab festival\", \"spring\").\nHas_season(\"crab festival\", \"summer\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"crab festival\", ingredient), Has_season(\"crab festival\", season), Has_ingredient(dish, ingredient), Has_season(dish, season).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"crab curry\", \"crab\").\nHas_ingredient(\"crab cakes\", \"crab\").\nHas_ingredient(\"crab soup\", \"crab\").\n.decl Has_season(Event:symbol, Season:symbol)\nHas_season(\"crab festival\", \"winter\").\nHas_season(\"crab festival\", \"spring\").\nHas_season(\"crab festival\", \"summer\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"crab festival\", ingredient), Has_season(\"crab festival\", season), Has_ingredient(dish, ingredient), Has_season(dish, season).\n.output Answer\n\n"]}
{"id": 1850, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Friday\", \"goddess\").\nHas_name(\"Friday\", \"day\").\nHas_name(\"Friday\", \"cat\").\nHas_name(\"Friday\", \"dislike\").\nHas_name(\"Friday\", \"felines\").\n.decl Answer()\nAnswer() :- Has_name(\"Friday\", name1), Has_name(\"Friday\", name2), Has_name(\"Friday\", name3), Has_name(\"Friday\", name4), Has_name(\"Friday\", name5), name1 == name2, name1 == name3, name1 == name4, name1 == name5.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Friday\", \"goddess\").\nHas_name(\"Friday\", \"day\").\nHas_name(\"Friday\", \"cat\").\nHas_name(\"Friday\", \"dislike\").\nHas_name(\"Friday\", \"felines\").\n.decl Answer()\nAnswer() :- Has_name(\"Friday\", name1), Has_name(\"Friday\", name2), Has_name(\"Friday\", name3), Has_name(\"Friday\", name4), Has_name(\"Friday\", name5), name1 == name2, name1 == name3, name1 == name4, name1 == name5.\n.output Answer\n\n"]}
{"id": 1851, "answer": true, "completion": ".decl Is_food(Food:symbol)\nIs_food(\"soup\").\n.decl Is_food(Food:symbol)\nIs_food(\"bread\").\n.decl Is_food(Food:symbol)\nIs_food(\"chicken\").\n.decl Answer()\nAnswer() :- Is_food(\"soup\"), Is_food(\"bread\"), Is_food(\"chicken\").\n.output Answer\n\n", "completions": [".decl Is_food(Food:symbol)\nIs_food(\"soup\").\n.decl Is_food(Food:symbol)\nIs_food(\"bread\").\n.decl Is_food(Food:symbol)\nIs_food(\"chicken\").\n.decl Answer()\nAnswer() :- Is_food(\"soup\"), Is_food(\"bread\"), Is_food(\"chicken\").\n.output Answer\n\n"]}
{"id": 1852, "answer": false, "completion": ".decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"John\", \"Thalassophobia\").\n.decl Has_hobby(Person:symbol, Hobby:symbol)\nHas_hobby(\"John\", \"oceanography\").\n.decl Answer()\nAnswer() :- Has_phobia(\"John\", phobia), Has_hobby(\"John\", hobby), phobia = hobby.\n.output Answer\n\n", "completions": [".decl Has_phobia(Person:symbol, Phobia:symbol)\nHas_phobia(\"John\", \"Thalassophobia\").\n.decl Has_hobby(Person:symbol, Hobby:symbol)\nHas_hobby(\"John\", \"oceanography\").\n.decl Answer()\nAnswer() :- Has_phobia(\"John\", phobia), Has_hobby(\"John\", hobby), phobia = hobby.\n.output Answer\n\n"]}
{"id": 1853, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eric Clapton\", 65).\nHas_age(\"Eric Clapton's mother\", 60).\n.decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Eric Clapton\", 1945).\nHas_birth_year(\"Eric Clapton's mother\", 1935).\n.decl Answer()\nAnswer() :- Has_age(\"Eric Clapton's mother\", age), Has_birth_year(\"Eric Clapton\", birth_year), age > birth_year.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Eric Clapton\", 65).\nHas_age(\"Eric Clapton's mother\", 60).\n.decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Eric Clapton\", 1945).\nHas_birth_year(\"Eric Clapton's mother\", 1935).\n.decl Answer()\nAnswer() :- Has_age(\"Eric Clapton's mother\", age), Has_birth_year(\"Eric Clapton\", birth_year), age > birth_year.\n.output Answer\n\n"]}
{"id": 1854, "answer": true, "completion": ".decl Won_championship(Driver:symbol, Championship:symbol)\nWon_championship(\"Ayrton Senna\", \"Formula One\").\nWon_championship(\"Niki Lauda\", \"Formula One\").\nWon_championship(\"Nelson Piquet\", \"Formula One\").\nWon_championship(\"Alain Prost\", \"Formula One\").\nWon_championship(\"Ayrton Senna\", \"Formula One\").\nWon_championship(\"Niki Lauda\", \"Formula One\").\nWon_championship(\"Nelson Piquet\", \"Formula One\").\nWon_championship(\"Alain Prost\", \"Formula One\").\n.decl Won_race(Driver:symbol, Race:symbol)\nWon_race(\"Ayrton Senna\", \"Brazilian Grand Prix\").\nWon_race(\"Niki Lauda\", \"Dutch Grand Prix\").\nWon_race(\"Nelson Piquet\", \"British Grand Prix\").\nWon_race(\"Alain Prost\", \"British Grand Prix\").\nWon_race(\"Ayrton Senna\", \"Italian Grand Prix\").\nWon_race(\"Niki Lauda\", \"German Grand Prix\").\nWon_race(\"Nelson Piquet\", \"Japanese Grand Prix\").\nWon_race(\"Alain Prost\", \"Japanese Grand Prix\").\n.decl Answer()\nAnswer() :- Won_championship(\"Secretariat\", championship), Won_race(\"Secretariat\", race).\n.output Answer\n\n", "completions": [".decl Won_championship(Driver:symbol, Championship:symbol)\nWon_championship(\"Ayrton Senna\", \"Formula One\").\nWon_championship(\"Niki Lauda\", \"Formula One\").\nWon_championship(\"Nelson Piquet\", \"Formula One\").\nWon_championship(\"Alain Prost\", \"Formula One\").\nWon_championship(\"Ayrton Senna\", \"Formula One\").\nWon_championship(\"Niki Lauda\", \"Formula One\").\nWon_championship(\"Nelson Piquet\", \"Formula One\").\nWon_championship(\"Alain Prost\", \"Formula One\").\n.decl Won_race(Driver:symbol, Race:symbol)\nWon_race(\"Ayrton Senna\", \"Brazilian Grand Prix\").\nWon_race(\"Niki Lauda\", \"Dutch Grand Prix\").\nWon_race(\"Nelson Piquet\", \"British Grand Prix\").\nWon_race(\"Alain Prost\", \"British Grand Prix\").\nWon_race(\"Ayrton Senna\", \"Italian Grand Prix\").\nWon_race(\"Niki Lauda\", \"German Grand Prix\").\nWon_race(\"Nelson Piquet\", \"Japanese Grand Prix\").\nWon_race(\"Alain Prost\", \"Japanese Grand Prix\").\n.decl Answer()\nAnswer() :- Won_championship(\"Secretariat\", championship), Won_race(\"Secretariat\", race).\n.output Answer\n\n"]}
{"id": 1855, "answer": false, "completion": ".decl Lives_in(Person:symbol, Place:symbol)\nLives_in(\"Iggy Pop\", \"Berlin\").\nLives_in(\"Justin Bieber\", \"Canada\").\n.decl Travels_with(Person:symbol, Person2:symbol)\nTravels_with(\"Iggy Pop\", \"Justin Bieber\").\n.decl Answer()\nAnswer() :- Lives_in(\"Iggy Pop\", place1), Lives_in(\"Justin Bieber\", place2), place1 != place2.\n.output Answer\n\n", "completions": [".decl Lives_in(Person:symbol, Place:symbol)\nLives_in(\"Iggy Pop\", \"Berlin\").\nLives_in(\"Justin Bieber\", \"Canada\").\n.decl Travels_with(Person:symbol, Person2:symbol)\nTravels_with(\"Iggy Pop\", \"Justin Bieber\").\n.decl Answer()\nAnswer() :- Lives_in(\"Iggy Pop\", place1), Lives_in(\"Justin Bieber\", place2), place1 != place2.\n.output Answer\n\n"]}
{"id": 1856, "answer": true, "completion": ".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Eminem\", 1).\n.decl Has_score(Person:symbol, Score:float)\nHas_score(\"Eminem\", 0.9).\n.decl Answer()\nAnswer() :- Has_rank(\"Eminem\", rank), Has_score(\"Eminem\", score), rank > score.\n.output Answer\n\n", "completions": [".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Eminem\", 1).\n.decl Has_score(Person:symbol, Score:float)\nHas_score(\"Eminem\", 0.9).\n.decl Answer()\nAnswer() :- Has_rank(\"Eminem\", rank), Has_score(\"Eminem\", score), rank > score.\n.output Answer\n\n"]}
{"id": 1857, "answer": true, "completion": ".decl Has_magnitude(Event:symbol, Magnitude:float)\nHas_magnitude(\"Tohoku earthquake\", 9).\nHas_magnitude(\"Godzilla\", 20).\n.decl Answer()\nAnswer() :- Has_magnitude(\"Tohoku earthquake\", magnitude), Has_magnitude(\"Godzilla\", magnitude2), magnitude > magnitude2.\n.output Answer\n\n", "completions": [".decl Has_magnitude(Event:symbol, Magnitude:float)\nHas_magnitude(\"Tohoku earthquake\", 9).\nHas_magnitude(\"Godzilla\", 20).\n.decl Answer()\nAnswer() :- Has_magnitude(\"Tohoku earthquake\", magnitude), Has_magnitude(\"Godzilla\", magnitude2), magnitude > magnitude2.\n.output Answer\n\n"]}
{"id": 1858, "answer": true, "completion": ".decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"JAG\", 120).\n.decl Has_n_months(Show:symbol, N_months:float)\nHas_n_months(\"JAG\", 6).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"JAG\", n_episodes), Has_n_months(\"JAG\", n_months), n_episodes / n_months >= 1.\n.output Answer\n\n", "completions": [".decl Has_n_episodes(Show:symbol, N_episodes:float)\nHas_n_episodes(\"JAG\", 120).\n.decl Has_n_months(Show:symbol, N_months:float)\nHas_n_months(\"JAG\", 6).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"JAG\", n_episodes), Has_n_months(\"JAG\", n_months), n_episodes / n_months >= 1.\n.output Answer\n\n"]}
{"id": 1859, "answer": true, "completion": ".decl Has_n_letters(Alphabet:symbol, N_letters:float)\nHas_n_letters(\"Greek\", 24).\nHas_n_letters(\"Sumerian cuneiform\", 20).\n.decl Answer()\nAnswer() :- Has_n_letters(\"Greek\", n_letters1), Has_n_letters(\"Sumerian cuneiform\", n_letters2), n_letters1 >= n_letters2.\n.output Answer\n\n", "completions": [".decl Has_n_letters(Alphabet:symbol, N_letters:float)\nHas_n_letters(\"Greek\", 24).\nHas_n_letters(\"Sumerian cuneiform\", 20).\n.decl Answer()\nAnswer() :- Has_n_letters(\"Greek\", n_letters1), Has_n_letters(\"Sumerian cuneiform\", n_letters2), n_letters1 >= n_letters2.\n.output Answer\n\n"]}
{"id": 1860, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Columbia University\", 50000).\nHas_value(\"2020 Chevrolet Corvette\", 40000).\n.decl Answer()\nAnswer() :- Has_value(\"Columbia University\", value1), Has_value(\"2020 Chevrolet Corvette\", value2), value1 - value2 < 10000.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"Columbia University\", 50000).\nHas_value(\"2020 Chevrolet Corvette\", 40000).\n.decl Answer()\nAnswer() :- Has_value(\"Columbia University\", value1), Has_value(\"2020 Chevrolet Corvette\", value2), value1 - value2 < 10000.\n.output Answer\n\n"]}
{"id": 1861, "answer": true, "completion": ".decl Has_capacity(Hotel:symbol, Capacity:float)\nHas_capacity(\"Tahiti Hilton\", 100).\nHas_capacity(\"Tahiti Sun Hotel\", 200).\nHas_capacity(\"Tahiti Maison Luxe\", 300).\n.decl Has_n_rooms(Hotel:symbol, N_rooms:float)\nHas_n_rooms(\"Tahiti Hilton\", 100).\nHas_n_rooms(\"Tahiti Sun Hotel\", 200).\nHas_n_rooms(\"Tahiti Maison Luxe\", 300).\n.decl Answer()\nAnswer() :- Has_capacity(\"Tahiti Hilton\", capacity1), Has_capacity(\"Tahiti Sun Hotel\", capacity2), Has_capacity(\"Tahiti Maison Luxe\", capacity3), capacity1 >= 100, capacity2 >= 100, capacity3 >= 100.\n.output Answer\n\n", "completions": [".decl Has_capacity(Hotel:symbol, Capacity:float)\nHas_capacity(\"Tahiti Hilton\", 100).\nHas_capacity(\"Tahiti Sun Hotel\", 200).\nHas_capacity(\"Tahiti Maison Luxe\", 300).\n.decl Has_n_rooms(Hotel:symbol, N_rooms:float)\nHas_n_rooms(\"Tahiti Hilton\", 100).\nHas_n_rooms(\"Tahiti Sun Hotel\", 200).\nHas_n_rooms(\"Tahiti Maison Luxe\", 300).\n.decl Answer()\nAnswer() :- Has_capacity(\"Tahiti Hilton\", capacity1), Has_capacity(\"Tahiti Sun Hotel\", capacity2), Has_capacity(\"Tahiti Maison Luxe\", capacity3), capacity1 >= 100, capacity2 >= 100, capacity3 >= 100.\n.output Answer\n\n"]}
{"id": 1862, "answer": false, "completion": ".decl Hosted_in_western_hemisphere(Olympics:symbol)\nHosted_in_western_hemisphere(\"Olympics\").\n.decl Hosted_in_northern_hemisphere(Olympics:symbol)\nHosted_in_northern_hemisphere(\"Olympics\").\n.decl Answer()\nAnswer() :- Hosted_in_western_hemisphere(olympics), Hosted_in_northern_hemisphere(olympics).\n.output Answer\n\n", "completions": [".decl Hosted_in_western_hemisphere(Olympics:symbol)\nHosted_in_western_hemisphere(\"Olympics\").\n.decl Hosted_in_northern_hemisphere(Olympics:symbol)\nHosted_in_northern_hemisphere(\"Olympics\").\n.decl Answer()\nAnswer() :- Hosted_in_western_hemisphere(olympics), Hosted_in_northern_hemisphere(olympics).\n.output Answer\n\n"]}
{"id": 1863, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Brazil\", 4).\nHas_n_members(\"Antarctica\", 0).\n.decl Has_n_watermelons(Group:symbol, N_watermelons:float)\nHas_n_watermelons(\"Brazil\", 100).\nHas_n_watermelons(\"Antarctica\", 0).\n.decl Answer()\nAnswer() :- Has_n_members(\"Brazil\", n_members1), Has_n_members(\"Antarctica\", n_members2), Has_n_watermelons(\"Brazil\", n_watermelons1), Has_n_watermelons(\"Antarctica\", n_watermelons2), n_members1 > n_members2, n_watermelons1 > n_watermelons2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Brazil\", 4).\nHas_n_members(\"Antarctica\", 0).\n.decl Has_n_watermelons(Group:symbol, N_watermelons:float)\nHas_n_watermelons(\"Brazil\", 100).\nHas_n_watermelons(\"Antarctica\", 0).\n.decl Answer()\nAnswer() :- Has_n_members(\"Brazil\", n_members1), Has_n_members(\"Antarctica\", n_members2), Has_n_watermelons(\"Brazil\", n_watermelons1), Has_n_watermelons(\"Antarctica\", n_watermelons2), n_members1 > n_members2, n_watermelons1 > n_watermelons2.\n.output Answer\n\n"]}
{"id": 1864, "answer": true, "completion": ".decl Is_in_country(Person:symbol, Country:symbol)\nIs_in_country(\"Edward Snowden\", \"Russia\").\nIs_in_country(\"Edward Snowden\", \"Ecuador\").\nIs_in_country(\"Edward Snowden\", \"Venezuela\").\nIs_in_country(\"Edward Snowden\", \"China\").\nIs_in_country(\"Edward Snowden\", \"Brazil\").\n.decl Is_in_country(Person:symbol, Country:symbol)\nIs_in_country(\"Edward Snowden\", \"United States\").\n.decl Answer()\nAnswer() :- Is_in_country(\"Edward Snowden\", country), country \\= \"United States\".\n.output Answer\n\n", "completions": [".decl Is_in_country(Person:symbol, Country:symbol)\nIs_in_country(\"Edward Snowden\", \"Russia\").\nIs_in_country(\"Edward Snowden\", \"Ecuador\").\nIs_in_country(\"Edward Snowden\", \"Venezuela\").\nIs_in_country(\"Edward Snowden\", \"China\").\nIs_in_country(\"Edward Snowden\", \"Brazil\").\n.decl Is_in_country(Person:symbol, Country:symbol)\nIs_in_country(\"Edward Snowden\", \"United States\").\n.decl Answer()\nAnswer() :- Is_in_country(\"Edward Snowden\", country), country \\= \"United States\".\n.output Answer\n\n"]}
{"id": 1865, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Leafhoppers\", 100).\nHas_n_members(\"Log Cabin syrup producers\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"Leafhoppers\", n_members1), Has_n_members(\"Log Cabin syrup producers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Leafhoppers\", 100).\nHas_n_members(\"Log Cabin syrup producers\", 10).\n.decl Answer()\nAnswer() :- Has_n_members(\"Leafhoppers\", n_members1), Has_n_members(\"Log Cabin syrup producers\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1866, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"drug addiction\", \"euphoria\").\n.decl Answer()\nAnswer() :- Has_property(\"drug addiction\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"drug addiction\", \"euphoria\").\n.decl Answer()\nAnswer() :- Has_property(\"drug addiction\", property).\n.output Answer\n\n"]}
{"id": 1867, "answer": false, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Anthony Quinn\", 5).\nHas_n_children(\"J.D. Salinger\", 1).\n.decl Answer()\nAnswer() :- Has_n_children(\"Anthony Quinn\", n_children1), Has_n_children(\"J.D. Salinger\", n_children2), n_children1 > n_children2.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Anthony Quinn\", 5).\nHas_n_children(\"J.D. Salinger\", 1).\n.decl Answer()\nAnswer() :- Has_n_children(\"Anthony Quinn\", n_children1), Has_n_children(\"J.D. Salinger\", n_children2), n_children1 > n_children2.\n.output Answer\n\n"]}
{"id": 1868, "answer": true, "completion": ".decl Has_earnings(Person:symbol, Earnings:float)\nHas_earnings(\"Edgar Allan Poe\", 20000).\n.decl Answer()\nAnswer() :- Has_earnings(\"Edgar Allan Poe\", earnings), earnings > 0.\n.output Answer\n\n", "completions": [".decl Has_earnings(Person:symbol, Earnings:float)\nHas_earnings(\"Edgar Allan Poe\", 20000).\n.decl Answer()\nAnswer() :- Has_earnings(\"Edgar Allan Poe\", earnings), earnings > 0.\n.output Answer\n\n"]}
{"id": 1869, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant squid\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant squid\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Giant squid\", n_members1), Has_n_members(\"Giant squid\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant squid\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Giant squid\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Giant squid\", n_members1), Has_n_members(\"Giant squid\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1870, "answer": false, "completion": ".decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Louisa May Alcott\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Abraham Lincoln\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Adams\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Thomas Jefferson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Madison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Monroe\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Quincy Adams\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Andrew Jackson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Martin Van Buren\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"William Henry Harrison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Tyler\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James K. Polk\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Zachary Taylor\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Millard Fillmore\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Franklin Pierce\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Buchanan\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Abraham Lincoln\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Andrew Johnson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Ulysses S. Grant\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Rutherford B. Hayes\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James A. Garfield\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Chester A. Arthur\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Grover Cleveland\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Benjamin Harrison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"William McKinley\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemem", "completions": [".decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Louisa May Alcott\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Abraham Lincoln\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Adams\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Thomas Jefferson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Madison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Monroe\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Quincy Adams\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Andrew Jackson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Martin Van Buren\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"William Henry Harrison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"John Tyler\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James K. Polk\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Zachary Taylor\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Millard Fillmore\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Franklin Pierce\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James Buchanan\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Abraham Lincoln\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Andrew Johnson\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Ulysses S. Grant\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Rutherford B. Hayes\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"James A. Garfield\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Chester A. Arthur\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Grover Cleveland\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"Benjamin Harrison\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemembers(\"William McKinley\", \"the 13th Amendment\").\n.decl Remembers(Person:symbol, Event:symbol)\nRemem"]}
{"id": 1871, "answer": true, "completion": ".decl Plays_basketball(Person:symbol)\nPlays_basketball(\"Kobe Bryant\").\nPlays_basketball(\"Michael Jordan\").\nPlays_basketball(\"Shaquille O'Neal\").\nPlays_basketball(\"Lebron James\").\nPlays_basketball(\"Dwyane Wade\").\nPlays_basketball(\"Carmelo Anthony\").\nPlays_basketball(\"Chris Paul\").\nPlays_basketball(\"Kevin Durant\").\nPlays_basketball(\"Russell Westbrook\").\nPlays_basketball(\"LeBron James\").\nPlays_basketball(\"Stephen Curry\").\nPlays_basketball(\"James Harden\").\nPlays_basketball(\"Klay Thompson\").\nPlays_basketball(\"Draymond Green\").\nPlays_basketball(\"Chris Paul\").\nPlays_basketball(\"Tony Parker\").\nPlays_basketball(\"Tim Duncan\").\nPlays_basketball(\"Tony Parker\").\nPlays_basketball(\"Manu Ginobili\").\nPlays_basketball(\"Kawhi Leonard\").\nPlays_basketball(\"LaMarcus Aldridge\").\nPlays_basketball(\"Kyle Anderson\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\n", "completions": [".decl Plays_basketball(Person:symbol)\nPlays_basketball(\"Kobe Bryant\").\nPlays_basketball(\"Michael Jordan\").\nPlays_basketball(\"Shaquille O'Neal\").\nPlays_basketball(\"Lebron James\").\nPlays_basketball(\"Dwyane Wade\").\nPlays_basketball(\"Carmelo Anthony\").\nPlays_basketball(\"Chris Paul\").\nPlays_basketball(\"Kevin Durant\").\nPlays_basketball(\"Russell Westbrook\").\nPlays_basketball(\"LeBron James\").\nPlays_basketball(\"Stephen Curry\").\nPlays_basketball(\"James Harden\").\nPlays_basketball(\"Klay Thompson\").\nPlays_basketball(\"Draymond Green\").\nPlays_basketball(\"Chris Paul\").\nPlays_basketball(\"Tony Parker\").\nPlays_basketball(\"Tim Duncan\").\nPlays_basketball(\"Tony Parker\").\nPlays_basketball(\"Manu Ginobili\").\nPlays_basketball(\"Kawhi Leonard\").\nPlays_basketball(\"LaMarcus Aldridge\").\nPlays_basketball(\"Kyle Anderson\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Danny Green\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\nPlays_basketball(\"Marco Belinelli\").\n"]}
{"id": 1872, "answer": true, "completion": ".decl Has_n_projects(Person:symbol, N_projects:float)\nHas_n_projects(\"Dragon Ball\", 12).\nHas_n_projects(\"Friday 13th\", 13).\n.decl Answer()\nAnswer() :- Has_n_projects(\"Dragon Ball\", n_projects1), Has_n_projects(\"Friday 13th\", n_projects2), n_projects1 < n_projects2.\n.output Answer\n\n", "completions": [".decl Has_n_projects(Person:symbol, N_projects:float)\nHas_n_projects(\"Dragon Ball\", 12).\nHas_n_projects(\"Friday 13th\", 13).\n.decl Answer()\nAnswer() :- Has_n_projects(\"Dragon Ball\", n_projects1), Has_n_projects(\"Friday 13th\", n_projects2), n_projects1 < n_projects2.\n.output Answer\n\n"]}
{"id": 1873, "answer": true, "completion": ".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"lemonade\", \"C\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"orange juice\", \"C\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"lemonade\", vitamin), Has_vitamin(\"orange juice\", vitamin).\n.output Answer\n\n", "completions": [".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"lemonade\", \"C\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"orange juice\", \"C\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"lemonade\", vitamin), Has_vitamin(\"orange juice\", vitamin).\n.output Answer\n\n"]}
{"id": 1874, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Bombyx mori\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Bombyx mori\", n_members), n_members > 1.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Bombyx mori\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"Bombyx mori\", n_members), n_members > 1.\n.output Answer\n\n"]}
{"id": 1875, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Apollo 15\", \"Apollo 15\").\nHas_name(\"Apollo 15\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Apollo 15\", \"Apollo 15\").\nHas_name(\"Apollo 15\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_name(\"Apollo 15 Mission\", \"Apollo 15 Mission\").\nHas_"]}
{"id": 1876, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bag\", 0.5).\nHas_price(\"aldi\", 0.5).\n.decl Answer()\nAnswer() :- Has_price(\"bag\", price1), Has_price(\"aldi\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bag\", 0.5).\nHas_price(\"aldi\", 0.5).\n.decl Answer()\nAnswer() :- Has_price(\"bag\", price1), Has_price(\"aldi\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 1877, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Porsche 992 Turbo S\", 2.9).\nHas_speed(\"Usain Bolt\", 3.5).\n.decl Answer()\nAnswer() :- Has_speed(\"Porsche 992 Turbo S\", speed1), Has_speed(\"Usain Bolt\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Porsche 992 Turbo S\", 2.9).\nHas_speed(\"Usain Bolt\", 3.5).\n.decl Answer()\nAnswer() :- Has_speed(\"Porsche 992 Turbo S\", speed1), Has_speed(\"Usain Bolt\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1878, "answer": true, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"broom\", \"good for using on house floors\").\n.decl Answer()\nAnswer() :- Has_property(\"broom\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"broom\", \"good for using on house floors\").\n.decl Answer()\nAnswer() :- Has_property(\"broom\", property).\n.output Answer\n\n"]}
{"id": 1879, "answer": false, "completion": ".decl Has_piercing(Person:symbol, Piercing:symbol)\nHas_piercing(\"Drew Barrymore\", \"lip\").\nHas_piercing(\"Drew Barrymore\", \"nose\").\nHas_piercing(\"Drew Barrymore\", \"tongue\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Answer()\nAnswer() :- Has_piercing(\"Drew Barrymore\", piercing), Has_dental_plan(\"Drew Barrymore\", plan1), Has_dental_plan(\"Drew Barrymore\", plan2), plan1 != plan2.\n.output Answer\n\n", "completions": [".decl Has_piercing(Person:symbol, Piercing:symbol)\nHas_piercing(\"Drew Barrymore\", \"lip\").\nHas_piercing(\"Drew Barrymore\", \"nose\").\nHas_piercing(\"Drew Barrymore\", \"tongue\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"Drew Barrymore\", \"Aetna\").\nHas_dental_plan(\"Drew Barrymore\", \"Cigna\").\nHas_dental_plan(\"Drew Barrymore\", \"Kaiser\").\n.decl Answer()\nAnswer() :- Has_piercing(\"Drew Barrymore\", piercing), Has_dental_plan(\"Drew Barrymore\", plan1), Has_dental_plan(\"Drew Barrymore\", plan2), plan1 != plan2.\n.output Answer\n\n"]}
{"id": 1880, "answer": false, "completion": ".decl Genre(Artist:symbol, Genre:symbol)\nGenre(\"ABBA\", \"pop\").\n.decl Genre_was_relevant_in_year(Genre:symbol, Year:float)\nGenre_was_relevant_in_year(\"pop\", 1970).\n.decl Answer()\nAnswer() :- Genre(\"ABBA\", genre), Genre_was_relevant_in_year(genre, year), year > 1970.\n.output Answer\n\n", "completions": [".decl Genre(Artist:symbol, Genre:symbol)\nGenre(\"ABBA\", \"pop\").\n.decl Genre_was_relevant_in_year(Genre:symbol, Year:float)\nGenre_was_relevant_in_year(\"pop\", 1970).\n.decl Answer()\nAnswer() :- Genre(\"ABBA\", genre), Genre_was_relevant_in_year(genre, year), year > 1970.\n.output Answer\n\n"]}
{"id": 1881, "answer": false, "completion": ".decl Influences(Influencer:symbol, Influenced:symbol)\nInfluences(\"Catcher in the Rye\", \"Mark David Chapman\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Charles Manson\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey", "completions": [".decl Influences(Influencer:symbol, Influenced:symbol)\nInfluences(\"Catcher in the Rye\", \"Mark David Chapman\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Charles Manson\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey Dahmer\").\nInfluences(\"Catcher in the Rye\", \"Ted Bundy\").\nInfluences(\"Catcher in the Rye\", \"Jeffrey"]}
{"id": 1882, "answer": true, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"milk\").\nHas_ingredient(\"rice pudding\", \"sugar\").\n.decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"milk substitute\", \"soy\").\nHas_ingredient(\"milk substitute\", \"coconut\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient1), Has_ingredient(\"milk substitute\", ingredient2), ingredient1 = ingredient2.\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"rice pudding\", \"milk\").\nHas_ingredient(\"rice pudding\", \"sugar\").\n.decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"milk substitute\", \"soy\").\nHas_ingredient(\"milk substitute\", \"coconut\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"rice pudding\", ingredient1), Has_ingredient(\"milk substitute\", ingredient2), ingredient1 = ingredient2.\n.output Answer\n\n"]}
{"id": 1883, "answer": false, "completion": ".decl Is_on_Chinese_New_Year_calendar(Object:symbol)\nIs_on_Chinese_New_Year_calendar(\"mollusk\").\n.decl Answer()\nAnswer() :- Is_on_Chinese_New_Year_calendar(\"mollusk\").\n.output Answer\n\n", "completions": [".decl Is_on_Chinese_New_Year_calendar(Object:symbol)\nIs_on_Chinese_New_Year_calendar(\"mollusk\").\n.decl Answer()\nAnswer() :- Is_on_Chinese_New_Year_calendar(\"mollusk\").\n.output Answer\n\n"]}
{"id": 1884, "answer": false, "completion": ".decl Was_present(Person:symbol, Event:symbol)\nWas_present(\"Gandalf\", \"Eomer's death\").\n.decl Was_present(Person:symbol, Event:symbol)\nWas_present(\"Eomer\", \"Eomer's death\").\n.decl Answer()\nAnswer() :- Was_present(\"Gandalf\", event), Was_present(\"Eomer\", event).\n.output Answer\n\n", "completions": [".decl Was_present(Person:symbol, Event:symbol)\nWas_present(\"Gandalf\", \"Eomer's death\").\n.decl Was_present(Person:symbol, Event:symbol)\nWas_present(\"Eomer\", \"Eomer's death\").\n.decl Answer()\nAnswer() :- Was_present(\"Gandalf\", event), Was_present(\"Eomer\", event).\n.output Answer\n\n"]}
{"id": 1885, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of women in the Panthéon\", \"1806\").\nHappens_in_time(\"burial of"]}
{"id": 1886, "answer": false, "completion": ".decl Has_n_people(Condition:symbol, N_people:float)\nHas_n_people(\"bipolar disorder\", 100).\nHas_n_people(\"diabetes\", 100).\n.decl Answer()\nAnswer() :- Has_n_people(\"bipolar disorder\", n_people1), Has_n_people(\"diabetes\", n_people2), n_people1 > n_people2.\n.output Answer\n\n", "completions": [".decl Has_n_people(Condition:symbol, N_people:float)\nHas_n_people(\"bipolar disorder\", 100).\nHas_n_people(\"diabetes\", 100).\n.decl Answer()\nAnswer() :- Has_n_people(\"bipolar disorder\", n_people1), Has_n_people(\"diabetes\", n_people2), n_people1 > n_people2.\n.output Answer\n\n"]}
{"id": 1887, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Audi TT\", 0.000001).\nHas_volume(\"wife\", 0.000001).\n.decl Answer()\nAnswer() :- Has_volume(\"wife\", volume1), Has_volume(\"Audi TT\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Audi TT\", 0.000001).\nHas_volume(\"wife\", 0.000001).\n.decl Answer()\nAnswer() :- Has_volume(\"wife\", volume1), Has_volume(\"Audi TT\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 1888, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"NBA game\", \"June\").\nHappens_in_time(\"NBA game\", \"July\").\nHappens_in_time(\"NBA game\", \"August\").\nHappens_in_time(\"NBA game\", \"September\").\nHappens_in_time(\"NBA game\", \"October\").\nHappens_in_time(\"NBA game\", \"November\").\nHappens_in_time(\"NBA game\", \"December\").\nHappens_in_time(\"NBA game\", \"January\").\nHappens_in_time(\"NBA game\", \"February\").\nHappens_in_time(\"NBA game\", \"March\").\nHappens_in_time(\"NBA game\", \"April\").\nHappens_in_time(\"NBA game\", \"May\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Six-Day War\", \"June\").\nHappens_in_time(\"Six-Day War\", \"July\").\nHappens_in_time(\"Six-Day War\", \"August\").\nHappens_in_time(\"Six-Day War\", \"September\").\nHappens_in_time(\"Six-Day War\", \"October\").\nHappens_in_time(\"Six-Day War\", \"November\").\nHappens_in_time(\"Six-Day War\", \"December\").\nHappens_in_time(\"Six-Day War\", \"January\").\nHappens_in_time(\"Six-Day War\", \"February\").\nHappens_in_time(\"Six-Day War\", \"March\").\nHappens_in_time(\"Six-Day War\", \"April\").\nHappens_in_time(\"Six-Day War\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"NBA game\", month1), Happens_in_time(\"Six-Day War\", month2), month1 > month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"NBA game\", \"June\").\nHappens_in_time(\"NBA game\", \"July\").\nHappens_in_time(\"NBA game\", \"August\").\nHappens_in_time(\"NBA game\", \"September\").\nHappens_in_time(\"NBA game\", \"October\").\nHappens_in_time(\"NBA game\", \"November\").\nHappens_in_time(\"NBA game\", \"December\").\nHappens_in_time(\"NBA game\", \"January\").\nHappens_in_time(\"NBA game\", \"February\").\nHappens_in_time(\"NBA game\", \"March\").\nHappens_in_time(\"NBA game\", \"April\").\nHappens_in_time(\"NBA game\", \"May\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Six-Day War\", \"June\").\nHappens_in_time(\"Six-Day War\", \"July\").\nHappens_in_time(\"Six-Day War\", \"August\").\nHappens_in_time(\"Six-Day War\", \"September\").\nHappens_in_time(\"Six-Day War\", \"October\").\nHappens_in_time(\"Six-Day War\", \"November\").\nHappens_in_time(\"Six-Day War\", \"December\").\nHappens_in_time(\"Six-Day War\", \"January\").\nHappens_in_time(\"Six-Day War\", \"February\").\nHappens_in_time(\"Six-Day War\", \"March\").\nHappens_in_time(\"Six-Day War\", \"April\").\nHappens_in_time(\"Six-Day War\", \"May\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"NBA game\", month1), Happens_in_time(\"Six-Day War\", month2), month1 > month2.\n.output Answer\n\n"]}
{"id": 1889, "answer": true, "completion": ".decl Flown(Person:symbol, Place:symbol)\nFlown(\"Ivan the Terrible\", \"Russia\").\nFlown(\"Ivan the Terrible\", \"Europe\").\n.decl Answer()\nAnswer() :- Flown(\"Ivan the Terrible\", place), place = \"Europe\".\n.output Answer\n\n", "completions": [".decl Flown(Person:symbol, Place:symbol)\nFlown(\"Ivan the Terrible\", \"Russia\").\nFlown(\"Ivan the Terrible\", \"Europe\").\n.decl Answer()\nAnswer() :- Flown(\"Ivan the Terrible\", place), place = \"Europe\".\n.output Answer\n\n"]}
{"id": 1890, "answer": true, "completion": ".decl Has_ingredient(Object:symbol, Ingredient:symbol)\nHas_ingredient(\"TMNT coloring book\", \"pizza\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"TMNT coloring book\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_ingredient(Object:symbol, Ingredient:symbol)\nHas_ingredient(\"TMNT coloring book\", \"pizza\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"TMNT coloring book\", ingredient).\n.output Answer\n\n"]}
{"id": 1891, "answer": true, "completion": ".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)", "completions": [".decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Baudrillard\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Gramsci\").\n.decl Has_author(Book:symbol, Author:symbol)\nHas_author(\"Theory of Cultural Hegemony\", \"Fukuyama\").\n.decl Has_author(Book:symbol, Author:symbol)"]}
{"id": 1892, "answer": false, "completion": ".decl Used_at(Object:symbol, Location:symbol)\nUsed_at(\"kayak\", \"summit of Mount Everest\").\n.decl Answer()\nAnswer() :- Used_at(\"kayak\", location), Used_at(object, location).\n.output Answer\n\n", "completions": [".decl Used_at(Object:symbol, Location:symbol)\nUsed_at(\"kayak\", \"summit of Mount Everest\").\n.decl Answer()\nAnswer() :- Used_at(\"kayak\", location), Used_at(object, location).\n.output Answer\n\n"]}
{"id": 1893, "answer": false, "completion": ".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Christmas\", \"Sunday\").\nHappens_on_day(\"Christmas\", \"Monday\").\nHappens_on_day(\"Christmas\", \"Tuesday\").\nHappens_on_day(\"Christmas\", \"Wednesday\").\nHappens_on_day(\"Christmas\", \"Thursday\").\nHappens_on_day(\"Christmas\", \"Friday\").\nHappens_on_day(\"Christmas\", \"Saturday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Christmas\", day), day = \"Sunday\".\n.output Answer\n\n", "completions": [".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"Christmas\", \"Sunday\").\nHappens_on_day(\"Christmas\", \"Monday\").\nHappens_on_day(\"Christmas\", \"Tuesday\").\nHappens_on_day(\"Christmas\", \"Wednesday\").\nHappens_on_day(\"Christmas\", \"Thursday\").\nHappens_on_day(\"Christmas\", \"Friday\").\nHappens_on_day(\"Christmas\", \"Saturday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"Christmas\", day), day = \"Sunday\".\n.output Answer\n\n"]}
{"id": 1894, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 1895, "answer": false, "completion": ".decl Likes(Person:symbol, Band:symbol)\nLikes(\"Armen\", \"System of a Down\").\nLikes(\"Armen\", \"Slipknot\").\nLikes(\"Armen\", \"Rammstein\").\n.decl Plays(Person:symbol, Instrument:symbol)\nPlays(\"Armen\", \"guitar\").\nPlays(\"Armen\", \"drums\").\nPlays(\"Armen\", \"bass\").\n.decl Plays_in_band(Person:symbol, Band:symbol)\nPlays_in_band(\"Armen\", \"System of a Down\").\nPlays_in_band(\"Armen\", \"Slipknot\").\nPlays_in_band(\"Armen\", \"Rammstein\").\n.decl Answer()\nAnswer() :- Plays_in_band(\"Armen\", band), Likes(person, band).\n.output Answer\n\n", "completions": [".decl Likes(Person:symbol, Band:symbol)\nLikes(\"Armen\", \"System of a Down\").\nLikes(\"Armen\", \"Slipknot\").\nLikes(\"Armen\", \"Rammstein\").\n.decl Plays(Person:symbol, Instrument:symbol)\nPlays(\"Armen\", \"guitar\").\nPlays(\"Armen\", \"drums\").\nPlays(\"Armen\", \"bass\").\n.decl Plays_in_band(Person:symbol, Band:symbol)\nPlays_in_band(\"Armen\", \"System of a Down\").\nPlays_in_band(\"Armen\", \"Slipknot\").\nPlays_in_band(\"Armen\", \"Rammstein\").\n.decl Answer()\nAnswer() :- Plays_in_band(\"Armen\", band), Likes(person, band).\n.output Answer\n\n"]}
{"id": 1896, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Powerpuff Girls\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"tag team wrestling\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Powerpuff Girls\", n_members1), Has_n_members(\"tag team wrestling\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Powerpuff Girls\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"tag team wrestling\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"Powerpuff Girls\", n_members1), Has_n_members(\"tag team wrestling\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 1897, "answer": false, "completion": ".decl Has_duration(Song:symbol, Duration:float)\nHas_duration(\"song1\", 1).\nHas_duration(\"song2\", 2).\nHas_duration(\"song3\", 3).\nHas_duration(\"song4\", 4).\nHas_duration(\"song5\", 5).\nHas_duration(\"song6\", 6).\nHas_duration(\"song7\", 7).\nHas_duration(\"song8\", 8).\nHas_duration(\"song9\", 9).\nHas_duration(\"song10\", 10).\n.decl Has_year(Year:symbol)\nHas_year(\"year1\").\nHas_year(\"year2\").\nHas_year(\"year3\").\nHas_year(\"year4\").\nHas_year(\"year5\").\nHas_year(\"year6\").\nHas_year(\"year7\").\nHas_year(\"year8\").\nHas_year(\"year9\").\nHas_year(\"year10\").\n.decl Answer()\nAnswer() :- Has_year(\"year1\"), Has_duration(\"song1\", duration1), Has_duration(\"song2\", duration2), Has_duration(\"song3\", duration3), Has_duration(\"song4\", duration4), Has_duration(\"song5\", duration5), Has_duration(\"song6\", duration6), Has_duration(\"song7\", duration7), Has_duration(\"song8\", duration8), Has_duration(\"song9\", duration9), Has_duration(\"song10\", duration10), duration1 + duration2 + duration3 + duration4 + duration5 + duration6 + duration7 + duration8 + duration9 + duration10 <= 365.\n.output Answer\n\n", "completions": [".decl Has_duration(Song:symbol, Duration:float)\nHas_duration(\"song1\", 1).\nHas_duration(\"song2\", 2).\nHas_duration(\"song3\", 3).\nHas_duration(\"song4\", 4).\nHas_duration(\"song5\", 5).\nHas_duration(\"song6\", 6).\nHas_duration(\"song7\", 7).\nHas_duration(\"song8\", 8).\nHas_duration(\"song9\", 9).\nHas_duration(\"song10\", 10).\n.decl Has_year(Year:symbol)\nHas_year(\"year1\").\nHas_year(\"year2\").\nHas_year(\"year3\").\nHas_year(\"year4\").\nHas_year(\"year5\").\nHas_year(\"year6\").\nHas_year(\"year7\").\nHas_year(\"year8\").\nHas_year(\"year9\").\nHas_year(\"year10\").\n.decl Answer()\nAnswer() :- Has_year(\"year1\"), Has_duration(\"song1\", duration1), Has_duration(\"song2\", duration2), Has_duration(\"song3\", duration3), Has_duration(\"song4\", duration4), Has_duration(\"song5\", duration5), Has_duration(\"song6\", duration6), Has_duration(\"song7\", duration7), Has_duration(\"song8\", duration8), Has_duration(\"song9\", duration9), Has_duration(\"song10\", duration10), duration1 + duration2 + duration3 + duration4 + duration5 + duration6 + duration7 + duration8 + duration9 + duration10 <= 365.\n.output Answer\n\n"]}
{"id": 1898, "answer": false, "completion": ".decl Has_genre(Song:symbol, Genre:symbol)\nHas_genre(\"Yesterday\", \"Pop\").\nHas_genre(\"Yellow Submarine\", \"Pop\").\nHas_genre(\"Yellow Submarine\", \"Disco\").\nHas_genre(\"Yellow Submarine\", \"Rock\").\n.decl Answer()\nAnswer() :- Has_genre(\"Yesterday\", genre), Has_genre(\"Yellow Submarine\", genre), genre = \"Disco\".\n.output Answer\n\n", "completions": [".decl Has_genre(Song:symbol, Genre:symbol)\nHas_genre(\"Yesterday\", \"Pop\").\nHas_genre(\"Yellow Submarine\", \"Pop\").\nHas_genre(\"Yellow Submarine\", \"Disco\").\nHas_genre(\"Yellow Submarine\", \"Rock\").\n.decl Answer()\nAnswer() :- Has_genre(\"Yesterday\", genre), Has_genre(\"Yellow Submarine\", genre), genre = \"Disco\".\n.output Answer\n\n"]}
{"id": 1899, "answer": false, "completion": ".decl Has_polygons(Game:symbol, Polygons:float)\nHas_polygons(\"Metroid\", 32).\n.decl Answer()\nAnswer() :- Has_polygons(\"Metroid\", polygons), polygons > 32.\n.output Answer\n\n", "completions": [".decl Has_polygons(Game:symbol, Polygons:float)\nHas_polygons(\"Metroid\", 32).\n.decl Answer()\nAnswer() :- Has_polygons(\"Metroid\", polygons), polygons > 32.\n.output Answer\n\n"]}
{"id": 1900, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"WWF\", 100).\nHas_n_members(\"WWF\", 1000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"koala\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"WWF\", n_members1), Has_n_members(\"koala\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"WWF\", 100).\nHas_n_members(\"WWF\", 1000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"koala\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"WWF\", n_members1), Has_n_members(\"koala\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1901, "answer": true, "completion": ".decl Has_intelligence(Person:symbol, Intelligence:float)\nHas_intelligence(\"Hodor\", 0.1).\nHas_intelligence(\"math mathematician\", 0.9).\n.decl Answer()\nAnswer() :- Has_intelligence(\"Hodor\", intelligence1), Has_intelligence(\"math mathematician\", intelligence2), intelligence1 > intelligence2.\n.output Answer\n\n", "completions": [".decl Has_intelligence(Person:symbol, Intelligence:float)\nHas_intelligence(\"Hodor\", 0.1).\nHas_intelligence(\"math mathematician\", 0.9).\n.decl Answer()\nAnswer() :- Has_intelligence(\"Hodor\", intelligence1), Has_intelligence(\"math mathematician\", intelligence2), intelligence1 > intelligence2.\n.output Answer\n\n"]}
{"id": 1902, "answer": false, "completion": ".decl Plays_in_movie(Person:symbol, Movie:symbol)\nPlays_in_movie(\"Keith Richards\", \"Live and Let Die\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Moh", "completions": [".decl Plays_in_movie(Person:symbol, Movie:symbol)\nPlays_in_movie(\"Keith Richards\", \"Live and Let Die\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Mohicans\").\nPlays_in_movie(\"Keith Richards\", \"The Three Musketeers\").\nPlays_in_movie(\"Keith Richards\", \"The Man with the Golden Gun\").\nPlays_in_movie(\"Keith Richards\", \"The Last of the Moh"]}
{"id": 1903, "answer": true, "completion": ".decl Rivalries(Person_A:symbol, Person_B:symbol)\nRivalries(\"Ahura Mazda\", \"Zeus\").\nRivalries(\"Zeus\", \"Ahura Mazda\").\n.decl Answer()\nAnswer() :- Rivalries(\"Ahura Mazda\", person_b), Rivalries(\"Zeus\", person_b).\n.output Answer\n\n", "completions": [".decl Rivalries(Person_A:symbol, Person_B:symbol)\nRivalries(\"Ahura Mazda\", \"Zeus\").\nRivalries(\"Zeus\", \"Ahura Mazda\").\n.decl Answer()\nAnswer() :- Rivalries(\"Ahura Mazda\", person_b), Rivalries(\"Zeus\", person_b).\n.output Answer\n\n"]}
{"id": 1904, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Tata Hexa\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members), Has_n_seats(\"Tata Hexa\", n_seats), n_members <= n_seats.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\n.decl Has_n_seats(Vehicle:symbol, N_seats:float)\nHas_n_seats(\"Tata Hexa\", 6).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members), Has_n_seats(\"Tata Hexa\", n_seats), n_members <= n_seats.\n.output Answer\n\n"]}
{"id": 1905, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Judith Sheindlin\", \"Judith Resnick\").\nHas_name(\"Judith Resnick\", \"Judith Sheindlin\").\nHas_name(\"University of Pittsburgh\", \"University of Pittsburgh\").\nHas_name(\"University of Pittsburgh\", \"University of Pennsylvania\").\nHas_name(\"University of Pennsylvania\", \"University of Pittsburgh\").\n.decl Answer()\nAnswer() :- Has_name(\"University of Pittsburgh\", university1), Has_name(\"Judith Sheindlin\", person1), Has_name(person1, university2), Has_name(university1, university2).\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Judith Sheindlin\", \"Judith Resnick\").\nHas_name(\"Judith Resnick\", \"Judith Sheindlin\").\nHas_name(\"University of Pittsburgh\", \"University of Pittsburgh\").\nHas_name(\"University of Pittsburgh\", \"University of Pennsylvania\").\nHas_name(\"University of Pennsylvania\", \"University of Pittsburgh\").\n.decl Answer()\nAnswer() :- Has_name(\"University of Pittsburgh\", university1), Has_name(\"Judith Sheindlin\", person1), Has_name(person1, university2), Has_name(university1, university2).\n.output Answer\n\n"]}
{"id": 1906, "answer": true, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Toyota Supra\", 320).\nHas_speed(\"vlog\", 0).\n.decl Answer()\nAnswer() :- Has_speed(\"Toyota Supra\", speed1), Has_speed(\"vlog\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Toyota Supra\", 320).\nHas_speed(\"vlog\", 0).\n.decl Answer()\nAnswer() :- Has_speed(\"Toyota Supra\", speed1), Has_speed(\"vlog\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 1907, "answer": false, "completion": ".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Bobby Fischer\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).", "completions": [".decl Has_rank(Person:symbol, Rank:float)\nHas_rank(\"Bobby Fischer\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8).\nHas_rank(\"Viktor Korchnoi\", 8).\nHas_rank(\"Mikhail Tal\", 8).\nHas_rank(\"Alexander Alekhine\", 8).\nHas_rank(\"Max Euwe\", 8).\nHas_rank(\"Boris Spassky\", 8).\nHas_rank(\"Larsen\", 8).\nHas_rank(\"Garry Kasparov\", 8).\nHas_rank(\"Vladimir Kramnik\", 8).\nHas_rank(\"Viswanathan Anand\", 8).\nHas_rank(\"Veselin Topalov\", 8).\nHas_rank(\"Anatoly Karpov\", 8)."]}
{"id": 1908, "answer": false, "completion": ".decl Has_monarch(Country:symbol, Monarch:symbol)\nHas_monarch(\"Canada\", \"Elizabeth II\").\n.decl Answer()\nAnswer() :- Has_monarch(\"Canada\", monarch).\n.output Answer\n\n", "completions": [".decl Has_monarch(Country:symbol, Monarch:symbol)\nHas_monarch(\"Canada\", \"Elizabeth II\").\n.decl Answer()\nAnswer() :- Has_monarch(\"Canada\", monarch).\n.output Answer\n\n"]}
{"id": 1909, "answer": false, "completion": ".decl Has_alphabet(Language:symbol, Alphabet:symbol)\nHas_alphabet(\"Old English\", \"latin\").\nHas_alphabet(\"Pict\", \"syllabary\").\n.decl Answer()\nAnswer() :- Has_alphabet(\"Pict\", alphabet), Has_alphabet(\"Old English\", alphabet).\n.output Answer\n\n", "completions": [".decl Has_alphabet(Language:symbol, Alphabet:symbol)\nHas_alphabet(\"Old English\", \"latin\").\nHas_alphabet(\"Pict\", \"syllabary\").\n.decl Answer()\nAnswer() :- Has_alphabet(\"Pict\", alphabet), Has_alphabet(\"Old English\", alphabet).\n.output Answer\n\n"]}
{"id": 1910, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Charlemagne\", 50).\n.decl Answer()\nAnswer() :- Has_age(\"Charlemagne\", age), age >= 13.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Charlemagne\", 50).\n.decl Answer()\nAnswer() :- Has_age(\"Charlemagne\", age), age >= 13.\n.output Answer\n\n"]}
{"id": 1911, "answer": false, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"dog\", \"meat\").\nEats(\"cat\", \"fish\").\nEats(\"cat\", \"meat\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"dog\", \"meat\").\nEats(\"cat\", \"fish\").\nEats(\"cat\", \"meat\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid food\").\nEats(\"cat\", \"canid"]}
{"id": 1912, "answer": false, "completion": ".decl Has_armor(Object:symbol, Armor:float)\nHas_armor(\"armadillo\", 0.1).\nHas_armor(\"Franz Ferdinand\", 0.1).\n.decl Answer()\nAnswer() :- Has_armor(\"Franz Ferdinand\", armor1), Has_armor(\"armadillo\", armor2), armor1 > armor2.\n.output Answer\n\n", "completions": [".decl Has_armor(Object:symbol, Armor:float)\nHas_armor(\"armadillo\", 0.1).\nHas_armor(\"Franz Ferdinand\", 0.1).\n.decl Answer()\nAnswer() :- Has_armor(\"Franz Ferdinand\", armor1), Has_armor(\"armadillo\", armor2), armor1 > armor2.\n.output Answer\n\n"]}
{"id": 1913, "answer": false, "completion": ".decl Origin(Food:symbol, Country:symbol)\nOrigin(\"meatballs\", \"Italy\").\nOrigin(\"meatballs\", \"Switzerland\").\nOrigin(\"meatballs\", \"Germany\").\nOrigin(\"meatballs\", \"Austria\").\nOrigin(\"meatballs\", \"France\").\nOrigin(\"meatballs\", \"Spain\").\nOrigin(\"meatballs\", \"Sweden\").\nOrigin(\"meatballs\", \"Norway\").\nOrigin(\"meatballs\", \"Denmark\").\nOrigin(\"meatballs\", \"Netherlands\").\nOrigin(\"meatballs\", \"Belgium\").\nOrigin(\"meatballs\", \"Luxembourg\").\nOrigin(\"meatballs\", \"Poland\").\nOrigin(\"meatballs\", \"Czech Republic\").\nOrigin(\"meatballs\", \"Slovakia\").\nOrigin(\"meatballs\", \"Hungary\").\nOrigin(\"meatballs\", \"Romania\").\nOrigin(\"meatballs\", \"Bulgaria\").\nOrigin(\"meatballs\", \"Croatia\").\nOrigin(\"meatballs\", \"Bosnia and Herzegovina\").\nOrigin(\"meatballs\", \"Macedonia\").\nOrigin(\"meatballs\", \"Serbia\").\nOrigin(\"meatballs\", \"Montenegro\").\nOrigin(\"meatballs\", \"Albania\").\nOrigin(\"meatballs\", \"Greece\").\nOrigin(\"meatballs\", \"Turkey\").\nOrigin(\"meatballs\", \"Armenia\").\nOrigin(\"meatballs\", \"Azerbaijan\").\nOrigin(\"meatballs\", \"Georgia\").\nOrigin(\"meatballs\", \"Kazakhstan\").\nOrigin(\"meatballs\", \"Uzbekistan\").\nOrigin(\"meatballs\", \"Kyrgyzstan\").\nOrigin(\"meatballs\", \"Tajikistan\").\nOrigin(\"meatballs\", \"Turkmenistan\").\nOrigin(\"meatballs\", \"Afghanistan\").\nOrigin(\"meatballs\", \"India\").\nOrigin(\"meatballs\", \"Pakistan\").\nOrigin(\"meatballs\", \"Bangladesh\").\nOrigin(\"meatballs\", \"Sri Lanka\").\nOrigin(\"meatballs\", \"Nepal\").\nOrigin(\"meatballs\", \"Bhutan\").\nOrigin(\"meatballs\", \"Maldives\").\nOrigin(\"meatballs\", \"Thailand\").\nOrigin(\"meatballs\", \"Cambodia\").\nOrigin(\"meatballs\", \"Vietnam\").\nOrigin(\"meatballs\", \"Laos\").\nOrigin(\"meatballs\", \"Myanmar\").\nOrigin(\"meatballs\", \"Malaysia\").\nOrigin(\"meatballs\", \"Indonesia\").\nOrigin(\"meatballs\", \"Brunei\").\nOrigin(\"meatballs\", \"East Timor\").\nOrigin(\"meatballs\", \"Philippines\").\nOrigin(\"meatballs\", \"Australia\").\nOrigin(\"meatballs\", \"New Zealand\").\nOrigin(\"meatballs\", \"Fiji\").\nOrigin(\"meatballs\", \"Solomon Islands\").\nOrigin(\"meatballs\", \"Papua New Guinea\").\nOrigin(\"meatballs\", \"Tonga\").\nOrigin(\"meatballs\", \"Vanuatu\").\nOrigin(\"meatballs\", \"Guam\").\nOrigin(\"meatballs\", \"Kiribati\").\nOrigin(\"meatballs\", \"Marshall Islands\").\nOrigin(\"meatballs\", \"Micronesia\").\nOrigin(\"meatballs\", \"Nauru\").\nOrigin(\"meatballs\", \"Northern Mariana Islands\").\nOrigin(\"meatballs\", \"Palau\").\nOrigin(\"meatballs\", \"Wake Island\").\nOrigin(\"meatballs\", \"Samoa\").\nOrigin(\"meatballs\", \"Tokelau\").\nOrigin(\"meatballs\", \"Cook Islands\").\nOrigin(\"meatballs\", \"Niue\").\nOrigin(\"meatballs\", \"American Samoa\").\nOrigin(\"meatballs\", \"Wallis and Futuna\").\n", "completions": [".decl Origin(Food:symbol, Country:symbol)\nOrigin(\"meatballs\", \"Italy\").\nOrigin(\"meatballs\", \"Switzerland\").\nOrigin(\"meatballs\", \"Germany\").\nOrigin(\"meatballs\", \"Austria\").\nOrigin(\"meatballs\", \"France\").\nOrigin(\"meatballs\", \"Spain\").\nOrigin(\"meatballs\", \"Sweden\").\nOrigin(\"meatballs\", \"Norway\").\nOrigin(\"meatballs\", \"Denmark\").\nOrigin(\"meatballs\", \"Netherlands\").\nOrigin(\"meatballs\", \"Belgium\").\nOrigin(\"meatballs\", \"Luxembourg\").\nOrigin(\"meatballs\", \"Poland\").\nOrigin(\"meatballs\", \"Czech Republic\").\nOrigin(\"meatballs\", \"Slovakia\").\nOrigin(\"meatballs\", \"Hungary\").\nOrigin(\"meatballs\", \"Romania\").\nOrigin(\"meatballs\", \"Bulgaria\").\nOrigin(\"meatballs\", \"Croatia\").\nOrigin(\"meatballs\", \"Bosnia and Herzegovina\").\nOrigin(\"meatballs\", \"Macedonia\").\nOrigin(\"meatballs\", \"Serbia\").\nOrigin(\"meatballs\", \"Montenegro\").\nOrigin(\"meatballs\", \"Albania\").\nOrigin(\"meatballs\", \"Greece\").\nOrigin(\"meatballs\", \"Turkey\").\nOrigin(\"meatballs\", \"Armenia\").\nOrigin(\"meatballs\", \"Azerbaijan\").\nOrigin(\"meatballs\", \"Georgia\").\nOrigin(\"meatballs\", \"Kazakhstan\").\nOrigin(\"meatballs\", \"Uzbekistan\").\nOrigin(\"meatballs\", \"Kyrgyzstan\").\nOrigin(\"meatballs\", \"Tajikistan\").\nOrigin(\"meatballs\", \"Turkmenistan\").\nOrigin(\"meatballs\", \"Afghanistan\").\nOrigin(\"meatballs\", \"India\").\nOrigin(\"meatballs\", \"Pakistan\").\nOrigin(\"meatballs\", \"Bangladesh\").\nOrigin(\"meatballs\", \"Sri Lanka\").\nOrigin(\"meatballs\", \"Nepal\").\nOrigin(\"meatballs\", \"Bhutan\").\nOrigin(\"meatballs\", \"Maldives\").\nOrigin(\"meatballs\", \"Thailand\").\nOrigin(\"meatballs\", \"Cambodia\").\nOrigin(\"meatballs\", \"Vietnam\").\nOrigin(\"meatballs\", \"Laos\").\nOrigin(\"meatballs\", \"Myanmar\").\nOrigin(\"meatballs\", \"Malaysia\").\nOrigin(\"meatballs\", \"Indonesia\").\nOrigin(\"meatballs\", \"Brunei\").\nOrigin(\"meatballs\", \"East Timor\").\nOrigin(\"meatballs\", \"Philippines\").\nOrigin(\"meatballs\", \"Australia\").\nOrigin(\"meatballs\", \"New Zealand\").\nOrigin(\"meatballs\", \"Fiji\").\nOrigin(\"meatballs\", \"Solomon Islands\").\nOrigin(\"meatballs\", \"Papua New Guinea\").\nOrigin(\"meatballs\", \"Tonga\").\nOrigin(\"meatballs\", \"Vanuatu\").\nOrigin(\"meatballs\", \"Guam\").\nOrigin(\"meatballs\", \"Kiribati\").\nOrigin(\"meatballs\", \"Marshall Islands\").\nOrigin(\"meatballs\", \"Micronesia\").\nOrigin(\"meatballs\", \"Nauru\").\nOrigin(\"meatballs\", \"Northern Mariana Islands\").\nOrigin(\"meatballs\", \"Palau\").\nOrigin(\"meatballs\", \"Wake Island\").\nOrigin(\"meatballs\", \"Samoa\").\nOrigin(\"meatballs\", \"Tokelau\").\nOrigin(\"meatballs\", \"Cook Islands\").\nOrigin(\"meatballs\", \"Niue\").\nOrigin(\"meatballs\", \"American Samoa\").\nOrigin(\"meatballs\", \"Wallis and Futuna\").\n"]}
{"id": 1914, "answer": true, "completion": ".decl Has_length(Bone:symbol, Length:float)\nHas_length(\"torso\", 10).\nHas_length(\"smallest bone\", 0.1).\nHas_length(\"largest bone\", 1).\n.decl Answer()\nAnswer() :- Has_length(\"torso\", length1), Has_length(\"smallest bone\", length2), Has_length(\"largest bone\", length3), length1 > length2, length1 > length3.\n.output Answer\n\n", "completions": [".decl Has_length(Bone:symbol, Length:float)\nHas_length(\"torso\", 10).\nHas_length(\"smallest bone\", 0.1).\nHas_length(\"largest bone\", 1).\n.decl Answer()\nAnswer() :- Has_length(\"torso\", length1), Has_length(\"smallest bone\", length2), Has_length(\"largest bone\", length3), length1 > length2, length1 > length3.\n.output Answer\n\n"]}
{"id": 1915, "answer": false, "completion": ".decl Has_upload_speed(Provider:symbol, Upload_speed:float)\nHas_upload_speed(\"Centurylink\", 1000).\n.decl Has_download_speed(Provider:symbol, Download_speed:float)\nHas_download_speed(\"Centurylink\", 1000).\n.decl Has_monthly_cost(Provider:symbol, Monthly_cost:float)\nHas_monthly_cost(\"Centurylink\", 50).\n.decl Answer()\nAnswer() :- Has_upload_speed(\"Centurylink\", upload_speed), Has_download_speed(\"Centurylink\", download_speed), Has_monthly_cost(\"Centurylink\", monthly_cost), upload_speed * 14 > download_speed * monthly_cost.\n.output Answer\n\n", "completions": [".decl Has_upload_speed(Provider:symbol, Upload_speed:float)\nHas_upload_speed(\"Centurylink\", 1000).\n.decl Has_download_speed(Provider:symbol, Download_speed:float)\nHas_download_speed(\"Centurylink\", 1000).\n.decl Has_monthly_cost(Provider:symbol, Monthly_cost:float)\nHas_monthly_cost(\"Centurylink\", 50).\n.decl Answer()\nAnswer() :- Has_upload_speed(\"Centurylink\", upload_speed), Has_download_speed(\"Centurylink\", download_speed), Has_monthly_cost(\"Centurylink\", monthly_cost), upload_speed * 14 > download_speed * monthly_cost.\n.output Answer\n\n"]}
{"id": 1916, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Theodor Seuss Geisel\", \"green\").\nHas_color(\"Theodor Seuss Geisel\", \"blue\").\nHas_color(\"Theodor Seuss Geisel\", \"yellow\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Theodor Seuss Geisel\", \"Dr. Seuss\").\nHas_name(\"Theodor Seuss Geisel\", \"Ted\").\nHas_name(\"Theodor Seuss Geisel\", \"Theodor\").\n.decl Answer()\nAnswer() :- Has_color(\"Theodor Seuss Geisel\", color), Has_name(\"Theodor Seuss Geisel\", name), color = \"green\", name = \"Ted\".\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Theodor Seuss Geisel\", \"green\").\nHas_color(\"Theodor Seuss Geisel\", \"blue\").\nHas_color(\"Theodor Seuss Geisel\", \"yellow\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Theodor Seuss Geisel\", \"Dr. Seuss\").\nHas_name(\"Theodor Seuss Geisel\", \"Ted\").\nHas_name(\"Theodor Seuss Geisel\", \"Theodor\").\n.decl Answer()\nAnswer() :- Has_color(\"Theodor Seuss Geisel\", color), Has_name(\"Theodor Seuss Geisel\", name), color = \"green\", name = \"Ted\".\n.output Answer\n\n"]}
{"id": 1917, "answer": false, "completion": ".decl Located_on_island(Location:symbol)\nLocated_on_island(\"Central Park Zoo\").\n.decl Answer()\nAnswer() :- Located_on_island(\"Central Park Zoo\").\n.output Answer\n\n", "completions": [".decl Located_on_island(Location:symbol)\nLocated_on_island(\"Central Park Zoo\").\n.decl Answer()\nAnswer() :- Located_on_island(\"Central Park Zoo\").\n.output Answer\n\n"]}
{"id": 1918, "answer": false, "completion": ".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Answer()\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.output Answer\n\n", "completions": [".decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.decl Answer()\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\nAnswer() :- Has_disease(\"Brooke Shields\", \"Herpes simplex virus\").\n.output Answer\n\n"]}
{"id": 1919, "answer": true, "completion": ".decl Has_capital(State:symbol, Capital:symbol)\nHas_capital(\"Guam\", \"Agana\").\n.decl Answer()\nAnswer() :- Has_capital(\"Guam\", capital).\n.output Answer\n\n", "completions": [".decl Has_capital(State:symbol, Capital:symbol)\nHas_capital(\"Guam\", \"Agana\").\n.decl Answer()\nAnswer() :- Has_capital(\"Guam\", capital).\n.output Answer\n\n"]}
{"id": 1920, "answer": false, "completion": ".decl Has_n_lines(Poem:symbol, N_lines:float)\nHas_n_lines(\"Jabberwocky\", 14).\n.decl Has_n_words(Poem:symbol, N_words:float)\nHas_n_words(\"Jabberwocky\", 10).\n.decl Answer()\nAnswer() :- Has_n_lines(\"Jabberwocky\", n_lines), Has_n_words(\"Jabberwocky\", n_words), n_lines == n_words.\n.output Answer\n\n", "completions": [".decl Has_n_lines(Poem:symbol, N_lines:float)\nHas_n_lines(\"Jabberwocky\", 14).\n.decl Has_n_words(Poem:symbol, N_words:float)\nHas_n_words(\"Jabberwocky\", 10).\n.decl Answer()\nAnswer() :- Has_n_lines(\"Jabberwocky\", n_lines), Has_n_words(\"Jabberwocky\", n_words), n_lines == n_words.\n.output Answer\n\n"]}
{"id": 1921, "answer": true, "completion": ".decl Is_in(Object:symbol, Place:symbol)\nIs_in(\"Saladin\", \"circle of lust\").\nIs_in(\"Dante\", \"circle of lust\").\nIs_in(\"Dante\", \"Inferno\").\n.decl Answer()\nAnswer() :- Is_in(\"Dante\", \"circle of lust\"), Is_in(\"Saladin\", \"circle of lust\"), Is_in(\"Dante\", \"Inferno\").\n.output Answer\n\n", "completions": [".decl Is_in(Object:symbol, Place:symbol)\nIs_in(\"Saladin\", \"circle of lust\").\nIs_in(\"Dante\", \"circle of lust\").\nIs_in(\"Dante\", \"Inferno\").\n.decl Answer()\nAnswer() :- Is_in(\"Dante\", \"circle of lust\"), Is_in(\"Saladin\", \"circle of lust\"), Is_in(\"Dante\", \"Inferno\").\n.output Answer\n\n"]}
{"id": 1922, "answer": false, "completion": ".decl Has_pressure(Object:symbol, Pressure:float)\nHas_pressure(\"gunpowder\", 0.1).\nHas_pressure(\"explosion\", 0.1).\n.decl Answer()\nAnswer() :- Has_pressure(\"gunpowder\", pressure1), Has_pressure(\"explosion\", pressure2), pressure1 > pressure2.\n.output Answer\n\n", "completions": [".decl Has_pressure(Object:symbol, Pressure:float)\nHas_pressure(\"gunpowder\", 0.1).\nHas_pressure(\"explosion\", 0.1).\n.decl Answer()\nAnswer() :- Has_pressure(\"gunpowder\", pressure1), Has_pressure(\"explosion\", pressure2), pressure1 > pressure2.\n.output Answer\n\n"]}
{"id": 1923, "answer": true, "completion": ".decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"New Years Eve\", \"midnight\").\nHappens_at_time(\"people in diapers\", \"midnight\").\n.decl Answer()\nAnswer() :- Happens_at_time(\"people in diapers\", time), Happens_at_time(\"New Years Eve\", time).\n.output Answer\n\n", "completions": [".decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"New Years Eve\", \"midnight\").\nHappens_at_time(\"people in diapers\", \"midnight\").\n.decl Answer()\nAnswer() :- Happens_at_time(\"people in diapers\", time), Happens_at_time(\"New Years Eve\", time).\n.output Answer\n\n"]}
{"id": 1924, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"NASCAR events\", \"January\").\nHappens_in_time(\"NASCAR events\", \"February\").\nHappens_in_time(\"NASCAR events\", \"March\").\nHappens_in_time(\"NASCAR events\", \"April\").\nHappens_in_time(\"NASCAR events\", \"May\").\nHappens_in_time(\"NASCAR events\", \"June\").\nHappens_in_time(\"NASCAR events\", \"July\").\nHappens_in_time(\"NASCAR events\", \"August\").\nHappens_in_time(\"NASCAR events\", \"September\").\nHappens_in_time(\"NASCAR events\", \"October\").\nHappens_in_time(\"NASCAR events\", \"November\").\nHappens_in_time(\"NASCAR events\", \"December\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Richard Petty\", \"NASCAR driver\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"NASCAR events\", time), Has_job(\"Richard Petty\", job), Happens_in_time(job, time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"NASCAR events\", \"January\").\nHappens_in_time(\"NASCAR events\", \"February\").\nHappens_in_time(\"NASCAR events\", \"March\").\nHappens_in_time(\"NASCAR events\", \"April\").\nHappens_in_time(\"NASCAR events\", \"May\").\nHappens_in_time(\"NASCAR events\", \"June\").\nHappens_in_time(\"NASCAR events\", \"July\").\nHappens_in_time(\"NASCAR events\", \"August\").\nHappens_in_time(\"NASCAR events\", \"September\").\nHappens_in_time(\"NASCAR events\", \"October\").\nHappens_in_time(\"NASCAR events\", \"November\").\nHappens_in_time(\"NASCAR events\", \"December\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Richard Petty\", \"NASCAR driver\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\nHas_job(\"Richard Petty\", \"NASCAR team owner\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"NASCAR events\", time), Has_job(\"Richard Petty\", job), Happens_in_time(job, time).\n.output Answer\n\n"]}
{"id": 1925, "answer": false, "completion": ".decl Has_hair(Object:symbol, Hair:symbol)\nHas_hair(\"human\", \"beard\").\nHas_hair(\"human\", \"moustache\").\nHas_hair(\"human\", \"mustache\").\n.decl Has_hair(Object:symbol, Hair:symbol)\nHas_hair(\"human\", \"moss\").\n.decl Answer()\nAnswer() :- Has_hair(\"human\", hair1), Has_hair(\"human\", hair2), hair1 = hair2.\n.output Answer\n\n", "completions": [".decl Has_hair(Object:symbol, Hair:symbol)\nHas_hair(\"human\", \"beard\").\nHas_hair(\"human\", \"moustache\").\nHas_hair(\"human\", \"mustache\").\n.decl Has_hair(Object:symbol, Hair:symbol)\nHas_hair(\"human\", \"moss\").\n.decl Answer()\nAnswer() :- Has_hair(\"human\", hair1), Has_hair(\"human\", hair2), hair1 = hair2.\n.output Answer\n\n"]}
{"id": 1926, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"lemon\", \"tart\").\nHas_property(\"lemon\", \"sour\").\nHas_property(\"lemon\", \"bitter\").\nHas_property(\"lemon\", \"sweet\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"dyspepsia\", \"sour\").\nHas_property(\"dyspepsia\", \"bitter\").\n.decl Answer()\nAnswer() :- Has_property(\"lemon\", property1), Has_property(\"dyspepsia\", property2), property1 = property2.\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"lemon\", \"tart\").\nHas_property(\"lemon\", \"sour\").\nHas_property(\"lemon\", \"bitter\").\nHas_property(\"lemon\", \"sweet\").\n.decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"dyspepsia\", \"sour\").\nHas_property(\"dyspepsia\", \"bitter\").\n.decl Answer()\nAnswer() :- Has_property(\"lemon\", property1), Has_property(\"dyspepsia\", property2), property1 = property2.\n.output Answer\n\n"]}
{"id": 1927, "answer": true, "completion": ".decl Listens_to(Person:symbol, Genre:symbol)\nListens_to(\"Beethoven\", \"classical music\").\nListens_to(\"Beethoven\", \"EDM\").\n.decl Answer()\nAnswer() :- Listens_to(\"Beethoven\", genre), genre = \"EDM\".\n.output Answer\n\n", "completions": [".decl Listens_to(Person:symbol, Genre:symbol)\nListens_to(\"Beethoven\", \"classical music\").\nListens_to(\"Beethoven\", \"EDM\").\n.decl Answer()\nAnswer() :- Listens_to(\"Beethoven\", genre), genre = \"EDM\".\n.output Answer\n\n"]}
{"id": 1928, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Solanum melongena\", \"eggplant\").\nHas_name(\"Mumbai\", \"Bombay\").\n.decl Answer()\nAnswer() :- Has_name(\"Solanum melongena\", name), Has_name(\"Mumbai\", name).\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Solanum melongena\", \"eggplant\").\nHas_name(\"Mumbai\", \"Bombay\").\n.decl Answer()\nAnswer() :- Has_name(\"Solanum melongena\", name), Has_name(\"Mumbai\", name).\n.output Answer\n\n"]}
{"id": 1929, "answer": true, "completion": ".decl Was_president_of(Person:symbol, Country:symbol)\nWas_president_of(\"Woodrow Wilson\", \"United States of America\").\n.decl Was_president_of(Person:symbol, Country:symbol)\nWas_president_of(\"John F. Kennedy\", \"United States of America\").\n.decl Answer()\nAnswer() :- Was_president_of(\"Woodrow Wilson\", country), Was_president_of(\"John F. Kennedy\", country), country != \"United States of America\".\n.output Answer\n\n", "completions": [".decl Was_president_of(Person:symbol, Country:symbol)\nWas_president_of(\"Woodrow Wilson\", \"United States of America\").\n.decl Was_president_of(Person:symbol, Country:symbol)\nWas_president_of(\"John F. Kennedy\", \"United States of America\").\n.decl Answer()\nAnswer() :- Was_president_of(\"Woodrow Wilson\", country), Was_president_of(\"John F. Kennedy\", country), country != \"United States of America\".\n.output Answer\n\n"]}
{"id": 1930, "answer": true, "completion": ".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Krishna\", \"using the bow\").\n.decl Answer()\nAnswer() :- Has_skill(\"Krishna\", skill).\n.output Answer\n\n", "completions": [".decl Has_skill(Person:symbol, Skill:symbol)\nHas_skill(\"Krishna\", \"using the bow\").\n.decl Answer()\nAnswer() :- Has_skill(\"Krishna\", skill).\n.output Answer\n\n"]}
{"id": 1931, "answer": true, "completion": ".decl Has_body_weight(Animal:symbol, Body_weight:float)\nHas_body_weight(\"snow leopard\", 12).\n.decl Has_daily_food_requirement(Animal:symbol, Daily_food_requirement:float)\nHas_daily_food_requirement(\"snow leopard\", 2).\n.decl Answer()\nAnswer() :- Has_body_weight(\"snow leopard\", body_weight), Has_daily_food_requirement(\"snow leopard\", daily_food_requirement), body_weight * 2 > daily_food_requirement.\n.output Answer\n\n", "completions": [".decl Has_body_weight(Animal:symbol, Body_weight:float)\nHas_body_weight(\"snow leopard\", 12).\n.decl Has_daily_food_requirement(Animal:symbol, Daily_food_requirement:float)\nHas_daily_food_requirement(\"snow leopard\", 2).\n.decl Answer()\nAnswer() :- Has_body_weight(\"snow leopard\", body_weight), Has_daily_food_requirement(\"snow leopard\", daily_food_requirement), body_weight * 2 > daily_food_requirement.\n.output Answer\n\n"]}
{"id": 1932, "answer": false, "completion": ".decl Is_anxious(Person:symbol)\nIs_anxious(\"Charla Nash\").\n.decl Is_a_gorilla(Animal:symbol)\nIs_a_gorilla(\"gorilla\").\n.decl Answer()\nAnswer() :- Is_anxious(\"Charla Nash\"), Is_a_gorilla(\"gorilla\").\n.output Answer\n\n", "completions": [".decl Is_anxious(Person:symbol)\nIs_anxious(\"Charla Nash\").\n.decl Is_a_gorilla(Animal:symbol)\nIs_a_gorilla(\"gorilla\").\n.decl Answer()\nAnswer() :- Is_anxious(\"Charla Nash\"), Is_a_gorilla(\"gorilla\").\n.output Answer\n\n"]}
{"id": 1933, "answer": false, "completion": ".decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").", "completions": [".decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\").\nPlays_instrument(\"Jimi Hendrix\", \"guitar\")."]}
{"id": 1934, "answer": true, "completion": ".decl Has_actor(Movie:symbol, Actor:symbol)\nHas_actor(\"The Godfather\", \"Al Pacino\").\nHas_actor(\"The Godfather\", \"Marlon Brando\").\nHas_actor(\"The Godfather\", \"James Caan\").\nHas_actor(\"The Godfather\", \"Richard S. Castellano\").\nHas_actor(\"The Godfather\", \"Robert Duvall\").\nHas_actor(\"The Godfather\", \"Sterling Hayden\").\nHas_actor(\"The Godfather\", \"John Marley\").\nHas_actor(\"The Godfather\", \"Richard Conte\").\nHas_actor(\"The Godfather\", \"Al Lettieri\").\nHas_actor(\"The Godfather\", \"Diane Keaton\").\nHas_actor(\"The Godfather\", \"Abel Ferrara\").\nHas_actor(\"The Godfather\", \"G.D. Spradlin\").\nHas_actor(\"The Godfather\", \"Tom Rosqui\").\nHas_actor(\"The Godfather\", \"Rudy Bond\").\nHas_actor(\"The Godfather\", \"Gianni Russo\").\nHas_actor(\"The Godfather\", \"Talia Shire\").\nHas_actor(\"The Godfather\", \"Bruno Kirby\").\nHas_actor(\"The Godfather\", \"Frank Sivero\").\nHas_actor(\"The Godfather\", \"Francesca De Sapio\").\nHas_actor(\"The Godfather\", \"John Savage\").\nHas_actor(\"The Godfather\", \"Al Martino\").\nHas_actor(\"The Godfather\", \"Dean Martin\").\nHas_actor(\"The Godfather\", \"Jerry Paris\").\nHas_actor(\"The Godfather\", \"Sonny Corleone\").\nHas_actor(\"The Godfather\", \"Michael V. Gazzo\").\nHas_actor(\"The Godfather\", \"Burt Sivero\").\nHas_actor(\"The Godfather\", \"Frank Sinatra\").\nHas_actor(\"The Godfather\", \"Antonio Inigo\").\nHas_actor(\"The Godfather\", \"Tom Hagen\").\nHas_actor(\"The Godfather\", \"Kay Adams\").\nHas_actor(\"The Godfather\", \"Dorothy Comingore\").\nHas_actor(\"The Godfather\", \"John Marley\").\nHas_actor(\"The Godfather\", \"Richard Conte\").\nHas_actor(\"The Godfather\", \"Al Lettieri\").\nHas_actor(\"The Godfather\", \"Diane Keaton\").\nHas_actor(\"The Godfather\", \"Abel Ferrara\").\nHas_actor(\"The Godfather\", \"G.D. Spradlin\").\nHas_actor(\"The Godfather\", \"Tom Rosqui\").\nHas_actor(\"The Godfather\", \"Rudy Bond\").\nHas_actor(\"The Godfather\", \"Gianni Russo\").\nHas_actor(\"The Godfather\", \"Talia Shire\").\nHas_actor(\"The Godfather\", \"Bruno Kirby\").\nHas_actor(\"The Godfather\", \"Frank Sivero\").\nHas_actor(\"The Godfather\", \"Francesca De Sapio\").\nHas_actor(\"The Godfather\", \"John Savage\").\nHas_actor(\"The Godfather\", \"Al Martino\").\nHas_actor(\"The Godfather\", \"Dean Martin\").\nHas_actor(\"The Godfather\", \"Jerry Paris\").\nHas_actor(\"The Godfather\", \"Sonny Corleone\").\nHas_actor(\"The Godfather\", \"Michael V. Gazzo\").\nHas_actor(\"The Godfather\", \"Burt Sivero\").\nHas_actor(\"The Godfather\", \"Frank Sinatra\").\nHas_actor(\"", "completions": [".decl Has_actor(Movie:symbol, Actor:symbol)\nHas_actor(\"The Godfather\", \"Al Pacino\").\nHas_actor(\"The Godfather\", \"Marlon Brando\").\nHas_actor(\"The Godfather\", \"James Caan\").\nHas_actor(\"The Godfather\", \"Richard S. Castellano\").\nHas_actor(\"The Godfather\", \"Robert Duvall\").\nHas_actor(\"The Godfather\", \"Sterling Hayden\").\nHas_actor(\"The Godfather\", \"John Marley\").\nHas_actor(\"The Godfather\", \"Richard Conte\").\nHas_actor(\"The Godfather\", \"Al Lettieri\").\nHas_actor(\"The Godfather\", \"Diane Keaton\").\nHas_actor(\"The Godfather\", \"Abel Ferrara\").\nHas_actor(\"The Godfather\", \"G.D. Spradlin\").\nHas_actor(\"The Godfather\", \"Tom Rosqui\").\nHas_actor(\"The Godfather\", \"Rudy Bond\").\nHas_actor(\"The Godfather\", \"Gianni Russo\").\nHas_actor(\"The Godfather\", \"Talia Shire\").\nHas_actor(\"The Godfather\", \"Bruno Kirby\").\nHas_actor(\"The Godfather\", \"Frank Sivero\").\nHas_actor(\"The Godfather\", \"Francesca De Sapio\").\nHas_actor(\"The Godfather\", \"John Savage\").\nHas_actor(\"The Godfather\", \"Al Martino\").\nHas_actor(\"The Godfather\", \"Dean Martin\").\nHas_actor(\"The Godfather\", \"Jerry Paris\").\nHas_actor(\"The Godfather\", \"Sonny Corleone\").\nHas_actor(\"The Godfather\", \"Michael V. Gazzo\").\nHas_actor(\"The Godfather\", \"Burt Sivero\").\nHas_actor(\"The Godfather\", \"Frank Sinatra\").\nHas_actor(\"The Godfather\", \"Antonio Inigo\").\nHas_actor(\"The Godfather\", \"Tom Hagen\").\nHas_actor(\"The Godfather\", \"Kay Adams\").\nHas_actor(\"The Godfather\", \"Dorothy Comingore\").\nHas_actor(\"The Godfather\", \"John Marley\").\nHas_actor(\"The Godfather\", \"Richard Conte\").\nHas_actor(\"The Godfather\", \"Al Lettieri\").\nHas_actor(\"The Godfather\", \"Diane Keaton\").\nHas_actor(\"The Godfather\", \"Abel Ferrara\").\nHas_actor(\"The Godfather\", \"G.D. Spradlin\").\nHas_actor(\"The Godfather\", \"Tom Rosqui\").\nHas_actor(\"The Godfather\", \"Rudy Bond\").\nHas_actor(\"The Godfather\", \"Gianni Russo\").\nHas_actor(\"The Godfather\", \"Talia Shire\").\nHas_actor(\"The Godfather\", \"Bruno Kirby\").\nHas_actor(\"The Godfather\", \"Frank Sivero\").\nHas_actor(\"The Godfather\", \"Francesca De Sapio\").\nHas_actor(\"The Godfather\", \"John Savage\").\nHas_actor(\"The Godfather\", \"Al Martino\").\nHas_actor(\"The Godfather\", \"Dean Martin\").\nHas_actor(\"The Godfather\", \"Jerry Paris\").\nHas_actor(\"The Godfather\", \"Sonny Corleone\").\nHas_actor(\"The Godfather\", \"Michael V. Gazzo\").\nHas_actor(\"The Godfather\", \"Burt Sivero\").\nHas_actor(\"The Godfather\", \"Frank Sinatra\").\nHas_actor(\""]}
{"id": 1935, "answer": true, "completion": ".decl Plays_tennis(Person:symbol)\nPlays_tennis(\"James Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Florence Ballard\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Tina Turner\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Sheila E\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Debbie Rowe\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Caroline Rush\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Chisholm\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Fiona Appleton\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis", "completions": [".decl Plays_tennis(Person:symbol)\nPlays_tennis(\"James Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Florence Ballard\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Tina Turner\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Sheila E\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Debbie Rowe\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Caroline Rush\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Chisholm\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Fiona Appleton\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis(Person:symbol)\nPlays_tennis(\"Melanie Janine Brown\").\n.decl Plays_tennis"]}
{"id": 1936, "answer": false, "completion": ".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"Robert De Niro\", \"microscope\").\n.decl Works_with(Person:symbol, Tool:symbol)\nWorks_with(\"Robert De Niro\", \"microscope\").\n.decl Answer()\nAnswer() :- Has_property(\"Robert De Niro\", property), Works_with(\"Robert De Niro\", tool), property == tool.\n.output Answer\n\n", "completions": [".decl Has_property(Person:symbol, Property:symbol)\nHas_property(\"Robert De Niro\", \"microscope\").\n.decl Works_with(Person:symbol, Tool:symbol)\nWorks_with(\"Robert De Niro\", \"microscope\").\n.decl Answer()\nAnswer() :- Has_property(\"Robert De Niro\", property), Works_with(\"Robert De Niro\", tool), property == tool.\n.output Answer\n\n"]}
{"id": 1937, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Imams Reza Shah\", 8).\nHas_n_members(\"Jesus's disciples\", 12).\n.decl Answer()\nAnswer() :- Has_n_members(\"Imams Reza Shah\", n_members1), Has_n_members(\"Jesus's disciples\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Imams Reza Shah\", 8).\nHas_n_members(\"Jesus's disciples\", 12).\n.decl Answer()\nAnswer() :- Has_n_members(\"Imams Reza Shah\", n_members1), Has_n_members(\"Jesus's disciples\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1938, "answer": true, "completion": ".decl Inhibits(Substance:symbol, Process:symbol)\nInhibits(\"chlorine\", \"photosynthesis\").\n.decl Answer()\nAnswer() :- Inhibits(\"chlorine\", process).\n.output Answer\n\n", "completions": [".decl Inhibits(Substance:symbol, Process:symbol)\nInhibits(\"chlorine\", \"photosynthesis\").\n.decl Answer()\nAnswer() :- Inhibits(\"chlorine\", process).\n.output Answer\n\n"]}
{"id": 1939, "answer": false, "completion": ".decl Popular(Sport:symbol, Location:symbol)\nPopular(\"surfing\", \"Hawaii\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\",", "completions": [".decl Popular(Sport:symbol, Location:symbol)\nPopular(\"surfing\", \"Hawaii\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\", \"Cocoa Beach\").\nPopular(\"surfing\","]}
{"id": 1940, "answer": false, "completion": ".decl Fought(Person_A:symbol, Person_B:symbol)\nFought(\"Sugar Ray Robinson\", \"Canelo Alvarez\").\n.decl Won(Person:symbol)\nWon(\"Sugar Ray Robinson\").\n.decl Answer()\nAnswer() :- Fought(\"Sugar Ray Robinson\", person), Won(person).\n.output Answer\n\n", "completions": [".decl Fought(Person_A:symbol, Person_B:symbol)\nFought(\"Sugar Ray Robinson\", \"Canelo Alvarez\").\n.decl Won(Person:symbol)\nWon(\"Sugar Ray Robinson\").\n.decl Answer()\nAnswer() :- Fought(\"Sugar Ray Robinson\", person), Won(person).\n.output Answer\n\n"]}
{"id": 1941, "answer": true, "completion": ".decl Has_temperature(Location:symbol, Temperature:float)\nHas_temperature(\"Antarctic Peninsula\", -5).\nHas_temperature(\"Antarctic Peninsula\", -10).\nHas_temperature(\"Antarctic Peninsula\", -15).\nHas_temperature(\"Antarctic Peninsula\", -20).\nHas_temperature(\"Antarctic Peninsula\", -25).\nHas_temperature(\"Antarctic Peninsula\", -30).\nHas_temperature(\"Antarctic Peninsula\", -35).\nHas_temperature(\"Antarctic Peninsula\", -40).\nHas_temperature(\"Antarctic Peninsula\", -45).\nHas_temperature(\"Antarctic Peninsula\", -50).\nHas_temperature(\"Antarctic Peninsula\", -55).\nHas_temperature(\"Antarctic Peninsula\", -60).\nHas_temperature(\"Antarctic Peninsula\", -65).\nHas_temperature(\"Antarctic Peninsula\", -70).\nHas_temperature(\"Antarctic Peninsula\", -75).\n.decl Answer()\nAnswer() :- Has_temperature(\"Antarctic Peninsula\", temperature), temperature > -75.\n.output Answer\n\n", "completions": [".decl Has_temperature(Location:symbol, Temperature:float)\nHas_temperature(\"Antarctic Peninsula\", -5).\nHas_temperature(\"Antarctic Peninsula\", -10).\nHas_temperature(\"Antarctic Peninsula\", -15).\nHas_temperature(\"Antarctic Peninsula\", -20).\nHas_temperature(\"Antarctic Peninsula\", -25).\nHas_temperature(\"Antarctic Peninsula\", -30).\nHas_temperature(\"Antarctic Peninsula\", -35).\nHas_temperature(\"Antarctic Peninsula\", -40).\nHas_temperature(\"Antarctic Peninsula\", -45).\nHas_temperature(\"Antarctic Peninsula\", -50).\nHas_temperature(\"Antarctic Peninsula\", -55).\nHas_temperature(\"Antarctic Peninsula\", -60).\nHas_temperature(\"Antarctic Peninsula\", -65).\nHas_temperature(\"Antarctic Peninsula\", -70).\nHas_temperature(\"Antarctic Peninsula\", -75).\n.decl Answer()\nAnswer() :- Has_temperature(\"Antarctic Peninsula\", temperature), temperature > -75.\n.output Answer\n\n"]}
{"id": 1942, "answer": false, "completion": ".decl Refuses(Person:symbol, Offering:symbol)\nRefuses(\"Richard Dawkins\", \"Last rites\").\n.decl Answer()\nAnswer() :- Refuses(\"Richard Dawkins\", offering).\n.output Answer\n\n", "completions": [".decl Refuses(Person:symbol, Offering:symbol)\nRefuses(\"Richard Dawkins\", \"Last rites\").\n.decl Answer()\nAnswer() :- Refuses(\"Richard Dawkins\", offering).\n.output Answer\n\n"]}
{"id": 1943, "answer": false, "completion": ".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Richard Nixon\", 1913).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"Richard Nixon\", 1994).\n.decl Answer()\nAnswer() :- Has_birth_year(\"Richard Nixon\", birth_year), Has_death_year(\"Richard Nixon\", death_year), birth_year < 2010, 2010 < death_year.\n.output Answer\n\n", "completions": [".decl Has_birth_year(Person:symbol, Birth_year:float)\nHas_birth_year(\"Richard Nixon\", 1913).\n.decl Has_death_year(Person:symbol, Death_year:float)\nHas_death_year(\"Richard Nixon\", 1994).\n.decl Answer()\nAnswer() :- Has_birth_year(\"Richard Nixon\", birth_year), Has_death_year(\"Richard Nixon\", death_year), birth_year < 2010, 2010 < death_year.\n.output Answer\n\n"]}
{"id": 1944, "answer": false, "completion": ".decl Has_name(Character:symbol, Name:symbol)\nHas_name(\"Disney Zorro\", \"Zorro\").\n.decl Has_name(Character:symbol, Name:symbol)\nHas_name(\"Disney Zorro\", \"Zorro II\").\n.decl Answer()\nAnswer() :- Has_name(\"Disney Zorro\", name1), Has_name(\"Disney Zorro\", name2), name1 != name2.\n.output Answer\n\n", "completions": [".decl Has_name(Character:symbol, Name:symbol)\nHas_name(\"Disney Zorro\", \"Zorro\").\n.decl Has_name(Character:symbol, Name:symbol)\nHas_name(\"Disney Zorro\", \"Zorro II\").\n.decl Answer()\nAnswer() :- Has_name(\"Disney Zorro\", name1), Has_name(\"Disney Zorro\", name2), name1 != name2.\n.output Answer\n\n"]}
{"id": 1945, "answer": true, "completion": ".decl Has_profit(Object:symbol, Profit:float)\nHas_profit(\"Hobbit\", 100).\nHas_profit(\"Constitution of the United States\", 0).\n.decl Answer()\nAnswer() :- Has_profit(\"Hobbit\", profit1), Has_profit(\"Constitution of the United States\", profit2), profit1 > profit2.\n.output Answer\n\n", "completions": [".decl Has_profit(Object:symbol, Profit:float)\nHas_profit(\"Hobbit\", 100).\nHas_profit(\"Constitution of the United States\", 0).\n.decl Answer()\nAnswer() :- Has_profit(\"Hobbit\", profit1), Has_profit(\"Constitution of the United States\", profit2), profit1 > profit2.\n.output Answer\n\n"]}
{"id": 1946, "answer": true, "completion": ".decl Stars_on(Person:symbol, Show:symbol)\nStars_on(\"Xena\", \"Xena: Warrior Princess\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"X", "completions": [".decl Stars_on(Person:symbol, Show:symbol)\nStars_on(\"Xena\", \"Xena: Warrior Princess\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"Xena\", \"Young Xena\").\nStars_on(\"Xena\", \"Young Hercules\").\nStars_on(\"X"]}
{"id": 1947, "answer": true, "completion": ".decl Can_slamdunk(Player:symbol)\nCan_slamdunk(\"Shaquille O'Neal\").\nCan_slamdunk(\"Kareem Abdul-Jabbar\").\nCan_slamdunk(\"Larry Bird\").\nCan_slamdunk(\"Michael Jordan\").\nCan_slamdunk(\"Dennis Rodman\").\n.decl Answer()\nAnswer() :- Can_slamdunk(\"Shaquille O'Neal\").\nAnswer() :- Can_slamdunk(\"Kareem Abdul-Jabbar\").\nAnswer() :- Can_slamdunk(\"Larry Bird\").\nAnswer() :- Can_slamdunk(\"Michael Jordan\").\nAnswer() :- Can_slamdunk(\"Dennis Rodman\").\n.output Answer\n\n", "completions": [".decl Can_slamdunk(Player:symbol)\nCan_slamdunk(\"Shaquille O'Neal\").\nCan_slamdunk(\"Kareem Abdul-Jabbar\").\nCan_slamdunk(\"Larry Bird\").\nCan_slamdunk(\"Michael Jordan\").\nCan_slamdunk(\"Dennis Rodman\").\n.decl Answer()\nAnswer() :- Can_slamdunk(\"Shaquille O'Neal\").\nAnswer() :- Can_slamdunk(\"Kareem Abdul-Jabbar\").\nAnswer() :- Can_slamdunk(\"Larry Bird\").\nAnswer() :- Can_slamdunk(\"Michael Jordan\").\nAnswer() :- Can_slamdunk(\"Dennis Rodman\").\n.output Answer\n\n"]}
{"id": 1948, "answer": false, "completion": ".decl Has_use(Object:symbol, Use:symbol)\nHas_use(\"black widow woman\", \"poison\").\nHas_use(\"peaches\", \"food\").\n.decl Answer()\nAnswer() :- Has_use(\"black widow woman\", use), Has_use(\"peaches\", use).\n.output Answer\n\n", "completions": [".decl Has_use(Object:symbol, Use:symbol)\nHas_use(\"black widow woman\", \"poison\").\nHas_use(\"peaches\", \"food\").\n.decl Answer()\nAnswer() :- Has_use(\"black widow woman\", use), Has_use(\"peaches\", use).\n.output Answer\n\n"]}
{"id": 1949, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"red\", \"red\").\nHas_color(\"leg\", \"red\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Anorexia Nervosa\", \"Anorexia Nervosa\").\n.decl Answer()\nAnswer() :- Has_color(\"leg\", color), Has_disease(\"Anorexia Nervosa\", disease), color = disease.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"red\", \"red\").\nHas_color(\"leg\", \"red\").\n.decl Has_disease(Person:symbol, Disease:symbol)\nHas_disease(\"Anorexia Nervosa\", \"Anorexia Nervosa\").\n.decl Answer()\nAnswer() :- Has_color(\"leg\", color), Has_disease(\"Anorexia Nervosa\", disease), color = disease.\n.output Answer\n\n"]}
{"id": 1950, "answer": true, "completion": ".decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Answer()\nAnswer() :- Is_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.output Answer\n\n", "completions": [".decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Is_a_guest(Guest:symbol, Guest_for:symbol)\nIs_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.decl Answer()\nAnswer() :- Is_a_guest(\"Nine Inch Nails\", \"students in earliest grade\").\n.output Answer\n\n"]}
{"id": 1951, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Nike shoebox\", 0.1).\nHas_volume(\"swan\", 0.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Nike shoebox\", volume1), Has_volume(\"swan\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Nike shoebox\", 0.1).\nHas_volume(\"swan\", 0.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Nike shoebox\", volume1), Has_volume(\"swan\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 1952, "answer": true, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"chinchilla\", 35).\n.decl Answer()\nAnswer() :- Has_temperature(\"chinchilla\", temperature), temperature < 0.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"chinchilla\", 35).\n.decl Answer()\nAnswer() :- Has_temperature(\"chinchilla\", temperature), temperature < 0.\n.output Answer\n\n"]}
{"id": 1953, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"body builders\", 2).\nHas_n_members(\"body builders\", 3).\nHas_n_members(\"body builders\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"elk\", 1).\nHas_n_members(\"beef\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"body builders\", n_members1), Has_n_members(\"elk\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"body builders\", 2).\nHas_n_members(\"body builders\", 3).\nHas_n_members(\"body builders\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"elk\", 1).\nHas_n_members(\"beef\", 2).\n.decl Answer()\nAnswer() :- Has_n_members(\"body builders\", n_members1), Has_n_members(\"elk\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1954, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Aerosmith\", 3.5).\nHas_volume(\"2020 Mitsubishi Outlander\", 5.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Aerosmith\", volume1), Has_volume(\"2020 Mitsubishi Outlander\", volume2), volume1 <= volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Aerosmith\", 3.5).\nHas_volume(\"2020 Mitsubishi Outlander\", 5.5).\n.decl Answer()\nAnswer() :- Has_volume(\"Aerosmith\", volume1), Has_volume(\"2020 Mitsubishi Outlander\", volume2), volume1 <= volume2.\n.output Answer\n\n"]}
{"id": 1955, "answer": true, "completion": ".decl Has_been_represented_on_the_Moon(Object:symbol)\nHas_been_represented_on_the_Moon(\"Freemasonry\").\n.decl Answer()\nAnswer() :- Has_been_represented_on_the_Moon(\"Freemasonry\").\n.output Answer\n\n", "completions": [".decl Has_been_represented_on_the_Moon(Object:symbol)\nHas_been_represented_on_the_Moon(\"Freemasonry\").\n.decl Answer()\nAnswer() :- Has_been_represented_on_the_Moon(\"Freemasonry\").\n.output Answer\n\n"]}
{"id": 1956, "answer": true, "completion": ".decl Has_hair(Animal:symbol, Hair_type:symbol)\nHas_hair(\"Sphynx cat\", \"hairless\").\nHas_hair(\"llama\", \"long\").\nHas_hair(\"llama\", \"short\").\n.decl Has_hair_type(Animal:symbol, Hair_type:symbol)\nHas_hair_type(\"llama\", \"long\").\nHas_hair_type(\"llama\", \"short\").\n.decl Answer()\nAnswer() :- Has_hair(\"Sphynx cat\", hair_type), Has_hair_type(\"llama\", hair_type).\n.output Answer\n\n", "completions": [".decl Has_hair(Animal:symbol, Hair_type:symbol)\nHas_hair(\"Sphynx cat\", \"hairless\").\nHas_hair(\"llama\", \"long\").\nHas_hair(\"llama\", \"short\").\n.decl Has_hair_type(Animal:symbol, Hair_type:symbol)\nHas_hair_type(\"llama\", \"long\").\nHas_hair_type(\"llama\", \"short\").\n.decl Answer()\nAnswer() :- Has_hair(\"Sphynx cat\", hair_type), Has_hair_type(\"llama\", hair_type).\n.output Answer\n\n"]}
{"id": 1957, "answer": true, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"stork\", \"golden toad\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"golden toads\", 1).\n.decl Answer()\nAnswer() :- Eats(\"stork\", \"golden toad\"), Has_n_members(\"golden toads\", n_members), n_members > 0.\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"stork\", \"golden toad\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"golden toads\", 1).\n.decl Answer()\nAnswer() :- Eats(\"stork\", \"golden toad\"), Has_n_members(\"golden toads\", n_members), n_members > 0.\n.output Answer\n\n"]}
{"id": 1958, "answer": true, "completion": ".decl Has_insurance(Person:symbol, Insurance:symbol)\nHas_insurance(\"uninsured person\", \"no\").\nHas_insurance(\"insured person\", \"yes\").\n.decl Has_CT_scan(Person:symbol, CT_scan:symbol)\nHas_CT_scan(\"uninsured person\", \"no\").\nHas_CT_scan(\"insured person\", \"yes\").\n.decl Answer()\nAnswer() :- Has_insurance(\"uninsured person\", insurance), Has_CT_scan(\"uninsured person\", ct_scan), Has_CT_scan(\"insured person\", ct_scan), insurance == \"no\".\n.output Answer\n\n", "completions": [".decl Has_insurance(Person:symbol, Insurance:symbol)\nHas_insurance(\"uninsured person\", \"no\").\nHas_insurance(\"insured person\", \"yes\").\n.decl Has_CT_scan(Person:symbol, CT_scan:symbol)\nHas_CT_scan(\"uninsured person\", \"no\").\nHas_CT_scan(\"insured person\", \"yes\").\n.decl Answer()\nAnswer() :- Has_insurance(\"uninsured person\", insurance), Has_CT_scan(\"uninsured person\", ct_scan), Has_CT_scan(\"insured person\", ct_scan), insurance == \"no\".\n.output Answer\n\n"]}
{"id": 1959, "answer": true, "completion": ".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"spider wasp\", 8).\n.decl Answer()\nAnswer() :- Has_n_legs(\"spider wasp\", n_legs), n_legs = 8.\n.output Answer\n\n", "completions": [".decl Has_n_legs(Animal:symbol, N_legs:float)\nHas_n_legs(\"spider wasp\", 8).\n.decl Answer()\nAnswer() :- Has_n_legs(\"spider wasp\", n_legs), n_legs = 8.\n.output Answer\n\n"]}
{"id": 1960, "answer": true, "completion": ".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"brake failure\", \"broken brake\").\nHas_cause(\"broken brake\", \"broken brake arm\").\nHas_cause(\"broken brake arm\", \"broken brake arm ball bearing\").\nHas_cause(\"broken brake arm ball bearing\", \"broken brake arm ball bearing grease\").\nHas_cause(\"broken brake arm ball bearing grease\", \"broken brake arm ball bearing grease failure\").\nHas_cause(\"broken brake arm ball bearing grease failure\", \"broken brake arm ball bearing grease failure oil\").\nHas_cause(\"broken brake arm ball bearing grease failure oil\", \"broken brake arm ball bearing grease failure oil failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure\", \"broken brake arm ball bearing grease failure oil failure rust\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust\", \"broken brake arm ball bearing grease failure oil failure rust failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad failure\",", "completions": [".decl Has_cause(Event:symbol, Cause:symbol)\nHas_cause(\"brake failure\", \"broken brake\").\nHas_cause(\"broken brake\", \"broken brake arm\").\nHas_cause(\"broken brake arm\", \"broken brake arm ball bearing\").\nHas_cause(\"broken brake arm ball bearing\", \"broken brake arm ball bearing grease\").\nHas_cause(\"broken brake arm ball bearing grease\", \"broken brake arm ball bearing grease failure\").\nHas_cause(\"broken brake arm ball bearing grease failure\", \"broken brake arm ball bearing grease failure oil\").\nHas_cause(\"broken brake arm ball bearing grease failure oil\", \"broken brake arm ball bearing grease failure oil failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure\", \"broken brake arm ball bearing grease failure oil failure rust\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust\", \"broken brake arm ball bearing grease failure oil failure rust failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad\", \"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad failure\").\nHas_cause(\"broken brake arm ball bearing grease failure oil failure rust failure brake arm failure brake failure brake pad failure brake pad failure brake pad failure brake pad failure\","]}
{"id": 1961, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"McDonald's\", \"McRib\").\nEats(\"McDonald's\", \"Big Mac\").\nEats(\"McDonald's\", \"Fries\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"McDonald's\", \"McRib\").\nEats(\"McDonald's\", \"Big Mac\").\nEats(\"McDonald's\", \"Fries\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC\", \"Chicken Sandwich\").\nEats(\"KFC\", \"Popcorn Chicken\").\nEats(\"KFC\", \"Popcorn\").\nEats(\"KFC\", \"Fried Chicken\").\nEats(\"KFC\", \"Fries\").\nEats(\"KFC"]}
{"id": 1962, "answer": true, "completion": ".decl Is_white(Person:symbol)\nIs_white(\"Santa Claus\").\n.decl Is_actor(Person:symbol)\nIs_actor(\"Santa Claus\").\n.decl Answer()\nAnswer() :- Is_white(person), Is_actor(person).\n.output Answer\n\n", "completions": [".decl Is_white(Person:symbol)\nIs_white(\"Santa Claus\").\n.decl Is_actor(Person:symbol)\nIs_actor(\"Santa Claus\").\n.decl Answer()\nAnswer() :- Is_white(person), Is_actor(person).\n.output Answer\n\n"]}
{"id": 1963, "answer": true, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"John\", \"English\").\nSpeaks(\"John\", \"Japanese\").\nSpeaks(\"Mary\", \"English\").\nSpeaks(\"Mary\", \"Japanese\").\n.decl Speaks_only(Person:symbol, Language:symbol)\nSpeaks_only(\"John\", \"English\").\nSpeaks_only(\"Mary\", \"Japanese\").\n.decl Answer()\nAnswer() :- Speaks(\"John\", language), Speaks(\"Mary\", language), Speaks_only(\"John\", language), !Speaks_only(\"Mary\", language).\n.output Answer\n\n", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"John\", \"English\").\nSpeaks(\"John\", \"Japanese\").\nSpeaks(\"Mary\", \"English\").\nSpeaks(\"Mary\", \"Japanese\").\n.decl Speaks_only(Person:symbol, Language:symbol)\nSpeaks_only(\"John\", \"English\").\nSpeaks_only(\"Mary\", \"Japanese\").\n.decl Answer()\nAnswer() :- Speaks(\"John\", language), Speaks(\"Mary\", language), Speaks_only(\"John\", language), !Speaks_only(\"Mary\", language).\n.output Answer\n\n"]}
{"id": 1964, "answer": false, "completion": ".decl Owned_by(Location:symbol, Company:symbol)\nOwned_by(\"United States\", \"Aldi\").\nOwned_by(\"Germany\", \"Aldi\").\nOwned_by(\"Italy\", \"Aldi\").\nOwned_by(\"Switzerland\", \"Aldi\").\nOwned_by(\"Austria\", \"Aldi\").\nOwned_by(\"Netherlands\", \"Aldi\").\nOwned_by(\"Luxembourg\", \"Aldi\").\nOwned_by(\"Belgium\", \"Aldi\").\nOwned_by(\"France\", \"Aldi\").\nOwned_by(\"Spain\", \"Aldi\").\nOwned_by(\"Sweden\", \"Aldi\").\nOwned_by(\"Norway\", \"Aldi\").\nOwned_by(\"Denmark\", \"Aldi\").\nOwned_by(\"Finland\", \"Aldi\").\nOwned_by(\"United Kingdom\", \"Aldi\").\nOwned_by(\"Netherlands\", \"Aldi\").\nOwned_by(\"Poland\", \"Aldi\").\nOwned_by(\"Czech Republic\", \"Aldi\").\nOwned_by(\"Slovakia\", \"Aldi\").\nOwned_by(\"Hungary\", \"Aldi\").\nOwned_by(\"Romania\", \"Aldi\").\nOwned_by(\"Bulgaria\", \"Aldi\").\nOwned_by(\"Croatia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Slovenia\", \"Aldi\").\nOwned_by(\"Bosnia and Herzegovina\", \"Aldi\").\nOwned_by(\"Croatia\", \"Aldi\").\nOwned_by(\"Montenegro\", \"Aldi\").\nOwned_by(\"Albania\", \"Aldi\").\nOwned_by(\"Greece\", \"Aldi\").\nOwned_by(\"Turkey\", \"Aldi\").\nOwned_by(\"Georgia\", \"Aldi\").\nOwned_by(\"Armenia\", \"Aldi\").\nOwned_by(\"Azerbaijan\", \"Aldi\").\nOwned_by(\"Russia\", \"Aldi\").\nOwned_by(\"Ukraine\", \"Aldi\").\nOwned_by(\"Belarus\", \"Aldi\").\nOwned_by(\"Moldova\", \"Aldi\").\nOwned_by(\"Macedonia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Montenegro\", \"Aldi\").\nOwned_by(\"Bosnia and Herzegovina\", \"Aldi\").\nOwned_by(\"Albania\", \"Aldi\").\nOwned_by(\"Turkey\", \"Aldi\").\nOwned_by(\"Georgia\", \"Aldi\").\nOwned_by(\"Armenia\", \"Aldi\").\nOwned_by(\"Azerbaijan\", \"Aldi\").\nOwned_by(\"Russia\", \"Aldi\").\nOwned_by(\"Ukraine\", \"Aldi\").\nOwned_by(\"Belarus\", \"Aldi\").\nOwned_by(\"Moldova\", \"Aldi\").\nOwned_by(\"Macedonia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Montenegro\", \"", "completions": [".decl Owned_by(Location:symbol, Company:symbol)\nOwned_by(\"United States\", \"Aldi\").\nOwned_by(\"Germany\", \"Aldi\").\nOwned_by(\"Italy\", \"Aldi\").\nOwned_by(\"Switzerland\", \"Aldi\").\nOwned_by(\"Austria\", \"Aldi\").\nOwned_by(\"Netherlands\", \"Aldi\").\nOwned_by(\"Luxembourg\", \"Aldi\").\nOwned_by(\"Belgium\", \"Aldi\").\nOwned_by(\"France\", \"Aldi\").\nOwned_by(\"Spain\", \"Aldi\").\nOwned_by(\"Sweden\", \"Aldi\").\nOwned_by(\"Norway\", \"Aldi\").\nOwned_by(\"Denmark\", \"Aldi\").\nOwned_by(\"Finland\", \"Aldi\").\nOwned_by(\"United Kingdom\", \"Aldi\").\nOwned_by(\"Netherlands\", \"Aldi\").\nOwned_by(\"Poland\", \"Aldi\").\nOwned_by(\"Czech Republic\", \"Aldi\").\nOwned_by(\"Slovakia\", \"Aldi\").\nOwned_by(\"Hungary\", \"Aldi\").\nOwned_by(\"Romania\", \"Aldi\").\nOwned_by(\"Bulgaria\", \"Aldi\").\nOwned_by(\"Croatia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Slovenia\", \"Aldi\").\nOwned_by(\"Bosnia and Herzegovina\", \"Aldi\").\nOwned_by(\"Croatia\", \"Aldi\").\nOwned_by(\"Montenegro\", \"Aldi\").\nOwned_by(\"Albania\", \"Aldi\").\nOwned_by(\"Greece\", \"Aldi\").\nOwned_by(\"Turkey\", \"Aldi\").\nOwned_by(\"Georgia\", \"Aldi\").\nOwned_by(\"Armenia\", \"Aldi\").\nOwned_by(\"Azerbaijan\", \"Aldi\").\nOwned_by(\"Russia\", \"Aldi\").\nOwned_by(\"Ukraine\", \"Aldi\").\nOwned_by(\"Belarus\", \"Aldi\").\nOwned_by(\"Moldova\", \"Aldi\").\nOwned_by(\"Macedonia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Montenegro\", \"Aldi\").\nOwned_by(\"Bosnia and Herzegovina\", \"Aldi\").\nOwned_by(\"Albania\", \"Aldi\").\nOwned_by(\"Turkey\", \"Aldi\").\nOwned_by(\"Georgia\", \"Aldi\").\nOwned_by(\"Armenia\", \"Aldi\").\nOwned_by(\"Azerbaijan\", \"Aldi\").\nOwned_by(\"Russia\", \"Aldi\").\nOwned_by(\"Ukraine\", \"Aldi\").\nOwned_by(\"Belarus\", \"Aldi\").\nOwned_by(\"Moldova\", \"Aldi\").\nOwned_by(\"Macedonia\", \"Aldi\").\nOwned_by(\"Serbia\", \"Aldi\").\nOwned_by(\"Montenegro\", \""]}
{"id": 1965, "answer": true, "completion": ".decl Has_biblical_significance(Place:symbol, Significance:float)\nHas_biblical_significance(\"Red Sea\", 1).\n.decl Answer()\nAnswer() :- Has_biblical_significance(\"Red Sea\", significance).\n.output Answer\n\n", "completions": [".decl Has_biblical_significance(Place:symbol, Significance:float)\nHas_biblical_significance(\"Red Sea\", 1).\n.decl Answer()\nAnswer() :- Has_biblical_significance(\"Red Sea\", significance).\n.output Answer\n\n"]}
{"id": 1966, "answer": false, "completion": ".decl Has_n_shoes(Person:symbol, N_shoes:float)\nHas_n_shoes(\"octuplets\", 8).\nHas_n_shoes(\"octuplets\", 4).\n.decl Answer()\nAnswer() :- Has_n_shoes(\"octuplets\", n_shoes1), Has_n_shoes(\"octuplets\", n_shoes2), n_shoes1 < n_shoes2.\n.output Answer\n\n", "completions": [".decl Has_n_shoes(Person:symbol, N_shoes:float)\nHas_n_shoes(\"octuplets\", 8).\nHas_n_shoes(\"octuplets\", 4).\n.decl Answer()\nAnswer() :- Has_n_shoes(\"octuplets\", n_shoes1), Has_n_shoes(\"octuplets\", n_shoes2), n_shoes1 < n_shoes2.\n.output Answer\n\n"]}
{"id": 1967, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pope John Paul I's reign\", \"August 26, 1978\").\nHappens_in_time(\"Phileas Fogg's around the world\", \"1872\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Phileas Fogg's around the world\", time1), Happens_in_time(\"Pope John Paul I's reign\", time2), time1 > time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pope John Paul I's reign\", \"August 26, 1978\").\nHappens_in_time(\"Phileas Fogg's around the world\", \"1872\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Phileas Fogg's around the world\", time1), Happens_in_time(\"Pope John Paul I's reign\", time2), time1 > time2.\n.output Answer\n\n"]}
{"id": 1968, "answer": false, "completion": ".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"lettuce\", \"spontaneous abortion\").\n.decl Answer()\nAnswer() :- Has_effect(\"lettuce\", effect).\n.output Answer\n\n", "completions": [".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"lettuce\", \"spontaneous abortion\").\n.decl Answer()\nAnswer() :- Has_effect(\"lettuce\", effect).\n.output Answer\n\n"]}
{"id": 1969, "answer": true, "completion": ".decl Works_during(Person:symbol, Event:symbol)\nWorks_during(\"software engineer\", \"power outage\").\n.decl Happens_during(Event:symbol, Time:symbol)\nHappens_during(\"power outage\", \"night\").\n.decl Answer()\nAnswer() :- Works_during(\"software engineer\", event), Happens_during(event, time), time != \"night\".\n.output Answer\n\n", "completions": [".decl Works_during(Person:symbol, Event:symbol)\nWorks_during(\"software engineer\", \"power outage\").\n.decl Happens_during(Event:symbol, Time:symbol)\nHappens_during(\"power outage\", \"night\").\n.decl Answer()\nAnswer() :- Works_during(\"software engineer\", event), Happens_during(event, time), time != \"night\".\n.output Answer\n\n"]}
{"id": 1970, "answer": true, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"human\", \"hyena\").\nEats(\"human\", \"vegan\").\nEats(\"hyena\", \"vegan\").\n.decl Answer()\nAnswer() :- Eats(\"human\", \"vegan\").\n.output Answer\n\n", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"human\", \"hyena\").\nEats(\"human\", \"vegan\").\nEats(\"hyena\", \"vegan\").\n.decl Answer()\nAnswer() :- Eats(\"human\", \"vegan\").\n.output Answer\n\n"]}
{"id": 1971, "answer": false, "completion": ".decl Has_health(Animal:symbol, Health:float)\nHas_health(\"leopard seal\", 0.5).\nHas_health(\"Sea World\", 0.2).\n.decl Answer()\nAnswer() :- Has_health(\"leopard seal\", health1), Has_health(\"Sea World\", health2), health1 > health2.\n.output Answer\n\n", "completions": [".decl Has_health(Animal:symbol, Health:float)\nHas_health(\"leopard seal\", 0.5).\nHas_health(\"Sea World\", 0.2).\n.decl Answer()\nAnswer() :- Has_health(\"leopard seal\", health1), Has_health(\"Sea World\", health2), health1 > health2.\n.output Answer\n\n"]}
{"id": 1972, "answer": true, "completion": ".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Gray Whale\", 100).\nHas_volume(\"above ground pool\", 100).\n.decl Answer()\nAnswer() :- Has_volume(\"Gray Whale\", volume1), Has_volume(\"above ground pool\", volume2), volume1 < volume2.\n.output Answer\n\n", "completions": [".decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"Gray Whale\", 100).\nHas_volume(\"above ground pool\", 100).\n.decl Answer()\nAnswer() :- Has_volume(\"Gray Whale\", volume1), Has_volume(\"above ground pool\", volume2), volume1 < volume2.\n.output Answer\n\n"]}
{"id": 1973, "answer": false, "completion": ".decl Has_genre(Person:symbol, Genre:symbol)\nHas_genre(\"Julia Roberts\", \"dance\").\n.decl Has_genre(Person:symbol, Genre:symbol)\nHas_genre(\"Julia Roberts\", \"dance\").\n.decl Answer()\nAnswer() :- Has_genre(\"Julia Roberts\", genre), Has_genre(\"Julia Roberts\", genre).\n.output Answer\n\n", "completions": [".decl Has_genre(Person:symbol, Genre:symbol)\nHas_genre(\"Julia Roberts\", \"dance\").\n.decl Has_genre(Person:symbol, Genre:symbol)\nHas_genre(\"Julia Roberts\", \"dance\").\n.decl Answer()\nAnswer() :- Has_genre(\"Julia Roberts\", genre), Has_genre(\"Julia Roberts\", genre).\n.output Answer\n\n"]}
{"id": 1974, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American Black Bear\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"king size bed\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"American Black Bear\", n_members1), Has_n_members(\"king size bed\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"American Black Bear\", 2).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"king size bed\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"American Black Bear\", n_members1), Has_n_members(\"king size bed\", n_members2), n_members1 <= n_members2.\n.output Answer\n\n"]}
{"id": 1975, "answer": false, "completion": ".decl Nearby(Place:symbol, Place2:symbol)\nNearby(\"Mona Lisa\", \"Louvre Museum\").\nNearby(\"Louvre Museum\", \"Place Vendôme\").\nNearby(\"Place Vendôme\", \"Eiffel Tower\").\nNearby(\"Eiffel Tower\", \"Arc de Triomphe\").\nNearby(\"Arc de Triomphe\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"", "completions": [".decl Nearby(Place:symbol, Place2:symbol)\nNearby(\"Mona Lisa\", \"Louvre Museum\").\nNearby(\"Louvre Museum\", \"Place Vendôme\").\nNearby(\"Place Vendôme\", \"Eiffel Tower\").\nNearby(\"Eiffel Tower\", \"Arc de Triomphe\").\nNearby(\"Arc de Triomphe\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \"Place de la Concorde\").\nNearby(\"Place de la Concorde\", \"Palais Garnier\").\nNearby(\"Palais Garnier\", \"Opéra Garnier\").\nNearby(\"Opéra Garnier\", \"Place de la Bourse\").\nNearby(\"Place de la Bourse\", \"Place de la Madeleine\").\nNearby(\"Place de la Madeleine\", \"Saint-Roch\").\nNearby(\"Saint-Roch\", \""]}
{"id": 1976, "answer": true, "completion": ".decl Has_alcohol(Drink:symbol)\nHas_alcohol(\"White Russian\").\n.decl Has_ingredient(Drink:symbol, Ingredient:symbol)\nHas_ingredient(\"White Russian\", \"kaffir lime\").\n.decl Answer()\nAnswer() :- Has_alcohol(\"White Russian\"), Has_ingredient(\"White Russian\", ingredient).\n.output Answer\n\n", "completions": [".decl Has_alcohol(Drink:symbol)\nHas_alcohol(\"White Russian\").\n.decl Has_ingredient(Drink:symbol, Ingredient:symbol)\nHas_ingredient(\"White Russian\", \"kaffir lime\").\n.decl Answer()\nAnswer() :- Has_alcohol(\"White Russian\"), Has_ingredient(\"White Russian\", ingredient).\n.output Answer\n\n"]}
{"id": 1977, "answer": true, "completion": ".decl Has_screen_time(Character:symbol, Screen_time:float)\nHas_screen_time(\"the war doctor\", 10).\nHas_screen_time(\"the doctor\", 9).\n.decl Answer()\nAnswer() :- Has_screen_time(\"the war doctor\", screen_time1), Has_screen_time(\"the doctor\", screen_time2), screen_time1 > screen_time2.\n.output Answer\n\n", "completions": [".decl Has_screen_time(Character:symbol, Screen_time:float)\nHas_screen_time(\"the war doctor\", 10).\nHas_screen_time(\"the doctor\", 9).\n.decl Answer()\nAnswer() :- Has_screen_time(\"the war doctor\", screen_time1), Has_screen_time(\"the doctor\", screen_time2), screen_time1 > screen_time2.\n.output Answer\n\n"]}
{"id": 1978, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"Little Mix\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"Little Mix\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Spice Girls\", 5).\nHas_n_members(\"Little Mix\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Spice Girls\", n_members1), Has_n_members(\"Little Mix\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 1979, "answer": true, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"albatross\", 50).\nHas_speed(\"Bucharest\", 0).\nHas_speed(\"New York City\", 0).\n.decl Answer()\nAnswer() :- Has_speed(\"albatross\", speed), Has_speed(\"Bucharest\", speed1), Has_speed(\"New York City\", speed2), speed > speed1, speed > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"albatross\", 50).\nHas_speed(\"Bucharest\", 0).\nHas_speed(\"New York City\", 0).\n.decl Answer()\nAnswer() :- Has_speed(\"albatross\", speed), Has_speed(\"Bucharest\", speed1), Has_speed(\"New York City\", speed2), speed > speed1, speed > speed2.\n.output Answer\n\n"]}
{"id": 1980, "answer": true, "completion": ".decl Age(Person:symbol, Age:float)\nAge(\"Chuck Norris\", 77).\n.decl Is_nonagenarian(Person:symbol)\nIs_nonagenarian(\"Chuck Norris\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"2020\").\n.decl Answer()\nAnswer() :- Age(\"Chuck Norris\", age), Is_nonagenarian(\"Chuck Norris\"), Happens_in_time(\"leap year\", time), age < time.\n.output Answer\n\n", "completions": [".decl Age(Person:symbol, Age:float)\nAge(\"Chuck Norris\", 77).\n.decl Is_nonagenarian(Person:symbol)\nIs_nonagenarian(\"Chuck Norris\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"leap year\", \"2020\").\n.decl Answer()\nAnswer() :- Age(\"Chuck Norris\", age), Is_nonagenarian(\"Chuck Norris\"), Happens_in_time(\"leap year\", time), age < time.\n.output Answer\n\n"]}
{"id": 1981, "answer": true, "completion": ".decl Is_airport(Airport:symbol)\nIs_airport(\"Frankfurt Airport\").\nIs_airport(\"London Airport\").\n.decl Is_pet(Pet:symbol)\nIs_pet(\"German Shepherd\").\n.decl Is_dog(Dog:symbol)\nIs_dog(\"German Shepherd\").\n.decl Answer()\nAnswer() :- Is_airport(airport), Is_pet(pet), Is_dog(dog), pet = dog.\n.output Answer\n\n", "completions": [".decl Is_airport(Airport:symbol)\nIs_airport(\"Frankfurt Airport\").\nIs_airport(\"London Airport\").\n.decl Is_pet(Pet:symbol)\nIs_pet(\"German Shepherd\").\n.decl Is_dog(Dog:symbol)\nIs_dog(\"German Shepherd\").\n.decl Answer()\nAnswer() :- Is_airport(airport), Is_pet(pet), Is_dog(dog), pet = dog.\n.output Answer\n\n"]}
{"id": 1982, "answer": false, "completion": ".decl Has_unit(Unit:symbol, System:symbol)\nHas_unit(\"foot\", \"imperial\").\nHas_unit(\"meter\", \"metric\").\n.decl Answer()\nAnswer() :- Has_unit(\"foot\", system), Has_unit(\"meter\", system).\n.output Answer\n\n", "completions": [".decl Has_unit(Unit:symbol, System:symbol)\nHas_unit(\"foot\", \"imperial\").\nHas_unit(\"meter\", \"metric\").\n.decl Answer()\nAnswer() :- Has_unit(\"foot\", system), Has_unit(\"meter\", system).\n.output Answer\n\n"]}
{"id": 1983, "answer": false, "completion": ".decl Has_n_videos(Channel:symbol, N_videos:float)\nHas_n_videos(\"Do It Yourself\", 100).\n.decl Has_n_views(Video:symbol, N_views:float)\nHas_n_views(\"Do It Yourself\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_videos(\"Do It Yourself\", n_videos), Has_n_views(\"Do It Yourself\", n_views), n_videos > n_views.\n.output Answer\n\n", "completions": [".decl Has_n_videos(Channel:symbol, N_videos:float)\nHas_n_videos(\"Do It Yourself\", 100).\n.decl Has_n_views(Video:symbol, N_views:float)\nHas_n_views(\"Do It Yourself\", 1000000).\n.decl Answer()\nAnswer() :- Has_n_videos(\"Do It Yourself\", n_videos), Has_n_views(\"Do It Yourself\", n_views), n_videos > n_views.\n.output Answer\n\n"]}
{"id": 1984, "answer": false, "completion": ".decl Is_in(Object:symbol, Container:symbol)\nIs_in(\"vegemite sandwich\", \"plastic bag\").\nIs_in(\"vegemite sandwich\", \"plastic wrap\").\nIs_in(\"vegemite sandwich\", \"glass jar\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"plastic container\").\nIs_in(\"vegemite sandwich\", \"paper bag\").\nIs_in(\"vegemite sandwich\", \"paper wrap\").\nIs_in(\"vegemite sandwich\", \"cardboard box\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"ve", "completions": [".decl Is_in(Object:symbol, Container:symbol)\nIs_in(\"vegemite sandwich\", \"plastic bag\").\nIs_in(\"vegemite sandwich\", \"plastic wrap\").\nIs_in(\"vegemite sandwich\", \"glass jar\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"plastic container\").\nIs_in(\"vegemite sandwich\", \"paper bag\").\nIs_in(\"vegemite sandwich\", \"paper wrap\").\nIs_in(\"vegemite sandwich\", \"cardboard box\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"vegemite sandwich\", \"cardboard\").\nIs_in(\"vegemite sandwich\", \"glass\").\nIs_in(\"vegemite sandwich\", \"ceramic\").\nIs_in(\"vegemite sandwich\", \"metal\").\nIs_in(\"vegemite sandwich\", \"plastic\").\nIs_in(\"vegemite sandwich\", \"tin\").\nIs_in(\"vegemite sandwich\", \"tin foil\").\nIs_in(\"vegemite sandwich\", \"paper\").\nIs_in(\"ve"]}
{"id": 1985, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Macbeth\", \"play\").\nHas_property(\"Macbeth\", \"tragedy\").\nHas_property(\"costume\", \"clothing\").\nHas_property(\"costume\", \"has_robe\").\nHas_property(\"costume\", \"has_pointy_hat\").\n.decl Answer()\nAnswer() :- Has_property(\"Macbeth\", property1), Has_property(\"costume\", property2), property1 == property2.\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Macbeth\", \"play\").\nHas_property(\"Macbeth\", \"tragedy\").\nHas_property(\"costume\", \"clothing\").\nHas_property(\"costume\", \"has_robe\").\nHas_property(\"costume\", \"has_pointy_hat\").\n.decl Answer()\nAnswer() :- Has_property(\"Macbeth\", property1), Has_property(\"costume\", property2), property1 == property2.\n.output Answer\n\n"]}
{"id": 1986, "answer": false, "completion": ".decl Has_education(Person:symbol, Education:symbol)\nHas_education(\"Emma Stone\", \"Bachelor's degree\").\n.decl Answer()\nAnswer() :- Has_education(\"Emma Stone\", education).\n.output Answer\n\n", "completions": [".decl Has_education(Person:symbol, Education:symbol)\nHas_education(\"Emma Stone\", \"Bachelor's degree\").\n.decl Answer()\nAnswer() :- Has_education(\"Emma Stone\", education).\n.output Answer\n\n"]}
{"id": 1987, "answer": true, "completion": ".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Bob Marley\", \"face\").\nHas_image(\"smoke shop\", \"image\").\n.decl Answer()\nAnswer() :- Has_image(\"Bob Marley\", image), Has_image(\"smoke shop\", image).\n.output Answer\n\n", "completions": [".decl Has_image(Object:symbol, Image:symbol)\nHas_image(\"Bob Marley\", \"face\").\nHas_image(\"smoke shop\", \"image\").\n.decl Answer()\nAnswer() :- Has_image(\"Bob Marley\", image), Has_image(\"smoke shop\", image).\n.output Answer\n\n"]}
{"id": 1988, "answer": true, "completion": ".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"Big Ben\", \"clock\").\nIs_a(\"clock\", \"timepiece\").\nIs_a(\"timepiece\", \"object\").\nIs_a(\"blind person\", \"person\").\nIs_a(\"person\", \"object\").\n.decl Answer()\nAnswer() :- Is_a(\"blind person\", \"person\"), Is_a(\"person\", \"object\"), Is_a(\"Big Ben\", \"clock\"), Is_a(\"clock\", \"timepiece\"), Is_a(\"timepiece\", \"object\").\n.output Answer\n\n", "completions": [".decl Is_a(Object:symbol, Class:symbol)\nIs_a(\"Big Ben\", \"clock\").\nIs_a(\"clock\", \"timepiece\").\nIs_a(\"timepiece\", \"object\").\nIs_a(\"blind person\", \"person\").\nIs_a(\"person\", \"object\").\n.decl Answer()\nAnswer() :- Is_a(\"blind person\", \"person\"), Is_a(\"person\", \"object\"), Is_a(\"Big Ben\", \"clock\"), Is_a(\"clock\", \"timepiece\"), Is_a(\"timepiece\", \"object\").\n.output Answer\n\n"]}
{"id": 1989, "answer": false, "completion": ".decl Has_n_people(Event:symbol, N_people:float)\nHas_n_people(\"1933 Great Depression\", 3000000).\n.decl Has_n_seats(Stadium:symbol, N_seats:float)\nHas_n_seats(\"Tiger Stadium\", 80).\n.decl Answer()\nAnswer() :- Has_n_people(\"1933 Great Depression\", n_people), Has_n_seats(\"Tiger Stadium\", n_seats), n_people <= n_seats.\n.output Answer\n\n", "completions": [".decl Has_n_people(Event:symbol, N_people:float)\nHas_n_people(\"1933 Great Depression\", 3000000).\n.decl Has_n_seats(Stadium:symbol, N_seats:float)\nHas_n_seats(\"Tiger Stadium\", 80).\n.decl Answer()\nAnswer() :- Has_n_people(\"1933 Great Depression\", n_people), Has_n_seats(\"Tiger Stadium\", n_seats), n_people <= n_seats.\n.output Answer\n\n"]}
{"id": 1990, "answer": true, "completion": ".decl Poet_wrote_sonnets(Poet:symbol, Poem:symbol)\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Kordian\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Balladyna\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Pan Tadeusz\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Oda do młodości\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Wokulski\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Przedwiosnie\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Kordian\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Switezianka\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets", "completions": [".decl Poet_wrote_sonnets(Poet:symbol, Poem:symbol)\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Kordian\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Balladyna\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Pan Tadeusz\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Oda do młodości\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Wokulski\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Przedwiosnie\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Kordian\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Switezianka\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets(\"Adam Mickiewicz\", \"Dziady\").\nPoet_wrote_sonnets"]}
{"id": 1991, "answer": false, "completion": ".decl Was_leader_of(Person:symbol, Group:symbol)\nWas_leader_of(\"Barack Obama\", \"Church of Jesus Christ of Latter-day Saints\").\n.decl Was_leader_of(Person:symbol, Group:symbol)\nWas_leader_of(\"Martin Luther\", \"Reformation\").\n.decl Answer()\nAnswer() :- Was_leader_of(\"Barack Obama\", group1), Was_leader_of(\"Martin Luther\", group2), group1 != group2.\n.output Answer\n\n", "completions": [".decl Was_leader_of(Person:symbol, Group:symbol)\nWas_leader_of(\"Barack Obama\", \"Church of Jesus Christ of Latter-day Saints\").\n.decl Was_leader_of(Person:symbol, Group:symbol)\nWas_leader_of(\"Martin Luther\", \"Reformation\").\n.decl Answer()\nAnswer() :- Was_leader_of(\"Barack Obama\", group1), Was_leader_of(\"Martin Luther\", group2), group1 != group2.\n.output Answer\n\n"]}
{"id": 1992, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Mona Lisa\", 25).\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mona Lisa\", \"Lisa Gherardini\").\n.decl Answer()\nAnswer() :- Has_age(\"Mona Lisa\", age), Has_name(\"Mona Lisa\", name), Has_age(person, age), Has_name(person, name), person != \"Mona Lisa\".\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Mona Lisa\", 25).\n.decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Mona Lisa\", \"Lisa Gherardini\").\n.decl Answer()\nAnswer() :- Has_age(\"Mona Lisa\", age), Has_name(\"Mona Lisa\", name), Has_age(person, age), Has_name(person, name), person != \"Mona Lisa\".\n.output Answer\n\n"]}
{"id": 1993, "answer": true, "completion": ".decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoy", "completions": [".decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoys(Person:symbol, Menu:symbol)\nFrequently_enjoys(\"model\", \"menu at Cookout\").\n.decl Frequently_enjoy"]}
{"id": 1994, "answer": false, "completion": ".decl Has_n_shelves(Library:symbol, N_shelves:float)\nHas_n_shelves(\"Library of Alexandria\", 1).\nHas_n_shelves(\"Library of Congress\", 3).\n.decl Answer()\nAnswer() :- Has_n_shelves(\"Library of Alexandria\", n_shelves1), Has_n_shelves(\"Library of Congress\", n_shelves2), n_shelves1 < n_shelves2.\n.output Answer\n\n", "completions": [".decl Has_n_shelves(Library:symbol, N_shelves:float)\nHas_n_shelves(\"Library of Alexandria\", 1).\nHas_n_shelves(\"Library of Congress\", 3).\n.decl Answer()\nAnswer() :- Has_n_shelves(\"Library of Alexandria\", n_shelves1), Has_n_shelves(\"Library of Congress\", n_shelves2), n_shelves1 < n_shelves2.\n.output Answer\n\n"]}
{"id": 1995, "answer": false, "completion": ".decl Is_part_of(Thing:symbol, Head:symbol)\nIs_part_of(\"tongue\", \"head\").\n.decl Answer()\nAnswer() :- Is_part_of(\"tongue\", head).\n.output Answer\n\n", "completions": [".decl Is_part_of(Thing:symbol, Head:symbol)\nIs_part_of(\"tongue\", \"head\").\n.decl Answer()\nAnswer() :- Is_part_of(\"tongue\", head).\n.output Answer\n\n"]}
{"id": 1996, "answer": false, "completion": ".decl Consumes(Person:symbol, Food:symbol)\nConsumes(\"ancient visitor to Persia\", \"crocus threads\").\n.decl Answer()\nAnswer() :- Consumes(\"ancient visitor to Persia\", food).\n.output Answer\n\n", "completions": [".decl Consumes(Person:symbol, Food:symbol)\nConsumes(\"ancient visitor to Persia\", \"crocus threads\").\n.decl Answer()\nAnswer() :- Consumes(\"ancient visitor to Persia\", food).\n.output Answer\n\n"]}
{"id": 1997, "answer": true, "completion": ".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"Durian\", \"stomach unwell\").\n.decl Answer()\nAnswer() :- Has_effect(\"Durian\", effect), Has_effect(\"Durian\", effect2), effect != effect2.\n.output Answer\n\n", "completions": [".decl Has_effect(Object:symbol, Effect:symbol)\nHas_effect(\"Durian\", \"stomach unwell\").\n.decl Answer()\nAnswer() :- Has_effect(\"Durian\", effect), Has_effect(\"Durian\", effect2), effect != effect2.\n.output Answer\n\n"]}
{"id": 1998, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Hundred Years' War\", \"1337-1453\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Hundred Years' War\", \"1337-1455\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Hundred Years' War\", \"1337-1453\").\nAnswer() :- Happens_in_time(\"Hundred Years' War\", \"1337-1455\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Hundred Years' War\", \"1337-1453\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Hundred Years' War\", \"1337-1455\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Hundred Years' War\", \"1337-1453\").\nAnswer() :- Happens_in_time(\"Hundred Years' War\", \"1337-1455\").\n.output Answer\n\n"]}
{"id": 1999, "answer": false, "completion": ".decl Has_nutrients(Food:symbol, Nutrients:symbol)\nHas_nutrients(\"kale\", \"vitamin K\").\nHas_nutrients(\"spinach\", \"vitamin K\").\n.decl Has_nutrient_content(Nutrient:symbol, Content:float)\nHas_nutrient_content(\"vitamin K\", 0.2).\n.decl Answer()\nAnswer() :- Has_nutrients(\"kale\", nutrient), Has_nutrient_content(nutrient, content1), Has_nutrient_content(\"spinach\", content2), content1 > content2.\n.output Answer\n\n", "completions": [".decl Has_nutrients(Food:symbol, Nutrients:symbol)\nHas_nutrients(\"kale\", \"vitamin K\").\nHas_nutrients(\"spinach\", \"vitamin K\").\n.decl Has_nutrient_content(Nutrient:symbol, Content:float)\nHas_nutrient_content(\"vitamin K\", 0.2).\n.decl Answer()\nAnswer() :- Has_nutrients(\"kale\", nutrient), Has_nutrient_content(nutrient, content1), Has_nutrient_content(\"spinach\", content2), content1 > content2.\n.output Answer\n\n"]}
{"id": 2000, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jean Valjean's imprisonment\", \"1830s\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Jean Valjean's imprisonment\", \"Paris\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Jean Valjean's imprisonment\", time), Happens_in_place(\"Jean Valjean's imprisonment\", place), time = \"1830s\", place = \"Paris\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jean Valjean's imprisonment\", \"1830s\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"Jean Valjean's imprisonment\", \"Paris\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Jean Valjean's imprisonment\", time), Happens_in_place(\"Jean Valjean's imprisonment\", place), time = \"1830s\", place = \"Paris\".\n.output Answer\n\n"]}
{"id": 2001, "answer": true, "completion": ".decl Has_name(Musical:symbol, Name:symbol)\nHas_name(\"A Chorus Line\", \"West Side Story\").\nHas_name(\"A Chorus Line\", \"Rent\").\nHas_name(\"A Chorus Line\", \"Hairspray\").\nHas_name(\"A Chorus Line\", \"Chicago\").\nHas_name(\"A Chorus Line\", \"Cats\").\nHas_name(\"A Chorus Line\", \"Evita\").\nHas_name(\"A Chorus Line\", \"Fosse\").\nHas_name(\"A Chorus Line\", \"Mame\").\nHas_name(\"A Chorus Line\", \"Cabaret\").\nHas_name(\"A Chorus Line\", \"Les Miserables\").\nHas_name(\"A Chorus Line\", \"Miss Saigon\").\nHas_name(\"A Chorus Line\", \"Ragtime\").\nHas_name(\"A Chorus Line\", \"South Pacific\").\nHas_name(\"A Chorus Line\", \"The King and I\").\nHas_name(\"A Chorus Line\", \"The Sound of Music\").\nHas_name(\"A Chorus Line\", \"The Wizard of Oz\").\nHas_name(\"A Chorus Line\", \"West Side Story\").\nHas_name(\"A Chorus Line\", \"Funny Girl\").\nHas_name(\"A Chorus Line\", \"Paint Your Wagon\").\nHas_name(\"A Chorus Line\", \"Annie\").\nHas_name(\"A Chorus Line\", \"Camelot\").\nHas_name(\"A Chorus Line\", \"The Full Monty\").\nHas_name(\"A Chorus Line\", \"Oklahoma!\").\nHas_name(\"A Chorus Line\", \"The Producers\").\nHas_name(\"A Chorus Line\", \"Sweeney Todd\").\nHas_name(\"A Chorus Line\", \"42nd Street\").\nHas_name(\"A Chorus Line\", \"The Music Man\").\nHas_name(\"A Chorus Line\", \"The Unsinkable Molly Brown\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus", "completions": [".decl Has_name(Musical:symbol, Name:symbol)\nHas_name(\"A Chorus Line\", \"West Side Story\").\nHas_name(\"A Chorus Line\", \"Rent\").\nHas_name(\"A Chorus Line\", \"Hairspray\").\nHas_name(\"A Chorus Line\", \"Chicago\").\nHas_name(\"A Chorus Line\", \"Cats\").\nHas_name(\"A Chorus Line\", \"Evita\").\nHas_name(\"A Chorus Line\", \"Fosse\").\nHas_name(\"A Chorus Line\", \"Mame\").\nHas_name(\"A Chorus Line\", \"Cabaret\").\nHas_name(\"A Chorus Line\", \"Les Miserables\").\nHas_name(\"A Chorus Line\", \"Miss Saigon\").\nHas_name(\"A Chorus Line\", \"Ragtime\").\nHas_name(\"A Chorus Line\", \"South Pacific\").\nHas_name(\"A Chorus Line\", \"The King and I\").\nHas_name(\"A Chorus Line\", \"The Sound of Music\").\nHas_name(\"A Chorus Line\", \"The Wizard of Oz\").\nHas_name(\"A Chorus Line\", \"West Side Story\").\nHas_name(\"A Chorus Line\", \"Funny Girl\").\nHas_name(\"A Chorus Line\", \"Paint Your Wagon\").\nHas_name(\"A Chorus Line\", \"Annie\").\nHas_name(\"A Chorus Line\", \"Camelot\").\nHas_name(\"A Chorus Line\", \"The Full Monty\").\nHas_name(\"A Chorus Line\", \"Oklahoma!\").\nHas_name(\"A Chorus Line\", \"The Producers\").\nHas_name(\"A Chorus Line\", \"Sweeney Todd\").\nHas_name(\"A Chorus Line\", \"42nd Street\").\nHas_name(\"A Chorus Line\", \"The Music Man\").\nHas_name(\"A Chorus Line\", \"The Unsinkable Molly Brown\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus Line\", \"Anything Goes\").\nHas_name(\"A Chorus"]}
{"id": 2002, "answer": true, "completion": ".decl Belongs_to_tribe(Land:symbol, Tribe:symbol)\nBelongs_to_tribe(\"Holy Land\", \"Adamu's tribe\").\n.decl Answer()\nAnswer() :- Belongs_to_tribe(\"Holy Land\", tribe).\n.output Answer\n\n", "completions": [".decl Belongs_to_tribe(Land:symbol, Tribe:symbol)\nBelongs_to_tribe(\"Holy Land\", \"Adamu's tribe\").\n.decl Answer()\nAnswer() :- Belongs_to_tribe(\"Holy Land\", tribe).\n.output Answer\n\n"]}
{"id": 2003, "answer": false, "completion": ".decl Has_postcode(Location:symbol, Postcode:symbol)\nHas_postcode(\"New England\", \"PE19 8AL\").\nHas_postcode(\"Sainsbury's\", \"PE19 8AL\").\n.decl Answer()\nAnswer() :- Has_postcode(\"New England\", postcode1), Has_postcode(\"Sainsbury's\", postcode2), postcode1 = postcode2.\n.output Answer\n\n", "completions": [".decl Has_postcode(Location:symbol, Postcode:symbol)\nHas_postcode(\"New England\", \"PE19 8AL\").\nHas_postcode(\"Sainsbury's\", \"PE19 8AL\").\n.decl Answer()\nAnswer() :- Has_postcode(\"New England\", postcode1), Has_postcode(\"Sainsbury's\", postcode2), postcode1 = postcode2.\n.output Answer\n\n"]}
{"id": 2004, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Evander Holyfield fight\", \"1997\").\nHappens_in_time(\"McGruff's slogan\", \"1997\").\n.decl Has_slogan(Person:symbol, Slogan:symbol)\nHas_slogan(\"McGruff\", \"I am the law\").\nHas_slogan(\"Evander Holyfield\", \"I want to be the best\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Evander Holyfield fight\", time), Happens_in_time(\"McGruff's slogan\", time), Has_slogan(\"Evander Holyfield\", slogan), slogan != \"I want to be the best\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Evander Holyfield fight\", \"1997\").\nHappens_in_time(\"McGruff's slogan\", \"1997\").\n.decl Has_slogan(Person:symbol, Slogan:symbol)\nHas_slogan(\"McGruff\", \"I am the law\").\nHas_slogan(\"Evander Holyfield\", \"I want to be the best\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Evander Holyfield fight\", time), Happens_in_time(\"McGruff's slogan\", time), Has_slogan(\"Evander Holyfield\", slogan), slogan != \"I want to be the best\".\n.output Answer\n\n"]}
{"id": 2005, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Durian\", 0.5).\nHas_density(\"head\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"Durian\", density1), Has_density(\"head\", density2), density1 > density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Durian\", 0.5).\nHas_density(\"head\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"Durian\", density1), Has_density(\"head\", density2), density1 > density2.\n.output Answer\n\n\n"]}
{"id": 2006, "answer": true, "completion": ".decl Has_name(Group:symbol, Name:symbol)\nHas_name(\"Young Men's Christian Association\", \"YMCA\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Young Men's Christian Association\", 100).\n.decl Answer()\nAnswer() :- Has_name(\"Young Men's Christian Association\", name), Has_n_members(\"Young Men's Christian Association\", n_members), n_members > 100.\n.output Answer\n\n", "completions": [".decl Has_name(Group:symbol, Name:symbol)\nHas_name(\"Young Men's Christian Association\", \"YMCA\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Young Men's Christian Association\", 100).\n.decl Answer()\nAnswer() :- Has_name(\"Young Men's Christian Association\", name), Has_n_members(\"Young Men's Christian Association\", n_members), n_members > 100.\n.output Answer\n\n"]}
{"id": 2007, "answer": true, "completion": ".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"Saltwater crocodile\", \"Memphis\").\nLives_in(\"Saltwater crocodile\", \"Nashville\").\nLives_in(\"Saltwater crocodile\", \"New Orleans\").\n.decl Answer()\nAnswer() :- Lives_in(\"Saltwater crocodile\", place), Lives_in(\"Saltwater crocodile\", place2), place != place2.\n.output Answer\n\n", "completions": [".decl Lives_in(Animal:symbol, Place:symbol)\nLives_in(\"Saltwater crocodile\", \"Memphis\").\nLives_in(\"Saltwater crocodile\", \"Nashville\").\nLives_in(\"Saltwater crocodile\", \"New Orleans\").\n.decl Answer()\nAnswer() :- Lives_in(\"Saltwater crocodile\", place), Lives_in(\"Saltwater crocodile\", place2), place != place2.\n.output Answer\n\n"]}
{"id": 2008, "answer": true, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_name(\"Home Depot\", \"Home Depot\").\nHas_"]}
{"id": 2009, "answer": false, "completion": ".decl Is_in(Location:symbol, County:symbol)\nIs_in(\"San Diego\", \"San Diego County\").\n.decl Is_a(Animal:symbol, Species:symbol)\nIs_a(\"Shamu\", \"Orca\").\n.decl Answer()\nAnswer() :- Is_in(\"San Diego\", county), Is_a(\"Shamu\", species), county == species.\n.output Answer\n\n", "completions": [".decl Is_in(Location:symbol, County:symbol)\nIs_in(\"San Diego\", \"San Diego County\").\n.decl Is_a(Animal:symbol, Species:symbol)\nIs_a(\"Shamu\", \"Orca\").\n.decl Answer()\nAnswer() :- Is_in(\"San Diego\", county), Is_a(\"Shamu\", species), county == species.\n.output Answer\n\n"]}
{"id": 2010, "answer": false, "completion": ".decl Can_move(Piece:symbol, Move:symbol)\nCan_move(\"king\", \"up\").\nCan_move(\"king\", \"down\").\nCan_move(\"king\", \"left\").\nCan_move(\"king\", \"right\").\nCan_move(\"queen\", \"up\").\nCan_move(\"queen\", \"down\").\nCan_move(\"queen\", \"left\").\nCan_move(\"queen\", \"right\").\nCan_move(\"bishop\", \"up\").\nCan_move(\"bishop\", \"down\").\nCan_move(\"bishop\", \"left\").\nCan_move(\"bishop\", \"right\").\nCan_move(\"knight\", \"up\").\nCan_move(\"knight\", \"down\").\nCan_move(\"knight\", \"left\").\nCan_move(\"knight\", \"right\").\nCan_move(\"rook\", \"up\").\nCan_move(\"rook\", \"down\").\nCan_move(\"rook\", \"left\").\nCan_move(\"rook\", \"right\").\nCan_move(\"pawn\", \"up\").\nCan_move(\"pawn\", \"down\").\nCan_move(\"pawn\", \"left\").\nCan_move(\"pawn\", \"right\").\n.decl Can_move_to(Piece:symbol, Move:symbol, Move_to:symbol)\nCan_move_to(\"king\", \"up\", \"up\").\nCan_move_to(\"king\", \"down\", \"down\").\nCan_move_to(\"king\", \"left\", \"left\").\nCan_move_to(\"king\", \"right\", \"right\").\nCan_move_to(\"queen\", \"up\", \"up\").\nCan_move_to(\"queen\", \"down\", \"down\").\nCan_move_to(\"queen\", \"left\", \"left\").\nCan_move_to(\"queen\", \"right\", \"right\").\nCan_move_to(\"bishop\", \"up\", \"up\").\nCan_move_to(\"bishop\", \"down\", \"down\").\nCan_move_to(\"bishop\", \"left\", \"left\").\nCan_move_to(\"bishop\", \"right\", \"right\").\nCan_move_to(\"knight\", \"up\", \"up\").\nCan_move_to(\"knight\", \"down\", \"down\").\nCan_move_to(\"knight\", \"left\", \"left\").\nCan_move_to(\"knight\", \"right\", \"right\").\nCan_move_to(\"rook\", \"up\", \"up\").\nCan_move_to(\"rook\", \"down\", \"down\").\nCan_move_to(\"rook\", \"left\", \"left\").\nCan_move_to(\"rook\", \"right\", \"right\").\nCan_move_to(\"pawn\", \"up\", \"up\").\nCan_move_to(\"pawn\", \"down\", \"down\").\nCan_move_to(\"pawn\", \"left\", \"left\").\nCan_move_to(\"pawn\", \"right\", \"right\").\n.decl Answer()\nAnswer() :- Can_move_to(\"king\", \"up\", \"up\"), Can_move_to(\"king\", \"down\", \"down\"), Can_move_to(\"king\", \"left\", \"left\"), Can_move_to(\"king\", \"right\", \"right\"), Can_move_to(\"queen\", \"up\", \"up\"), Can_move_to(\"queen\", \"down\", \"down\"), Can_move_to(\"queen\", \"left\", \"left\"), Can_move_to(\"queen\", \"right\",", "completions": [".decl Can_move(Piece:symbol, Move:symbol)\nCan_move(\"king\", \"up\").\nCan_move(\"king\", \"down\").\nCan_move(\"king\", \"left\").\nCan_move(\"king\", \"right\").\nCan_move(\"queen\", \"up\").\nCan_move(\"queen\", \"down\").\nCan_move(\"queen\", \"left\").\nCan_move(\"queen\", \"right\").\nCan_move(\"bishop\", \"up\").\nCan_move(\"bishop\", \"down\").\nCan_move(\"bishop\", \"left\").\nCan_move(\"bishop\", \"right\").\nCan_move(\"knight\", \"up\").\nCan_move(\"knight\", \"down\").\nCan_move(\"knight\", \"left\").\nCan_move(\"knight\", \"right\").\nCan_move(\"rook\", \"up\").\nCan_move(\"rook\", \"down\").\nCan_move(\"rook\", \"left\").\nCan_move(\"rook\", \"right\").\nCan_move(\"pawn\", \"up\").\nCan_move(\"pawn\", \"down\").\nCan_move(\"pawn\", \"left\").\nCan_move(\"pawn\", \"right\").\n.decl Can_move_to(Piece:symbol, Move:symbol, Move_to:symbol)\nCan_move_to(\"king\", \"up\", \"up\").\nCan_move_to(\"king\", \"down\", \"down\").\nCan_move_to(\"king\", \"left\", \"left\").\nCan_move_to(\"king\", \"right\", \"right\").\nCan_move_to(\"queen\", \"up\", \"up\").\nCan_move_to(\"queen\", \"down\", \"down\").\nCan_move_to(\"queen\", \"left\", \"left\").\nCan_move_to(\"queen\", \"right\", \"right\").\nCan_move_to(\"bishop\", \"up\", \"up\").\nCan_move_to(\"bishop\", \"down\", \"down\").\nCan_move_to(\"bishop\", \"left\", \"left\").\nCan_move_to(\"bishop\", \"right\", \"right\").\nCan_move_to(\"knight\", \"up\", \"up\").\nCan_move_to(\"knight\", \"down\", \"down\").\nCan_move_to(\"knight\", \"left\", \"left\").\nCan_move_to(\"knight\", \"right\", \"right\").\nCan_move_to(\"rook\", \"up\", \"up\").\nCan_move_to(\"rook\", \"down\", \"down\").\nCan_move_to(\"rook\", \"left\", \"left\").\nCan_move_to(\"rook\", \"right\", \"right\").\nCan_move_to(\"pawn\", \"up\", \"up\").\nCan_move_to(\"pawn\", \"down\", \"down\").\nCan_move_to(\"pawn\", \"left\", \"left\").\nCan_move_to(\"pawn\", \"right\", \"right\").\n.decl Answer()\nAnswer() :- Can_move_to(\"king\", \"up\", \"up\"), Can_move_to(\"king\", \"down\", \"down\"), Can_move_to(\"king\", \"left\", \"left\"), Can_move_to(\"king\", \"right\", \"right\"), Can_move_to(\"queen\", \"up\", \"up\"), Can_move_to(\"queen\", \"down\", \"down\"), Can_move_to(\"queen\", \"left\", \"left\"), Can_move_to(\"queen\", \"right\","]}
{"id": 2011, "answer": false, "completion": ".decl Has_meat(Food:symbol)\nHas_meat(\"chicken sandwich\").\nHas_meat(\"chicken nuggets\").\n.decl Vegetarian(Person:symbol)\nVegetarian(\"vegetarian\").\n.decl Answer()\nAnswer() :- Vegetarian(\"vegetarian\"), !Has_meat(\"chicken sandwich\").\n.output Answer\n\n", "completions": [".decl Has_meat(Food:symbol)\nHas_meat(\"chicken sandwich\").\nHas_meat(\"chicken nuggets\").\n.decl Vegetarian(Person:symbol)\nVegetarian(\"vegetarian\").\n.decl Answer()\nAnswer() :- Vegetarian(\"vegetarian\"), !Has_meat(\"chicken sandwich\").\n.output Answer\n\n"]}
{"id": 2012, "answer": false, "completion": ".decl Is_obvious(Event:symbol)\nIs_obvious(\"grief\").\n.decl Answer()\nAnswer() :- Is_obvious(\"grief\").\n.output Answer\n\n", "completions": [".decl Is_obvious(Event:symbol)\nIs_obvious(\"grief\").\n.decl Answer()\nAnswer() :- Is_obvious(\"grief\").\n.output Answer\n\n"]}
{"id": 2013, "answer": false, "completion": ".decl Is_Albidosi(Person:symbol)\nIs_Albidosi(\"Scottish person\").\n.decl Answer()\nAnswer() :- Is_Albidosi(\"Scottish person\").\n.output Answer\n\n", "completions": [".decl Is_Albidosi(Person:symbol)\nIs_Albidosi(\"Scottish person\").\n.decl Answer()\nAnswer() :- Is_Albidosi(\"Scottish person\").\n.output Answer\n\n"]}
{"id": 2014, "answer": true, "completion": ".decl Has_STI(Person:symbol, STI:symbol)\nHas_STI(\"Brooke Shields\", \"HIV\").\nHas_STI(\"Brooke Shields\", \"Gonorrhea\").\nHas_STI(\"Brooke Shields\", \"Chlamydia\").\n.decl Has_preventive_healthcare(Person:symbol, Healthcare:symbol)\nHas_preventive_healthcare(\"Brooke Shields\", \"Condoms\").\nHas_preventive_healthcare(\"Brooke Shields\", \"Vaccine\").\n.decl Has_STI_prevention(STI:symbol, Prevention:symbol)\nHas_STI_prevention(\"HIV\", \"Vaccine\").\nHas_STI_prevention(\"Gonorrhea\", \"Condoms\").\nHas_STI_prevention(\"Chlamydia\", \"Condoms\").\n.decl Answer()\nAnswer() :- Has_STI(\"Brooke Shields\", STI), Has_preventive_healthcare(\"Brooke Shields\", Prevention), Has_STI_prevention(STI, Prevention).\n.output Answer\n\n", "completions": [".decl Has_STI(Person:symbol, STI:symbol)\nHas_STI(\"Brooke Shields\", \"HIV\").\nHas_STI(\"Brooke Shields\", \"Gonorrhea\").\nHas_STI(\"Brooke Shields\", \"Chlamydia\").\n.decl Has_preventive_healthcare(Person:symbol, Healthcare:symbol)\nHas_preventive_healthcare(\"Brooke Shields\", \"Condoms\").\nHas_preventive_healthcare(\"Brooke Shields\", \"Vaccine\").\n.decl Has_STI_prevention(STI:symbol, Prevention:symbol)\nHas_STI_prevention(\"HIV\", \"Vaccine\").\nHas_STI_prevention(\"Gonorrhea\", \"Condoms\").\nHas_STI_prevention(\"Chlamydia\", \"Condoms\").\n.decl Answer()\nAnswer() :- Has_STI(\"Brooke Shields\", STI), Has_preventive_healthcare(\"Brooke Shields\", Prevention), Has_STI_prevention(STI, Prevention).\n.output Answer\n\n"]}
{"id": 2015, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Jack Black\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Jack Black\", height), height >= 1.5.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Jack Black\", 1.8).\n.decl Answer()\nAnswer() :- Has_height(\"Jack Black\", height), height >= 1.5.\n.output Answer\n\n"]}
{"id": 2016, "answer": false, "completion": ".decl Watches_tv(Person:symbol, Tv_program:symbol)\nWatches_tv(\"Saint Peter\", \"The Simpsons\").\nWatches_tv(\"Saint Peter\", \"The X-Files\").\n.decl Answer()\nAnswer() :- Watches_tv(\"Saint Peter\", tv_program).\n.output Answer\n\n", "completions": [".decl Watches_tv(Person:symbol, Tv_program:symbol)\nWatches_tv(\"Saint Peter\", \"The Simpsons\").\nWatches_tv(\"Saint Peter\", \"The X-Files\").\n.decl Answer()\nAnswer() :- Watches_tv(\"Saint Peter\", tv_program).\n.output Answer\n\n"]}
{"id": 2017, "answer": true, "completion": ".decl Is_knight(Person:symbol)\nIs_knight(\"Arthur\") :- Is_knight(\"Robin\").\nIs_knight(\"Robin\") :- Is_knight(\"Galahad\").\nIs_knight(\"Galahad\") :- Is_knight(\"Bedevere\").\nIs_knight(\"Bedevere\") :- Is_knight(\"Lancelot\").\nIs_knight(\"Lancelot\") :- Is_knight(\"Gawain\").\nIs_knight(\"Gawain\") :- Is_knight(\"Percival\").\nIs_knight(\"Percival\") :- Is_knight(\"Tristan\").\nIs_knight(\"Tristan\") :- Is_knight(\"Iseult\").\nIs_knight(\"Iseult\") :- Is_knight(\"Merlin\").\n.decl Answer()\nAnswer() :- Is_knight(\"Arthur\").\n.output Answer\n\n", "completions": [".decl Is_knight(Person:symbol)\nIs_knight(\"Arthur\") :- Is_knight(\"Robin\").\nIs_knight(\"Robin\") :- Is_knight(\"Galahad\").\nIs_knight(\"Galahad\") :- Is_knight(\"Bedevere\").\nIs_knight(\"Bedevere\") :- Is_knight(\"Lancelot\").\nIs_knight(\"Lancelot\") :- Is_knight(\"Gawain\").\nIs_knight(\"Gawain\") :- Is_knight(\"Percival\").\nIs_knight(\"Percival\") :- Is_knight(\"Tristan\").\nIs_knight(\"Tristan\") :- Is_knight(\"Iseult\").\nIs_knight(\"Iseult\") :- Is_knight(\"Merlin\").\n.decl Answer()\nAnswer() :- Is_knight(\"Arthur\").\n.output Answer\n\n"]}
{"id": 2018, "answer": false, "completion": ".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"U2 debut studio album\", 42).\nHas_duration(\"Peppa Pig\", 30).\n.decl Happens_during(Event:symbol, Time:symbol)\nHappens_during(\"U2 debut studio album\", \"Peppa Pig\").\n.decl Answer()\nAnswer() :- Has_duration(\"U2 debut studio album\", duration), Happens_during(\"Peppa Pig\", time), duration > time.\n.output Answer\n\n", "completions": [".decl Has_duration(Event:symbol, Duration:float)\nHas_duration(\"U2 debut studio album\", 42).\nHas_duration(\"Peppa Pig\", 30).\n.decl Happens_during(Event:symbol, Time:symbol)\nHappens_during(\"U2 debut studio album\", \"Peppa Pig\").\n.decl Answer()\nAnswer() :- Has_duration(\"U2 debut studio album\", duration), Happens_during(\"Peppa Pig\", time), duration > time.\n.output Answer\n\n"]}
{"id": 2019, "answer": false, "completion": ".decl Abstains_from(Person:symbol, Substance:symbol)\nAbstains_from(\"Osama bin Laden\", \"alcohol\").\n.decl Answer()\nAnswer() :- Abstains_from(\"Osama bin Laden\", substance).\n.output Answer\n\n", "completions": [".decl Abstains_from(Person:symbol, Substance:symbol)\nAbstains_from(\"Osama bin Laden\", \"alcohol\").\n.decl Answer()\nAnswer() :- Abstains_from(\"Osama bin Laden\", substance).\n.output Answer\n\n"]}
{"id": 2020, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1986\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1987\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1988\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1989\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1990\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1991\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1992\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1993\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1994\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1995\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1996\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1997\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1998\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1999\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2000\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2001\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2002\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2003\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2004\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2005\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2006\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2007\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2008\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2009\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2010\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2011\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2012\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2013\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2014\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2015\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2016\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2017\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2018\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2019\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Jerry Seinfeld's birthday\", year), year > 1986.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1986\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1987\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1988\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1989\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1990\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1991\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1992\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1993\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1994\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1995\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1996\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1997\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1998\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"1999\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2000\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2001\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2002\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2003\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2004\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2005\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2006\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2007\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2008\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2009\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2010\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2011\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2012\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2013\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2014\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2015\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2016\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2017\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2018\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2019\").\nHappens_in_time(\"Jerry Seinfeld's birthday\", \"2020\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Jerry Seinfeld's birthday\", year), year > 1986.\n.output Answer\n\n"]}
{"id": 2021, "answer": false, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Buzz Aldrin\", \"computer\").\n.decl Answer()\nAnswer() :- Owns(\"Buzz Aldrin\", object).\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"Buzz Aldrin\", \"computer\").\n.decl Answer()\nAnswer() :- Owns(\"Buzz Aldrin\", object).\n.output Answer\n\n"]}
{"id": 2022, "answer": false, "completion": ".decl Happens_in_city(Event:symbol, City:symbol)\nHappens_in_city(\"urban legend\", \"New York\").\nHappens_in_city(\"urban legend\", \"San Francisco\").\nHappens_in_city(\"urban legend\", \"Chicago\").\nHappens_in_city(\"urban legend\", \"Los Angeles\").\n.decl Answer()\nAnswer() :- Happens_in_city(\"urban legend\", city), not Happens_in_city(\"urban legend\", city2), city != city2.\n.output Answer\n\n", "completions": [".decl Happens_in_city(Event:symbol, City:symbol)\nHappens_in_city(\"urban legend\", \"New York\").\nHappens_in_city(\"urban legend\", \"San Francisco\").\nHappens_in_city(\"urban legend\", \"Chicago\").\nHappens_in_city(\"urban legend\", \"Los Angeles\").\n.decl Answer()\nAnswer() :- Happens_in_city(\"urban legend\", city), not Happens_in_city(\"urban legend\", city2), city != city2.\n.output Answer\n\n"]}
{"id": 2023, "answer": true, "completion": ".decl Is_hypothetical(Person:symbol)\nIs_hypothetical(\"Gandalf\").\n.decl Is_foe(Person_A:symbol, Person_B:symbol)\nIs_foe(\"Gandalf\", \"Barbas\").\n.decl Answer()\nAnswer() :- Is_hypothetical(\"Gandalf\"), Is_foe(\"Gandalf\", \"Barbas\").\n.output Answer\n\n", "completions": [".decl Is_hypothetical(Person:symbol)\nIs_hypothetical(\"Gandalf\").\n.decl Is_foe(Person_A:symbol, Person_B:symbol)\nIs_foe(\"Gandalf\", \"Barbas\").\n.decl Answer()\nAnswer() :- Is_hypothetical(\"Gandalf\"), Is_foe(\"Gandalf\", \"Barbas\").\n.output Answer\n\n"]}
{"id": 2024, "answer": false, "completion": ".decl Has_nationality(Person:symbol, Nationality:symbol)\nHas_nationality(\"Bulgarian\", \"Bulgaria\").\n.decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Bulgarian\", \"Christianity\").\n.decl Has_day_of_week(Event:symbol, Day_of_week:symbol)\nHas_day_of_week(\"Christmas Eve\", \"Thursday\").\n.decl Answer()\nAnswer() :- Has_nationality(\"Bulgarian\", nationality), Has_religion(\"Bulgarian\", religion), Has_day_of_week(\"Christmas Eve\", day_of_week), nationality == \"Bulgaria\", religion == \"Christianity\", day_of_week == \"Thursday\".\n.output Answer\n\n", "completions": [".decl Has_nationality(Person:symbol, Nationality:symbol)\nHas_nationality(\"Bulgarian\", \"Bulgaria\").\n.decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Bulgarian\", \"Christianity\").\n.decl Has_day_of_week(Event:symbol, Day_of_week:symbol)\nHas_day_of_week(\"Christmas Eve\", \"Thursday\").\n.decl Answer()\nAnswer() :- Has_nationality(\"Bulgarian\", nationality), Has_religion(\"Bulgarian\", religion), Has_day_of_week(\"Christmas Eve\", day_of_week), nationality == \"Bulgaria\", religion == \"Christianity\", day_of_week == \"Thursday\".\n.output Answer\n\n"]}
{"id": 2025, "answer": false, "completion": ".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"spaghetti\", \"basil\").\nHas_ingredient(\"spaghetti\", \"tomato sauce\").\nHas_ingredient(\"spaghetti\", \"cheese\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"spaghetti\", ingredient), ingredient \\= \"basil\".\n.output Answer\n\n", "completions": [".decl Has_ingredient(Dish:symbol, Ingredient:symbol)\nHas_ingredient(\"spaghetti\", \"basil\").\nHas_ingredient(\"spaghetti\", \"tomato sauce\").\nHas_ingredient(\"spaghetti\", \"cheese\").\n.decl Answer()\nAnswer() :- Has_ingredient(\"spaghetti\", ingredient), ingredient \\= \"basil\".\n.output Answer\n\n"]}
{"id": 2026, "answer": true, "completion": ".decl Has_operating_system(Device:symbol, Operating_system:symbol)\nHas_operating_system(\"Samsung Galaxy 1\", \"Android\").\n.decl Has_edible_sound(Operating_system:symbol, Sound:symbol)\nHas_edible_sound(\"Android\", \"crunchy\").\n.decl Answer()\nAnswer() :- Has_operating_system(\"Samsung Galaxy 1\", operating_system), Has_edible_sound(operating_system, sound), sound == \"crunchy\".\n.output Answer\n\n", "completions": [".decl Has_operating_system(Device:symbol, Operating_system:symbol)\nHas_operating_system(\"Samsung Galaxy 1\", \"Android\").\n.decl Has_edible_sound(Operating_system:symbol, Sound:symbol)\nHas_edible_sound(\"Android\", \"crunchy\").\n.decl Answer()\nAnswer() :- Has_operating_system(\"Samsung Galaxy 1\", operating_system), Has_edible_sound(operating_system, sound), sound == \"crunchy\".\n.output Answer\n\n"]}
{"id": 2027, "answer": false, "completion": ".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"red panda\", \"Shanghai\").\nLocated_in(\"red panda\", \"zoo\").\n.decl Answer()\nAnswer() :- Located_in(\"red panda\", location), location \\= \"zoo\".\n.output Answer\n\n", "completions": [".decl Located_in(Animal:symbol, Location:symbol)\nLocated_in(\"red panda\", \"Shanghai\").\nLocated_in(\"red panda\", \"zoo\").\n.decl Answer()\nAnswer() :- Located_in(\"red panda\", location), location \\= \"zoo\".\n.output Answer\n\n"]}
{"id": 2028, "answer": false, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"silicon\", 0.5).\nHas_price(\"Intel\", 100).\n.decl Answer()\nAnswer() :- Has_price(\"silicon\", price1), Has_price(\"Intel\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"silicon\", 0.5).\nHas_price(\"Intel\", 100).\n.decl Answer()\nAnswer() :- Has_price(\"silicon\", price1), Has_price(\"Intel\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 2029, "answer": false, "completion": ".decl Is_word(Word:symbol)\nIs_word(\"MIX\").\n.decl Is_roman_numeral(Numeral:symbol)\nIs_roman_numeral(\"X\").\n.decl Answer()\nAnswer() :- Is_word(\"MIX\"), Is_roman_numeral(\"X\").\n.output Answer\n\n", "completions": [".decl Is_word(Word:symbol)\nIs_word(\"MIX\").\n.decl Is_roman_numeral(Numeral:symbol)\nIs_roman_numeral(\"X\").\n.decl Answer()\nAnswer() :- Is_word(\"MIX\"), Is_roman_numeral(\"X\").\n.output Answer\n\n"]}
{"id": 2030, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hurricane\", \"September\").\nHappens_in_time(\"hurricane\", \"October\").\nHappens_in_time(\"hurricane\", \"November\").\nHappens_in_time(\"hurricane\", \"December\").\nHappens_in_time(\"hurricane\", \"January\").\nHappens_in_time(\"hurricane\", \"February\").\nHappens_in_time(\"hurricane\", \"March\").\nHappens_in_time(\"hurricane\", \"April\").\nHappens_in_time(\"hurricane\", \"May\").\nHappens_in_time(\"hurricane\", \"June\").\nHappens_in_time(\"hurricane\", \"July\").\nHappens_in_time(\"hurricane\", \"August\").\n.decl Happens_in_region(Event:symbol, Region:symbol)\nHappens_in_region(\"hurricane\", \"Puerto Rico\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"September\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"October\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"November\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"December\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"January\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"February\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"March\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"April\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"May\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"June\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"July\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"August\", region = \"Puerto Rico\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"hurricane\", \"September\").\nHappens_in_time(\"hurricane\", \"October\").\nHappens_in_time(\"hurricane\", \"November\").\nHappens_in_time(\"hurricane\", \"December\").\nHappens_in_time(\"hurricane\", \"January\").\nHappens_in_time(\"hurricane\", \"February\").\nHappens_in_time(\"hurricane\", \"March\").\nHappens_in_time(\"hurricane\", \"April\").\nHappens_in_time(\"hurricane\", \"May\").\nHappens_in_time(\"hurricane\", \"June\").\nHappens_in_time(\"hurricane\", \"July\").\nHappens_in_time(\"hurricane\", \"August\").\n.decl Happens_in_region(Event:symbol, Region:symbol)\nHappens_in_region(\"hurricane\", \"Puerto Rico\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"September\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"October\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"November\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"December\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"January\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"February\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"March\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"April\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"May\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"June\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"July\", region = \"Puerto Rico\".\nAnswer() :- Happens_in_time(\"hurricane\", time), Happens_in_region(\"hurricane\", region), time = \"August\", region = \"Puerto Rico\".\n.output Answer\n\n"]}
{"id": 2031, "answer": true, "completion": ".decl Has_been_featured_in_film(Film:symbol, Grail:symbol)\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Holy Grail\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Life of Brian\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"The Meaning of Life\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"And Now For Something Completely Different\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Monty Python Live at the Hollywood Bowl\").\n.decl Answer()\nAnswer() :- Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Holy Grail\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Life of Brian\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"The Meaning of Life\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"And Now For Something Completely Different\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Monty Python Live at the Hollywood Bowl\").\n.output Answer\n\n", "completions": [".decl Has_been_featured_in_film(Film:symbol, Grail:symbol)\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Holy Grail\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Life of Brian\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"The Meaning of Life\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"And Now For Something Completely Different\").\nHas_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Monty Python Live at the Hollywood Bowl\").\n.decl Answer()\nAnswer() :- Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Holy Grail\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Life of Brian\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"The Meaning of Life\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"And Now For Something Completely Different\"), Has_been_featured_in_film(\"Monty Python and the Holy Grail\", \"Monty Python Live at the Hollywood Bowl\").\n.output Answer\n\n"]}
{"id": 2032, "answer": false, "completion": ".decl Has_lentil_avoidance(Person:symbol, Avoidance:float)\nHas_lentil_avoidance(\"Jean Harris\", 1).\n.decl Has_lentil_preference(Person:symbol, Preference:float)\nHas_lentil_preference(\"Jean Harris\", 0).\n.decl Answer()\nAnswer() :- Has_lentil_avoidance(\"Jean Harris\", avoidance), Has_lentil_preference(\"Jean Harris\", preference), avoidance > preference.\n.output Answer\n\n", "completions": [".decl Has_lentil_avoidance(Person:symbol, Avoidance:float)\nHas_lentil_avoidance(\"Jean Harris\", 1).\n.decl Has_lentil_preference(Person:symbol, Preference:float)\nHas_lentil_preference(\"Jean Harris\", 0).\n.decl Answer()\nAnswer() :- Has_lentil_avoidance(\"Jean Harris\", avoidance), Has_lentil_preference(\"Jean Harris\", preference), avoidance > preference.\n.output Answer\n\n"]}
{"id": 2033, "answer": false, "completion": ".decl Sold(Person:symbol, Item:symbol)\nSold(\"Boticelli\", \"The Birth of Venus\").\nSold(\"Boticelli\", \"The Death of Socrates\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Socrates\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death", "completions": [".decl Sold(Person:symbol, Item:symbol)\nSold(\"Boticelli\", \"The Birth of Venus\").\nSold(\"Boticelli\", \"The Death of Socrates\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Socrates\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death of Epaminondas\").\nSold(\"Boticelli\", \"The Death"]}
{"id": 2034, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Air Force\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Return of the Jedi\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"United States Air Force\", n_members1), Has_n_members(\"Return of the Jedi\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"United States Air Force\", 4).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Return of the Jedi\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"United States Air Force\", n_members1), Has_n_members(\"Return of the Jedi\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 2035, "answer": false, "completion": ".decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Shaggy Rogers\", \"Norville\").\nHas_first_name(\"Redenbacher popcorn founder\", \"Richard\").\n.decl Answer()\nAnswer() :- Has_first_name(\"Shaggy Rogers\", first_name), Has_first_name(\"Redenbacher popcorn founder\", first_name).\n.output Answer\n\n", "completions": [".decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Shaggy Rogers\", \"Norville\").\nHas_first_name(\"Redenbacher popcorn founder\", \"Richard\").\n.decl Answer()\nAnswer() :- Has_first_name(\"Shaggy Rogers\", first_name), Has_first_name(\"Redenbacher popcorn founder\", first_name).\n.output Answer\n\n"]}
{"id": 2036, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"scientific revolution\", \"17th century\").\nHappens_in_time(\"scientific revolution\", \"18th century\").\nHappens_in_time(\"scientific revolution\", \"19th century\").\nHappens_in_time(\"scientific revolution\", \"20th century\").\nHappens_in_time(\"scientific revolution\", \"21st century\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"iPhone release\", 10).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"iPhone release\", n_years1), Happens_in_time(\"scientific revolution\", time), time > \"17th century\", time < \"21st century\", n_years1 <= (time - \"17th century\") / 100.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"scientific revolution\", \"17th century\").\nHappens_in_time(\"scientific revolution\", \"18th century\").\nHappens_in_time(\"scientific revolution\", \"19th century\").\nHappens_in_time(\"scientific revolution\", \"20th century\").\nHappens_in_time(\"scientific revolution\", \"21st century\").\n.decl Happens_every_n_years(Event:symbol, N_years:float)\nHappens_every_n_years(\"iPhone release\", 10).\n.decl Answer()\nAnswer() :- Happens_every_n_years(\"iPhone release\", n_years1), Happens_in_time(\"scientific revolution\", time), time > \"17th century\", time < \"21st century\", n_years1 <= (time - \"17th century\") / 100.\n.output Answer\n\n"]}
{"id": 2037, "answer": false, "completion": ".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Coloseum\", \"Coloseum\").\nHas_name(\"Coloseum\", \"Colosseum\").\nHas_name(\"Coloseum\", \"Colosseo\").\nHas_name(\"Coloseum\", \"Colosei\").\nHas_name(\"Coloseum\", \"Colosea\").\nHas_name(\"Coloseum\", \"Colose\").\nHas_name(\"Coloseum\", \"Colos\").\nHas_name(\"Coloseum\", \"Colo\").\nHas_name(\"Coloseum\", \"Col\").\nHas_name(\"Coloseum\", \"Co\").\nHas_name(\"Coloseum\", \"C\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"gladiator\", \"gladiator\").\nHas_name(\"gladiator\", \"gladiador\").\nHas_name(\"gladiator\", \"gladiadore\").\nHas_name(\"gladiator\", \"gladiadori\").\nHas_name(\"gladiator\", \"gladiadoria\").\nHas_name(\"gladiator\", \"gladiador\").\nHas_name(\"gladiator\", \"gladiad\").\nHas_name(\"gladiator\", \"gladi\").\nHas_name(\"gladiator\", \"glad\").\nHas_name(\"gladiator\", \"gla\").\nHas_name(\"gladiator\", \"gl\").\nHas_name(\"gladiator\", \"g\").\n.decl Answer()\nAnswer() :- Has_name(\"Coloseum\", name1), Has_name(\"gladiator\", name2), name1 == name2.\n.output Answer\n\n", "completions": [".decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"Coloseum\", \"Coloseum\").\nHas_name(\"Coloseum\", \"Colosseum\").\nHas_name(\"Coloseum\", \"Colosseo\").\nHas_name(\"Coloseum\", \"Colosei\").\nHas_name(\"Coloseum\", \"Colosea\").\nHas_name(\"Coloseum\", \"Colose\").\nHas_name(\"Coloseum\", \"Colos\").\nHas_name(\"Coloseum\", \"Colo\").\nHas_name(\"Coloseum\", \"Col\").\nHas_name(\"Coloseum\", \"Co\").\nHas_name(\"Coloseum\", \"C\").\n.decl Has_name(Object:symbol, Name:symbol)\nHas_name(\"gladiator\", \"gladiator\").\nHas_name(\"gladiator\", \"gladiador\").\nHas_name(\"gladiator\", \"gladiadore\").\nHas_name(\"gladiator\", \"gladiadori\").\nHas_name(\"gladiator\", \"gladiadoria\").\nHas_name(\"gladiator\", \"gladiador\").\nHas_name(\"gladiator\", \"gladiad\").\nHas_name(\"gladiator\", \"gladi\").\nHas_name(\"gladiator\", \"glad\").\nHas_name(\"gladiator\", \"gla\").\nHas_name(\"gladiator\", \"gl\").\nHas_name(\"gladiator\", \"g\").\n.decl Answer()\nAnswer() :- Has_name(\"Coloseum\", name1), Has_name(\"gladiator\", name2), name1 == name2.\n.output Answer\n\n"]}
{"id": 2038, "answer": true, "completion": ".decl Has_disorder(Person:symbol, Disorder:symbol)\nHas_disorder(\"Van Gogh\", \"depression\").\n.decl Has_symptom(Disorder:symbol, Symptom:symbol)\nHas_symptom(\"depression\", \"sadness\").\n.decl Answer()\nAnswer() :- Has_disorder(\"Van Gogh\", disorder), Has_symptom(disorder, symptom), symptom = \"sadness\".\n.output Answer\n\n", "completions": [".decl Has_disorder(Person:symbol, Disorder:symbol)\nHas_disorder(\"Van Gogh\", \"depression\").\n.decl Has_symptom(Disorder:symbol, Symptom:symbol)\nHas_symptom(\"depression\", \"sadness\").\n.decl Answer()\nAnswer() :- Has_disorder(\"Van Gogh\", disorder), Has_symptom(disorder, symptom), symptom = \"sadness\".\n.output Answer\n\n"]}
{"id": 2039, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"New Year's Day\", \"January\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), Happens_in_time(\"New Year's Day\", month), month != \"December\".\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"New Year's Day\", \"January\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), Happens_in_time(\"New Year's Day\", month), month != \"December\".\n.output Answer\n\n"]}
{"id": 2040, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"pear\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"pear\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 2041, "answer": true, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"tomato\", 25).\nHas_temperature(\"hot water\", 100).\nHas_temperature(\"cold water\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"tomato\", temperature1), Has_temperature(\"hot water\", temperature2), Has_temperature(\"cold water\", temperature3), temperature1 > temperature2, temperature1 > temperature3.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"tomato\", 25).\nHas_temperature(\"hot water\", 100).\nHas_temperature(\"cold water\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"tomato\", temperature1), Has_temperature(\"hot water\", temperature2), Has_temperature(\"cold water\", temperature3), temperature1 > temperature2, temperature1 > temperature3.\n.output Answer\n\n"]}
{"id": 2042, "answer": false, "completion": ".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Dolce & Gabbana\", \"atheist\").\nHas_religion(\"Amish\", \"Christian\").\n.decl Answer()\nAnswer() :- Has_religion(\"Dolce & Gabbana\", religion1), Has_religion(\"Amish\", religion2), religion1 != religion2.\n.output Answer\n\n", "completions": [".decl Has_religion(Person:symbol, Religion:symbol)\nHas_religion(\"Dolce & Gabbana\", \"atheist\").\nHas_religion(\"Amish\", \"Christian\").\n.decl Answer()\nAnswer() :- Has_religion(\"Dolce & Gabbana\", religion1), Has_religion(\"Amish\", religion2), religion1 != religion2.\n.output Answer\n\n"]}
{"id": 2043, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Super Mario\", \"green\").\nHas_color(\"Super Mario\", \"red\").\nHas_color(\"Super Mario\", \"blue\").\nHas_color(\"Super Mario\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_color(\"Super Mario\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Super Mario\", \"green\").\nHas_color(\"Super Mario\", \"red\").\nHas_color(\"Super Mario\", \"blue\").\nHas_color(\"Super Mario\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_color(\"Super Mario\", color).\n.output Answer\n\n"]}
{"id": 2044, "answer": true, "completion": ".decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Great Pyramid of Giza\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Hanging Gardens of Babylon\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Colossus of Rhodes\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Lighthouse of Alexandria\", 4).\n.decl Answer()\nAnswer() :- Has_n_sides(\"Great Pyramid of Giza\", n_sides1), Has_n_sides(\"Hanging Gardens of Babylon\", n_sides2), Has_n_sides(\"Colossus of Rhodes\", n_sides3), Has_n_sides(\"Lighthouse of Alexandria\", n_sides4), n_sides1 < n_sides2, n_sides1 < n_sides3, n_sides1 < n_sides4.\n.output Answer\n\n", "completions": [".decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Great Pyramid of Giza\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Hanging Gardens of Babylon\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Colossus of Rhodes\", 4).\n.decl Has_n_sides(Object:symbol, N_sides:float)\nHas_n_sides(\"Lighthouse of Alexandria\", 4).\n.decl Answer()\nAnswer() :- Has_n_sides(\"Great Pyramid of Giza\", n_sides1), Has_n_sides(\"Hanging Gardens of Babylon\", n_sides2), Has_n_sides(\"Colossus of Rhodes\", n_sides3), Has_n_sides(\"Lighthouse of Alexandria\", n_sides4), n_sides1 < n_sides2, n_sides1 < n_sides3, n_sides1 < n_sides4.\n.output Answer\n\n"]}
{"id": 2045, "answer": false, "completion": ".decl Was_baptized(Person:symbol)\nWas_baptized(\"Alexander the Great\").\n.decl Answer()\nAnswer() :- Was_baptized(\"Alexander the Great\").\n.output Answer\n\n", "completions": [".decl Was_baptized(Person:symbol)\nWas_baptized(\"Alexander the Great\").\n.decl Answer()\nAnswer() :- Was_baptized(\"Alexander the Great\").\n.output Answer\n\n"]}
{"id": 2046, "answer": true, "completion": ".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Venus\", 467).\nHas_temperature(\"hypothermia\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"Venus\", temperature), Has_temperature(\"hypothermia\", temperature2), temperature < temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"Venus\", 467).\nHas_temperature(\"hypothermia\", 0).\n.decl Answer()\nAnswer() :- Has_temperature(\"Venus\", temperature), Has_temperature(\"hypothermia\", temperature2), temperature < temperature2.\n.output Answer\n\n"]}
{"id": 2047, "answer": true, "completion": ".decl Plays_well(Person:symbol, Sport:symbol)\nPlays_well(\"Benito Mussolini\", \"basketball\").\nPlays_well(\"Michael Jordan\", \"basketball\").\n.decl Answer()\nAnswer() :- Plays_well(\"Benito Mussolini\", sport), Plays_well(\"Michael Jordan\", sport), sport != \"basketball\".\n.output Answer\n\n", "completions": [".decl Plays_well(Person:symbol, Sport:symbol)\nPlays_well(\"Benito Mussolini\", \"basketball\").\nPlays_well(\"Michael Jordan\", \"basketball\").\n.decl Answer()\nAnswer() :- Plays_well(\"Benito Mussolini\", sport), Plays_well(\"Michael Jordan\", sport), sport != \"basketball\".\n.output Answer\n\n"]}
{"id": 2048, "answer": true, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Yuri Gagarin\", 1.7).\nHas_height(\"LeBron James\", 2.06).\n.decl Answer()\nAnswer() :- Has_height(\"LeBron James\", height1), Has_height(\"Yuri Gagarin\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Yuri Gagarin\", 1.7).\nHas_height(\"LeBron James\", 2.06).\n.decl Answer()\nAnswer() :- Has_height(\"LeBron James\", height1), Has_height(\"Yuri Gagarin\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 2049, "answer": true, "completion": ".decl Has_final_resting_place(Person:symbol, Place:symbol)\nHas_final_resting_place(\"Carl Linnaeus\", \"Hollywood\").\nHas_final_resting_place(\"Michael Jackson\", \"Hollywood\").\n.decl Answer()\nAnswer() :- Has_final_resting_place(\"Carl Linnaeus\", place1), Has_final_resting_place(\"Michael Jackson\", place2), place1 = place2.\n.output Answer\n\n", "completions": [".decl Has_final_resting_place(Person:symbol, Place:symbol)\nHas_final_resting_place(\"Carl Linnaeus\", \"Hollywood\").\nHas_final_resting_place(\"Michael Jackson\", \"Hollywood\").\n.decl Answer()\nAnswer() :- Has_final_resting_place(\"Carl Linnaeus\", place1), Has_final_resting_place(\"Michael Jackson\", place2), place1 = place2.\n.output Answer\n\n"]}
{"id": 2050, "answer": true, "completion": ".decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"John Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jack Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jim Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimmy Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_co", "completions": [".decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"John Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jack Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jim Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimmy Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_cooper(\"Jimbo Cooper\").\n.decl Is_a_cooper(Person:symbol)\nIs_a_co"]}
{"id": 2051, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Pope Alexander VI\", \"Alexander VI\").\nHas_name(\"Pope Alexander VI\", \"Clement VIII\").\nHas_name(\"Pope Alexander VI\", \"Pius VII\").\nHas_name(\"Pope Alexander VI\", \"Pius IX\").\nHas_name(\"Pope Alexander VI\", \"Leo XII\").\nHas_name(\"Pope Alexander VI\", \"Pius X\").\nHas_name(\"Pope Alexander VI\", \"John Paul II\").\n.decl Has_saint_name(Person:symbol, Saint_name:symbol)\nHas_saint_name(\"Pope Alexander VI\", \"Alexander\").\nHas_saint_name(\"Pope Alexander VI\", \"Clement\").\nHas_saint_name(\"Pope Alexander VI\", \"Pius\").\nHas_saint_name(\"Pope Alexander VI\", \"Leo\").\nHas_saint_name(\"Pope Alexander VI\", \"Pius\").\nHas_saint_name(\"Pope Alexander VI\", \"John Paul\").\n.decl Answer()\nAnswer() :- Has_name(\"Pope Alexander VI\", name1), Has_saint_name(\"Pope Alexander VI\", saint_name1), Has_name(person2, name2), Has_saint_name(person2, saint_name2), name1 = name2, saint_name1 = saint_name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Pope Alexander VI\", \"Alexander VI\").\nHas_name(\"Pope Alexander VI\", \"Clement VIII\").\nHas_name(\"Pope Alexander VI\", \"Pius VII\").\nHas_name(\"Pope Alexander VI\", \"Pius IX\").\nHas_name(\"Pope Alexander VI\", \"Leo XII\").\nHas_name(\"Pope Alexander VI\", \"Pius X\").\nHas_name(\"Pope Alexander VI\", \"John Paul II\").\n.decl Has_saint_name(Person:symbol, Saint_name:symbol)\nHas_saint_name(\"Pope Alexander VI\", \"Alexander\").\nHas_saint_name(\"Pope Alexander VI\", \"Clement\").\nHas_saint_name(\"Pope Alexander VI\", \"Pius\").\nHas_saint_name(\"Pope Alexander VI\", \"Leo\").\nHas_saint_name(\"Pope Alexander VI\", \"Pius\").\nHas_saint_name(\"Pope Alexander VI\", \"John Paul\").\n.decl Answer()\nAnswer() :- Has_name(\"Pope Alexander VI\", name1), Has_saint_name(\"Pope Alexander VI\", saint_name1), Has_name(person2, name2), Has_saint_name(person2, saint_name2), name1 = name2, saint_name1 = saint_name2.\n.output Answer\n\n"]}
{"id": 2052, "answer": false, "completion": ".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"French person\", \"French\").\nSpeaks(\"Cleary student\", \"English\").\nSpeaks(\"Cleary student\", \"American Sign Language\").\n.decl Answer()\nAnswer() :- Speaks(\"Cleary student\", language), Speaks(\"French person\", language).\n.output Answer\n\n", "completions": [".decl Speaks(Person:symbol, Language:symbol)\nSpeaks(\"French person\", \"French\").\nSpeaks(\"Cleary student\", \"English\").\nSpeaks(\"Cleary student\", \"American Sign Language\").\n.decl Answer()\nAnswer() :- Speaks(\"Cleary student\", language), Speaks(\"French person\", language).\n.output Answer\n\n"]}
{"id": 2053, "answer": false, "completion": ".decl Associates(Person:symbol, Movie:symbol)\nAssociates(\"Jim\", \"Homeward Bound\").\nAssociates(\"Jim\", \"The Right Stuff\").\nAssociates(\"Jim\", \"The Last of the Mohicans\").\nAssociates(\"Jim\", \"The English Patient\").\nAssociates(\"Jim\", \"The Crying Game\").\nAssociates(\"Jim\", \"The Postman\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssoci", "completions": [".decl Associates(Person:symbol, Movie:symbol)\nAssociates(\"Jim\", \"Homeward Bound\").\nAssociates(\"Jim\", \"The Right Stuff\").\nAssociates(\"Jim\", \"The Last of the Mohicans\").\nAssociates(\"Jim\", \"The English Patient\").\nAssociates(\"Jim\", \"The Crying Game\").\nAssociates(\"Jim\", \"The Postman\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssociates(\"Jim\", \"The Postman Always Rings Twice\").\nAssoci"]}
{"id": 2054, "answer": true, "completion": ".decl Wrote(Person:symbol, Book:symbol)\nWrote(\"Terry Pratchett\", \"Small Gods\").\nWrote(\"Terry Pratchett\", \"The Spellman Files\").\nWrote(\"Terry Pratchett\", \"The Last Continent\").\nWrote(\"Terry Pratchett\", \"The Color of Magic\").\nWrote(\"Terry Pratchett\", \"The Light Fantastic\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Making Money\").\nWrote(\"Terry Pratchett\", \"Reaper Man\").\nWrote(\"Terry Pratchett\", \"Wyrd Sisters\").\nWrote(\"Terry Pratchett\", \"Pyramids\").\nWrote(\"Terry Pratchett\", \"Guards! Guards!\").\nWrote(\"Terry Pratchett\", \"Night Watch\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men", "completions": [".decl Wrote(Person:symbol, Book:symbol)\nWrote(\"Terry Pratchett\", \"Small Gods\").\nWrote(\"Terry Pratchett\", \"The Spellman Files\").\nWrote(\"Terry Pratchett\", \"The Last Continent\").\nWrote(\"Terry Pratchett\", \"The Color of Magic\").\nWrote(\"Terry Pratchett\", \"The Light Fantastic\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Making Money\").\nWrote(\"Terry Pratchett\", \"Reaper Man\").\nWrote(\"Terry Pratchett\", \"Wyrd Sisters\").\nWrote(\"Terry Pratchett\", \"Pyramids\").\nWrote(\"Terry Pratchett\", \"Guards! Guards!\").\nWrote(\"Terry Pratchett\", \"Night Watch\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men\").\nWrote(\"Terry Pratchett\", \"Monstrous Regiment\").\nWrote(\"Terry Pratchett\", \"A Hat Full of Sky\").\nWrote(\"Terry Pratchett\", \"Going Postal\").\nWrote(\"Terry Pratchett\", \"Thief of Time\").\nWrote(\"Terry Pratchett\", \"The Truth\").\nWrote(\"Terry Pratchett\", \"The Wee Free Men"]}
{"id": 2055, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Cypriot\", \"Islam\").\nBelongs_to_religion(\"Cypriot\", \"Christian\").\nBelongs_to_religion(\"Cypriot\", \"Atheist\").\nBelongs_to_religion(\"Cypriot\", \"Jew\").\nBelongs_to_religion(\"Cypriot\", \"Muslim\").\nBelongs_to_religion(\"Cypriot\", \"Hindu\").\nBelongs_to_religion(\"Cypriot\", \"Buddhist\").\nBelongs_to_religion(\"Cypriot\", \"Sikh\").\nBelongs_to_religion(\"Cypriot\", \"Shinto\").\nBelongs_to_religion(\"Cypriot\", \"Jain\").\nBelongs_to_religion(\"Cypriot\", \"Taoist\").\nBelongs_to_religion(\"Cypriot\", \"Confucian\").\nBelongs_to_religion(\"Cypriot\", \"Rastafarian\").\nBelongs_to_religion(\"Cypriot\", \"Spiritist\").\nBelongs_to_religion(\"Cypriot\", \"Hare Krishna\").\nBelongs_to_religion(\"Cypriot\", \"Tenrikyo\").\nBelongs_to_religion(\"Cypriot\", \"Unitarian-Universalism\").\nBelongs_to_religion(\"Cypriot\", \"Zoroastrian\").\nBelongs_to_religion(\"Cypriot\", \"Agnostic\").\nBelongs_to_religion(\"Cypriot\", \"Atheist\").\nBelongs_to_religion(\"Cypriot\", \"Other\").\nBelongs_to_religion(\"Cypriot\", \"None\").\n.decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Turkish\", \"Islam\").\nBelongs_to_religion(\"Turkish\", \"Christian\").\nBelongs_to_religion(\"Turkish\", \"Atheist\").\nBelongs_to_religion(\"Turkish\", \"Jew\").\nBelongs_to_religion(\"Turkish\", \"Muslim\").\nBelongs_to_religion(\"Turkish\", \"Hindu\").\nBelongs_to_religion(\"Turkish\", \"Buddhist\").\nBelongs_to_religion(\"Turkish\", \"Sikh\").\nBelongs_to_religion(\"Turkish\", \"Shinto\").\nBelongs_to_religion(\"Turkish\", \"Jain\").\nBelongs_to_religion(\"Turkish\", \"Taoist\").\nBelongs_to_religion(\"Turkish\", \"Confucian\").\nBelongs_to_religion(\"Turkish\", \"Rastafarian\").\nBelongs_to_religion(\"Turkish\", \"Spiritist\").\nBelongs_to_religion(\"Turkish\", \"Hare Krishna\").\nBelongs_to_religion(\"Turkish\", \"Tenrikyo\").\nBelongs_to_religion(\"Turkish\", \"Unitarian-Universalism\").\nBelongs_to_religion(\"Turkish\", \"Zoroastrian\").\nBelongs_to_religion(\"Turkish\", \"Agnostic\").\nBelongs_to_religion(\"Turkish\", \"Atheist\").\nBelongs_to_religion(\"Turkish\", \"Other\").\nBelongs_to_religion(\"Turkish\", \"None\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Cypriot\", religion1), Belongs_to_religion(\"Turkish", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Cypriot\", \"Islam\").\nBelongs_to_religion(\"Cypriot\", \"Christian\").\nBelongs_to_religion(\"Cypriot\", \"Atheist\").\nBelongs_to_religion(\"Cypriot\", \"Jew\").\nBelongs_to_religion(\"Cypriot\", \"Muslim\").\nBelongs_to_religion(\"Cypriot\", \"Hindu\").\nBelongs_to_religion(\"Cypriot\", \"Buddhist\").\nBelongs_to_religion(\"Cypriot\", \"Sikh\").\nBelongs_to_religion(\"Cypriot\", \"Shinto\").\nBelongs_to_religion(\"Cypriot\", \"Jain\").\nBelongs_to_religion(\"Cypriot\", \"Taoist\").\nBelongs_to_religion(\"Cypriot\", \"Confucian\").\nBelongs_to_religion(\"Cypriot\", \"Rastafarian\").\nBelongs_to_religion(\"Cypriot\", \"Spiritist\").\nBelongs_to_religion(\"Cypriot\", \"Hare Krishna\").\nBelongs_to_religion(\"Cypriot\", \"Tenrikyo\").\nBelongs_to_religion(\"Cypriot\", \"Unitarian-Universalism\").\nBelongs_to_religion(\"Cypriot\", \"Zoroastrian\").\nBelongs_to_religion(\"Cypriot\", \"Agnostic\").\nBelongs_to_religion(\"Cypriot\", \"Atheist\").\nBelongs_to_religion(\"Cypriot\", \"Other\").\nBelongs_to_religion(\"Cypriot\", \"None\").\n.decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Turkish\", \"Islam\").\nBelongs_to_religion(\"Turkish\", \"Christian\").\nBelongs_to_religion(\"Turkish\", \"Atheist\").\nBelongs_to_religion(\"Turkish\", \"Jew\").\nBelongs_to_religion(\"Turkish\", \"Muslim\").\nBelongs_to_religion(\"Turkish\", \"Hindu\").\nBelongs_to_religion(\"Turkish\", \"Buddhist\").\nBelongs_to_religion(\"Turkish\", \"Sikh\").\nBelongs_to_religion(\"Turkish\", \"Shinto\").\nBelongs_to_religion(\"Turkish\", \"Jain\").\nBelongs_to_religion(\"Turkish\", \"Taoist\").\nBelongs_to_religion(\"Turkish\", \"Confucian\").\nBelongs_to_religion(\"Turkish\", \"Rastafarian\").\nBelongs_to_religion(\"Turkish\", \"Spiritist\").\nBelongs_to_religion(\"Turkish\", \"Hare Krishna\").\nBelongs_to_religion(\"Turkish\", \"Tenrikyo\").\nBelongs_to_religion(\"Turkish\", \"Unitarian-Universalism\").\nBelongs_to_religion(\"Turkish\", \"Zoroastrian\").\nBelongs_to_religion(\"Turkish\", \"Agnostic\").\nBelongs_to_religion(\"Turkish\", \"Atheist\").\nBelongs_to_religion(\"Turkish\", \"Other\").\nBelongs_to_religion(\"Turkish\", \"None\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Cypriot\", religion1), Belongs_to_religion(\"Turkish"]}
{"id": 2056, "answer": false, "completion": ".decl Is_member_of(Person:symbol, Group:symbol)\nIs_member_of(\"John Key\", \"Botany Swarm\").\n.decl Answer()\nAnswer() :- Is_member_of(\"John Key\", group), Is_member_of(\"fan of the Botany Swarm\", group).\n.output Answer\n\n", "completions": [".decl Is_member_of(Person:symbol, Group:symbol)\nIs_member_of(\"John Key\", \"Botany Swarm\").\n.decl Answer()\nAnswer() :- Is_member_of(\"John Key\", group), Is_member_of(\"fan of the Botany Swarm\", group).\n.output Answer\n\n"]}
{"id": 2057, "answer": true, "completion": ".decl Has_capacity(Place:symbol, Capacity:float)\nHas_capacity(\"Roman Colosseum\", 12000).\nHas_capacity(\"Madison Square Garden\", 20200).\nHas_capacity(\"Staples Center\", 18000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Maroon 5\", 5).\n.decl Answer()\nAnswer() :- Has_capacity(\"Roman Colosseum\", capacity), Has_n_members(\"Maroon 5\", n_members), capacity >= n_members.\n.output Answer\n\n", "completions": [".decl Has_capacity(Place:symbol, Capacity:float)\nHas_capacity(\"Roman Colosseum\", 12000).\nHas_capacity(\"Madison Square Garden\", 20200).\nHas_capacity(\"Staples Center\", 18000).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Maroon 5\", 5).\n.decl Answer()\nAnswer() :- Has_capacity(\"Roman Colosseum\", capacity), Has_n_members(\"Maroon 5\", n_members), capacity >= n_members.\n.output Answer\n\n"]}
{"id": 2058, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Cookie Monster\", \"cookies\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Cookie Monster\", \"cookies\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\"Cookie Monster\", \"salami\").\nEats(\"Cookie Monster\", \"bacon\").\nEats(\"Cookie Monster\", \"ham\").\nEats(\"Cookie Monster\", \"sausage\").\nEats(\"Cookie Monster\", \"yogurt\").\nEats(\"Cookie Monster\", \"liver\").\nEats(\"Cookie Monster\", \"milk\").\nEats(\"Cookie Monster\", \"cheese\").\nEats(\"Cookie Monster\", \"eggs\").\nEats(\"Cookie Monster\", \"butter\").\nEats(\"Cookie Monster\", \"cream\").\nEats(\"Cookie Monster\", \"sugar\").\nEats(\"Cookie Monster\", \"honey\").\nEats(\"Cookie Monster\", \"chocolate\").\nEats(\"Cookie Monster\", \"pizza\").\nEats(\""]}
{"id": 2059, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"stork visit\", \"spring\").\nHappens_in_time(\"baby shower\", \"spring\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"stork visit\", time), Happens_in_time(\"baby shower\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"stork visit\", \"spring\").\nHappens_in_time(\"baby shower\", \"spring\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"stork visit\", time), Happens_in_time(\"baby shower\", time).\n.output Answer\n\n"]}
{"id": 2060, "answer": false, "completion": ".decl Appears_in_musical(Animal:symbol, Musical:symbol)\nAppears_in_musical(\"hyena\", \"The Lion King\").\n.decl Answer()\nAnswer() :- Appears_in_musical(\"hyena\", musical).\n.output Answer\n\n", "completions": [".decl Appears_in_musical(Animal:symbol, Musical:symbol)\nAppears_in_musical(\"hyena\", \"The Lion King\").\n.decl Answer()\nAnswer() :- Appears_in_musical(\"hyena\", musical).\n.output Answer\n\n"]}
{"id": 2061, "answer": true, "completion": ".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Millard Fillmore\", \"Canisius College\").\nGraduates(\"Millard Fillmore\", \"Columbia University\").\nGraduates(\"Millard Fillmore\", \"University of Pittsburgh\").\n.decl Answer()\nAnswer() :- Graduates(\"Millard Fillmore\", \"University of Pittsburgh\").\n.output Answer\n\n", "completions": [".decl Graduates(Person:symbol, University:symbol)\nGraduates(\"Millard Fillmore\", \"Canisius College\").\nGraduates(\"Millard Fillmore\", \"Columbia University\").\nGraduates(\"Millard Fillmore\", \"University of Pittsburgh\").\n.decl Answer()\nAnswer() :- Graduates(\"Millard Fillmore\", \"University of Pittsburgh\").\n.output Answer\n\n"]}
{"id": 2062, "answer": false, "completion": ".decl Has_temperature(Climate:symbol, Temperature:float)\nHas_temperature(\"global warming\", 1).\nHas_temperature(\"Satanism\", -1).\n.decl Answer()\nAnswer() :- Has_temperature(\"global warming\", temperature1), Has_temperature(\"Satanism\", temperature2), temperature1 > temperature2.\n.output Answer\n\n", "completions": [".decl Has_temperature(Climate:symbol, Temperature:float)\nHas_temperature(\"global warming\", 1).\nHas_temperature(\"Satanism\", -1).\n.decl Answer()\nAnswer() :- Has_temperature(\"global warming\", temperature1), Has_temperature(\"Satanism\", temperature2), temperature1 > temperature2.\n.output Answer\n\n"]}
{"id": 2063, "answer": true, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Robert Downey Jr.\", 53).\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Robert Downey Jr.\", 53).\n.decl Answer()\nAnswer() :- Has_age(\"Robert Downey Jr.\", age1), Has_age(\"Robert Downey Jr.\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Robert Downey Jr.\", 53).\n.decl Has_age(Person:symbol, Age:float)\nHas_age(\"Robert Downey Jr.\", 53).\n.decl Answer()\nAnswer() :- Has_age(\"Robert Downey Jr.\", age1), Has_age(\"Robert Downey Jr.\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 2064, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"coin\", 0.9).\nHas_density(\"mercury\", 13.6).\n.decl Answer()\nAnswer() :- Has_density(\"coin\", density1), Has_density(\"mercury\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"coin\", 0.9).\nHas_density(\"mercury\", 13.6).\n.decl Answer()\nAnswer() :- Has_density(\"coin\", density1), Has_density(\"mercury\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 2065, "answer": false, "completion": ".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Newt Gingrich\", \"Turtle\").\n.decl Has_common_ancestor(Animal_A:symbol, Animal_B:symbol)\nHas_common_ancestor(\"turtle\", \"snake\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Newt Gingrich\", nickname), Has_common_ancestor(nickname, \"snake\").\n.output Answer\n\n", "completions": [".decl Has_nickname(Person:symbol, Nickname:symbol)\nHas_nickname(\"Newt Gingrich\", \"Turtle\").\n.decl Has_common_ancestor(Animal_A:symbol, Animal_B:symbol)\nHas_common_ancestor(\"turtle\", \"snake\").\n.decl Answer()\nAnswer() :- Has_nickname(\"Newt Gingrich\", nickname), Has_common_ancestor(nickname, \"snake\").\n.output Answer\n\n"]}
{"id": 2066, "answer": false, "completion": ".decl Commandment(Commandment:symbol)\nCommandment(\"Thou shalt not kill\").\n.decl Commandment_broken(Person:symbol, Commandment:symbol)\nCommandment_broken(\"Christopher Columbus\", \"Thou shalt not kill\").\n.decl Answer()\nAnswer() :- Commandment_broken(\"Christopher Columbus\", commandment), Commandment(commandment).\n.output Answer\n\n", "completions": [".decl Commandment(Commandment:symbol)\nCommandment(\"Thou shalt not kill\").\n.decl Commandment_broken(Person:symbol, Commandment:symbol)\nCommandment_broken(\"Christopher Columbus\", \"Thou shalt not kill\").\n.decl Answer()\nAnswer() :- Commandment_broken(\"Christopher Columbus\", commandment), Commandment(commandment).\n.output Answer\n\n"]}
{"id": 2067, "answer": false, "completion": ".decl Has_value(Object:symbol, Value:float)\nHas_value(\"DJI Mavic Pro Drone\", 800).\nHas_value(\"Reconstruction era coin\", 0.01).\n.decl Answer()\nAnswer() :- Has_value(\"Reconstruction era coin\", value1), Has_value(\"DJI Mavic Pro Drone\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Object:symbol, Value:float)\nHas_value(\"DJI Mavic Pro Drone\", 800).\nHas_value(\"Reconstruction era coin\", 0.01).\n.decl Answer()\nAnswer() :- Has_value(\"Reconstruction era coin\", value1), Has_value(\"DJI Mavic Pro Drone\", value2), value1 > value2.\n.output Answer\n\n"]}
{"id": 2068, "answer": false, "completion": ".decl Has_age(Object:symbol, Age:float)\nHas_age(\"chlorine\", 1).\nHas_age(\"water\", 7).\n.decl Answer()\nAnswer() :- Has_age(\"chlorine\", age1), Has_age(\"water\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Object:symbol, Age:float)\nHas_age(\"chlorine\", 1).\nHas_age(\"water\", 7).\n.decl Answer()\nAnswer() :- Has_age(\"chlorine\", age1), Has_age(\"water\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 2069, "answer": true, "completion": ".decl Has_ribbon(Disease:symbol, Ribbon:symbol)\nHas_ribbon(\"breast cancer\", \"ribbon\").\n.decl Answer()\nAnswer() :- Has_ribbon(\"breast cancer\", ribbon).\n.output Answer\n\n", "completions": [".decl Has_ribbon(Disease:symbol, Ribbon:symbol)\nHas_ribbon(\"breast cancer\", \"ribbon\").\n.decl Answer()\nAnswer() :- Has_ribbon(\"breast cancer\", ribbon).\n.output Answer\n\n"]}
{"id": 2070, "answer": false, "completion": ".decl Is_paraplegic(Person:symbol)\nIs_paraplegic(\"Christopher Reeve\").\n.decl Is_musician(Person:symbol)\nIs_musician(\"Christopher Reeve\").\n.decl Is_orchestra(Orchestra:symbol)\nIs_orchestra(\"New York Philharmonic\").\n.decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Christopher Reeve\", \"cello\").\n.decl Answer()\nAnswer() :- Is_paraplegic(person), Is_musician(person), Plays_instrument(person, instrument), Is_orchestra(orchestra), instrument = orchestra.\n.output Answer\n\n", "completions": [".decl Is_paraplegic(Person:symbol)\nIs_paraplegic(\"Christopher Reeve\").\n.decl Is_musician(Person:symbol)\nIs_musician(\"Christopher Reeve\").\n.decl Is_orchestra(Orchestra:symbol)\nIs_orchestra(\"New York Philharmonic\").\n.decl Plays_instrument(Person:symbol, Instrument:symbol)\nPlays_instrument(\"Christopher Reeve\", \"cello\").\n.decl Answer()\nAnswer() :- Is_paraplegic(person), Is_musician(person), Plays_instrument(person, instrument), Is_orchestra(orchestra), instrument = orchestra.\n.output Answer\n\n"]}
{"id": 2071, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"1980 United States presidential election\", \"November\").\nHappens_in_time(\"1980 United States presidential election\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"1980 United States presidential election\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"1980 United States presidential election\", month), Happens_every_n_months(\"1980 United States presidential election\", n_months), month = December.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"1980 United States presidential election\", \"November\").\nHappens_in_time(\"1980 United States presidential election\", \"December\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"1980 United States presidential election\", 1).\n.decl Answer()\nAnswer() :- Happens_in_time(\"1980 United States presidential election\", month), Happens_every_n_months(\"1980 United States presidential election\", n_months), month = December.\n.output Answer\n\n"]}
{"id": 2072, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"fever\", \"curable\").\nHas_property(\"cowbell\", \"ring\").\n.decl Answer()\nAnswer() :- Has_property(\"fever\", property), Has_property(\"cowbell\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"fever\", \"curable\").\nHas_property(\"cowbell\", \"ring\").\n.decl Answer()\nAnswer() :- Has_property(\"fever\", property), Has_property(\"cowbell\", property).\n.output Answer\n\n"]}
{"id": 2073, "answer": false, "completion": ".decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas", "completions": [".decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas_sting_power(\"honey bee\", 0.5).\n.decl Has_sting_power(Bee:symbol, Sting_power:float)\nHas"]}
{"id": 2074, "answer": false, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Bob Marley\", 5).\nHas_n_children(\"Kublai Khan\", 10).\n.decl Answer()\nAnswer() :- Has_n_children(\"Bob Marley\", n_children1), Has_n_children(\"Kublai Khan\", n_children2), n_children1 > n_children2.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Bob Marley\", 5).\nHas_n_children(\"Kublai Khan\", 10).\n.decl Answer()\nAnswer() :- Has_n_children(\"Bob Marley\", n_children1), Has_n_children(\"Kublai Khan\", n_children2), n_children1 > n_children2.\n.output Answer\n\n"]}
{"id": 2075, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harry Houdini\", \"Harry Houdini\").\nHas_name(\"Doris Houdini\", \"Doris Houdini\").\n.decl Has_spouse(Person_A:symbol, Person_B:symbol)\nHas_spouse(\"Harry Houdini\", \"Doris Houdini\").\n.decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Harry Houdini\", \"magician\").\nHas_occupation(\"Doris Houdini\", \"psychic\").\n.decl Answer()\nAnswer() :- Has_name(\"Harry Houdini\", name), Has_name(\"Doris Houdini\", name), Has_occupation(\"Doris Houdini\", occupation), occupation = \"psychic\".\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Harry Houdini\", \"Harry Houdini\").\nHas_name(\"Doris Houdini\", \"Doris Houdini\").\n.decl Has_spouse(Person_A:symbol, Person_B:symbol)\nHas_spouse(\"Harry Houdini\", \"Doris Houdini\").\n.decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Harry Houdini\", \"magician\").\nHas_occupation(\"Doris Houdini\", \"psychic\").\n.decl Answer()\nAnswer() :- Has_name(\"Harry Houdini\", name), Has_name(\"Doris Houdini\", name), Has_occupation(\"Doris Houdini\", occupation), occupation = \"psychic\".\n.output Answer\n\n"]}
{"id": 2076, "answer": true, "completion": ".decl Guest_starred_on(Person:symbol, TV_series:symbol)\nGuest_starred_on(\"Joan Crawford\", \"JAG\").\n.decl Answer()\nAnswer() :- Guest_starred_on(\"Joan Crawford\", tv_series).\n.output Answer\n\n", "completions": [".decl Guest_starred_on(Person:symbol, TV_series:symbol)\nGuest_starred_on(\"Joan Crawford\", \"JAG\").\n.decl Answer()\nAnswer() :- Guest_starred_on(\"Joan Crawford\", tv_series).\n.output Answer\n\n"]}
{"id": 2077, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"blue\", \"blue\").\nHas_color(\"red\", \"red\").\nHas_color(\"green\", \"green\").\nHas_color(\"yellow\", \"yellow\").\n.decl Has_effect(Medicine:symbol, Effect:symbol)\nHas_effect(\"blueberry\", \"blue\").\nHas_effect(\"red wine\", \"red\").\nHas_effect(\"green tea\", \"green\").\nHas_effect(\"lemon\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_effect(\"blueberry\", effect), Has_color(\"blueberry\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"red wine\", effect), Has_color(\"red wine\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"green tea\", effect), Has_color(\"green tea\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"lemon\", effect), Has_color(\"lemon\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"blue\", \"blue\").\nHas_color(\"red\", \"red\").\nHas_color(\"green\", \"green\").\nHas_color(\"yellow\", \"yellow\").\n.decl Has_effect(Medicine:symbol, Effect:symbol)\nHas_effect(\"blueberry\", \"blue\").\nHas_effect(\"red wine\", \"red\").\nHas_effect(\"green tea\", \"green\").\nHas_effect(\"lemon\", \"yellow\").\n.decl Answer()\nAnswer() :- Has_effect(\"blueberry\", effect), Has_color(\"blueberry\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"red wine\", effect), Has_color(\"red wine\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"green tea\", effect), Has_color(\"green tea\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\nAnswer() :- Has_effect(\"lemon\", effect), Has_color(\"lemon\", color), Has_color(\"skin\", color), Has_effect(\"skin\", effect).\n.output Answer\n\n"]}
{"id": 2078, "answer": false, "completion": ".decl Competed_in_event(Athlete:symbol, Event:symbol)\nCompeted_in_event(\"Carl Lewis\", \"long jump\").\nCompeted_in_event(\"Carl Lewis\", \"100 metres\").\nCompeted_in_event(\"Carl Lewis\", \"100 metres hurdles\").\nCompeted_in_event(\"Carl Lewis\", \"4 x 100 metres relay\").\nCompeted_in_event(\"Carl Lewis\", \"4 x 400 metres relay\").\nCompeted_in_event(\"Carl Lewis\", \"high jump\").\nCompeted_in_event(\"Carl Lewis\", \"triple jump\").\nCompeted_in_event(\"Carl Lewis\", \"pole vault\").\nCompeted_in_event(\"Carl Lewis\", \"hammer throw\").\nCompeted_in_event(\"Carl Lewis\", \"shot put\").\nCompeted_in_event(\"Carl Lewis\", \"discus throw\").\nCompeted_in_event(\"Carl Lewis\", \"javelin throw\").\nCompeted_in_event(\"Carl Lewis\", \"decathlon\").\nCompeted_in_event(\"Carl Lewis\", \"heptathlon\").\nCompeted_in_event(\"Carl Lewis\", \"diving\").\nCompeted_in_event(\"Carl Lewis\", \"swimming\").\nCompeted_in_event(\"Carl Lewis\", \"sailing\").\nCompeted_in_event(\"Carl Lewis\", \"cycling\").\nCompeted_in_event(\"Carl Lewis\", \"boxing\").\nCompeted_in_event(\"Carl Lewis\", \"wrestling\").\nCompeted_in_event(\"Carl Lewis\", \"weightlifting\").\nCompeted_in_event(\"Carl Lewis\", \"archery\").\nCompeted_in_event(\"Carl Lewis\", \"fencing\").\nCompeted_in_event(\"Carl Lewis\", \"shooting\").\nCompeted_in_event(\"Carl Lewis\", \"equestrian\").\nCompeted_in_event(\"Carl Lewis\", \"triathlon\").\nCompeted_in_event(\"Carl Lewis\", \"modern pentathlon\").\nCompeted_in_event(\"Carl Lewis\", \"judo\").\nCompeted_in_event(\"Carl Lewis\", \"fencing\").\nCompeted_in_event(\"Carl Lewis\", \"canoeing\").\nCompeted_in_event(\"Carl Lewis\", \"cycling\").\nCompeted_in_event(\"Carl Lewis\", \"gymnastics\").\nCompeted_in_event(\"Carl Lewis\", \"handball\").\nCompeted_in_event(\"Carl Lewis\", \"hockey\").\nCompeted_in_event(\"Carl Lewis\", \"rowing\").\nCompeted_in_event(\"Carl Lewis\", \"rugby\").\nCompeted_in_event(\"Carl Lewis\", \"sailing\").\nCompeted_in_event(\"Carl Lewis\", \"shooting\").\nCompeted_in_event(\"Carl Lewis\", \"swimming\").\nCompeted_in_event(\"Carl Lewis\", \"table tennis\").\nCompeted_in_event(\"Carl Lewis\", \"tennis\").\nCompeted_in_event(\"Carl Lewis\", \"volleyball\").\nCompeted_in_event(\"Carl Lewis\", \"weightlifting\").\nCompeted_in_event(\"Carl Lewis\", \"water polo\").\nCompeted_in_event(\"Carl Lewis\", \"wrestling\").\nCompeted_in_event(\"Carl Lewis\", \"basketball\").\nCompeted_in_event(\"Carl Lewis\", \"boxing\").\nCompeted_in_event(\"Carl Lewis\",", "completions": [".decl Competed_in_event(Athlete:symbol, Event:symbol)\nCompeted_in_event(\"Carl Lewis\", \"long jump\").\nCompeted_in_event(\"Carl Lewis\", \"100 metres\").\nCompeted_in_event(\"Carl Lewis\", \"100 metres hurdles\").\nCompeted_in_event(\"Carl Lewis\", \"4 x 100 metres relay\").\nCompeted_in_event(\"Carl Lewis\", \"4 x 400 metres relay\").\nCompeted_in_event(\"Carl Lewis\", \"high jump\").\nCompeted_in_event(\"Carl Lewis\", \"triple jump\").\nCompeted_in_event(\"Carl Lewis\", \"pole vault\").\nCompeted_in_event(\"Carl Lewis\", \"hammer throw\").\nCompeted_in_event(\"Carl Lewis\", \"shot put\").\nCompeted_in_event(\"Carl Lewis\", \"discus throw\").\nCompeted_in_event(\"Carl Lewis\", \"javelin throw\").\nCompeted_in_event(\"Carl Lewis\", \"decathlon\").\nCompeted_in_event(\"Carl Lewis\", \"heptathlon\").\nCompeted_in_event(\"Carl Lewis\", \"diving\").\nCompeted_in_event(\"Carl Lewis\", \"swimming\").\nCompeted_in_event(\"Carl Lewis\", \"sailing\").\nCompeted_in_event(\"Carl Lewis\", \"cycling\").\nCompeted_in_event(\"Carl Lewis\", \"boxing\").\nCompeted_in_event(\"Carl Lewis\", \"wrestling\").\nCompeted_in_event(\"Carl Lewis\", \"weightlifting\").\nCompeted_in_event(\"Carl Lewis\", \"archery\").\nCompeted_in_event(\"Carl Lewis\", \"fencing\").\nCompeted_in_event(\"Carl Lewis\", \"shooting\").\nCompeted_in_event(\"Carl Lewis\", \"equestrian\").\nCompeted_in_event(\"Carl Lewis\", \"triathlon\").\nCompeted_in_event(\"Carl Lewis\", \"modern pentathlon\").\nCompeted_in_event(\"Carl Lewis\", \"judo\").\nCompeted_in_event(\"Carl Lewis\", \"fencing\").\nCompeted_in_event(\"Carl Lewis\", \"canoeing\").\nCompeted_in_event(\"Carl Lewis\", \"cycling\").\nCompeted_in_event(\"Carl Lewis\", \"gymnastics\").\nCompeted_in_event(\"Carl Lewis\", \"handball\").\nCompeted_in_event(\"Carl Lewis\", \"hockey\").\nCompeted_in_event(\"Carl Lewis\", \"rowing\").\nCompeted_in_event(\"Carl Lewis\", \"rugby\").\nCompeted_in_event(\"Carl Lewis\", \"sailing\").\nCompeted_in_event(\"Carl Lewis\", \"shooting\").\nCompeted_in_event(\"Carl Lewis\", \"swimming\").\nCompeted_in_event(\"Carl Lewis\", \"table tennis\").\nCompeted_in_event(\"Carl Lewis\", \"tennis\").\nCompeted_in_event(\"Carl Lewis\", \"volleyball\").\nCompeted_in_event(\"Carl Lewis\", \"weightlifting\").\nCompeted_in_event(\"Carl Lewis\", \"water polo\").\nCompeted_in_event(\"Carl Lewis\", \"wrestling\").\nCompeted_in_event(\"Carl Lewis\", \"basketball\").\nCompeted_in_event(\"Carl Lewis\", \"boxing\").\nCompeted_in_event(\"Carl Lewis\","]}
{"id": 2079, "answer": false, "completion": ".decl Has_release_year(Movie:symbol, Year:float)\nHas_release_year(\"Batman (1989 film)\", 1989).\n.decl Has_country(Movie:symbol, Country:symbol)\nHas_country(\"Batman (1989 film)\", \"USA\").\n.decl Has_city(Movie:symbol, City:symbol)\nHas_city(\"Batman (1989 film)\", \"New York\").\n.decl Has_city(Movie:symbol, City:symbol)\nHas_city(\"Batman (1989 film)\", \"Kansas City\").\n.decl Has_airport(City:symbol, Airport:symbol)\nHas_airport(\"New York\", \"JFK\").\nHas_airport(\"Kansas City\", \"MCI\").\n.decl Answer()\nAnswer() :- Has_release_year(\"Batman (1989 film)\", year), Has_country(\"Batman (1989 film)\", country), Has_city(\"Batman (1989 film)\", city1), Has_city(\"Batman (1989 film)\", city2), Has_airport(city1, airport1), Has_airport(city2, airport2), airport1 = airport2.\n.output Answer\n\n", "completions": [".decl Has_release_year(Movie:symbol, Year:float)\nHas_release_year(\"Batman (1989 film)\", 1989).\n.decl Has_country(Movie:symbol, Country:symbol)\nHas_country(\"Batman (1989 film)\", \"USA\").\n.decl Has_city(Movie:symbol, City:symbol)\nHas_city(\"Batman (1989 film)\", \"New York\").\n.decl Has_city(Movie:symbol, City:symbol)\nHas_city(\"Batman (1989 film)\", \"Kansas City\").\n.decl Has_airport(City:symbol, Airport:symbol)\nHas_airport(\"New York\", \"JFK\").\nHas_airport(\"Kansas City\", \"MCI\").\n.decl Answer()\nAnswer() :- Has_release_year(\"Batman (1989 film)\", year), Has_country(\"Batman (1989 film)\", country), Has_city(\"Batman (1989 film)\", city1), Has_city(\"Batman (1989 film)\", city2), Has_airport(city1, airport1), Has_airport(city2, airport2), airport1 = airport2.\n.output Answer\n\n"]}
{"id": 2080, "answer": false, "completion": ".decl Has_n_kills(Person:symbol, N_kills:float)\nHas_n_kills(\"Charles Manson\", 5).\nHas_n_kills(\"Don King\", 10).\n.decl Answer()\nAnswer() :- Has_n_kills(\"Don King\", n_kills1), Has_n_kills(\"Charles Manson\", n_kills2), n_kills1 > n_kills2.\n.output Answer\n\n", "completions": [".decl Has_n_kills(Person:symbol, N_kills:float)\nHas_n_kills(\"Charles Manson\", 5).\nHas_n_kills(\"Don King\", 10).\n.decl Answer()\nAnswer() :- Has_n_kills(\"Don King\", n_kills1), Has_n_kills(\"Charles Manson\", n_kills2), n_kills1 > n_kills2.\n.output Answer\n\n"]}
{"id": 2081, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"amoebas\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Black Death\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"amoebas\", n_members1), Has_n_members(\"Black Death\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"amoebas\", 1).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Black Death\", 1).\n.decl Answer()\nAnswer() :- Has_n_members(\"amoebas\", n_members1), Has_n_members(\"Black Death\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 2082, "answer": false, "completion": ".decl Has_ancestry(Person:symbol, Ancestry:symbol)\nHas_ancestry(\"Ludacris\", \"Greek\").\n.decl Answer()\nAnswer() :- Has_ancestry(\"Ludacris\", ancestry).\n.output Answer\n\n", "completions": [".decl Has_ancestry(Person:symbol, Ancestry:symbol)\nHas_ancestry(\"Ludacris\", \"Greek\").\n.decl Answer()\nAnswer() :- Has_ancestry(\"Ludacris\", ancestry).\n.output Answer\n\n"]}
{"id": 2083, "answer": true, "completion": ".decl Has_n_teams(League:symbol, N_teams:float)\nHas_n_teams(\"National Hockey League\", 30).\nHas_n_teams(\"Canadian Hockey League\", 18).\n.decl Answer()\nAnswer() :- Has_n_teams(\"National Hockey League\", n_teams1), Has_n_teams(\"Canadian Hockey League\", n_teams2), n_teams1 > n_teams2.\n.output Answer\n\n", "completions": [".decl Has_n_teams(League:symbol, N_teams:float)\nHas_n_teams(\"National Hockey League\", 30).\nHas_n_teams(\"Canadian Hockey League\", 18).\n.decl Answer()\nAnswer() :- Has_n_teams(\"National Hockey League\", n_teams1), Has_n_teams(\"Canadian Hockey League\", n_teams2), n_teams1 > n_teams2.\n.output Answer\n\n"]}
{"id": 2084, "answer": false, "completion": ".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Pope\", \"pope\").\nHas_occupation(\"Pimp My Ride\", \"reality show\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Pope\", occupation), Has_occupation(\"Pimp My Ride\", occupation).\n.output Answer\n\n", "completions": [".decl Has_occupation(Person:symbol, Occupation:symbol)\nHas_occupation(\"Pope\", \"pope\").\nHas_occupation(\"Pimp My Ride\", \"reality show\").\n.decl Answer()\nAnswer() :- Has_occupation(\"Pope\", occupation), Has_occupation(\"Pimp My Ride\", occupation).\n.output Answer\n\n"]}
{"id": 2085, "answer": false, "completion": ".decl Has_gestation_period(Animal:symbol, Gestation_period:float)\nHas_gestation_period(\"African Elephant\", 15).\n.decl Has_n_offspring(Animal:symbol, N_offspring:float)\nHas_n_offspring(\"African Elephant\", 1).\n.decl Answer()\nAnswer() :- Has_gestation_period(\"African Elephant\", gestation_period), Has_n_offspring(\"African Elephant\", n_offspring), gestation_period <= 12, n_offspring >= 2.\n.output Answer\n\n", "completions": [".decl Has_gestation_period(Animal:symbol, Gestation_period:float)\nHas_gestation_period(\"African Elephant\", 15).\n.decl Has_n_offspring(Animal:symbol, N_offspring:float)\nHas_n_offspring(\"African Elephant\", 1).\n.decl Answer()\nAnswer() :- Has_gestation_period(\"African Elephant\", gestation_period), Has_n_offspring(\"African Elephant\", n_offspring), gestation_period <= 12, n_offspring >= 2.\n.output Answer\n\n"]}
{"id": 2086, "answer": false, "completion": ".decl Wrote(Author:symbol, Book:symbol)\nWrote(\"William Shakespeare\", \"Hamlet\").\nWrote(\"William Shakespeare\", \"Macbeth\").\nWrote(\"William Shakespeare\", \"Romeo and Juliet\").\n.decl Has_email(Author:symbol)\nHas_email(\"William Shakespeare\").\n.decl Answer()\nAnswer() :- Wrote(\"William Shakespeare\", book), Has_email(\"William Shakespeare\").\n.output Answer\n\n", "completions": [".decl Wrote(Author:symbol, Book:symbol)\nWrote(\"William Shakespeare\", \"Hamlet\").\nWrote(\"William Shakespeare\", \"Macbeth\").\nWrote(\"William Shakespeare\", \"Romeo and Juliet\").\n.decl Has_email(Author:symbol)\nHas_email(\"William Shakespeare\").\n.decl Answer()\nAnswer() :- Wrote(\"William Shakespeare\", book), Has_email(\"William Shakespeare\").\n.output Answer\n\n"]}
{"id": 2087, "answer": false, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"horseradish plant\", 1.5).\nHas_height(\"newborn\", 0.1).\n.decl Answer()\nAnswer() :- Has_height(\"horseradish plant\", height1), Has_height(\"newborn\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"horseradish plant\", 1.5).\nHas_height(\"newborn\", 0.1).\n.decl Answer()\nAnswer() :- Has_height(\"horseradish plant\", height1), Has_height(\"newborn\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 2088, "answer": false, "completion": ".decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Jeff Bezos\", 1000000000000).\nHas_net_worth(\"Bill Gates\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Warren Buffett\", 1000000000000).\nHas_net_worth(\"Bernard Arnault\", 1000000000000).\nHas_net_worth(\"Carlos Slim Helu\", 1000000000000).\nHas_net_worth(\"Amancio Ortega\", 1000000000000).\nHas_net_worth(\"Larry Ellison\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister & Karl Albrecht Jr.\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"George Soros\", 1000000000000).\nHas_net_worth(\"Phil Knight\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"David Tepper\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister & Karl Albrecht Jr.\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"George Soros\", 1000000000000).\nHas_net_worth(\"Phil Knight\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"David Tepper\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister", "completions": [".decl Has_net_worth(Person:symbol, Net_worth:float)\nHas_net_worth(\"Jeff Bezos\", 1000000000000).\nHas_net_worth(\"Bill Gates\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Warren Buffett\", 1000000000000).\nHas_net_worth(\"Bernard Arnault\", 1000000000000).\nHas_net_worth(\"Carlos Slim Helu\", 1000000000000).\nHas_net_worth(\"Amancio Ortega\", 1000000000000).\nHas_net_worth(\"Larry Ellison\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister & Karl Albrecht Jr.\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"George Soros\", 1000000000000).\nHas_net_worth(\"Phil Knight\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"David Tepper\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister & Karl Albrecht Jr.\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"George Soros\", 1000000000000).\nHas_net_worth(\"Phil Knight\", 1000000000000).\nHas_net_worth(\"Mark Zuckerberg\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"David Tepper\", 1000000000000).\nHas_net_worth(\"Charles Koch\", 1000000000000).\nHas_net_worth(\"David Koch\", 1000000000000).\nHas_net_worth(\"Liliane Bettencourt\", 1000000000000).\nHas_net_worth(\"Michael Bloomberg\", 1000000000000).\nHas_net_worth(\"Sheldon Adelson\", 1000000000000).\nHas_net_worth(\"Mukesh Ambani\", 1000000000000).\nHas_net_worth(\"Jay Y. Lee\", 1000000000000).\nHas_net_worth(\"Lee Kun-Hee\", 1000000000000).\nHas_net_worth(\"Jorge Paulo Lemann\", 1000000000000).\nHas_net_worth(\"Beate Heister"]}
{"id": 2089, "answer": false, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Holstein cow\", 1000).\nHas_weight(\"Liberty Bell\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"Holstein cow\", weight1), Has_weight(\"Liberty Bell\", weight2), weight1 + weight2 = 1000.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"Holstein cow\", 1000).\nHas_weight(\"Liberty Bell\", 100).\n.decl Answer()\nAnswer() :- Has_weight(\"Holstein cow\", weight1), Has_weight(\"Liberty Bell\", weight2), weight1 + weight2 = 1000.\n.output Answer\n\n"]}
{"id": 2090, "answer": true, "completion": ".decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Answer()\nAnswer() :- Has_ethnicity(\"Cleopatra\", \"Egyptian\"), Has_ethnicity(\"Cleopatra\", \"Greek\"), Has_ethnicity(\"Cleopatra\", ethnicity1), Has_ethnicity(\"Cleopatra\", ethnicity2), ethnicity1 != ethnicity2.\n.output Answer\n\n", "completions": [".decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Has_ethnicity(Person:symbol, Ethnicity:symbol)\nHas_ethnicity(\"Cleopatra\", \"Egyptian\").\nHas_ethnicity(\"Cleopatra\", \"Greek\").\n.decl Answer()\nAnswer() :- Has_ethnicity(\"Cleopatra\", \"Egyptian\"), Has_ethnicity(\"Cleopatra\", \"Greek\"), Has_ethnicity(\"Cleopatra\", ethnicity1), Has_ethnicity(\"Cleopatra\", ethnicity2), ethnicity1 != ethnicity2.\n.output Answer\n\n"]}
{"id": 2091, "answer": true, "completion": ".decl Has_cut_time(Object:symbol, Cut_time:float)\nHas_cut_time(\"ham\", 0.5).\nHas_cut_time(\"seal\", 1).\n.decl Answer()\nAnswer() :- Has_cut_time(\"ham\", cut_time1), Has_cut_time(\"seal\", cut_time2), cut_time1 < cut_time2.\n.output Answer\n\n", "completions": [".decl Has_cut_time(Object:symbol, Cut_time:float)\nHas_cut_time(\"ham\", 0.5).\nHas_cut_time(\"seal\", 1).\n.decl Answer()\nAnswer() :- Has_cut_time(\"ham\", cut_time1), Has_cut_time(\"seal\", cut_time2), cut_time1 < cut_time2.\n.output Answer\n\n"]}
{"id": 2092, "answer": true, "completion": ".decl Has_air_transport(Person:symbol, Transport:symbol)\nHas_air_transport(\"pilot\", \"airplane\").\nHas_air_transport(\"pilot\", \"helicopter\").\nHas_air_transport(\"pilot\", \"jet\").\nHas_air_transport(\"pilot\", \"space shuttle\").\nHas_air_transport(\"pilot\", \"submarine\").\nHas_air_transport(\"pilot\", \"spaceship\").\nHas_air_transport(\"pilot\", \"rocket\").\nHas_air_transport(\"pilot\", \"balloon\").\nHas_air_transport(\"pilot\", \"jet ski\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"speed boat\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"train\").\nHas_air_transport(\"pilot\", \"ship\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"moped\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\n", "completions": [".decl Has_air_transport(Person:symbol, Transport:symbol)\nHas_air_transport(\"pilot\", \"airplane\").\nHas_air_transport(\"pilot\", \"helicopter\").\nHas_air_transport(\"pilot\", \"jet\").\nHas_air_transport(\"pilot\", \"space shuttle\").\nHas_air_transport(\"pilot\", \"submarine\").\nHas_air_transport(\"pilot\", \"spaceship\").\nHas_air_transport(\"pilot\", \"rocket\").\nHas_air_transport(\"pilot\", \"balloon\").\nHas_air_transport(\"pilot\", \"jet ski\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"speed boat\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"train\").\nHas_air_transport(\"pilot\", \"ship\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"moped\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\nHas_air_transport(\"pilot\", \"van\").\nHas_air_transport(\"pilot\", \"truck\").\nHas_air_transport(\"pilot\", \"car\").\nHas_air_transport(\"pilot\", \"motorcycle\").\nHas_air_transport(\"pilot\", \"bicycle\").\nHas_air_transport(\"pilot\", \"scooter\").\nHas_air_transport(\"pilot\", \"skateboard\").\nHas_air_transport(\"pilot\", \"unicycle\").\nHas_air_transport(\"pilot\", \"mountain bike\").\nHas_air_transport(\"pilot\", \"bus\").\n"]}
{"id": 2093, "answer": false, "completion": ".decl Is_subservient(Person_A:symbol, Person_B:symbol)\nIs_subservient(\"duke\", \"tsar\").\n.decl Answer()\nAnswer() :- Is_subservient(\"duke\", person_b), Is_subservient(\"tsar\", person_b).\n.output Answer\n\n", "completions": [".decl Is_subservient(Person_A:symbol, Person_B:symbol)\nIs_subservient(\"duke\", \"tsar\").\n.decl Answer()\nAnswer() :- Is_subservient(\"duke\", person_b), Is_subservient(\"tsar\", person_b).\n.output Answer\n\n"]}
{"id": 2094, "answer": true, "completion": ".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"twin1\", \"female\").\nHas_gender(\"twin2\", \"female\").\n.decl Answer()\nAnswer() :- Has_gender(\"twin1\", gender), Has_gender(\"twin2\", gender).\n.output Answer\n\n", "completions": [".decl Has_gender(Person:symbol, Gender:symbol)\nHas_gender(\"twin1\", \"female\").\nHas_gender(\"twin2\", \"female\").\n.decl Answer()\nAnswer() :- Has_gender(\"twin1\", gender), Has_gender(\"twin2\", gender).\n.output Answer\n\n"]}
{"id": 2095, "answer": false, "completion": ".decl Has_disease(Disease:symbol, Symptom:symbol)\nHas_disease(\"hepatitis\", \"jaundice\").\nHas_disease(\"hepatitis\", \"fatigue\").\nHas_disease(\"hepatitis\", \"fever\").\nHas_disease(\"hepatitis\", \"vomiting\").\nHas_disease(\"hepatitis\", \"nausea\").\nHas_disease(\"hepatitis\", \"diarrhea\").\n.decl Has_symptom(Symptom:symbol, Disease:symbol)\nHas_symptom(\"jaundice\", \"hepatitis\").\nHas_symptom(\"fatigue\", \"hepatitis\").\nHas_symptom(\"fever\", \"hepatitis\").\nHas_symptom(\"vomiting\", \"hepatitis\").\nHas_symptom(\"nausea\", \"hepatitis\").\nHas_symptom(\"diarrhea\", \"hepatitis\").\n.decl Answer()\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"jaundice\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"fatigue\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"fever\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"vomiting\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"nausea\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"diarrhea\", disease).\n.output Answer\n\n", "completions": [".decl Has_disease(Disease:symbol, Symptom:symbol)\nHas_disease(\"hepatitis\", \"jaundice\").\nHas_disease(\"hepatitis\", \"fatigue\").\nHas_disease(\"hepatitis\", \"fever\").\nHas_disease(\"hepatitis\", \"vomiting\").\nHas_disease(\"hepatitis\", \"nausea\").\nHas_disease(\"hepatitis\", \"diarrhea\").\n.decl Has_symptom(Symptom:symbol, Disease:symbol)\nHas_symptom(\"jaundice\", \"hepatitis\").\nHas_symptom(\"fatigue\", \"hepatitis\").\nHas_symptom(\"fever\", \"hepatitis\").\nHas_symptom(\"vomiting\", \"hepatitis\").\nHas_symptom(\"nausea\", \"hepatitis\").\nHas_symptom(\"diarrhea\", \"hepatitis\").\n.decl Answer()\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"jaundice\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"fatigue\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"fever\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"vomiting\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"nausea\", disease).\nAnswer() :- Has_disease(\"hepatitis\", disease), Has_symptom(\"diarrhea\", disease).\n.output Answer\n\n"]}
{"id": 2096, "answer": true, "completion": ".decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Jack Black\", 1).\nHas_n_nominations(\"Bear McCreary\", 3).\n.decl Has_n_wins(Person:symbol, N_wins:float)\nHas_n_wins(\"Bear McCreary\", 2).\n.decl Answer()\nAnswer() :- Has_n_nominations(\"Jack Black\", n_nominations1), Has_n_nominations(\"Bear McCreary\", n_nominations2), Has_n_wins(\"Bear McCreary\", n_wins), n_nominations1 < n_nominations2, n_wins > 0.\n.output Answer\n\n", "completions": [".decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Jack Black\", 1).\nHas_n_nominations(\"Bear McCreary\", 3).\n.decl Has_n_wins(Person:symbol, N_wins:float)\nHas_n_wins(\"Bear McCreary\", 2).\n.decl Answer()\nAnswer() :- Has_n_nominations(\"Jack Black\", n_nominations1), Has_n_nominations(\"Bear McCreary\", n_nominations2), Has_n_wins(\"Bear McCreary\", n_wins), n_nominations1 < n_nominations2, n_wins > 0.\n.output Answer\n\n"]}
{"id": 2097, "answer": false, "completion": ".decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"egg\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\",", "completions": [".decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"egg\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"peanut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"soy\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"wheat\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"milk\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"fish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"shellfish\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\", \"treenut\").\n.decl Has_allergen(Object:symbol, Allergen:symbol)\nHas_allergen(\"eggplant\","]}
{"id": 2098, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"going to New York Public Library\", \"Monday\").\nHappens_in_time(\"going to New York Public Library\", \"Tuesday\").\nHappens_in_time(\"going to New York Public Library\", \"Wednesday\").\nHappens_in_time(\"going to New York Public Library\", \"Thursday\").\nHappens_in_time(\"going to New York Public Library\", \"Friday\").\nHappens_in_time(\"going to New York Public Library\", \"Saturday\").\nHappens_in_time(\"going to New York Public Library\", \"Sunday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Monday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Tuesday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Wednesday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Thursday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Friday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Saturday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Sunday\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"going to New York Public Library\", time1), Happens_in_time(\"going to Six Flags Great Escape\", time2), time1 = time2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"going to New York Public Library\", \"Monday\").\nHappens_in_time(\"going to New York Public Library\", \"Tuesday\").\nHappens_in_time(\"going to New York Public Library\", \"Wednesday\").\nHappens_in_time(\"going to New York Public Library\", \"Thursday\").\nHappens_in_time(\"going to New York Public Library\", \"Friday\").\nHappens_in_time(\"going to New York Public Library\", \"Saturday\").\nHappens_in_time(\"going to New York Public Library\", \"Sunday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Monday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Tuesday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Wednesday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Thursday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Friday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Saturday\").\nHappens_in_time(\"going to Six Flags Great Escape\", \"Sunday\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"going to New York Public Library\", time1), Happens_in_time(\"going to Six Flags Great Escape\", time2), time1 = time2.\n.output Answer\n\n"]}
{"id": 2099, "answer": true, "completion": ".decl Uses(Airline:symbol, Carrier:symbol)\nUses(\"Southwest Airlines\", \"Boeing\").\nUses(\"Southwest Airlines\", \"Airbus\").\n.decl Is_bulk(Carrier:symbol)\nIs_bulk(\"Boeing\").\nIs_bulk(\"Airbus\").\n.decl Answer()\nAnswer() :- Uses(\"Southwest Airlines\", carrier), Is_bulk(carrier).\n.output Answer\n\n", "completions": [".decl Uses(Airline:symbol, Carrier:symbol)\nUses(\"Southwest Airlines\", \"Boeing\").\nUses(\"Southwest Airlines\", \"Airbus\").\n.decl Is_bulk(Carrier:symbol)\nIs_bulk(\"Boeing\").\nIs_bulk(\"Airbus\").\n.decl Answer()\nAnswer() :- Uses(\"Southwest Airlines\", carrier), Is_bulk(carrier).\n.output Answer\n\n"]}
{"id": 2100, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"radiation\", \"1898\").\nHappens_in_time(\"radiation\", \"1904\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"radiation\", \"Joliot-Curie's laboratory\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"radiation\", time), Happens_in_place(\"radiation\", place), time = place.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"radiation\", \"1898\").\nHappens_in_time(\"radiation\", \"1904\").\n.decl Happens_in_place(Event:symbol, Place:symbol)\nHappens_in_place(\"radiation\", \"Joliot-Curie's laboratory\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"radiation\", time), Happens_in_place(\"radiation\", place), time = place.\n.output Answer\n\n"]}
{"id": 2101, "answer": false, "completion": ".decl Refuses(Person:symbol, Dish:symbol)\nRefuses(\"Steve Martin\", \"shrimp pasta\").\n.decl Answer()\nAnswer() :- Refuses(\"Steve Martin\", dish).\n.output Answer\n\n", "completions": [".decl Refuses(Person:symbol, Dish:symbol)\nRefuses(\"Steve Martin\", \"shrimp pasta\").\n.decl Answer()\nAnswer() :- Refuses(\"Steve Martin\", dish).\n.output Answer\n\n"]}
{"id": 2102, "answer": false, "completion": ".decl Filmed_in_color(TV_show:symbol, Color:symbol)\nFilmed_in_color(\"The Mentalist\", \"black and white\").\n.decl Answer()\nAnswer() :- Filmed_in_color(\"The Mentalist\", color), color = \"black and white\".\n.output Answer\n\n", "completions": [".decl Filmed_in_color(TV_show:symbol, Color:symbol)\nFilmed_in_color(\"The Mentalist\", \"black and white\").\n.decl Answer()\nAnswer() :- Filmed_in_color(\"The Mentalist\", color), color = \"black and white\".\n.output Answer\n\n"]}
{"id": 2103, "answer": true, "completion": ".decl Has_edible_fruit(Plant:symbol, Fruit:symbol)\nHas_edible_fruit(\"olive tree\", \"olive\").\n.decl Has_edible_animal(Animal:symbol, Fruit:symbol)\nHas_edible_animal(\"rabbit\", \"carrot\").\n.decl Answer()\nAnswer() :- Has_edible_animal(\"rabbit\", fruit), Has_edible_fruit(\"olive tree\", fruit).\n.output Answer\n\n", "completions": [".decl Has_edible_fruit(Plant:symbol, Fruit:symbol)\nHas_edible_fruit(\"olive tree\", \"olive\").\n.decl Has_edible_animal(Animal:symbol, Fruit:symbol)\nHas_edible_animal(\"rabbit\", \"carrot\").\n.decl Answer()\nAnswer() :- Has_edible_animal(\"rabbit\", fruit), Has_edible_fruit(\"olive tree\", fruit).\n.output Answer\n\n"]}
{"id": 2104, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"blue\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"red\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"lips\", color), color = \"blue\".\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"blue\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"red\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"lips\", \"green\").\n.decl Answer()\nAnswer() :- Has_color(\"lips\", color), color = \"blue\".\n.output Answer\n\n"]}
{"id": 2105, "answer": false, "completion": ".decl Spelled_by_keyboard(Word:symbol, Keyboard:symbol)\nSpelled_by_keyboard(\"abdastartus\", \"QWERTY\").\nSpelled_by_keyboard(\"abdastartus\", \"Dvorak\").\nSpelled_by_keyboard(\"abdastartus\", \"AZERTY\").\nSpelled_by_keyboard(\"abdastartus\", \"QWERTZ\").\n.decl Answer()\nAnswer() :- Spelled_by_keyboard(\"abdastartus\", keyboard1), Spelled_by_keyboard(\"abdastartus\", keyboard2), keyboard1 != keyboard2.\n.output Answer\n\n", "completions": [".decl Spelled_by_keyboard(Word:symbol, Keyboard:symbol)\nSpelled_by_keyboard(\"abdastartus\", \"QWERTY\").\nSpelled_by_keyboard(\"abdastartus\", \"Dvorak\").\nSpelled_by_keyboard(\"abdastartus\", \"AZERTY\").\nSpelled_by_keyboard(\"abdastartus\", \"QWERTZ\").\n.decl Answer()\nAnswer() :- Spelled_by_keyboard(\"abdastartus\", keyboard1), Spelled_by_keyboard(\"abdastartus\", keyboard2), keyboard1 != keyboard2.\n.output Answer\n\n"]}
{"id": 2106, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Jaguar F Type\", 30000).\nHas_price(\"Family of Barack Obama\", 1000000).\n.decl Answer()\nAnswer() :- Has_price(\"Family of Barack Obama\", price1), Has_price(\"Jaguar F Type\", price2), price1 <= price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"Jaguar F Type\", 30000).\nHas_price(\"Family of Barack Obama\", 1000000).\n.decl Answer()\nAnswer() :- Has_price(\"Family of Barack Obama\", price1), Has_price(\"Jaguar F Type\", price2), price1 <= price2.\n.output Answer\n\n"]}
{"id": 2107, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"peach fruit\", \"orange\").\nHas_color(\"Princess Peach's dress\", \"orange\").\n.decl Answer()\nAnswer() :- Has_color(\"peach fruit\", color), Has_color(\"Princess Peach's dress\", color).\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"peach fruit\", \"orange\").\nHas_color(\"Princess Peach's dress\", \"orange\").\n.decl Answer()\nAnswer() :- Has_color(\"peach fruit\", color), Has_color(\"Princess Peach's dress\", color).\n.output Answer\n\n"]}
{"id": 2108, "answer": false, "completion": ".decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"La Grenouille\", \"French\").\nHas_cuisine(\"La Grenouille\", \"Italian\").\nHas_cuisine(\"La Grenouille\", \"Mexican\").\n.decl Has_request(Restaurant:symbol, Request:symbol)\nHas_request(\"La Grenouille\", \"salsa\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"La Grenouille\", cuisine), Has_request(\"La Grenouille\", request), cuisine \\= request.\n.output Answer\n\n", "completions": [".decl Has_cuisine(Restaurant:symbol, Cuisine:symbol)\nHas_cuisine(\"La Grenouille\", \"French\").\nHas_cuisine(\"La Grenouille\", \"Italian\").\nHas_cuisine(\"La Grenouille\", \"Mexican\").\n.decl Has_request(Restaurant:symbol, Request:symbol)\nHas_request(\"La Grenouille\", \"salsa\").\n.decl Answer()\nAnswer() :- Has_cuisine(\"La Grenouille\", cuisine), Has_request(\"La Grenouille\", request), cuisine \\= request.\n.output Answer\n\n"]}
{"id": 2109, "answer": true, "completion": ".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"arrest\", \"Monday\").\nHappens_on_day(\"arrest\", \"Tuesday\").\nHappens_on_day(\"arrest\", \"Wednesday\").\nHappens_on_day(\"arrest\", \"Thursday\").\nHappens_on_day(\"arrest\", \"Friday\").\nHappens_on_day(\"arrest\", \"Saturday\").\nHappens_on_day(\"arrest\", \"Sunday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Monday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Tuesday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Wednesday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Thursday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Friday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Saturday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Sunday\".\n.output Answer\n\n", "completions": [".decl Happens_on_day(Event:symbol, Day:symbol)\nHappens_on_day(\"arrest\", \"Monday\").\nHappens_on_day(\"arrest\", \"Tuesday\").\nHappens_on_day(\"arrest\", \"Wednesday\").\nHappens_on_day(\"arrest\", \"Thursday\").\nHappens_on_day(\"arrest\", \"Friday\").\nHappens_on_day(\"arrest\", \"Saturday\").\nHappens_on_day(\"arrest\", \"Sunday\").\n.decl Answer()\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Monday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Tuesday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Wednesday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Thursday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Friday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Saturday\".\nAnswer() :- Happens_on_day(\"arrest\", day), day = \"Sunday\".\n.output Answer\n\n"]}
{"id": 2110, "answer": true, "completion": ".decl Has_pattern(Object:symbol, Pattern:symbol)\nHas_pattern(\"blood spatter\", \"random\").\nHas_pattern(\"Jackson Pollock\", \"random\").\n.decl Answer()\nAnswer() :- Has_pattern(\"blood spatter\", pattern1), Has_pattern(\"Jackson Pollock\", pattern2), pattern1 = pattern2.\n.output Answer\n\n", "completions": [".decl Has_pattern(Object:symbol, Pattern:symbol)\nHas_pattern(\"blood spatter\", \"random\").\nHas_pattern(\"Jackson Pollock\", \"random\").\n.decl Answer()\nAnswer() :- Has_pattern(\"blood spatter\", pattern1), Has_pattern(\"Jackson Pollock\", pattern2), pattern1 = pattern2.\n.output Answer\n\n"]}
{"id": 2111, "answer": false, "completion": ".decl Has_area(City:symbol, Area:float)\nHas_area(\"Miami\", 675).\nHas_area(\"Uppsala\", 15).\n.decl Answer()\nAnswer() :- Has_area(\"Miami\", area1), Has_area(\"Uppsala\", area2), area1 < area2.\n.output Answer\n\n", "completions": [".decl Has_area(City:symbol, Area:float)\nHas_area(\"Miami\", 675).\nHas_area(\"Uppsala\", 15).\n.decl Answer()\nAnswer() :- Has_area(\"Miami\", area1), Has_area(\"Uppsala\", area2), area1 < area2.\n.output Answer\n\n"]}
{"id": 2112, "answer": true, "completion": ".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"chair\", \"wood\").\nHas_material(\"chair\", \"hair\").\nHas_material(\"table\", \"wood\").\nHas_material(\"table\", \"hair\").\n.decl Answer()\nAnswer() :- Has_material(\"chair\", material), Has_material(\"table\", material).\n.output Answer\n\n", "completions": [".decl Has_material(Object:symbol, Material:symbol)\nHas_material(\"chair\", \"wood\").\nHas_material(\"chair\", \"hair\").\nHas_material(\"table\", \"wood\").\nHas_material(\"table\", \"hair\").\n.decl Answer()\nAnswer() :- Has_material(\"chair\", material), Has_material(\"table\", material).\n.output Answer\n\n"]}
{"id": 2113, "answer": false, "completion": ".decl Succeeded(Person:symbol, Person_succeeded:symbol)\nSucceeded(\"John Key\", \"Helen Clark\").\nSucceeded(\"Helen Clark\", \"John Key\").\n.decl Answer()\nAnswer() :- Succeeded(\"Helen Clark\", person1), Succeeded(person1, person2), Succeeded(person2, person3), Succeeded(person3, person4), Succeeded(person4, person5), Succeeded(person5, person6), Succeeded(person6, person7), Succeeded(person7, person8), Succeeded(person8, person9), Succeeded(person9, person10), Succeeded(person10, person11), Succeeded(person11, person12), Succeeded(person12, person13), Succeeded(person13, person14), Succeeded(person14, person15), Succeeded(person15, person16), Succeeded(person16, person17), Succeeded(person17, person18), Succeeded(person18, person19), Succeeded(person19, person20), Succeeded(person20, person21), Succeeded(person21, person22), Succeeded(person22, person23), Succeeded(person23, person24), Succeeded(person24, person25), Succeeded(person25, person26), Succeeded(person26, person27), Succeeded(person27, person28), Succeeded(person28, person29), Succeeded(person29, person30), Succeeded(person30, person31), Succeeded(person31, person32), Succeeded(person32, person33), Succeeded(person33, person34), Succeeded(person34, person35), Succeeded(person35, person36), Succeeded(person36, person37), Succeeded(person37, person38), Succeeded(person38, person39), Succeeded(person39, person40), Succeeded(person40, person41), Succeeded(person41, person42), Succeeded(person42, person43), Succeeded(person43, person44), Succeeded(person44, person45), Succeeded(person45, person46), Succeeded(person46, person47), Succeeded(person47, person48), Succeeded(person48, person49), Succeeded(person49, person50), Succeeded(person50, person51), Succeeded(person51, person52), Succeeded(person52, person53), Succeeded(person53, person54), Succeeded(person54, person55), Succeeded(person55, person56), Succeeded(person56, person57), Succeeded(person57, person58), Succeeded(person58, person59), Succeeded(person59, person60), Succeeded(person60, person61), Succeeded(person61, person62), Succeeded(person62, person63), Succeeded(person63, person64), Succeeded(person64, person65), Succeeded(person65, person66), Succeeded(person66, person67), Succeeded(person67, person68), Succeeded(person68, person69), Succeeded(person69, person70), Succeeded(person70, person71), Succeeded(person71, person72), Succeeded(person72, person73), Succeeded(person73, person74", "completions": [".decl Succeeded(Person:symbol, Person_succeeded:symbol)\nSucceeded(\"John Key\", \"Helen Clark\").\nSucceeded(\"Helen Clark\", \"John Key\").\n.decl Answer()\nAnswer() :- Succeeded(\"Helen Clark\", person1), Succeeded(person1, person2), Succeeded(person2, person3), Succeeded(person3, person4), Succeeded(person4, person5), Succeeded(person5, person6), Succeeded(person6, person7), Succeeded(person7, person8), Succeeded(person8, person9), Succeeded(person9, person10), Succeeded(person10, person11), Succeeded(person11, person12), Succeeded(person12, person13), Succeeded(person13, person14), Succeeded(person14, person15), Succeeded(person15, person16), Succeeded(person16, person17), Succeeded(person17, person18), Succeeded(person18, person19), Succeeded(person19, person20), Succeeded(person20, person21), Succeeded(person21, person22), Succeeded(person22, person23), Succeeded(person23, person24), Succeeded(person24, person25), Succeeded(person25, person26), Succeeded(person26, person27), Succeeded(person27, person28), Succeeded(person28, person29), Succeeded(person29, person30), Succeeded(person30, person31), Succeeded(person31, person32), Succeeded(person32, person33), Succeeded(person33, person34), Succeeded(person34, person35), Succeeded(person35, person36), Succeeded(person36, person37), Succeeded(person37, person38), Succeeded(person38, person39), Succeeded(person39, person40), Succeeded(person40, person41), Succeeded(person41, person42), Succeeded(person42, person43), Succeeded(person43, person44), Succeeded(person44, person45), Succeeded(person45, person46), Succeeded(person46, person47), Succeeded(person47, person48), Succeeded(person48, person49), Succeeded(person49, person50), Succeeded(person50, person51), Succeeded(person51, person52), Succeeded(person52, person53), Succeeded(person53, person54), Succeeded(person54, person55), Succeeded(person55, person56), Succeeded(person56, person57), Succeeded(person57, person58), Succeeded(person58, person59), Succeeded(person59, person60), Succeeded(person60, person61), Succeeded(person61, person62), Succeeded(person62, person63), Succeeded(person63, person64), Succeeded(person64, person65), Succeeded(person65, person66), Succeeded(person66, person67), Succeeded(person67, person68), Succeeded(person68, person69), Succeeded(person69, person70), Succeeded(person70, person71), Succeeded(person71, person72), Succeeded(person72, person73), Succeeded(person73, person74"]}
{"id": 2114, "answer": true, "completion": ".decl Has_melting_point(Object:symbol, Melting_point:float)\nHas_melting_point(\"Toyota Prius battery\", -5).\nHas_melting_point(\"microwave\", 0).\n.decl Answer()\nAnswer() :- Has_melting_point(\"Toyota Prius battery\", melting_point1), Has_melting_point(\"microwave\", melting_point2), melting_point1 < melting_point2.\n.output Answer\n\n", "completions": [".decl Has_melting_point(Object:symbol, Melting_point:float)\nHas_melting_point(\"Toyota Prius battery\", -5).\nHas_melting_point(\"microwave\", 0).\n.decl Answer()\nAnswer() :- Has_melting_point(\"Toyota Prius battery\", melting_point1), Has_melting_point(\"microwave\", melting_point2), melting_point1 < melting_point2.\n.output Answer\n\n"]}
{"id": 2115, "answer": false, "completion": ".decl Has_lungs(Person:symbol, Lungs:symbol)\nHas_lungs(\"J. P. Morgan\", \"healthy\").\n.decl Answer()\nAnswer() :- Has_lungs(\"J. P. Morgan\", lungs).\n.output Answer\n\n", "completions": [".decl Has_lungs(Person:symbol, Lungs:symbol)\nHas_lungs(\"J. P. Morgan\", \"healthy\").\n.decl Answer()\nAnswer() :- Has_lungs(\"J. P. Morgan\", lungs).\n.output Answer\n\n"]}
{"id": 2116, "answer": true, "completion": ".decl Has_n_bands(Person:symbol, N_bands:float)\nHas_n_bands(\"Gorillaz\", 2).\nHas_n_bands(\"Bernard Sumner\", 1).\n.decl Answer()\nAnswer() :- Has_n_bands(\"Gorillaz\", n_bands1), Has_n_bands(\"Bernard Sumner\", n_bands2), n_bands1 > n_bands2.\n.output Answer\n\n", "completions": [".decl Has_n_bands(Person:symbol, N_bands:float)\nHas_n_bands(\"Gorillaz\", 2).\nHas_n_bands(\"Bernard Sumner\", 1).\n.decl Answer()\nAnswer() :- Has_n_bands(\"Gorillaz\", n_bands1), Has_n_bands(\"Bernard Sumner\", n_bands2), n_bands1 > n_bands2.\n.output Answer\n\n"]}
{"id": 2117, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"starch\", 0.5).\nHas_mass(\"hyperglycemics\", 0.5).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"wheelbarrow\", 0.5).\n.decl Answer()\nAnswer() :- Has_mass(\"starch\", mass1), Has_mass(\"hyperglycemics\", mass2), Has_volume(\"wheelbarrow\", volume), mass1 > mass2, volume > 0.5.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"starch\", 0.5).\nHas_mass(\"hyperglycemics\", 0.5).\n.decl Has_volume(Object:symbol, Volume:float)\nHas_volume(\"wheelbarrow\", 0.5).\n.decl Answer()\nAnswer() :- Has_mass(\"starch\", mass1), Has_mass(\"hyperglycemics\", mass2), Has_volume(\"wheelbarrow\", volume), mass1 > mass2, volume > 0.5.\n.output Answer\n\n"]}
{"id": 2118, "answer": true, "completion": ".decl Has_n_casualties(Event:symbol, N_casualties:float)\nHas_n_casualties(\"Seven Years' War\", 100000).\n.decl Has_n_lanes(Track:symbol, N_lanes:float)\nHas_n_lanes(\"Indianapolis Motor Speedway\", 18).\n.decl Answer()\nAnswer() :- Has_n_casualties(\"Seven Years' War\", n_casualties), Has_n_lanes(\"Indianapolis Motor Speedway\", n_lanes), n_casualties <= n_lanes.\n.output Answer\n\n", "completions": [".decl Has_n_casualties(Event:symbol, N_casualties:float)\nHas_n_casualties(\"Seven Years' War\", 100000).\n.decl Has_n_lanes(Track:symbol, N_lanes:float)\nHas_n_lanes(\"Indianapolis Motor Speedway\", 18).\n.decl Answer()\nAnswer() :- Has_n_casualties(\"Seven Years' War\", n_casualties), Has_n_lanes(\"Indianapolis Motor Speedway\", n_lanes), n_casualties <= n_lanes.\n.output Answer\n\n"]}
{"id": 2119, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pearl Harbor attack\", \"December\").\nHappens_in_time(\"Pearl Harbor attack\", \"November\").\nHappens_in_time(\"Pearl Harbor attack\", \"October\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"November\", \"autumn\").\nIn_season(\"October\", \"autumn\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Pearl Harbor attack\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Pearl Harbor attack\", \"December\").\nHappens_in_time(\"Pearl Harbor attack\", \"November\").\nHappens_in_time(\"Pearl Harbor attack\", \"October\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"November\", \"autumn\").\nIn_season(\"October\", \"autumn\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Pearl Harbor attack\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 2120, "answer": true, "completion": ".decl Performed_by(Event:symbol, Performer:symbol)\nPerformed_by(\"turning her chair around\", \"Christina Aguilera\").\nPerformed_by(\"turning her chair around\", \"Kelly Clarkson\").\n.decl Performed_on(Event:symbol, Performer:symbol)\nPerformed_on(\"turning her chair around\", \"The Voice\").\n.decl Answer()\nAnswer() :- Performed_by(\"turning her chair around\", performer1), Performed_on(\"turning her chair around\", performer2), performer1 != performer2.\n.output Answer\n\n", "completions": [".decl Performed_by(Event:symbol, Performer:symbol)\nPerformed_by(\"turning her chair around\", \"Christina Aguilera\").\nPerformed_by(\"turning her chair around\", \"Kelly Clarkson\").\n.decl Performed_on(Event:symbol, Performer:symbol)\nPerformed_on(\"turning her chair around\", \"The Voice\").\n.decl Answer()\nAnswer() :- Performed_by(\"turning her chair around\", performer1), Performed_on(\"turning her chair around\", performer2), performer1 != performer2.\n.output Answer\n\n"]}
{"id": 2121, "answer": true, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"World of Warcraft\", 0.5).\nHas_density(\"loaf of bread\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"World of Warcraft\", density1), Has_density(\"loaf of bread\", density2), density1 > density2.\n.output Answer\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"World of Warcraft\", 0.5).\nHas_density(\"loaf of bread\", 0.5).\n.decl Answer()\nAnswer() :- Has_density(\"World of Warcraft\", density1), Has_density(\"loaf of bread\", density2), density1 > density2.\n.output Answer\n\n"]}
{"id": 2122, "answer": false, "completion": ".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Richard Nixon\", \"marxism\").\nBelieves(\"Richard Nixon\", \"right wing\").\nBelieves(\"Ronald Reagan\", \"marxism\").\nBelieves(\"Ronald Reagan\", \"right wing\").\n.decl Answer()\nAnswer() :- Believes(\"Richard Nixon\", belief), Believes(\"Ronald Reagan\", belief), belief != \"marxism\".\n.output Answer\n\n", "completions": [".decl Believes(Person:symbol, Belief:symbol)\nBelieves(\"Richard Nixon\", \"marxism\").\nBelieves(\"Richard Nixon\", \"right wing\").\nBelieves(\"Ronald Reagan\", \"marxism\").\nBelieves(\"Ronald Reagan\", \"right wing\").\n.decl Answer()\nAnswer() :- Believes(\"Richard Nixon\", belief), Believes(\"Ronald Reagan\", belief), belief != \"marxism\".\n.output Answer\n\n"]}
{"id": 2123, "answer": false, "completion": ".decl Has_gross_income(Movie:symbol, Gross_income:float)\nHas_gross_income(\"King Kong (2005 film)\", 6.8).\n.decl Answer()\nAnswer() :- Has_gross_income(\"King Kong (2005 film)\", gross_income), gross_income > 6.8.\n.output Answer\n\n", "completions": [".decl Has_gross_income(Movie:symbol, Gross_income:float)\nHas_gross_income(\"King Kong (2005 film)\", 6.8).\n.decl Answer()\nAnswer() :- Has_gross_income(\"King Kong (2005 film)\", gross_income), gross_income > 6.8.\n.output Answer\n\n"]}
{"id": 2124, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"cucumber\", \"seedless\").\nHas_property(\"entomophobia\", \"fear of insects\").\n.decl Answer()\nAnswer() :- Has_property(\"cucumber\", property), Has_property(\"entomophobia\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"cucumber\", \"seedless\").\nHas_property(\"entomophobia\", \"fear of insects\").\n.decl Answer()\nAnswer() :- Has_property(\"cucumber\", property), Has_property(\"entomophobia\", property).\n.output Answer\n\n"]}
{"id": 2125, "answer": false, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"Garfield\", \"lasagna\").\nEats(\"Garfield\", \"pizza\").\nEats(\"Garfield\", \"spaghetti\").\n.decl Hates(Animal:symbol, Food:symbol)\nHates(\"Garfield\", \"italian cuisine\").\n.decl Answer()\nAnswer() :- Eats(\"Garfield\", food), Hates(\"Garfield\", food).\n.output Answer\n\n", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"Garfield\", \"lasagna\").\nEats(\"Garfield\", \"pizza\").\nEats(\"Garfield\", \"spaghetti\").\n.decl Hates(Animal:symbol, Food:symbol)\nHates(\"Garfield\", \"italian cuisine\").\n.decl Answer()\nAnswer() :- Eats(\"Garfield\", food), Hates(\"Garfield\", food).\n.output Answer\n\n"]}
{"id": 2126, "answer": false, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Shinto practitioners\", \"kosher diet\").\n.decl Answer()\nAnswer() :- Eats(\"Shinto practitioners\", food).\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Shinto practitioners\", \"kosher diet\").\n.decl Answer()\nAnswer() :- Eats(\"Shinto practitioners\", food).\n.output Answer\n\n"]}
{"id": 2127, "answer": true, "completion": ".decl Has_texture(Object:symbol, Texture:symbol)\nHas_texture(\"leaves\", \"smooth\").\nHas_texture(\"leaves\", \"rough\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"leaves\", \"green\").\nHas_color(\"leaves\", \"brown\").\n.decl Answer()\nAnswer() :- Has_texture(\"leaves\", texture), Has_color(\"leaves\", color), texture = color.\n.output Answer\n\n", "completions": [".decl Has_texture(Object:symbol, Texture:symbol)\nHas_texture(\"leaves\", \"smooth\").\nHas_texture(\"leaves\", \"rough\").\n.decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"leaves\", \"green\").\nHas_color(\"leaves\", \"brown\").\n.decl Answer()\nAnswer() :- Has_texture(\"leaves\", texture), Has_color(\"leaves\", color), texture = color.\n.output Answer\n\n"]}
{"id": 2128, "answer": true, "completion": ".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Sam Harris\", \"Hinduism\").\nBelongs_to_religion(\"Sam Harris\", \"Shiva\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Sam Harris\", religion), religion = \"Shiva\".\n.output Answer\n\n", "completions": [".decl Belongs_to_religion(Person:symbol, Religion:symbol)\nBelongs_to_religion(\"Sam Harris\", \"Hinduism\").\nBelongs_to_religion(\"Sam Harris\", \"Shiva\").\n.decl Answer()\nAnswer() :- Belongs_to_religion(\"Sam Harris\", religion), religion = \"Shiva\".\n.output Answer\n\n"]}
{"id": 2129, "answer": true, "completion": ".decl Has_name(Tree:symbol, Name:symbol)\nHas_name(\"tree species that the name Leipzig refers to\", \"Leipzig\").\n.decl Is_evergreen(Tree:symbol)\nIs_evergreen(\"tree species that the name Leipzig refers to\").\n.decl Answer()\nAnswer() :- Has_name(\"tree species that the name Leipzig refers to\", name), Is_evergreen(tree).\n.output Answer\n\n", "completions": [".decl Has_name(Tree:symbol, Name:symbol)\nHas_name(\"tree species that the name Leipzig refers to\", \"Leipzig\").\n.decl Is_evergreen(Tree:symbol)\nIs_evergreen(\"tree species that the name Leipzig refers to\").\n.decl Answer()\nAnswer() :- Has_name(\"tree species that the name Leipzig refers to\", name), Is_evergreen(tree).\n.output Answer\n\n"]}
{"id": 2130, "answer": false, "completion": ".decl Has_pain(Event:symbol, Pain:symbol)\nHas_pain(\"acupuncture\", \"pain\").\n.decl Has_n_people(Event:symbol, N_people:float)\nHas_n_people(\"acupuncture\", 100).\n.decl Answer()\nAnswer() :- Has_pain(\"acupuncture\", pain), Has_n_people(\"acupuncture\", n_people), n_people > 50.\n.output Answer\n\n", "completions": [".decl Has_pain(Event:symbol, Pain:symbol)\nHas_pain(\"acupuncture\", \"pain\").\n.decl Has_n_people(Event:symbol, N_people:float)\nHas_n_people(\"acupuncture\", 100).\n.decl Answer()\nAnswer() :- Has_pain(\"acupuncture\", pain), Has_n_people(\"acupuncture\", n_people), n_people > 50.\n.output Answer\n\n"]}
{"id": 2131, "answer": false, "completion": ".decl From(Person:symbol, Country:symbol)\nFrom(\"Gaite Jansen\", \"Netherlands\").\nFrom(\"Paul Verhoeven\", \"Netherlands\").\nFrom(\"RoboCop\", \"United States\").\nFrom(\"RoboCop 2\", \"United States\").\nFrom(\"RoboCop 3\", \"United States\").\n.decl Answer()\nAnswer() :- From(\"RoboCop\", country), From(\"Gaite Jansen\", country).\n.output Answer\n\n", "completions": [".decl From(Person:symbol, Country:symbol)\nFrom(\"Gaite Jansen\", \"Netherlands\").\nFrom(\"Paul Verhoeven\", \"Netherlands\").\nFrom(\"RoboCop\", \"United States\").\nFrom(\"RoboCop 2\", \"United States\").\nFrom(\"RoboCop 3\", \"United States\").\n.decl Answer()\nAnswer() :- From(\"RoboCop\", country), From(\"Gaite Jansen\", country).\n.output Answer\n\n"]}
{"id": 2132, "answer": false, "completion": ".decl Has_leg_cast(Person:symbol)\nHas_leg_cast(\"you\").\n.decl Has_sandal(Person:symbol)\nHas_sandal(\"you\").\n.decl Answer()\nAnswer() :- Has_leg_cast(\"you\"), not Has_sandal(\"you\").\n.output Answer\n\n", "completions": [".decl Has_leg_cast(Person:symbol)\nHas_leg_cast(\"you\").\n.decl Has_sandal(Person:symbol)\nHas_sandal(\"you\").\n.decl Answer()\nAnswer() :- Has_leg_cast(\"you\"), not Has_sandal(\"you\").\n.output Answer\n\n"]}
{"id": 2133, "answer": true, "completion": ".decl Has_sulfur(Food:symbol)\nHas_sulfur(\"black salt\").\n.decl Has_smell(Food:symbol, Smell:symbol)\nHas_smell(\"black salt\", \"sulfur\").\n.decl Answer()\nAnswer() :- Has_sulfur(\"black salt\"), Has_smell(\"black salt\", smell).\n.output Answer\n\n", "completions": [".decl Has_sulfur(Food:symbol)\nHas_sulfur(\"black salt\").\n.decl Has_smell(Food:symbol, Smell:symbol)\nHas_smell(\"black salt\", \"sulfur\").\n.decl Answer()\nAnswer() :- Has_sulfur(\"black salt\"), Has_smell(\"black salt\", smell).\n.output Answer\n\n"]}
{"id": 2134, "answer": true, "completion": ".decl Has_average_lifespan(Animal:symbol, Average_lifespan:float)\nHas_average_lifespan(\"Hawaiian male\", 70).\nHas_average_lifespan(\"wild cane toad\", 1).\n.decl Answer()\nAnswer() :- Has_average_lifespan(\"Hawaiian male\", average_lifespan1), Has_average_lifespan(\"wild cane toad\", average_lifespan2), average_lifespan1 > average_lifespan2.\n.output Answer\n\n", "completions": [".decl Has_average_lifespan(Animal:symbol, Average_lifespan:float)\nHas_average_lifespan(\"Hawaiian male\", 70).\nHas_average_lifespan(\"wild cane toad\", 1).\n.decl Answer()\nAnswer() :- Has_average_lifespan(\"Hawaiian male\", average_lifespan1), Has_average_lifespan(\"wild cane toad\", average_lifespan2), average_lifespan1 > average_lifespan2.\n.output Answer\n\n"]}
{"id": 2135, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"eggs\", \"Middle Ages\").\nHappens_in_time(\"eggs\", \"today\").\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"eggs\", 4).\nHas_temperature(\"eggs\", 20).\n.decl Answer()\nAnswer() :- Happens_in_time(\"eggs\", time), Has_temperature(\"eggs\", temperature), time = \"Middle Ages\", temperature < 4.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"eggs\", \"Middle Ages\").\nHappens_in_time(\"eggs\", \"today\").\n.decl Has_temperature(Object:symbol, Temperature:float)\nHas_temperature(\"eggs\", 4).\nHas_temperature(\"eggs\", 20).\n.decl Answer()\nAnswer() :- Happens_in_time(\"eggs\", time), Has_temperature(\"eggs\", temperature), time = \"Middle Ages\", temperature < 4.\n.output Answer\n\n"]}
{"id": 2136, "answer": true, "completion": ".decl Has_swallowing_disorder(Person:symbol)\nHas_swallowing_disorder(\"John\").\nHas_swallowing_disorder(\"Mary\").\n.decl Has_viscosity(Drink:symbol, Viscosity:float)\nHas_viscosity(\"juice\", 0.8).\nHas_viscosity(\"milk\", 1).\nHas_viscosity(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_swallowing_disorder(person), Has_viscosity(\"juice\", viscosity), Has_viscosity(\"milk\", viscosity), Has_viscosity(\"water\", viscosity).\n.output Answer\n\n", "completions": [".decl Has_swallowing_disorder(Person:symbol)\nHas_swallowing_disorder(\"John\").\nHas_swallowing_disorder(\"Mary\").\n.decl Has_viscosity(Drink:symbol, Viscosity:float)\nHas_viscosity(\"juice\", 0.8).\nHas_viscosity(\"milk\", 1).\nHas_viscosity(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_swallowing_disorder(person), Has_viscosity(\"juice\", viscosity), Has_viscosity(\"milk\", viscosity), Has_viscosity(\"water\", viscosity).\n.output Answer\n\n"]}
{"id": 2137, "answer": true, "completion": ".decl Is_similar(Object_A:symbol, Object_B:symbol)\nIs_similar(\"Krishna\", \"Holy Spirit\").\n.decl Answer()\nAnswer() :- Is_similar(\"Krishna\", object_b), Is_similar(\"Holy Spirit\", object_b).\n.output Answer\n\n", "completions": [".decl Is_similar(Object_A:symbol, Object_B:symbol)\nIs_similar(\"Krishna\", \"Holy Spirit\").\n.decl Answer()\nAnswer() :- Is_similar(\"Krishna\", object_b), Is_similar(\"Holy Spirit\", object_b).\n.output Answer\n\n"]}
{"id": 2138, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Treaty of Versailles\", \"1919\").\nHappens_in_time(\"Treaty of Versailles\", \"1922\").\nHappens_in_time(\"Treaty of Versailles\", \"1924\").\nHappens_in_time(\"Treaty of Versailles\", \"1928\").\nHappens_in_time(\"Treaty of Versailles\", \"1929\").\nHappens_in_time(\"Treaty of Versailles\", \"1930\").\nHappens_in_time(\"Treaty of Versailles\", \"1931\").\nHappens_in_time(\"Treaty of Versailles\", \"1932\").\nHappens_in_time(\"Treaty of Versailles\", \"1933\").\nHappens_in_time(\"Treaty of Versailles\", \"1934\").\nHappens_in_time(\"Treaty of Versailles\", \"1935\").\nHappens_in_time(\"Treaty of Versailles\", \"1936\").\nHappens_in_time(\"Treaty of Versailles\", \"1937\").\nHappens_in_time(\"Treaty of Versailles\", \"1938\").\nHappens_in_time(\"Treaty of Versailles\", \"1939\").\nHappens_in_time(\"Treaty of Versailles\", \"1940\").\nHappens_in_time(\"Treaty of Versailles\", \"1941\").\nHappens_in_time(\"Treaty of Versailles\", \"1942\").\nHappens_in_time(\"Treaty of Versailles\", \"1943\").\nHappens_in_time(\"Treaty of Versailles\", \"1944\").\nHappens_in_time(\"Treaty of Versailles\", \"1945\").\nHappens_in_time(\"Treaty of Versailles\", \"1946\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"pear\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"pear\", n_months1), Happens_in_time(\"Treaty of Versailles\", time),  n_months1 <= time.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Treaty of Versailles\", \"1919\").\nHappens_in_time(\"Treaty of Versailles\", \"1922\").\nHappens_in_time(\"Treaty of Versailles\", \"1924\").\nHappens_in_time(\"Treaty of Versailles\", \"1928\").\nHappens_in_time(\"Treaty of Versailles\", \"1929\").\nHappens_in_time(\"Treaty of Versailles\", \"1930\").\nHappens_in_time(\"Treaty of Versailles\", \"1931\").\nHappens_in_time(\"Treaty of Versailles\", \"1932\").\nHappens_in_time(\"Treaty of Versailles\", \"1933\").\nHappens_in_time(\"Treaty of Versailles\", \"1934\").\nHappens_in_time(\"Treaty of Versailles\", \"1935\").\nHappens_in_time(\"Treaty of Versailles\", \"1936\").\nHappens_in_time(\"Treaty of Versailles\", \"1937\").\nHappens_in_time(\"Treaty of Versailles\", \"1938\").\nHappens_in_time(\"Treaty of Versailles\", \"1939\").\nHappens_in_time(\"Treaty of Versailles\", \"1940\").\nHappens_in_time(\"Treaty of Versailles\", \"1941\").\nHappens_in_time(\"Treaty of Versailles\", \"1942\").\nHappens_in_time(\"Treaty of Versailles\", \"1943\").\nHappens_in_time(\"Treaty of Versailles\", \"1944\").\nHappens_in_time(\"Treaty of Versailles\", \"1945\").\nHappens_in_time(\"Treaty of Versailles\", \"1946\").\n.decl Happens_every_n_months(Event:symbol, N_months:float)\nHappens_every_n_months(\"pear\", 11).\n.decl Answer()\nAnswer() :- Happens_every_n_months(\"pear\", n_months1), Happens_in_time(\"Treaty of Versailles\", time),  n_months1 <= time.\n.output Answer\n\n"]}
{"id": 2139, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Snow White\", \"Snow White\").\nHas_name(\"Snow White\", \"Snow\").\nHas_name(\"Snow White\", \"White\").\nHas_name(\"Snow White\", \"White Snow\").\nHas_name(\"Snow White\", \"White Snow White\").\nHas_name(\"Snow White\", \"Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White\").\nHas_name(\"Snow White\", \"Snow White White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Snow White\", \"Snow White\").\nHas_name(\"Snow White\", \"Snow\").\nHas_name(\"Snow White\", \"White\").\nHas_name(\"Snow White\", \"White Snow\").\nHas_name(\"Snow White\", \"White Snow White\").\nHas_name(\"Snow White\", \"Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White\").\nHas_name(\"Snow White\", \"Snow White White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow\").\nHas_name(\"Snow White\", \"Snow White White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White Snow White"]}
{"id": 2140, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Mennonites\", 4).\nHas_n_members(\"The Powerpuff Girls\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Mennonites\", n_members1), Has_n_members(\"The Powerpuff Girls\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Mennonites\", 4).\nHas_n_members(\"The Powerpuff Girls\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Mennonites\", n_members1), Has_n_members(\"The Powerpuff Girls\", n_members2), n_members1 >= n_members2.\n.output Answer\n\n"]}
{"id": 2141, "answer": true, "completion": ".decl Is_zodiac_sign(Sign:symbol, Zodiac_sign:symbol)\nIs_zodiac_sign(\"Capricorn\", \"Satanism\").\n.decl Answer()\nAnswer() :- Is_zodiac_sign(\"Capricorn\", zodiac_sign), zodiac_sign = \"Satanism\".\n.output Answer\n\n", "completions": [".decl Is_zodiac_sign(Sign:symbol, Zodiac_sign:symbol)\nIs_zodiac_sign(\"Capricorn\", \"Satanism\").\n.decl Answer()\nAnswer() :- Is_zodiac_sign(\"Capricorn\", zodiac_sign), zodiac_sign = \"Satanism\".\n.output Answer\n\n"]}
{"id": 2142, "answer": true, "completion": ".decl Has_plant(Plant:symbol)\nHas_plant(\"banana\").\nHas_plant(\"coconut\").\nHas_plant(\"cucumber\").\nHas_plant(\"pear\").\nHas_plant(\"pineapple\").\nHas_plant(\"strawberry\").\n.decl Has_snack(Person:symbol, Snack:symbol)\nHas_snack(\"The King of Rock'n Roll\", \"banana\").\n.decl Answer()\nAnswer() :- Has_plant(plant), Has_snack(\"The King of Rock'n Roll\", snack), plant = snack.\n.output Answer\n\n", "completions": [".decl Has_plant(Plant:symbol)\nHas_plant(\"banana\").\nHas_plant(\"coconut\").\nHas_plant(\"cucumber\").\nHas_plant(\"pear\").\nHas_plant(\"pineapple\").\nHas_plant(\"strawberry\").\n.decl Has_snack(Person:symbol, Snack:symbol)\nHas_snack(\"The King of Rock'n Roll\", \"banana\").\n.decl Answer()\nAnswer() :- Has_plant(plant), Has_snack(\"The King of Rock'n Roll\", snack), plant = snack.\n.output Answer\n\n"]}
{"id": 2143, "answer": true, "completion": ".decl Has_duties(God:symbol, Duties:symbol)\nHas_duties(\"Hanuman\", \"protect the world\").\nHas_duties(\"Athena\", \"protect the world\").\n.decl Answer()\nAnswer() :- Has_duties(\"Hanuman\", duties), Has_duties(\"Athena\", duties).\n.output Answer\n\n", "completions": [".decl Has_duties(God:symbol, Duties:symbol)\nHas_duties(\"Hanuman\", \"protect the world\").\nHas_duties(\"Athena\", \"protect the world\").\n.decl Answer()\nAnswer() :- Has_duties(\"Hanuman\", duties), Has_duties(\"Athena\", duties).\n.output Answer\n\n"]}
{"id": 2144, "answer": false, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"jellyfish\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"atherosclerosis\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"jellyfish\", n_members1), Has_n_members(\"atherosclerosis\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"jellyfish\", 5).\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"atherosclerosis\", 5).\n.decl Answer()\nAnswer() :- Has_n_members(\"jellyfish\", n_members1), Has_n_members(\"atherosclerosis\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 2145, "answer": true, "completion": ".decl Has_conquered(Person:symbol, Country:symbol)\nHas_conquered(\"Charlemagne\", \"France\").\nHas_conquered(\"Temujin\", \"Mongolia\").\n.decl Answer()\nAnswer() :- Has_conquered(\"Temujin\", country1), Has_conquered(\"Charlemagne\", country2), country1 != country2.\n.output Answer\n\n", "completions": [".decl Has_conquered(Person:symbol, Country:symbol)\nHas_conquered(\"Charlemagne\", \"France\").\nHas_conquered(\"Temujin\", \"Mongolia\").\n.decl Answer()\nAnswer() :- Has_conquered(\"Temujin\", country1), Has_conquered(\"Charlemagne\", country2), country1 != country2.\n.output Answer\n\n"]}
{"id": 2146, "answer": false, "completion": ".decl Has_problems(Location:symbol, Problems:symbol)\nHas_problems(\"Antarctica\", \"homelessness\").\n.decl Answer()\nAnswer() :- Has_problems(\"Antarctica\", problems), Has_problems(\"Antarctica\", problems2), problems != problems2.\n.output Answer\n\n", "completions": [".decl Has_problems(Location:symbol, Problems:symbol)\nHas_problems(\"Antarctica\", \"homelessness\").\n.decl Answer()\nAnswer() :- Has_problems(\"Antarctica\", problems), Has_problems(\"Antarctica\", problems2), problems != problems2.\n.output Answer\n\n"]}
{"id": 2147, "answer": false, "completion": ".decl Has_death(Person:symbol, Death:symbol)\nHas_death(\"Jeff Buckley\", \"death\").\nHas_death(\"Jeff Buckley\", \"immersion baptism\").\n.decl Has_cause_of_death(Person:symbol, Cause_of_death:symbol)\nHas_cause_of_death(\"Jeff Buckley\", \"death\").\n.decl Answer()\nAnswer() :- Has_death(\"Jeff Buckley\", death), Has_cause_of_death(\"Jeff Buckley\", cause_of_death), death == cause_of_death.\n.output Answer\n\n", "completions": [".decl Has_death(Person:symbol, Death:symbol)\nHas_death(\"Jeff Buckley\", \"death\").\nHas_death(\"Jeff Buckley\", \"immersion baptism\").\n.decl Has_cause_of_death(Person:symbol, Cause_of_death:symbol)\nHas_cause_of_death(\"Jeff Buckley\", \"death\").\n.decl Answer()\nAnswer() :- Has_death(\"Jeff Buckley\", death), Has_cause_of_death(\"Jeff Buckley\", cause_of_death), death == cause_of_death.\n.output Answer\n\n"]}
{"id": 2148, "answer": true, "completion": ".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"carrot\", \"A\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"raw carrot\", \"A\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"cooked carrot\", \"A\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"raw carrot\", vitamin), Has_vitamin(\"carrot\", vitamin), Has_vitamin(\"cooked carrot\", vitamin).\n.output Answer\n\n", "completions": [".decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"carrot\", \"A\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"raw carrot\", \"A\").\n.decl Has_vitamin(Food:symbol, Vitamin:symbol)\nHas_vitamin(\"cooked carrot\", \"A\").\n.decl Answer()\nAnswer() :- Has_vitamin(\"raw carrot\", vitamin), Has_vitamin(\"carrot\", vitamin), Has_vitamin(\"cooked carrot\", vitamin).\n.output Answer\n\n"]}
{"id": 2149, "answer": true, "completion": ".decl Has_model(Vehicle:symbol, Model:symbol)\nHas_model(\"Toyota Prius\", \"Prius\").\nHas_model(\"Wrestlemania X\", \"X\").\n.decl Has_arrived(Person:symbol, Event:symbol)\nHas_arrived(\"John Cena\", \"Wrestlemania X\").\n.decl Answer()\nAnswer() :- Has_model(\"Toyota Prius\", model), Has_arrived(\"John Cena\", event), Has_model(vehicle, model), Has_arrived(person, event).\n.output Answer\n\n", "completions": [".decl Has_model(Vehicle:symbol, Model:symbol)\nHas_model(\"Toyota Prius\", \"Prius\").\nHas_model(\"Wrestlemania X\", \"X\").\n.decl Has_arrived(Person:symbol, Event:symbol)\nHas_arrived(\"John Cena\", \"Wrestlemania X\").\n.decl Answer()\nAnswer() :- Has_model(\"Toyota Prius\", model), Has_arrived(\"John Cena\", event), Has_model(vehicle, model), Has_arrived(person, event).\n.output Answer\n\n"]}
{"id": 2150, "answer": true, "completion": ".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Emmanuel Macron\", \"Cinco de Mayo\").\n.decl Answer()\nAnswer() :- Celebrates(\"Emmanuel Macron\", holiday).\n.output Answer\n\n", "completions": [".decl Celebrates(Person:symbol, Holiday:symbol)\nCelebrates(\"Emmanuel Macron\", \"Cinco de Mayo\").\n.decl Answer()\nAnswer() :- Celebrates(\"Emmanuel Macron\", holiday).\n.output Answer\n\n"]}
{"id": 2151, "answer": true, "completion": ".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"eel\", \"sand cat\").\nEats(\"eel\", \"snake\").\nEats(\"eel\", \"bird\").\nEats(\"eel\", \"hamster\").\nEats(\"eel\", \"mouse\").\nEats(\"eel\", \"rat\").\nEats(\"eel\", \"turtle\").\nEats(\"eel\", \"fish\").\nEats(\"eel\", \"frog\").\nEats(\"eel\", \"salamander\").\nEats(\"eel\", \"toad\").\nEats(\"eel\", \"lizard\").\nEats(\"eel\", \"alligator\").\nEats(\"eel\", \"crocodile\").\nEats(\"eel\", \"cobra\").\nEats(\"eel\", \"viper\").\nEats(\"eel\", \"boa constrictor\").\nEats(\"eel\", \"python\").\nEats(\"eel\", \"anaconda\").\nEats(\"eel\", \"rattlesnake\").\nEats(\"eel\", \"sidewinder\").\nEats(\"eel\", \"horned viper\").\nEats(\"eel\", \"pit viper\").\nEats(\"eel\", \"green mamba\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"horned asp\").\nEats(\"eel\", \"black mamba\").\nEats(\"eel\", \"king cobra\").\nEats(\"eel\", \"krait\").\nEats(\"eel\", \"taipan\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\",", "completions": [".decl Eats(Animal_A:symbol, Animal_B:symbol)\nEats(\"eel\", \"sand cat\").\nEats(\"eel\", \"snake\").\nEats(\"eel\", \"bird\").\nEats(\"eel\", \"hamster\").\nEats(\"eel\", \"mouse\").\nEats(\"eel\", \"rat\").\nEats(\"eel\", \"turtle\").\nEats(\"eel\", \"fish\").\nEats(\"eel\", \"frog\").\nEats(\"eel\", \"salamander\").\nEats(\"eel\", \"toad\").\nEats(\"eel\", \"lizard\").\nEats(\"eel\", \"alligator\").\nEats(\"eel\", \"crocodile\").\nEats(\"eel\", \"cobra\").\nEats(\"eel\", \"viper\").\nEats(\"eel\", \"boa constrictor\").\nEats(\"eel\", \"python\").\nEats(\"eel\", \"anaconda\").\nEats(\"eel\", \"rattlesnake\").\nEats(\"eel\", \"sidewinder\").\nEats(\"eel\", \"horned viper\").\nEats(\"eel\", \"pit viper\").\nEats(\"eel\", \"green mamba\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"horned asp\").\nEats(\"eel\", \"black mamba\").\nEats(\"eel\", \"king cobra\").\nEats(\"eel\", \"krait\").\nEats(\"eel\", \"taipan\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\", \"sea snake\").\nEats(\"eel\","]}
{"id": 2152, "answer": true, "completion": ".decl Is_important_to(Person:symbol, History:symbol)\nIs_important_to(\"Drew Carey\", \"wrestling\").\n.decl Answer()\nAnswer() :- Is_important_to(\"Drew Carey\", history).\n.output Answer\n\n", "completions": [".decl Is_important_to(Person:symbol, History:symbol)\nIs_important_to(\"Drew Carey\", \"wrestling\").\n.decl Answer()\nAnswer() :- Is_important_to(\"Drew Carey\", history).\n.output Answer\n\n"]}
{"id": 2153, "answer": true, "completion": ".decl Has_n_jobs(Location:symbol, N_jobs:float)\nHas_n_jobs(\"Gulf of Mexico\", 100).\n.decl Has_n_jobs(Location:symbol, N_jobs:float)\nHas_n_jobs(\"Gulf of Mexico\", 200).\n.decl Answer()\nAnswer() :- Has_n_jobs(\"Gulf of Mexico\", n_jobs1), Has_n_jobs(\"Gulf of Mexico\", n_jobs2), n_jobs1 < n_jobs2.\n.output Answer\n\n", "completions": [".decl Has_n_jobs(Location:symbol, N_jobs:float)\nHas_n_jobs(\"Gulf of Mexico\", 100).\n.decl Has_n_jobs(Location:symbol, N_jobs:float)\nHas_n_jobs(\"Gulf of Mexico\", 200).\n.decl Answer()\nAnswer() :- Has_n_jobs(\"Gulf of Mexico\", n_jobs1), Has_n_jobs(\"Gulf of Mexico\", n_jobs2), n_jobs1 < n_jobs2.\n.output Answer\n\n"]}
{"id": 2154, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Roman Gallic Wars army\", 0.5).\nHas_speed(\"pyramids\", 0.1).\n.decl Answer()\nAnswer() :- Has_speed(\"Roman Gallic Wars army\", speed1), Has_speed(\"pyramids\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Roman Gallic Wars army\", 0.5).\nHas_speed(\"pyramids\", 0.1).\n.decl Answer()\nAnswer() :- Has_speed(\"Roman Gallic Wars army\", speed1), Has_speed(\"pyramids\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 2155, "answer": true, "completion": ".decl Located_in(Person:symbol, Location:symbol)\nLocated_in(\"Nissan\", \"Tokyo\").\nLocated_in(\"Nissan\", \"Nagoya\").\nLocated_in(\"Nissan\", \"Osaka\").\nLocated_in(\"Nissan\", \"Kyoto\").\n.decl Eats(Person:symbol, Food:symbol)\nEats(\"Nissan\", \"sushi\").\nEats(\"Nissan\", \"ramen\").\nEats(\"Nissan\", \"tempura\").\nEats(\"Nissan\", \"sashimi\").\n.decl Answer()\nAnswer() :- Located_in(\"Nissan\", location), Eats(\"Nissan\", food), location = \"Tokyo\".\n.output Answer\n\n", "completions": [".decl Located_in(Person:symbol, Location:symbol)\nLocated_in(\"Nissan\", \"Tokyo\").\nLocated_in(\"Nissan\", \"Nagoya\").\nLocated_in(\"Nissan\", \"Osaka\").\nLocated_in(\"Nissan\", \"Kyoto\").\n.decl Eats(Person:symbol, Food:symbol)\nEats(\"Nissan\", \"sushi\").\nEats(\"Nissan\", \"ramen\").\nEats(\"Nissan\", \"tempura\").\nEats(\"Nissan\", \"sashimi\").\n.decl Answer()\nAnswer() :- Located_in(\"Nissan\", location), Eats(\"Nissan\", food), location = \"Tokyo\".\n.output Answer\n\n"]}
{"id": 2156, "answer": true, "completion": ".decl Lives_in_water(Animal:symbol)\nLives_in_water(\"manta ray\").\n.decl Safe_temperature(Food:symbol, Temperature:float)\nSafe_temperature(\"cold food\", -2).\n.decl Answer()\nAnswer() :- Lives_in_water(\"manta ray\"), Safe_temperature(\"cold food\", temperature).\n.output Answer\n\n", "completions": [".decl Lives_in_water(Animal:symbol)\nLives_in_water(\"manta ray\").\n.decl Safe_temperature(Food:symbol, Temperature:float)\nSafe_temperature(\"cold food\", -2).\n.decl Answer()\nAnswer() :- Lives_in_water(\"manta ray\"), Safe_temperature(\"cold food\", temperature).\n.output Answer\n\n"]}
{"id": 2157, "answer": true, "completion": ".decl Is_felony(Crime:symbol)\nIs_felony(\"felony\").\n.decl Is_jury(People:symbol)\nIs_jury(\"jury\").\n.decl Is_enough(People:symbol, N_people:float)\nIs_enough(\"jury\", 6).\n.decl Answer()\nAnswer() :- Is_felony(\"crime\"), Is_jury(\"people\"), Is_enough(\"people\", n_people), n_people >= 6.\n.output Answer\n\n", "completions": [".decl Is_felony(Crime:symbol)\nIs_felony(\"felony\").\n.decl Is_jury(People:symbol)\nIs_jury(\"jury\").\n.decl Is_enough(People:symbol, N_people:float)\nIs_enough(\"jury\", 6).\n.decl Answer()\nAnswer() :- Is_felony(\"crime\"), Is_jury(\"people\"), Is_enough(\"people\", n_people), n_people >= 6.\n.output Answer\n\n"]}
{"id": 2158, "answer": true, "completion": ".decl Has_depth(Ocean:symbol, Depth:float)\nHas_depth(\"Arctic Ocean\", 4500).\n.decl Has_height(Object:symbol, Height:float)\nHas_height(\"Eiffel Tower\", 324).\n.decl Answer()\nAnswer() :- Has_depth(\"Arctic Ocean\", depth), Has_height(\"Eiffel Tower\", height), depth < height.\n.output Answer\n\n", "completions": [".decl Has_depth(Ocean:symbol, Depth:float)\nHas_depth(\"Arctic Ocean\", 4500).\n.decl Has_height(Object:symbol, Height:float)\nHas_height(\"Eiffel Tower\", 324).\n.decl Answer()\nAnswer() :- Has_depth(\"Arctic Ocean\", depth), Has_height(\"Eiffel Tower\", height), depth < height.\n.output Answer\n\n"]}
{"id": 2159, "answer": true, "completion": ".decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"CEO\", \"Microsoft\").\nWorks_for(\"CEO\", \"Google\").\nWorks_for(\"CEO\", \"Apple\").\n.decl Works_in(Person:symbol, Building:symbol)\nWorks_in(\"CEO\", \"Apple\").\nWorks_in(\"CEO\", \"Google\").\nWorks_in(\"CEO\", \"Microsoft\").\n.decl Answer()\nAnswer() :- Works_in(\"CEO\", building), Works_for(\"CEO\", company), company != building.\n.output Answer\n\n", "completions": [".decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"CEO\", \"Microsoft\").\nWorks_for(\"CEO\", \"Google\").\nWorks_for(\"CEO\", \"Apple\").\n.decl Works_in(Person:symbol, Building:symbol)\nWorks_in(\"CEO\", \"Apple\").\nWorks_in(\"CEO\", \"Google\").\nWorks_in(\"CEO\", \"Microsoft\").\n.decl Answer()\nAnswer() :- Works_in(\"CEO\", building), Works_for(\"CEO\", company), company != building.\n.output Answer\n\n"]}
{"id": 2160, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Christmas\", \"December\").\nHappens_in_time(\"Christmas\", \"January\").\nHappens_in_time(\"Christmas\", \"February\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"January\", \"winter\").\nIn_season(\"February\", \"winter\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Christmas\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 2161, "answer": true, "completion": ".decl Loves(Person_A:symbol, Person_B:symbol)\nLoves(\"Moliere\", \"Margot\").\n.decl Is_lover_of(Person_A:symbol, Person_B:symbol)\nIs_lover_of(\"Moliere\", \"Margot\").\n.decl Answer()\nAnswer() :- Loves(\"Moliere\", person_b), Is_lover_of(\"Moliere\", person_b).\n.output Answer\n\n", "completions": [".decl Loves(Person_A:symbol, Person_B:symbol)\nLoves(\"Moliere\", \"Margot\").\n.decl Is_lover_of(Person_A:symbol, Person_B:symbol)\nIs_lover_of(\"Moliere\", \"Margot\").\n.decl Answer()\nAnswer() :- Loves(\"Moliere\", person_b), Is_lover_of(\"Moliere\", person_b).\n.output Answer\n\n"]}
{"id": 2162, "answer": false, "completion": ".decl Has_chlorophyll(Plant:symbol, Chlorophyll:float)\nHas_chlorophyll(\"hosta\", 0.5).\nHas_chlorophyll(\"hosta\", 1).\n.decl Has_lots_of_chlorophyll(Plant:symbol)\nHas_lots_of_chlorophyll(\"hosta\").\n.decl Answer()\nAnswer() :- Has_chlorophyll(\"hosta\", chlorophyll), Has_lots_of_chlorophyll(\"hosta\").\n.output Answer\n\n", "completions": [".decl Has_chlorophyll(Plant:symbol, Chlorophyll:float)\nHas_chlorophyll(\"hosta\", 0.5).\nHas_chlorophyll(\"hosta\", 1).\n.decl Has_lots_of_chlorophyll(Plant:symbol)\nHas_lots_of_chlorophyll(\"hosta\").\n.decl Answer()\nAnswer() :- Has_chlorophyll(\"hosta\", chlorophyll), Has_lots_of_chlorophyll(\"hosta\").\n.output Answer\n\n"]}
{"id": 2163, "answer": false, "completion": ".decl Has_n_syllables(Word:symbol, N_syllables:float)\nHas_n_syllables(\"Rime\", 8).\nHas_n_syllables(\"Ancient\", 8).\nHas_n_syllables(\"Mariner\", 10).\n.decl Has_n_lines(Poem:symbol, N_lines:float)\nHas_n_lines(\"Rime of the Ancient Mariner\", 14).\n.decl Answer()\nAnswer() :- Has_n_syllables(\"Rime\", n_syllables1), Has_n_syllables(\"Ancient\", n_syllables2), Has_n_syllables(\"Mariner\", n_syllables3), Has_n_lines(\"Rime of the Ancient Mariner\", n_lines), n_syllables1 + n_syllables2 + n_syllables3 == n_lines.\n.output Answer\n\n", "completions": [".decl Has_n_syllables(Word:symbol, N_syllables:float)\nHas_n_syllables(\"Rime\", 8).\nHas_n_syllables(\"Ancient\", 8).\nHas_n_syllables(\"Mariner\", 10).\n.decl Has_n_lines(Poem:symbol, N_lines:float)\nHas_n_lines(\"Rime of the Ancient Mariner\", 14).\n.decl Answer()\nAnswer() :- Has_n_syllables(\"Rime\", n_syllables1), Has_n_syllables(\"Ancient\", n_syllables2), Has_n_syllables(\"Mariner\", n_syllables3), Has_n_lines(\"Rime of the Ancient Mariner\", n_lines), n_syllables1 + n_syllables2 + n_syllables3 == n_lines.\n.output Answer\n\n"]}
{"id": 2164, "answer": false, "completion": ".decl Is_interested_in(Person:symbol, Object:symbol)\nIs_interested_in(\"astronomer\", \"drosophila\").\n.decl Is_a_kind_of(Object:symbol, Kind:symbol)\nIs_a_kind_of(\"drosophila\", \"fruit fly\").\n.decl Answer()\nAnswer() :- Is_interested_in(\"astronomer\", object), Is_a_kind_of(object, kind).\n.output Answer\n\n", "completions": [".decl Is_interested_in(Person:symbol, Object:symbol)\nIs_interested_in(\"astronomer\", \"drosophila\").\n.decl Is_a_kind_of(Object:symbol, Kind:symbol)\nIs_a_kind_of(\"drosophila\", \"fruit fly\").\n.decl Answer()\nAnswer() :- Is_interested_in(\"astronomer\", object), Is_a_kind_of(object, kind).\n.output Answer\n\n"]}
{"id": 2165, "answer": true, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Hershey's Kisses\", \"red\").\nHas_color(\"farthing\", \"gold\").\n.decl Has_year(Event:symbol, Year:float)\nHas_year(\"1960\", 1960).\n.decl Answer()\nAnswer() :- Has_color(\"Hershey's Kisses\", color), Has_color(\"farthing\", color), Has_year(\"1960\", year), year > 1960.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"Hershey's Kisses\", \"red\").\nHas_color(\"farthing\", \"gold\").\n.decl Has_year(Event:symbol, Year:float)\nHas_year(\"1960\", 1960).\n.decl Answer()\nAnswer() :- Has_color(\"Hershey's Kisses\", color), Has_color(\"farthing\", color), Has_year(\"1960\", year), year > 1960.\n.output Answer\n\n"]}
{"id": 2166, "answer": true, "completion": ".decl Has_brain_structure(Person:symbol, Brain_structure:symbol)\nHas_brain_structure(\"Gauss\", \"normal\").\n.decl Answer()\nAnswer() :- Has_brain_structure(\"Gauss\", brain_structure).\n.output Answer\n\n", "completions": [".decl Has_brain_structure(Person:symbol, Brain_structure:symbol)\nHas_brain_structure(\"Gauss\", \"normal\").\n.decl Answer()\nAnswer() :- Has_brain_structure(\"Gauss\", brain_structure).\n.output Answer\n\n"]}
{"id": 2167, "answer": false, "completion": ".decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"dopamine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"norepinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"epinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"norepinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"epinephrine\", 394).\n.decl Answer()\nAnswer() :- Has_molecular_weight(\"dopamine\", molecular_weight1), Has_molecular_weight(\"norepinephrine\", molecular_weight2), Has_molecular_weight(\"epinephrine\", molecular_weight3), molecular_weight1 > molecular_weight2, molecular_weight1 > molecular_weight3.\n.output Answer\n\n", "completions": [".decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"dopamine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"norepinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"epinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"norepinephrine\", 394).\n.decl Has_molecular_weight(Molecule:symbol, Molecular_weight:float)\nHas_molecular_weight(\"epinephrine\", 394).\n.decl Answer()\nAnswer() :- Has_molecular_weight(\"dopamine\", molecular_weight1), Has_molecular_weight(\"norepinephrine\", molecular_weight2), Has_molecular_weight(\"epinephrine\", molecular_weight3), molecular_weight1 > molecular_weight2, molecular_weight1 > molecular_weight3.\n.output Answer\n\n"]}
{"id": 2168, "answer": true, "completion": ".decl Has_moustache(Person:symbol)\nHas_moustache(\"Mary\").\nHas_moustache(\"Jane\").\nHas_moustache(\"Sally\").\n.decl Answer()\nAnswer() :- Has_moustache(\"Mary\"), Has_moustache(\"Jane\"), Has_moustache(\"Sally\").\n.output Answer\n\n", "completions": [".decl Has_moustache(Person:symbol)\nHas_moustache(\"Mary\").\nHas_moustache(\"Jane\").\nHas_moustache(\"Sally\").\n.decl Answer()\nAnswer() :- Has_moustache(\"Mary\"), Has_moustache(\"Jane\"), Has_moustache(\"Sally\").\n.output Answer\n\n"]}
{"id": 2169, "answer": false, "completion": ".decl Ancestor(Person:symbol, Ancestor:symbol)\nAncestor(\"Demi Lovato\", \"Miley Cyrus\").\nAncestor(\"Miley Cyrus\", \"Britney Spears\").\nAncestor(\"Britney Spears\", \"Cher\").\nAncestor(\"Cher\", \"Gene Autry\").\nAncestor(\"Gene Autry\", \"Will Rogers\").\nAncestor(\"Will Rogers\", \"Davy Crockett\").\n.decl Answer()\nAnswer() :- Ancestor(\"Demi Lovato\", ancestor), Ancestor(ancestor, \"Will Rogers\").\n.output Answer\n\n", "completions": [".decl Ancestor(Person:symbol, Ancestor:symbol)\nAncestor(\"Demi Lovato\", \"Miley Cyrus\").\nAncestor(\"Miley Cyrus\", \"Britney Spears\").\nAncestor(\"Britney Spears\", \"Cher\").\nAncestor(\"Cher\", \"Gene Autry\").\nAncestor(\"Gene Autry\", \"Will Rogers\").\nAncestor(\"Will Rogers\", \"Davy Crockett\").\n.decl Answer()\nAnswer() :- Ancestor(\"Demi Lovato\", ancestor), Ancestor(ancestor, \"Will Rogers\").\n.output Answer\n\n"]}
{"id": 2170, "answer": true, "completion": ".decl Serves(Restaurant:symbol, Food:symbol)\nServes(\"Long John Silver's\", \"sea otter\").\n.decl Answer()\nAnswer() :- Serves(\"Long John Silver's\", food).\n.output Answer\n\n", "completions": [".decl Serves(Restaurant:symbol, Food:symbol)\nServes(\"Long John Silver's\", \"sea otter\").\n.decl Answer()\nAnswer() :- Serves(\"Long John Silver's\", food).\n.output Answer\n\n"]}
{"id": 2171, "answer": false, "completion": ".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\n.decl Is_day(Day:symbol)\nIs_day(\"Monday\").\nIs_day(\"Tuesday\").\nIs_day(\"Wednesday\").\nIs_day(\"Thursday\").\nIs_day(\"Friday\").\nIs_day(\"Saturday\").\nIs_day(\"Sunday\").\n.decl Answer()\nAnswer() :- Is_day(day), Is_prime(number), day = number.\n.output Answer\n\n", "completions": [".decl Is_prime(Number:float)\nIs_prime(2).\nIs_prime(3).\nIs_prime(5).\nIs_prime(7).\n.decl Is_day(Day:symbol)\nIs_day(\"Monday\").\nIs_day(\"Tuesday\").\nIs_day(\"Wednesday\").\nIs_day(\"Thursday\").\nIs_day(\"Friday\").\nIs_day(\"Saturday\").\nIs_day(\"Sunday\").\n.decl Answer()\nAnswer() :- Is_day(day), Is_prime(number), day = number.\n.output Answer\n\n"]}
{"id": 2172, "answer": true, "completion": ".decl Eats(Person:symbol, Food:symbol)\nEats(\"Şerafeddin Sabuncuoğlu\", \"Börek\").\n.decl Answer()\nAnswer() :- Eats(\"Şerafeddin Sabuncuoğlu\", \"Börek\").\n.output Answer\n\n", "completions": [".decl Eats(Person:symbol, Food:symbol)\nEats(\"Şerafeddin Sabuncuoğlu\", \"Börek\").\n.decl Answer()\nAnswer() :- Eats(\"Şerafeddin Sabuncuoğlu\", \"Börek\").\n.output Answer\n\n"]}
{"id": 2173, "answer": false, "completion": ".decl Has_bruises(Reiki:symbol)\nHas_bruises(\"reiki\").\n.decl Has_pain(Reiki:symbol)\nHas_pain(\"reiki\").\n.decl Answer()\nAnswer() :- Has_bruises(\"reiki\"), !Has_pain(\"reiki\").\n.output Answer\n\n", "completions": [".decl Has_bruises(Reiki:symbol)\nHas_bruises(\"reiki\").\n.decl Has_pain(Reiki:symbol)\nHas_pain(\"reiki\").\n.decl Answer()\nAnswer() :- Has_bruises(\"reiki\"), !Has_pain(\"reiki\").\n.output Answer\n\n"]}
{"id": 2174, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"September 11th\", \"September\").\nHappens_in_time(\"Firefighters\", \"September\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Firefighters\", time), Happens_in_time(\"September 11th\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"September 11th\", \"September\").\nHappens_in_time(\"Firefighters\", \"September\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Firefighters\", time), Happens_in_time(\"September 11th\", time).\n.output Answer\n\n"]}
{"id": 2175, "answer": true, "completion": ".decl Believed_in(Person:symbol, Belief:symbol)\nBelieved_in(\"Martin Luther\", \"Satan\").\n.decl Answer()\nAnswer() :- Believed_in(\"Martin Luther\", belief).\n.output Answer\n\n", "completions": [".decl Believed_in(Person:symbol, Belief:symbol)\nBelieved_in(\"Martin Luther\", \"Satan\").\n.decl Answer()\nAnswer() :- Believed_in(\"Martin Luther\", belief).\n.output Answer\n\n"]}
{"id": 2176, "answer": true, "completion": ".decl Has_size(Object:symbol, Size:float)\nHas_size(\"Donatello crucifix\", 3).\n.decl Answer()\nAnswer() :- Has_size(\"Donatello crucifix\", size), size > 2.\n.output Answer\n\n", "completions": [".decl Has_size(Object:symbol, Size:float)\nHas_size(\"Donatello crucifix\", 3).\n.decl Answer()\nAnswer() :- Has_size(\"Donatello crucifix\", size), size > 2.\n.output Answer\n\n"]}
{"id": 2177, "answer": true, "completion": ".decl Has_courage(Person:symbol, Age:symbol, Courage:float)\nHas_courage(\"Neville Longbottom\", \"child\", 3).\nHas_courage(\"Neville Longbottom\", \"adult\", 1).\n.decl Answer()\nAnswer() :- Has_courage(\"Neville Longbottom\", \"child\", courage1), Has_courage(\"Neville Longbottom\", \"adult\", courage2), courage1 > courage2.\n.output Answer\n\n", "completions": [".decl Has_courage(Person:symbol, Age:symbol, Courage:float)\nHas_courage(\"Neville Longbottom\", \"child\", 3).\nHas_courage(\"Neville Longbottom\", \"adult\", 1).\n.decl Answer()\nAnswer() :- Has_courage(\"Neville Longbottom\", \"child\", courage1), Has_courage(\"Neville Longbottom\", \"adult\", courage2), courage1 > courage2.\n.output Answer\n\n"]}
{"id": 2178, "answer": false, "completion": ".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Gisele Bündchen\", 1.72).\nHas_height(\"Angelina Jolie\", 1.73).\nHas_height(\"Marilyn Monroe\", 1.68).\nHas_height(\"Kate Moss\", 1.6).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Gisele Bündchen\", 60).\nHas_weight(\"Angelina Jolie\", 60).\nHas_weight(\"Marilyn Monroe\", 50).\nHas_weight(\"Kate Moss\", 40).\n.decl Has_bmi(Person:symbol, BMI:float)\nHas_bmi(\"Gisele Bündchen\", 25).\nHas_bmi(\"Angelina Jolie\", 25).\nHas_bmi(\"Marilyn Monroe\", 25).\nHas_bmi(\"Kate Moss\", 25).\n.decl Answer()\nAnswer() :- Has_height(\"model\", height), Has_weight(\"model\", weight), Has_bmi(\"model\", bmi), Has_height(\"Gisele Bündchen\", height1), Has_weight(\"Gisele Bündchen\", weight1), Has_bmi(\"Gisele Bündchen\", bmi1), height > height1, weight > weight1, bmi > bmi1.\n.output Answer\n\n", "completions": [".decl Has_height(Person:symbol, Height:float)\nHas_height(\"Gisele Bündchen\", 1.72).\nHas_height(\"Angelina Jolie\", 1.73).\nHas_height(\"Marilyn Monroe\", 1.68).\nHas_height(\"Kate Moss\", 1.6).\n.decl Has_weight(Person:symbol, Weight:float)\nHas_weight(\"Gisele Bündchen\", 60).\nHas_weight(\"Angelina Jolie\", 60).\nHas_weight(\"Marilyn Monroe\", 50).\nHas_weight(\"Kate Moss\", 40).\n.decl Has_bmi(Person:symbol, BMI:float)\nHas_bmi(\"Gisele Bündchen\", 25).\nHas_bmi(\"Angelina Jolie\", 25).\nHas_bmi(\"Marilyn Monroe\", 25).\nHas_bmi(\"Kate Moss\", 25).\n.decl Answer()\nAnswer() :- Has_height(\"model\", height), Has_weight(\"model\", weight), Has_bmi(\"model\", bmi), Has_height(\"Gisele Bündchen\", height1), Has_weight(\"Gisele Bündchen\", weight1), Has_bmi(\"Gisele Bündchen\", bmi1), height > height1, weight > weight1, bmi > bmi1.\n.output Answer\n\n"]}
{"id": 2179, "answer": false, "completion": ".decl Has_owner(Company:symbol, Owner:symbol)\nHas_owner(\"Griffin Company\", \"Peter Griffin\").\nHas_owner(\"Griffin Company\", \"Lois Griffin\").\nHas_owner(\"Griffin Company\", \"Glenn Quagmire\").\nHas_owner(\"Griffin Company\", \"Cleveland Brown\").\n.decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"Peter Griffin\", \"Griffin Company\").\nWorks_for(\"Lois Griffin\", \"Griffin Company\").\nWorks_for(\"Glenn Quagmire\", \"Griffin Company\").\nWorks_for(\"Cleveland Brown\", \"Griffin Company\").\n.decl Needs(Company:symbol, Need:symbol)\nNeeds(\"Griffin Company\", \"barley\").\n.decl Answer()\nAnswer() :- Works_for(\"Peter Griffin\", company), Needs(company, need).\n.output Answer\n\n", "completions": [".decl Has_owner(Company:symbol, Owner:symbol)\nHas_owner(\"Griffin Company\", \"Peter Griffin\").\nHas_owner(\"Griffin Company\", \"Lois Griffin\").\nHas_owner(\"Griffin Company\", \"Glenn Quagmire\").\nHas_owner(\"Griffin Company\", \"Cleveland Brown\").\n.decl Works_for(Person:symbol, Company:symbol)\nWorks_for(\"Peter Griffin\", \"Griffin Company\").\nWorks_for(\"Lois Griffin\", \"Griffin Company\").\nWorks_for(\"Glenn Quagmire\", \"Griffin Company\").\nWorks_for(\"Cleveland Brown\", \"Griffin Company\").\n.decl Needs(Company:symbol, Need:symbol)\nNeeds(\"Griffin Company\", \"barley\").\n.decl Answer()\nAnswer() :- Works_for(\"Peter Griffin\", company), Needs(company, need).\n.output Answer\n\n"]}
{"id": 2180, "answer": true, "completion": ".decl Has_antibiotic_properties(Object:symbol, Antibiotic_properties:float)\nHas_antibiotic_properties(\"olive oil\", 0.5).\nHas_antibiotic_properties(\"rabies\", 0.5).\n.decl Answer()\nAnswer() :- Has_antibiotic_properties(\"olive oil\", antibiotic_properties), Has_antibiotic_properties(\"rabies\", antibiotic_properties).\n.output Answer\n\n", "completions": [".decl Has_antibiotic_properties(Object:symbol, Antibiotic_properties:float)\nHas_antibiotic_properties(\"olive oil\", 0.5).\nHas_antibiotic_properties(\"rabies\", 0.5).\n.decl Answer()\nAnswer() :- Has_antibiotic_properties(\"olive oil\", antibiotic_properties), Has_antibiotic_properties(\"rabies\", antibiotic_properties).\n.output Answer\n\n"]}
{"id": 2181, "answer": true, "completion": ".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Queen Victoria\", \"Guam\").\nVisited(\"European\", \"Guam\").\n.decl Answer()\nAnswer() :- Visited(\"European\", \"Guam\"), Visited(\"Queen Victoria\", \"Guam\").\n.output Answer\n\n", "completions": [".decl Visited(Person:symbol, Place:symbol)\nVisited(\"Queen Victoria\", \"Guam\").\nVisited(\"European\", \"Guam\").\n.decl Answer()\nAnswer() :- Visited(\"European\", \"Guam\"), Visited(\"Queen Victoria\", \"Guam\").\n.output Answer\n\n"]}
{"id": 2182, "answer": false, "completion": ".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"American black bear\", 20).\nHas_mass(\"sun bear\", 15).\n.decl Answer()\nAnswer() :- Has_mass(\"American black bear\", mass1), Has_mass(\"sun bear\", mass2), mass1 > mass2.\n.output Answer\n\n", "completions": [".decl Has_mass(Object:symbol, Mass:float)\nHas_mass(\"American black bear\", 20).\nHas_mass(\"sun bear\", 15).\n.decl Answer()\nAnswer() :- Has_mass(\"American black bear\", mass1), Has_mass(\"sun bear\", mass2), mass1 > mass2.\n.output Answer\n\n"]}
{"id": 2183, "answer": false, "completion": ".decl Has_n_rooms(Home:symbol, N_rooms:float)\nHas_n_rooms(\"Adam Sandler's home\", 2).\n.decl Has_n_people(Family:symbol, N_people:float)\nHas_n_people(\"average American family\", 4).\n.decl Answer()\nAnswer() :- Has_n_rooms(\"Adam Sandler's home\", n_rooms), Has_n_people(\"average American family\", n_people), n_rooms < n_people.\n.output Answer\n\n", "completions": [".decl Has_n_rooms(Home:symbol, N_rooms:float)\nHas_n_rooms(\"Adam Sandler's home\", 2).\n.decl Has_n_people(Family:symbol, N_people:float)\nHas_n_people(\"average American family\", 4).\n.decl Answer()\nAnswer() :- Has_n_rooms(\"Adam Sandler's home\", n_rooms), Has_n_people(\"average American family\", n_people), n_rooms < n_people.\n.output Answer\n\n"]}
{"id": 2184, "answer": true, "completion": ".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"brussels sprouts\", 0.2).\nHas_weight(\"many meals\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"brussels sprouts\", weight1), Has_weight(\"many meals\", weight2), weight1 > weight2.\n.output Answer\n\n", "completions": [".decl Has_weight(Object:symbol, Weight:float)\nHas_weight(\"brussels sprouts\", 0.2).\nHas_weight(\"many meals\", 1).\n.decl Answer()\nAnswer() :- Has_weight(\"brussels sprouts\", weight1), Has_weight(\"many meals\", weight2), weight1 > weight2.\n.output Answer\n\n"]}
{"id": 2185, "answer": true, "completion": ".decl Is_holy(Religion:symbol)\nIs_holy(\"Judaism\").\nIs_holy(\"Christianity\").\nIs_holy(\"Islam\").\n.decl Is_holy_land(Place:symbol)\nIs_holy_land(\"Jerusalem\").\nIs_holy_land(\"Bethlehem\").\nIs_holy_land(\"Mecca\").\n.decl Answer()\nAnswer() :- Is_holy(\"Judaism\"), Is_holy_land(\"Jerusalem\").\nAnswer() :- Is_holy(\"Christianity\"), Is_holy_land(\"Bethlehem\").\nAnswer() :- Is_holy(\"Islam\"), Is_holy_land(\"Mecca\").\n.output Answer\n\n", "completions": [".decl Is_holy(Religion:symbol)\nIs_holy(\"Judaism\").\nIs_holy(\"Christianity\").\nIs_holy(\"Islam\").\n.decl Is_holy_land(Place:symbol)\nIs_holy_land(\"Jerusalem\").\nIs_holy_land(\"Bethlehem\").\nIs_holy_land(\"Mecca\").\n.decl Answer()\nAnswer() :- Is_holy(\"Judaism\"), Is_holy_land(\"Jerusalem\").\nAnswer() :- Is_holy(\"Christianity\"), Is_holy_land(\"Bethlehem\").\nAnswer() :- Is_holy(\"Islam\"), Is_holy_land(\"Mecca\").\n.output Answer\n\n"]}
{"id": 2186, "answer": false, "completion": ".decl Has_job_security(Person:symbol, Job_security:float)\nHas_job_security(\"David Cameron\", 0.5).\n.decl Answer()\nAnswer() :- Has_job_security(\"David Cameron\", job_security), job_security < 0.5.\n.output Answer\n\n", "completions": [".decl Has_job_security(Person:symbol, Job_security:float)\nHas_job_security(\"David Cameron\", 0.5).\n.decl Answer()\nAnswer() :- Has_job_security(\"David Cameron\", job_security), job_security < 0.5.\n.output Answer\n\n"]}
{"id": 2187, "answer": true, "completion": ".decl Has_capacity(Ship:symbol, Capacity:float)\nHas_capacity(\"Symphony of the Seas\", 50000).\nHas_capacity(\"People's Volunteer Army\", 100000).\n.decl Answer()\nAnswer() :- Has_capacity(\"People's Volunteer Army\", capacity1), Has_capacity(\"Symphony of the Seas\", capacity2), capacity1 <= capacity2.\n.output Answer\n\n", "completions": [".decl Has_capacity(Ship:symbol, Capacity:float)\nHas_capacity(\"Symphony of the Seas\", 50000).\nHas_capacity(\"People's Volunteer Army\", 100000).\n.decl Answer()\nAnswer() :- Has_capacity(\"People's Volunteer Army\", capacity1), Has_capacity(\"Symphony of the Seas\", capacity2), capacity1 <= capacity2.\n.output Answer\n\n"]}
{"id": 2188, "answer": false, "completion": ".decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"professional boxer\", \"no\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"professional boxer\", \"yes\").\n.decl Answer()\nAnswer() :- Has_dental_plan(\"professional boxer\", \"no\").\nAnswer() :- Has_dental_plan(\"professional boxer\", \"yes\").\n.output Answer\n\n", "completions": [".decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"professional boxer\", \"no\").\n.decl Has_dental_plan(Person:symbol, Plan:symbol)\nHas_dental_plan(\"professional boxer\", \"yes\").\n.decl Answer()\nAnswer() :- Has_dental_plan(\"professional boxer\", \"no\").\nAnswer() :- Has_dental_plan(\"professional boxer\", \"yes\").\n.output Answer\n\n"]}
{"id": 2189, "answer": false, "completion": ".decl Has_format(Object:symbol, Format:symbol)\nHas_format(\"images\", \"JPEG\").\n.decl Has_leader(Group:symbol, Leader:symbol)\nHas_leader(\"Heaven's Gate\", \"Leader\").\n.decl Answer()\nAnswer() :- Has_format(\"images\", format), Has_leader(\"Heaven's Gate\", leader), format == \"JPEG\".\n.output Answer\n\n", "completions": [".decl Has_format(Object:symbol, Format:symbol)\nHas_format(\"images\", \"JPEG\").\n.decl Has_leader(Group:symbol, Leader:symbol)\nHas_leader(\"Heaven's Gate\", \"Leader\").\n.decl Answer()\nAnswer() :- Has_format(\"images\", format), Has_leader(\"Heaven's Gate\", leader), format == \"JPEG\".\n.output Answer\n\n"]}
{"id": 2190, "answer": true, "completion": ".decl Has_type(Event:symbol, Type:symbol)\nHas_type(\"Caesar\", \"monarchy\").\nHas_type(\"Pompey\", \"republic\").\nHas_type(\"reality TV\", \"democracy\").\n.decl Answer()\nAnswer() :- Has_type(\"Caesar\", type1), Has_type(\"Pompey\", type2), Has_type(\"reality TV\", type3), type1 == type2, type1 != type3.\n.output Answer\n\n", "completions": [".decl Has_type(Event:symbol, Type:symbol)\nHas_type(\"Caesar\", \"monarchy\").\nHas_type(\"Pompey\", \"republic\").\nHas_type(\"reality TV\", \"democracy\").\n.decl Answer()\nAnswer() :- Has_type(\"Caesar\", type1), Has_type(\"Pompey\", type2), Has_type(\"reality TV\", type3), type1 == type2, type1 != type3.\n.output Answer\n\n"]}
{"id": 2191, "answer": true, "completion": ".decl Is_a_knight(Knight:symbol)\nIs_a_knight(\"Sir Lancelot\").\nIs_a_knight(\"Sir Robin\").\nIs_a_knight(\"Sir Galahad\").\nIs_a_knight(\"Sir Bedivere\").\nIs_a_knight(\"Sir Lancelot of Camelot\").\nIs_a_knight(\"Sir Robin of Camelot\").\nIs_a_knight(\"Sir Galahad of Camelot\").\nIs_a_knight(\"Sir Bedivere of Camelot\").\n.decl Is_a_knight_of_Camelot(Knight:symbol)\nIs_a_knight_of_Camelot(\"Sir Lancelot of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Robin of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Galahad of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Bedivere of Camelot\").\n.decl Is_a_knight_of_round_table(Knight:symbol)\nIs_a_knight_of_round_table(\"Sir Lancelot\").\nIs_a_knight_of_round_table(\"Sir Robin\").\nIs_a_knight_of_round_table(\"Sir Galahad\").\nIs_a_knight_of_round_table(\"Sir Bedivere\").\n.decl Answer()\nAnswer() :- Is_a_knight(\"Sir Lancelot\"), Is_a_knight(\"Sir Robin\"), Is_a_knight(\"Sir Galahad\"), Is_a_knight(\"Sir Bedivere\"), Is_a_knight_of_Camelot(\"Sir Lancelot of Camelot\"), Is_a_knight_of_Camelot(\"Sir Robin of Camelot\"), Is_a_knight_of_Camelot(\"Sir Galahad of Camelot\"), Is_a_knight_of_Camelot(\"Sir Bedivere of Camelot\"), Is_a_knight_of_round_table(\"Sir Lancelot\"), Is_a_knight_of_round_table(\"Sir Robin\"), Is_a_knight_of_round_table(\"Sir Galahad\"), Is_a_knight_of_round_table(\"Sir Bedivere\").\n.output Answer\n\n", "completions": [".decl Is_a_knight(Knight:symbol)\nIs_a_knight(\"Sir Lancelot\").\nIs_a_knight(\"Sir Robin\").\nIs_a_knight(\"Sir Galahad\").\nIs_a_knight(\"Sir Bedivere\").\nIs_a_knight(\"Sir Lancelot of Camelot\").\nIs_a_knight(\"Sir Robin of Camelot\").\nIs_a_knight(\"Sir Galahad of Camelot\").\nIs_a_knight(\"Sir Bedivere of Camelot\").\n.decl Is_a_knight_of_Camelot(Knight:symbol)\nIs_a_knight_of_Camelot(\"Sir Lancelot of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Robin of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Galahad of Camelot\").\nIs_a_knight_of_Camelot(\"Sir Bedivere of Camelot\").\n.decl Is_a_knight_of_round_table(Knight:symbol)\nIs_a_knight_of_round_table(\"Sir Lancelot\").\nIs_a_knight_of_round_table(\"Sir Robin\").\nIs_a_knight_of_round_table(\"Sir Galahad\").\nIs_a_knight_of_round_table(\"Sir Bedivere\").\n.decl Answer()\nAnswer() :- Is_a_knight(\"Sir Lancelot\"), Is_a_knight(\"Sir Robin\"), Is_a_knight(\"Sir Galahad\"), Is_a_knight(\"Sir Bedivere\"), Is_a_knight_of_Camelot(\"Sir Lancelot of Camelot\"), Is_a_knight_of_Camelot(\"Sir Robin of Camelot\"), Is_a_knight_of_Camelot(\"Sir Galahad of Camelot\"), Is_a_knight_of_Camelot(\"Sir Bedivere of Camelot\"), Is_a_knight_of_round_table(\"Sir Lancelot\"), Is_a_knight_of_round_table(\"Sir Robin\"), Is_a_knight_of_round_table(\"Sir Galahad\"), Is_a_knight_of_round_table(\"Sir Bedivere\").\n.output Answer\n\n"]}
{"id": 2192, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Puerto Rico\", \"commonwealth\").\nHas_property(\"Puerto Rico\", \"state\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"self-governing territory\").\nHas_property(\"Puerto Rico\", \"sovereign state\").\nHas_property(\"Puerto Rico\", \"sovereign territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"Puerto Rico\", \"commonwealth\").\nHas_property(\"Puerto Rico\", \"state\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"self-governing territory\").\nHas_property(\"Puerto Rico\", \"sovereign state\").\nHas_property(\"Puerto Rico\", \"sovereign territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \"unincorporated territory\").\nHas_property(\"Puerto Rico\", \"territory\").\nHas_property(\"Puerto Rico\", \"incorporated territory\").\nHas_property(\"Puerto Rico\", \"unincorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"incorporated and unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"organized incorporated territory\").\nHas_property(\"Puerto Rico\", \"organized unorganized territory\").\nHas_property(\"Puerto Rico\", \"organized unincorporated territory\").\nHas_property(\"Puerto Rico\", \"organized territory\").\nHas_property(\"Puerto Rico\", \"unorganized territory\").\nHas_property(\"Puerto Rico\", \""]}
{"id": 2193, "answer": false, "completion": ".decl Has_format(Device:symbol, Format:symbol)\nHas_format(\"Nintendo\", \"cartridge\").\nHas_format(\"Playstation 3\", \"disc\").\n.decl Answer()\nAnswer() :- Has_format(\"Nintendo\", format), Has_format(\"Playstation 3\", format).\n.output Answer\n\n", "completions": [".decl Has_format(Device:symbol, Format:symbol)\nHas_format(\"Nintendo\", \"cartridge\").\nHas_format(\"Playstation 3\", \"disc\").\n.decl Answer()\nAnswer() :- Has_format(\"Nintendo\", format), Has_format(\"Playstation 3\", format).\n.output Answer\n\n"]}
{"id": 2194, "answer": true, "completion": ".decl Has_composer(Composition:symbol, Composer:symbol)\nHas_composer(\"Messiah\", \"Handel\").\n.decl Has_singer(Composition:symbol, Singer:symbol)\nHas_singer(\"Messiah\", \"Bruce Gandy\").\n.decl Answer()\nAnswer() :- Has_composer(\"Messiah\", composer), Has_singer(\"Messiah\", singer), composer != singer.\n.output Answer\n\n", "completions": [".decl Has_composer(Composition:symbol, Composer:symbol)\nHas_composer(\"Messiah\", \"Handel\").\n.decl Has_singer(Composition:symbol, Singer:symbol)\nHas_singer(\"Messiah\", \"Bruce Gandy\").\n.decl Answer()\nAnswer() :- Has_composer(\"Messiah\", composer), Has_singer(\"Messiah\", singer), composer != singer.\n.output Answer\n\n"]}
{"id": 2195, "answer": true, "completion": ".decl Runs(Train:symbol, Route:symbol)\nRuns(\"Amtrak\", \"New York City\").\nRuns(\"Amtrak\", \"Moai\").\n.decl Answer()\nAnswer() :- Runs(\"Amtrak\", route1), Runs(\"Amtrak\", route2), route1 = route2.\n.output Answer\n\n", "completions": [".decl Runs(Train:symbol, Route:symbol)\nRuns(\"Amtrak\", \"New York City\").\nRuns(\"Amtrak\", \"Moai\").\n.decl Answer()\nAnswer() :- Runs(\"Amtrak\", route1), Runs(\"Amtrak\", route2), route1 = route2.\n.output Answer\n\n"]}
{"id": 2196, "answer": true, "completion": ".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"person in a coma\", \"fear\").\n.decl Answer()\nAnswer() :- Has_emotion(\"person in a coma\", emotion).\n.output Answer\n\n", "completions": [".decl Has_emotion(Person:symbol, Emotion:symbol)\nHas_emotion(\"person in a coma\", \"fear\").\n.decl Answer()\nAnswer() :- Has_emotion(\"person in a coma\", emotion).\n.output Answer\n\n"]}
{"id": 2197, "answer": false, "completion": ".decl Has_number(Person:symbol, Number:float)\nHas_number(\"Andrew Johnson\", 18).\nHas_number(\"Elagabalus\", 2).\n.decl Answer()\nAnswer() :- Has_number(\"Andrew Johnson\", number1), Has_number(\"Elagabalus\", number2), number1 > number2.\n.output Answer\n\n", "completions": [".decl Has_number(Person:symbol, Number:float)\nHas_number(\"Andrew Johnson\", 18).\nHas_number(\"Elagabalus\", 2).\n.decl Answer()\nAnswer() :- Has_number(\"Andrew Johnson\", number1), Has_number(\"Elagabalus\", number2), number1 > number2.\n.output Answer\n\n"]}
{"id": 2198, "answer": false, "completion": ".decl Has_speed(Vehicle:symbol, Speed:float)\nHas_speed(\"Lamborghini\", 350).\nHas_speed(\"Porsche 911\", 300).\n.decl Has_acceleration(Vehicle:symbol, Acceleration:float)\nHas_acceleration(\"Lamborghini\", 10).\nHas_acceleration(\"Porsche 911\", 12).\n.decl Answer()\nAnswer() :- Has_speed(\"Lamborghini\", speed1), Has_speed(\"Porsche 911\", speed2), Has_acceleration(\"Lamborghini\", acceleration1), Has_acceleration(\"Porsche 911\", acceleration2), speed1 > speed2, acceleration1 > acceleration2.\n.output Answer\n\n", "completions": [".decl Has_speed(Vehicle:symbol, Speed:float)\nHas_speed(\"Lamborghini\", 350).\nHas_speed(\"Porsche 911\", 300).\n.decl Has_acceleration(Vehicle:symbol, Acceleration:float)\nHas_acceleration(\"Lamborghini\", 10).\nHas_acceleration(\"Porsche 911\", 12).\n.decl Answer()\nAnswer() :- Has_speed(\"Lamborghini\", speed1), Has_speed(\"Porsche 911\", speed2), Has_acceleration(\"Lamborghini\", acceleration1), Has_acceleration(\"Porsche 911\", acceleration2), speed1 > speed2, acceleration1 > acceleration2.\n.output Answer\n\n"]}
{"id": 2199, "answer": true, "completion": ".decl Has_roast_time(Object:symbol, Roast_time:float)\nHas_roast_time(\"garlic\", 1).\nHas_roast_time(\"garlic cloves\", 1).\n.decl Answer()\nAnswer() :- Has_roast_time(\"garlic\", roast_time1), Has_roast_time(\"garlic cloves\", roast_time2), roast_time1 =< roast_time2.\n.output Answer\n\n", "completions": [".decl Has_roast_time(Object:symbol, Roast_time:float)\nHas_roast_time(\"garlic\", 1).\nHas_roast_time(\"garlic cloves\", 1).\n.decl Answer()\nAnswer() :- Has_roast_time(\"garlic\", roast_time1), Has_roast_time(\"garlic cloves\", roast_time2), roast_time1 =< roast_time2.\n.output Answer\n\n"]}
{"id": 2200, "answer": true, "completion": ".decl Owns(Person:symbol, Object:symbol)\nOwns(\"college student\", \"fax machine\").\n.decl Answer()\nAnswer() :- Owns(\"college student\", object1), Owns(\"college student\", object2), object1 != object2.\n.output Answer\n\n", "completions": [".decl Owns(Person:symbol, Object:symbol)\nOwns(\"college student\", \"fax machine\").\n.decl Answer()\nAnswer() :- Owns(\"college student\", object1), Owns(\"college student\", object2), object1 != object2.\n.output Answer\n\n"]}
{"id": 2201, "answer": true, "completion": ".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Bernie Sanders\", \"Metropolitan Museum of Art\").\n.decl Costs(Place:symbol, Cost:float)\nCosts(\"Metropolitan Museum of Art\", 200).\n.decl Answer()\nAnswer() :- Visits(\"Bernie Sanders\", place), Costs(place, cost), cost > 200.\n.output Answer\n\n", "completions": [".decl Visits(Person:symbol, Place:symbol)\nVisits(\"Bernie Sanders\", \"Metropolitan Museum of Art\").\n.decl Costs(Place:symbol, Cost:float)\nCosts(\"Metropolitan Museum of Art\", 200).\n.decl Answer()\nAnswer() :- Visits(\"Bernie Sanders\", place), Costs(place, cost), cost > 200.\n.output Answer\n\n"]}
{"id": 2202, "answer": true, "completion": ".decl Used_in_time(Object:symbol, Time:symbol)\nUsed_in_time(\"Qwerty keyboard layout\", \"1940s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1950s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1960s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1970s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1980s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1990s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"2000s\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"computer\", \"1940s\").\nHappens_in_time(\"computer\", \"1950s\").\nHappens_in_time(\"computer\", \"1960s\").\nHappens_in_time(\"computer\", \"1970s\").\nHappens_in_time(\"computer\", \"1980s\").\nHappens_in_time(\"computer\", \"1990s\").\nHappens_in_time(\"computer\", \"2000s\").\n.decl Answer()\nAnswer() :- Used_in_time(\"Qwerty keyboard layout\", time1), Happens_in_time(\"computer\", time2), time1 < time2.\n.output Answer\n\n", "completions": [".decl Used_in_time(Object:symbol, Time:symbol)\nUsed_in_time(\"Qwerty keyboard layout\", \"1940s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1950s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1960s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1970s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1980s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"1990s\").\nUsed_in_time(\"Qwerty keyboard layout\", \"2000s\").\n.decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"computer\", \"1940s\").\nHappens_in_time(\"computer\", \"1950s\").\nHappens_in_time(\"computer\", \"1960s\").\nHappens_in_time(\"computer\", \"1970s\").\nHappens_in_time(\"computer\", \"1980s\").\nHappens_in_time(\"computer\", \"1990s\").\nHappens_in_time(\"computer\", \"2000s\").\n.decl Answer()\nAnswer() :- Used_in_time(\"Qwerty keyboard layout\", time1), Happens_in_time(\"computer\", time2), time1 < time2.\n.output Answer\n\n"]}
{"id": 2203, "answer": true, "completion": ".decl Has_starbucks(Country:symbol)\nHas_starbucks(\"United Arab Emirates\").\nHas_starbucks(\"Saudi Arabia\").\nHas_starbucks(\"Kuwait\").\n.decl Answer()\nAnswer() :- Has_starbucks(country), Has_starbucks(country2), country != country2.\n.output Answer\n\n", "completions": [".decl Has_starbucks(Country:symbol)\nHas_starbucks(\"United Arab Emirates\").\nHas_starbucks(\"Saudi Arabia\").\nHas_starbucks(\"Kuwait\").\n.decl Answer()\nAnswer() :- Has_starbucks(country), Has_starbucks(country2), country != country2.\n.output Answer\n\n"]}
{"id": 2204, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"January\").\nHappens_in_time(\"birth\", \"February\").\nHappens_in_time(\"birth\", \"March\").\nHappens_in_time(\"birth\", \"April\").\nHappens_in_time(\"birth\", \"May\").\nHappens_in_time(\"birth\", \"June\").\nHappens_in_time(\"birth\", \"July\").\nHappens_in_time(\"birth\", \"August\").\nHappens_in_time(\"birth\", \"September\").\nHappens_in_time(\"birth\", \"October\").\nHappens_in_time(\"birth\", \"November\").\nHappens_in_time(\"birth\", \"December\").\nHappens_in_time(\"funeral\", \"January\").\nHappens_in_time(\"funeral\", \"February\").\nHappens_in_time(\"funeral\", \"March\").\nHappens_in_time(\"funeral\", \"April\").\nHappens_in_time(\"funeral\", \"May\").\nHappens_in_time(\"funeral\", \"June\").\nHappens_in_time(\"funeral\", \"July\").\nHappens_in_time(\"funeral\", \"August\").\nHappens_in_time(\"funeral\", \"September\").\nHappens_in_time(\"funeral\", \"October\").\nHappens_in_time(\"funeral\", \"November\").\nHappens_in_time(\"funeral\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", month1), Happens_in_time(\"funeral\", month2), month1 = month2.\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"birth\", \"January\").\nHappens_in_time(\"birth\", \"February\").\nHappens_in_time(\"birth\", \"March\").\nHappens_in_time(\"birth\", \"April\").\nHappens_in_time(\"birth\", \"May\").\nHappens_in_time(\"birth\", \"June\").\nHappens_in_time(\"birth\", \"July\").\nHappens_in_time(\"birth\", \"August\").\nHappens_in_time(\"birth\", \"September\").\nHappens_in_time(\"birth\", \"October\").\nHappens_in_time(\"birth\", \"November\").\nHappens_in_time(\"birth\", \"December\").\nHappens_in_time(\"funeral\", \"January\").\nHappens_in_time(\"funeral\", \"February\").\nHappens_in_time(\"funeral\", \"March\").\nHappens_in_time(\"funeral\", \"April\").\nHappens_in_time(\"funeral\", \"May\").\nHappens_in_time(\"funeral\", \"June\").\nHappens_in_time(\"funeral\", \"July\").\nHappens_in_time(\"funeral\", \"August\").\nHappens_in_time(\"funeral\", \"September\").\nHappens_in_time(\"funeral\", \"October\").\nHappens_in_time(\"funeral\", \"November\").\nHappens_in_time(\"funeral\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"birth\", month1), Happens_in_time(\"funeral\", month2), month1 = month2.\n.output Answer\n\n"]}
{"id": 2205, "answer": true, "completion": ".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Eve\", \"Adam\").\nHas_parent(\"Adam\", \"Cain\").\nHas_parent(\"Adam\", \"Abel\").\nHas_parent(\"Abel\", \"Seth\").\nHas_parent(\"Cain\", \"Enos\").\nHas_parent(\"Seth\", \"Enos\").\n.decl Answer()\nAnswer() :- Has_parent(\"Eve\", parent1), Has_parent(parent1, parent2), Has_parent(parent2, parent3), Has_parent(parent3, parent4), Has_parent(parent4, parent5), Has_parent(parent5, parent6), parent1 != parent2, parent2 != parent3, parent3 != parent4, parent4 != parent5, parent5 != parent6.\n.output Answer\n\n", "completions": [".decl Has_parent(Person:symbol, Parent:symbol)\nHas_parent(\"Eve\", \"Adam\").\nHas_parent(\"Adam\", \"Cain\").\nHas_parent(\"Adam\", \"Abel\").\nHas_parent(\"Abel\", \"Seth\").\nHas_parent(\"Cain\", \"Enos\").\nHas_parent(\"Seth\", \"Enos\").\n.decl Answer()\nAnswer() :- Has_parent(\"Eve\", parent1), Has_parent(parent1, parent2), Has_parent(parent2, parent3), Has_parent(parent3, parent4), Has_parent(parent4, parent5), Has_parent(parent5, parent6), parent1 != parent2, parent2 != parent3, parent3 != parent4, parent4 != parent5, parent5 != parent6.\n.output Answer\n\n"]}
{"id": 2206, "answer": true, "completion": ".decl Has_learning_disability(Placozoa:symbol)\nHas_learning_disability(\"placozoa\").\n.decl Answer()\nAnswer() :- Has_learning_disability(\"placozoa\").\n.output Answer\n\n", "completions": [".decl Has_learning_disability(Placozoa:symbol)\nHas_learning_disability(\"placozoa\").\n.decl Answer()\nAnswer() :- Has_learning_disability(\"placozoa\").\n.output Answer\n\n"]}
{"id": 2207, "answer": true, "completion": ".decl Is_opposed_to(Group:symbol, Object:symbol)\nIs_opposed_to(\"System of a Down\", \"globalization\").\n.decl Answer()\nAnswer() :- Is_opposed_to(\"System of a Down\", object).\n.output Answer\n\n", "completions": [".decl Is_opposed_to(Group:symbol, Object:symbol)\nIs_opposed_to(\"System of a Down\", \"globalization\").\n.decl Answer()\nAnswer() :- Is_opposed_to(\"System of a Down\", object).\n.output Answer\n\n"]}
{"id": 2208, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Seuss\", \"Theodor Seuss Geisel\").\n.decl Answer()\nAnswer() :- Has_name(\"Dr. Seuss\", name), name = \"Theodor Seuss Geisel\".\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Dr. Seuss\", \"Theodor Seuss Geisel\").\n.decl Answer()\nAnswer() :- Has_name(\"Dr. Seuss\", name), name = \"Theodor Seuss Geisel\".\n.output Answer\n\n"]}
{"id": 2209, "answer": false, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"coat wear\", \"winter\").\nHappens_in_time(\"coat wear\", \"summer\").\nHappens_in_time(\"coat wear\", \"spring\").\nHappens_in_time(\"coat wear\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"September\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"coat wear\", season), Happens_in_time(\"coat wear\", month), In_season(month, season).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"coat wear\", \"winter\").\nHappens_in_time(\"coat wear\", \"summer\").\nHappens_in_time(\"coat wear\", \"spring\").\nHappens_in_time(\"coat wear\", \"fall\").\n.decl In_season(Month:symbol, Season:symbol)\nIn_season(\"December\", \"winter\").\nIn_season(\"May\", \"spring\").\nIn_season(\"June\", \"summer\").\nIn_season(\"September\", \"fall\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"coat wear\", season), Happens_in_time(\"coat wear\", month), In_season(month, season).\n.output Answer\n\n"]}
{"id": 2210, "answer": false, "completion": ".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"silicon\", 14).\nHas_atomic_number(\"bromine\", 35).\n.decl Has_atomic_weight(Element:symbol, Atomic_weight:float)\nHas_atomic_weight(\"silicon\", 28.085).\nHas_atomic_weight(\"bromine\", 79.904).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"silicon\", atomic_number1), Has_atomic_number(\"bromine\", atomic_number2), Has_atomic_weight(\"silicon\", atomic_weight1), Has_atomic_weight(\"bromine\", atomic_weight2), atomic_number1 > atomic_number2, atomic_weight1 > atomic_weight2.\n.output Answer\n\n", "completions": [".decl Has_atomic_number(Element:symbol, Atomic_number:float)\nHas_atomic_number(\"silicon\", 14).\nHas_atomic_number(\"bromine\", 35).\n.decl Has_atomic_weight(Element:symbol, Atomic_weight:float)\nHas_atomic_weight(\"silicon\", 28.085).\nHas_atomic_weight(\"bromine\", 79.904).\n.decl Answer()\nAnswer() :- Has_atomic_number(\"silicon\", atomic_number1), Has_atomic_number(\"bromine\", atomic_number2), Has_atomic_weight(\"silicon\", atomic_weight1), Has_atomic_weight(\"bromine\", atomic_weight2), atomic_number1 > atomic_number2, atomic_weight1 > atomic_weight2.\n.output Answer\n\n"]}
{"id": 2211, "answer": true, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Saddam Hussein\", \"Saddam\").\nHas_name(\"Saddam Hussein\", \"Hussein\").\nHas_name(\"Idris I\", \"Idris\").\nHas_name(\"Idris I\", \"I\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Saddam Hussein\", \"Saddam\").\nHas_first_name(\"Idris I\", \"Idris\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Saddam Hussein\", \"Hussein\").\nHas_last_name(\"Idris I\", \"I\").\n.decl Answer()\nAnswer() :- Has_name(\"Saddam Hussein\", name1), Has_name(\"Idris I\", name2), Has_first_name(\"Saddam Hussein\", first_name1), Has_first_name(\"Idris I\", first_name2), Has_last_name(\"Saddam Hussein\", last_name1), Has_last_name(\"Idris I\", last_name2), name1 = first_name1, name2 = first_name2, name1 = last_name1, name2 = last_name2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Saddam Hussein\", \"Saddam\").\nHas_name(\"Saddam Hussein\", \"Hussein\").\nHas_name(\"Idris I\", \"Idris\").\nHas_name(\"Idris I\", \"I\").\n.decl Has_first_name(Person:symbol, First_name:symbol)\nHas_first_name(\"Saddam Hussein\", \"Saddam\").\nHas_first_name(\"Idris I\", \"Idris\").\n.decl Has_last_name(Person:symbol, Last_name:symbol)\nHas_last_name(\"Saddam Hussein\", \"Hussein\").\nHas_last_name(\"Idris I\", \"I\").\n.decl Answer()\nAnswer() :- Has_name(\"Saddam Hussein\", name1), Has_name(\"Idris I\", name2), Has_first_name(\"Saddam Hussein\", first_name1), Has_first_name(\"Idris I\", first_name2), Has_last_name(\"Saddam Hussein\", last_name1), Has_last_name(\"Idris I\", last_name2), name1 = first_name1, name2 = first_name2, name1 = last_name1, name2 = last_name2.\n.output Answer\n\n"]}
{"id": 2212, "answer": false, "completion": ".decl Has_month(Month:symbol, Year:symbol)\nHas_month(\"March\", \"January\").\nHas_month(\"March\", \"February\").\nHas_month(\"March\", \"March\").\n.decl Has_name(Month:symbol, Name:symbol)\nHas_name(\"January\", \"January\").\nHas_name(\"February\", \"February\").\nHas_name(\"March\", \"Jupiter\").\n.decl Answer()\nAnswer() :- Has_month(\"March\", year), Has_name(\"March\", name), Has_name(month, name), Has_month(month, year).\n.output Answer\n\n", "completions": [".decl Has_month(Month:symbol, Year:symbol)\nHas_month(\"March\", \"January\").\nHas_month(\"March\", \"February\").\nHas_month(\"March\", \"March\").\n.decl Has_name(Month:symbol, Name:symbol)\nHas_name(\"January\", \"January\").\nHas_name(\"February\", \"February\").\nHas_name(\"March\", \"Jupiter\").\n.decl Answer()\nAnswer() :- Has_month(\"March\", year), Has_name(\"March\", name), Has_name(month, name), Has_month(month, year).\n.output Answer\n\n"]}
{"id": 2213, "answer": true, "completion": ".decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"Subway\", \"McDonald's\").\nHas_name(\"Subway\", \"Burger King\").\nHas_name(\"Subway\", \"Wendy's\").\n.decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"McDonald's\", \"McDonald's\").\nHas_name(\"Burger King\", \"Burger King\").\nHas_name(\"Wendy's\", \"Wendy's\").\n.decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"McDonald's\", \"Wendy's\").\nHas_name(\"Burger King\", \"Wendy's\").\n.decl Answer()\nAnswer() :- Has_name(\"Subway\", name1), Has_name(name1, name2), Has_name(name2, name3), name1 != name3.\n.output Answer\n\n", "completions": [".decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"Subway\", \"McDonald's\").\nHas_name(\"Subway\", \"Burger King\").\nHas_name(\"Subway\", \"Wendy's\").\n.decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"McDonald's\", \"McDonald's\").\nHas_name(\"Burger King\", \"Burger King\").\nHas_name(\"Wendy's\", \"Wendy's\").\n.decl Has_name(Organization:symbol, Name:symbol)\nHas_name(\"McDonald's\", \"Wendy's\").\nHas_name(\"Burger King\", \"Wendy's\").\n.decl Answer()\nAnswer() :- Has_name(\"Subway\", name1), Has_name(name1, name2), Has_name(name2, name3), name1 != name3.\n.output Answer\n\n"]}
{"id": 2214, "answer": false, "completion": ".decl Is_forbidden(Person:symbol, Action:symbol)\nIs_forbidden(\"Chief Justice of the United States\", \"buy alcohol\").\n.decl Answer()\nAnswer() :- Is_forbidden(\"Chief Justice of the United States\", action).\n.output Answer\n\n", "completions": [".decl Is_forbidden(Person:symbol, Action:symbol)\nIs_forbidden(\"Chief Justice of the United States\", \"buy alcohol\").\n.decl Answer()\nAnswer() :- Is_forbidden(\"Chief Justice of the United States\", action).\n.output Answer\n\n"]}
{"id": 2215, "answer": true, "completion": ".decl Plays_Scrabble(Person:symbol)\nPlays_Scrabble(\"two-year old\").\n.decl Plays_Scrabble(Person:symbol)\nPlays_Scrabble(\"Scrabble champion\").\n.decl Answer()\nAnswer() :- Plays_Scrabble(\"two-year old\").\nAnswer() :- Plays_Scrabble(\"Scrabble champion\").\n.output Answer\n\n", "completions": [".decl Plays_Scrabble(Person:symbol)\nPlays_Scrabble(\"two-year old\").\n.decl Plays_Scrabble(Person:symbol)\nPlays_Scrabble(\"Scrabble champion\").\n.decl Answer()\nAnswer() :- Plays_Scrabble(\"two-year old\").\nAnswer() :- Plays_Scrabble(\"Scrabble champion\").\n.output Answer\n\n"]}
{"id": 2216, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Iris (mythology)\", \"Iris\").\nHas_name(\"Hermes\", \"Hermes\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Iris (mythology)\", \"UPS\").\nHas_job(\"Hermes\", \"UPS\").\n.decl Answer()\nAnswer() :- Has_name(\"Iris (mythology)\", name1), Has_name(\"Hermes\", name2), Has_job(\"Iris (mythology)\", job1), Has_job(\"Hermes\", job2), name1 = name2, job1 = job2.\n.output Answer\n\n", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Iris (mythology)\", \"Iris\").\nHas_name(\"Hermes\", \"Hermes\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"Iris (mythology)\", \"UPS\").\nHas_job(\"Hermes\", \"UPS\").\n.decl Answer()\nAnswer() :- Has_name(\"Iris (mythology)\", name1), Has_name(\"Hermes\", name2), Has_job(\"Iris (mythology)\", job1), Has_job(\"Hermes\", job2), name1 = name2, job1 = job2.\n.output Answer\n\n"]}
{"id": 2217, "answer": true, "completion": ".decl From(Person:symbol, Place:symbol)\nFrom(\"Dorothea Wendling\", \"Stuttgart\").\nFrom(\"Porsche\", \"Stuttgart\").\n.decl Answer()\nAnswer() :- From(\"Dorothea Wendling\", place1), From(\"Porsche\", place2), place1 = place2.\n.output Answer\n\n", "completions": [".decl From(Person:symbol, Place:symbol)\nFrom(\"Dorothea Wendling\", \"Stuttgart\").\nFrom(\"Porsche\", \"Stuttgart\").\n.decl Answer()\nAnswer() :- From(\"Dorothea Wendling\", place1), From(\"Porsche\", place2), place1 = place2.\n.output Answer\n\n"]}
{"id": 2218, "answer": true, "completion": ".decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Will Ferrell\", 1).\n.decl Has_n_wins(Person:symbol, N_wins:float)\nHas_n_wins(\"Will Ferrell\", 0).\n.decl Answer()\nAnswer() :- Has_n_nominations(\"Will Ferrell\", n_nominations), Has_n_wins(\"Will Ferrell\", n_wins), n_nominations > n_wins.\n.output Answer\n\n", "completions": [".decl Has_n_nominations(Person:symbol, N_nominations:float)\nHas_n_nominations(\"Will Ferrell\", 1).\n.decl Has_n_wins(Person:symbol, N_wins:float)\nHas_n_wins(\"Will Ferrell\", 0).\n.decl Answer()\nAnswer() :- Has_n_nominations(\"Will Ferrell\", n_nominations), Has_n_wins(\"Will Ferrell\", n_wins), n_nominations > n_wins.\n.output Answer\n\n"]}
{"id": 2219, "answer": false, "completion": ".decl Insults(Person_A:symbol, Person_B:symbol)\nInsults(\"Tom Cruise\", \"L. Ron Hubbard\").\n.decl Answer()\nAnswer() :- Insults(\"Tom Cruise\", person_b), Insults(person_b, \"L. Ron Hubbard\").\n.output Answer\n\n", "completions": [".decl Insults(Person_A:symbol, Person_B:symbol)\nInsults(\"Tom Cruise\", \"L. Ron Hubbard\").\n.decl Answer()\nAnswer() :- Insults(\"Tom Cruise\", person_b), Insults(person_b, \"L. Ron Hubbard\").\n.output Answer\n\n"]}
{"id": 2220, "answer": false, "completion": ".decl Plays_sport(Person:symbol, Sport:symbol)\nPlays_sport(\"Felix Potvin\", \"dodgeball\").\n.decl Plays_position(Person:symbol, Position:symbol)\nPlays_position(\"Felix Potvin\", \"center\").\n.decl Answer()\nAnswer() :- Plays_sport(\"Felix Potvin\", sport), Plays_position(\"Felix Potvin\", position), Plays_position(person2, position), Plays_sport(person2, sport).\n.output Answer\n\n", "completions": [".decl Plays_sport(Person:symbol, Sport:symbol)\nPlays_sport(\"Felix Potvin\", \"dodgeball\").\n.decl Plays_position(Person:symbol, Position:symbol)\nPlays_position(\"Felix Potvin\", \"center\").\n.decl Answer()\nAnswer() :- Plays_sport(\"Felix Potvin\", sport), Plays_position(\"Felix Potvin\", position), Plays_position(person2, position), Plays_sport(person2, sport).\n.output Answer\n\n"]}
{"id": 2221, "answer": false, "completion": ".decl Is_script(Script:symbol, Script_category:symbol)\nIs_script(\"Gujarati\", \"Indic\").\nIs_script(\"Kanji\", \"Chinese\").\n.decl Is_script_category(Script_category:symbol, Script_category:symbol)\nIs_script_category(\"Indic\", \"Indic\").\nIs_script_category(\"Chinese\", \"Chinese\").\n.decl Answer()\nAnswer() :- Is_script(\"Gujarati\", script), Is_script(\"Kanji\", script), Is_script_category(script, script_category), Is_script_category(script_category, script_category).\n.output Answer\n\n", "completions": [".decl Is_script(Script:symbol, Script_category:symbol)\nIs_script(\"Gujarati\", \"Indic\").\nIs_script(\"Kanji\", \"Chinese\").\n.decl Is_script_category(Script_category:symbol, Script_category:symbol)\nIs_script_category(\"Indic\", \"Indic\").\nIs_script_category(\"Chinese\", \"Chinese\").\n.decl Answer()\nAnswer() :- Is_script(\"Gujarati\", script), Is_script(\"Kanji\", script), Is_script_category(script, script_category), Is_script_category(script_category, script_category).\n.output Answer\n\n"]}
{"id": 2222, "answer": true, "completion": ".decl Has_genre(Video_game:symbol, Genre:symbol)\nHas_genre(\"Fallout 3\", \"post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"role-playing\").\nHas_genre(\"Fallout 3\", \"shooter\").\nHas_genre(\"Fallout 3\", \"simulation\").\nHas_genre(\"Fallout 3\", \"action\").\nHas_genre(\"Fallout 3\", \"open-world\").\nHas_genre(\"Fallout 3\", \"sandbox\").\nHas_genre(\"Fallout 3\", \"first-person shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing\").\nHas_genre(\"Fallout 3\", \"action adventure\").\nHas_genre(\"Fallout 3\", \"action-adventure\").\nHas_genre(\"Fallout 3\", \"action role-playing game\").\nHas_genre(\"Fallout 3\", \"action-adventure game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing game\").\nHas_genre(\"Fallout 3\", \"action role-playing shooter\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox role-playing\").\nHas_genre(\"Fallout 3\", \"", "completions": [".decl Has_genre(Video_game:symbol, Genre:symbol)\nHas_genre(\"Fallout 3\", \"post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"role-playing\").\nHas_genre(\"Fallout 3\", \"shooter\").\nHas_genre(\"Fallout 3\", \"simulation\").\nHas_genre(\"Fallout 3\", \"action\").\nHas_genre(\"Fallout 3\", \"open-world\").\nHas_genre(\"Fallout 3\", \"sandbox\").\nHas_genre(\"Fallout 3\", \"first-person shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing\").\nHas_genre(\"Fallout 3\", \"action adventure\").\nHas_genre(\"Fallout 3\", \"action-adventure\").\nHas_genre(\"Fallout 3\", \"action role-playing game\").\nHas_genre(\"Fallout 3\", \"action-adventure game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing game\").\nHas_genre(\"Fallout 3\", \"action role-playing shooter\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox\").\nHas_genre(\"Fallout 3\", \"action-adventure role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox\").\nHas_genre(\"Fallout 3\", \"action role-playing first-person shooter role-playing game adventure game simulation post-apocalyptic open-world sandbox role-playing\").\nHas_genre(\"Fallout 3\", \""]}
{"id": 2223, "answer": false, "completion": ".decl Has_acid(Acid:symbol, Finger:symbol)\nHas_acid(\"glutamic acid\", \"finger\").\n.decl Answer()\nAnswer() :- Has_acid(\"glutamic acid\", finger).\n.output Answer\n\n", "completions": [".decl Has_acid(Acid:symbol, Finger:symbol)\nHas_acid(\"glutamic acid\", \"finger\").\n.decl Answer()\nAnswer() :- Has_acid(\"glutamic acid\", finger).\n.output Answer\n\n"]}
{"id": 2224, "answer": false, "completion": ".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Sara Paxton\", \"blonde\").\n.decl Has_eye_color(Person:symbol, Eye_color:symbol)\nHas_eye_color(\"Sara Paxton\", \"green\").\n.decl Is_latino(Person:symbol)\nIs_latino(\"Sara Paxton\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Sara Paxton\", \"blonde\"), Has_eye_color(\"Sara Paxton\", \"green\"), Is_latino(\"Sara Paxton\").\n.output Answer\n\n", "completions": [".decl Has_hair_color(Person:symbol, Hair_color:symbol)\nHas_hair_color(\"Sara Paxton\", \"blonde\").\n.decl Has_eye_color(Person:symbol, Eye_color:symbol)\nHas_eye_color(\"Sara Paxton\", \"green\").\n.decl Is_latino(Person:symbol)\nIs_latino(\"Sara Paxton\").\n.decl Answer()\nAnswer() :- Has_hair_color(\"Sara Paxton\", \"blonde\"), Has_eye_color(\"Sara Paxton\", \"green\"), Is_latino(\"Sara Paxton\").\n.output Answer\n\n"]}
{"id": 2225, "answer": false, "completion": ".decl Reads(Person:symbol, Comic:symbol)\nReads(\"William Howard Taft\", \"DC Comics\").\n.decl Answer()\nAnswer() :- Reads(\"William Howard Taft\", \"DC Comics\").\n.output Answer\n\n", "completions": [".decl Reads(Person:symbol, Comic:symbol)\nReads(\"William Howard Taft\", \"DC Comics\").\n.decl Answer()\nAnswer() :- Reads(\"William Howard Taft\", \"DC Comics\").\n.output Answer\n\n"]}
{"id": 2226, "answer": true, "completion": ".decl Answer()\nAnswer() :- Has_religion(\"Muslim\", religion1), Has_religion(\"Christian\", religion2), religion1 != religion2.\n.output Answer\n\n", "completions": [".decl Answer()\nAnswer() :- Has_religion(\"Muslim\", religion1), Has_religion(\"Christian\", religion2), religion1 != religion2.\n.output Answer\n\n"]}
{"id": 2227, "answer": false, "completion": ".decl Has_dyscalculia(Person:symbol)\nHas_dyscalculia(\"John\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"John\", \"surveyor\").\n.decl Answer()\nAnswer() :- Has_dyscalculia(\"John\"), not Has_job(\"John\", \"surveyor\").\n.output Answer\n\n", "completions": [".decl Has_dyscalculia(Person:symbol)\nHas_dyscalculia(\"John\").\n.decl Has_job(Person:symbol, Job:symbol)\nHas_job(\"John\", \"surveyor\").\n.decl Answer()\nAnswer() :- Has_dyscalculia(\"John\"), not Has_job(\"John\", \"surveyor\").\n.output Answer\n\n"]}
{"id": 2228, "answer": true, "completion": ".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Alec Baldwin\", 3).\nHas_n_children(\"Clint Eastwood\", 2).\n.decl Answer()\nAnswer() :- Has_n_children(\"Alec Baldwin\", n_children1), Has_n_children(\"Clint Eastwood\", n_children2), n_children1 > n_children2.\n.output Answer\n\n", "completions": [".decl Has_n_children(Person:symbol, N_children:float)\nHas_n_children(\"Alec Baldwin\", 3).\nHas_n_children(\"Clint Eastwood\", 2).\n.decl Answer()\nAnswer() :- Has_n_children(\"Alec Baldwin\", n_children1), Has_n_children(\"Clint Eastwood\", n_children2), n_children1 > n_children2.\n.output Answer\n\n"]}
{"id": 2229, "answer": false, "completion": ".decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"banana tree\", \"order\").\nHas_purpose(\"banana tree\", \"decoration\").\n.decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"judge\", \"order\").\n.decl Answer()\nAnswer() :- Has_purpose(\"banana tree\", purpose), Has_purpose(\"judge\", purpose).\n.output Answer\n\n", "completions": [".decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"banana tree\", \"order\").\nHas_purpose(\"banana tree\", \"decoration\").\n.decl Has_purpose(Object:symbol, Purpose:symbol)\nHas_purpose(\"judge\", \"order\").\n.decl Answer()\nAnswer() :- Has_purpose(\"banana tree\", purpose), Has_purpose(\"judge\", purpose).\n.output Answer\n\n"]}
{"id": 2230, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"zombie\", \"green\").\nHas_color(\"skin\", \"pink\").\n.decl Has_element(Object:symbol, Element:symbol)\nHas_element(\"skin\", \"nickel\").\n.decl Answer()\nAnswer() :- Has_color(\"zombie\", color), Has_color(\"skin\", color), Has_element(\"skin\", element), color == element.\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"zombie\", \"green\").\nHas_color(\"skin\", \"pink\").\n.decl Has_element(Object:symbol, Element:symbol)\nHas_element(\"skin\", \"nickel\").\n.decl Answer()\nAnswer() :- Has_color(\"zombie\", color), Has_color(\"skin\", color), Has_element(\"skin\", element), color == element.\n.output Answer\n\n"]}
{"id": 2231, "answer": true, "completion": ".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bitcoin\", 10000).\nHas_price(\"Volkswagen Jetta\", 25000).\n.decl Answer()\nAnswer() :- Has_price(\"bitcoin\", price1), Has_price(\"Volkswagen Jetta\", price2), price1 > price2.\n.output Answer\n\n", "completions": [".decl Has_price(Object:symbol, Price:float)\nHas_price(\"bitcoin\", 10000).\nHas_price(\"Volkswagen Jetta\", 25000).\n.decl Answer()\nAnswer() :- Has_price(\"bitcoin\", price1), Has_price(\"Volkswagen Jetta\", price2), price1 > price2.\n.output Answer\n\n"]}
{"id": 2232, "answer": true, "completion": ".decl Has_sordid_history(Language:symbol, History:symbol)\nHas_sordid_history(\"Fraktur\", \"sordid\").\n.decl Answer()\nAnswer() :- Has_sordid_history(\"Fraktur\", history).\n.output Answer\n\n", "completions": [".decl Has_sordid_history(Language:symbol, History:symbol)\nHas_sordid_history(\"Fraktur\", \"sordid\").\n.decl Answer()\nAnswer() :- Has_sordid_history(\"Fraktur\", history).\n.output Answer\n\n"]}
{"id": 2233, "answer": true, "completion": ".decl Belongs_to_sect(Person:symbol, Sect:symbol)\nBelongs_to_sect(\"Martin Luther\", \"Protestant\").\nBelongs_to_sect(\"Martin Luther King Jr.\", \"Protestant\").\n.decl Answer()\nAnswer() :- Belongs_to_sect(\"Martin Luther\", sect), Belongs_to_sect(\"Martin Luther King Jr.\", sect).\n.output Answer\n\n", "completions": [".decl Belongs_to_sect(Person:symbol, Sect:symbol)\nBelongs_to_sect(\"Martin Luther\", \"Protestant\").\nBelongs_to_sect(\"Martin Luther King Jr.\", \"Protestant\").\n.decl Answer()\nAnswer() :- Belongs_to_sect(\"Martin Luther\", sect), Belongs_to_sect(\"Martin Luther King Jr.\", sect).\n.output Answer\n\n"]}
{"id": 2234, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Donald Duck\", 65).\n.decl Has_age_limit(Store:symbol, Age_limit:float)\nHas_age_limit(\"Walmart\", 21).\nHas_age_limit(\"Whole Foods\", 18).\n.decl Answer()\nAnswer() :- Has_age(\"Donald Duck\", age), Has_age_limit(\"Walmart\", age_limit), age > age_limit.\nAnswer() :- Has_age(\"Donald Duck\", age), Has_age_limit(\"Whole Foods\", age_limit), age <= age_limit.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"Donald Duck\", 65).\n.decl Has_age_limit(Store:symbol, Age_limit:float)\nHas_age_limit(\"Walmart\", 21).\nHas_age_limit(\"Whole Foods\", 18).\n.decl Answer()\nAnswer() :- Has_age(\"Donald Duck\", age), Has_age_limit(\"Walmart\", age_limit), age > age_limit.\nAnswer() :- Has_age(\"Donald Duck\", age), Has_age_limit(\"Whole Foods\", age_limit), age <= age_limit.\n.output Answer\n\n"]}
{"id": 2235, "answer": false, "completion": ".decl Appears_in_movie(Person:symbol, Movie:symbol)\nAppears_in_movie(\"Hades\", \"Hercules\").\n.decl Has_channel(Movie:symbol, Channel:symbol)\nHas_channel(\"Hercules\", \"Disney Channel\").\n.decl Answer()\nAnswer() :- Appears_in_movie(\"Hades\", movie), Has_channel(movie, channel), channel == \"Disney Channel\".\n.output Answer\n\n", "completions": [".decl Appears_in_movie(Person:symbol, Movie:symbol)\nAppears_in_movie(\"Hades\", \"Hercules\").\n.decl Has_channel(Movie:symbol, Channel:symbol)\nHas_channel(\"Hercules\", \"Disney Channel\").\n.decl Answer()\nAnswer() :- Appears_in_movie(\"Hades\", movie), Has_channel(movie, channel), channel == \"Disney Channel\".\n.output Answer\n\n"]}
{"id": 2236, "answer": true, "completion": ".decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"white blood cells\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"red blood cells\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bone marrow\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"brain\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"liver\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"spleen\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"stomach\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"kidney\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"heart\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"intestine\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"lungs\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bones\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"eyes\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"ears\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"hair\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"teeth\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bones\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"hair\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"teeth\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N", "completions": [".decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"white blood cells\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"red blood cells\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bone marrow\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"brain\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"liver\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"spleen\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"stomach\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"kidney\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"heart\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"intestine\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"lungs\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bones\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"eyes\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"ears\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"hair\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"teeth\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"bones\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"skin\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"hair\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N_cells:float)\nHas_n_cells(\"teeth\", 4.2e12).\n.decl Has_n_cells(Organ:symbol, N"]}
{"id": 2237, "answer": true, "completion": ".decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims", "completions": [".decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims(Person:symbol, Lake:symbol)\nFrequently_swims(\"Rand Paul\", \"Lake Michigan\").\n.decl Frequently_swims"]}
{"id": 2238, "answer": false, "completion": ".decl Is_a_person(Person:symbol)\nIs_a_person(\"Simon Cowell\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"George Bush\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Barack Obama\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Bill Clinton\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"George W. Bush\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John Roberts\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Anthony Kennedy\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Antonin Scalia\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John G. Roberts, Jr.\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Anthony Kennedy\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Antonin Scalia\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John G. Roberts, Jr.\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_", "completions": [".decl Is_a_person(Person:symbol)\nIs_a_person(\"Simon Cowell\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"George Bush\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Barack Obama\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Bill Clinton\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"George W. Bush\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John Roberts\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Anthony Kennedy\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Antonin Scalia\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John G. Roberts, Jr.\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Anthony Kennedy\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Antonin Scalia\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"John G. Roberts, Jr.\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Elena Kagan\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Sonia Sotomayor\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Samuel Alito\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Stephen Breyer\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Clarence Thomas\").\n.decl Is_a_person(Person:symbol)\nIs_a_person(\"Ruth Bader Ginsburg\").\n.decl Is_a_person(Person:symbol)\nIs_"]}
{"id": 2239, "answer": false, "completion": ".decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Micronesia\", 0).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United States\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Germany\", 30000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Japan\", 40000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"China\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"France\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Italy\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United Kingdom\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Russia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Brazil\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"India\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Indonesia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Australia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Canada\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Spain\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Mexico\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Indonesia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"South Africa\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Saudi Arabia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Turkey\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Argentina\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United Arab Emirates\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Ukraine\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Poland\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Romania\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Kazakhstan\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Kyrgyzstan\",", "completions": [".decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Micronesia\", 0).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United States\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Germany\", 30000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Japan\", 40000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"China\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"France\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Italy\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United Kingdom\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Russia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Brazil\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"India\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Indonesia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Australia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Canada\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Spain\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Mexico\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Indonesia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"South Africa\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Saudi Arabia\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Turkey\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Argentina\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"United Arab Emirates\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Ukraine\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Poland\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Romania\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Kazakhstan\", 50000000000).\n.decl Has_debt(Country:symbol, Debt:float)\nHas_debt(\"Kyrgyzstan\","]}
{"id": 2240, "answer": true, "completion": ".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Leopard cats\", 4).\nHas_n_members(\"Bornean Orangutan\", 4).\n.decl Has_n_members_of_species(Species:symbol, N_members:float)\nHas_n_members_of_species(\"Leopard cat\", 4).\nHas_n_members_of_species(\"Bornean Orangutan\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Leopard cats\", n_members1), Has_n_members_of_species(\"Bornean Orangutan\", n_members2), n_members1 > n_members2.\n.output Answer\n\n", "completions": [".decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Leopard cats\", 4).\nHas_n_members(\"Bornean Orangutan\", 4).\n.decl Has_n_members_of_species(Species:symbol, N_members:float)\nHas_n_members_of_species(\"Leopard cat\", 4).\nHas_n_members_of_species(\"Bornean Orangutan\", 4).\n.decl Answer()\nAnswer() :- Has_n_members(\"Leopard cats\", n_members1), Has_n_members_of_species(\"Bornean Orangutan\", n_members2), n_members1 > n_members2.\n.output Answer\n\n"]}
{"id": 2241, "answer": false, "completion": ".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Panzer VIII Maus tank missile\", 0.8).\nHas_speed(\"cat\", 0.4).\n.decl Answer()\nAnswer() :- Has_speed(\"Panzer VIII Maus tank missile\", speed1), Has_speed(\"cat\", speed2), speed1 > speed2.\n.output Answer\n\n", "completions": [".decl Has_speed(Object:symbol, Speed:float)\nHas_speed(\"Panzer VIII Maus tank missile\", 0.8).\nHas_speed(\"cat\", 0.4).\n.decl Answer()\nAnswer() :- Has_speed(\"Panzer VIII Maus tank missile\", speed1), Has_speed(\"cat\", speed2), speed1 > speed2.\n.output Answer\n\n"]}
{"id": 2242, "answer": false, "completion": ".decl Has_discount(Object:symbol, Discount:float)\nHas_discount(\"Aldi's foods\", 0.2).\n.decl Has_expiration_date(Object:symbol, Expiration_date:symbol)\nHas_expiration_date(\"Aldi's foods\", \"January\").\n.decl Answer()\nAnswer() :- Has_discount(\"Aldi's foods\", discount), Has_expiration_date(\"Aldi's foods\", expiration_date), expiration_date = \"January\".\n.output Answer\n\n", "completions": [".decl Has_discount(Object:symbol, Discount:float)\nHas_discount(\"Aldi's foods\", 0.2).\n.decl Has_expiration_date(Object:symbol, Expiration_date:symbol)\nHas_expiration_date(\"Aldi's foods\", \"January\").\n.decl Answer()\nAnswer() :- Has_discount(\"Aldi's foods\", discount), Has_expiration_date(\"Aldi's foods\", expiration_date), expiration_date = \"January\".\n.output Answer\n\n"]}
{"id": 2243, "answer": false, "completion": ".decl Has_psychic_power(Person:symbol, Psychic_power:symbol)\nHas_psychic_power(\"Carrie Poppy\", \"mind reading\").\n.decl Answer()\nAnswer() :- Has_psychic_power(\"Carrie Poppy\", psychic_power), Psychic_power = \"mind reading\".\n.output Answer\n\n", "completions": [".decl Has_psychic_power(Person:symbol, Psychic_power:symbol)\nHas_psychic_power(\"Carrie Poppy\", \"mind reading\").\n.decl Answer()\nAnswer() :- Has_psychic_power(\"Carrie Poppy\", psychic_power), Psychic_power = \"mind reading\".\n.output Answer\n\n"]}
{"id": 2244, "answer": true, "completion": ".decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Donor\", \"O\").\nHas_blood_type(\"Donor\", \"A\").\nHas_blood_type(\"Donor\", \"B\").\nHas_blood_type(\"Donor\", \"AB\").\n.decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Recipient\", \"O\").\nHas_blood_type(\"Recipient\", \"A\").\nHas_blood_type(\"Recipient\", \"B\").\nHas_blood_type(\"Recipient\", \"AB\").\n.decl Answer()\nAnswer() :- Has_blood_type(\"Donor\", blood_type1), Has_blood_type(\"Recipient\", blood_type2), blood_type1 = blood_type2.\n.output Answer\n\n", "completions": [".decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Donor\", \"O\").\nHas_blood_type(\"Donor\", \"A\").\nHas_blood_type(\"Donor\", \"B\").\nHas_blood_type(\"Donor\", \"AB\").\n.decl Has_blood_type(Person:symbol, Blood_type:symbol)\nHas_blood_type(\"Recipient\", \"O\").\nHas_blood_type(\"Recipient\", \"A\").\nHas_blood_type(\"Recipient\", \"B\").\nHas_blood_type(\"Recipient\", \"AB\").\n.decl Answer()\nAnswer() :- Has_blood_type(\"Donor\", blood_type1), Has_blood_type(\"Recipient\", blood_type2), blood_type1 = blood_type2.\n.output Answer\n\n"]}
{"id": 2245, "answer": true, "completion": ".decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"stroke\", \"facial droop\").\nHas_symptom(\"stroke\", \"arm weakness\").\nHas_symptom(\"stroke\", \"speech slurred\").\n.decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"stroke\", \"unsteady gait\").\nHas_symptom(\"stroke\", \"loss of vision\").\nHas_symptom(\"stroke\", \"drowsiness\").\n.decl Answer()\nAnswer() :- Has_symptom(\"stroke\", symptom1), Has_symptom(\"stroke\", symptom2), Has_symptom(\"stroke\", symptom3), Has_symptom(\"stroke\", symptom4), symptom1 \\= symptom2, symptom1 \\= symptom3, symptom1 \\= symptom4, symptom2 \\= symptom3, symptom2 \\= symptom4, symptom3 \\= symptom4.\n.output Answer\n\n", "completions": [".decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"stroke\", \"facial droop\").\nHas_symptom(\"stroke\", \"arm weakness\").\nHas_symptom(\"stroke\", \"speech slurred\").\n.decl Has_symptom(Disease:symbol, Symptom:symbol)\nHas_symptom(\"stroke\", \"unsteady gait\").\nHas_symptom(\"stroke\", \"loss of vision\").\nHas_symptom(\"stroke\", \"drowsiness\").\n.decl Answer()\nAnswer() :- Has_symptom(\"stroke\", symptom1), Has_symptom(\"stroke\", symptom2), Has_symptom(\"stroke\", symptom3), Has_symptom(\"stroke\", symptom4), symptom1 \\= symptom2, symptom1 \\= symptom3, symptom1 \\= symptom4, symptom2 \\= symptom3, symptom2 \\= symptom4, symptom3 \\= symptom4.\n.output Answer\n\n"]}
{"id": 2246, "answer": true, "completion": ".decl Has_taste(Taste:symbol, Food:symbol)\nHas_taste(\"sweet\", \"apple\").\nHas_taste(\"sweet\", \"pear\").\nHas_taste(\"salty\", \"pear\").\nHas_taste(\"salty\", \"salt\").\n.decl Answer()\nAnswer() :- Has_taste(\"sweet\", food1), Has_taste(\"salty\", food2), food1 = food2.\n.output Answer\n\n", "completions": [".decl Has_taste(Taste:symbol, Food:symbol)\nHas_taste(\"sweet\", \"apple\").\nHas_taste(\"sweet\", \"pear\").\nHas_taste(\"salty\", \"pear\").\nHas_taste(\"salty\", \"salt\").\n.decl Answer()\nAnswer() :- Has_taste(\"sweet\", food1), Has_taste(\"salty\", food2), food1 = food2.\n.output Answer\n\n"]}
{"id": 2247, "answer": false, "completion": ".decl Has_greek_equivalent(Roman_god:symbol, Greek_god:symbol)\nHas_greek_equivalent(\"Vulcan\", \"Hephaestus\").\n.decl Answer()\nAnswer() :- Has_greek_equivalent(\"Vulcan\", greek_god), Has_greek_equivalent(\"Hephaestus\", roman_god), roman_god != greek_god.\n.output Answer\n\n", "completions": [".decl Has_greek_equivalent(Roman_god:symbol, Greek_god:symbol)\nHas_greek_equivalent(\"Vulcan\", \"Hephaestus\").\n.decl Answer()\nAnswer() :- Has_greek_equivalent(\"Vulcan\", greek_god), Has_greek_equivalent(\"Hephaestus\", roman_god), roman_god != greek_god.\n.output Answer\n\n"]}
{"id": 2248, "answer": true, "completion": ".decl Is_in_continent(Animal:symbol, Continent:symbol)\nIs_in_continent(\"hippopotamus\", \"Africa\").\n.decl Answer()\nAnswer() :- Is_in_continent(\"hippopotamus\", continent).\n.output Answer\n\n", "completions": [".decl Is_in_continent(Animal:symbol, Continent:symbol)\nIs_in_continent(\"hippopotamus\", \"Africa\").\n.decl Answer()\nAnswer() :- Is_in_continent(\"hippopotamus\", continent).\n.output Answer\n\n"]}
{"id": 2249, "answer": true, "completion": ".decl Has_birth_status(Person:symbol, Birth_status:symbol)\nHas_birth_status(\"mother of a stillborn\", \"stillborn\").\n.decl Has_paper_type(Paper:symbol, Paper_type:symbol)\nHas_paper_type(\"stork wrapping paper\", \"stork\").\n.decl Answer()\nAnswer() :- Has_birth_status(\"mother of a stillborn\", birth_status), Has_paper_type(\"stork wrapping paper\", paper_type), birth_status = paper_type.\n.output Answer\n\n", "completions": [".decl Has_birth_status(Person:symbol, Birth_status:symbol)\nHas_birth_status(\"mother of a stillborn\", \"stillborn\").\n.decl Has_paper_type(Paper:symbol, Paper_type:symbol)\nHas_paper_type(\"stork wrapping paper\", \"stork\").\n.decl Answer()\nAnswer() :- Has_birth_status(\"mother of a stillborn\", birth_status), Has_paper_type(\"stork wrapping paper\", paper_type), birth_status = paper_type.\n.output Answer\n\n"]}
{"id": 2250, "answer": true, "completion": ".decl Sold_at(Product:symbol, Store:symbol)\nSold_at(\"Casio\", \"Petco\").\n.decl Answer()\nAnswer() :- Sold_at(\"Casio\", store).\n.output Answer\n\n", "completions": [".decl Sold_at(Product:symbol, Store:symbol)\nSold_at(\"Casio\", \"Petco\").\n.decl Answer()\nAnswer() :- Sold_at(\"Casio\", store).\n.output Answer\n\n"]}
{"id": 2251, "answer": true, "completion": ".decl Is_a(Person:symbol, Group:symbol)\nIs_a(\"Immanuel Kant\", \"German\").\nIs_a(\"Immanuel Kant\", \"philosopher\").\nIs_a(\"Black Lives Matter\", \"social movement\").\nIs_a(\"Black Lives Matter\", \"protest\").\n.decl Answer()\nAnswer() :- Is_a(\"Immanuel Kant\", group1), Is_a(\"Black Lives Matter\", group2), group1 != group2.\n.output Answer\n\n", "completions": [".decl Is_a(Person:symbol, Group:symbol)\nIs_a(\"Immanuel Kant\", \"German\").\nIs_a(\"Immanuel Kant\", \"philosopher\").\nIs_a(\"Black Lives Matter\", \"social movement\").\nIs_a(\"Black Lives Matter\", \"protest\").\n.decl Answer()\nAnswer() :- Is_a(\"Immanuel Kant\", group1), Is_a(\"Black Lives Matter\", group2), group1 != group2.\n.output Answer\n\n"]}
{"id": 2252, "answer": false, "completion": ".decl Eats(Animal:symbol, Food:symbol)\nEats(\"cat\", \"pancake\").\nEats(\"cat\", \"chicken\").\nEats(\"cat\", \"fish\").\nEats(\"cat\", \"milk\").\nEats(\"cat\", \"bread\").\nEats(\"cat\", \"cheese\").\nEats(\"cat\", \"yogurt\").\nEats(\"cat\", \"cake\").\nEats(\"cat\", \"sugar\").\nEats(\"cat\", \"chocolate\").\nEats(\"cat\", \"soda\").\nEats(\"cat\", \"soup\").\nEats(\"cat\", \"salad\").\nEats(\"cat\", \"sauce\").\nEats(\"cat\", \"sausage\").\nEats(\"cat\", \"ham\").\nEats(\"cat\", \"chips\").\nEats(\"cat\", \"candy\").\nEats(\"cat\", \"pasta\").\nEats(\"cat\", \"rice\").\nEats(\"cat\", \"tomato\").\nEats(\"cat\", \"potato\").\nEats(\"cat\", \"egg\").\nEats(\"cat\", \"onion\").\nEats(\"cat\", \"garlic\").\nEats(\"cat\", \"pepper\").\nEats(\"cat\", \"oil\").\nEats(\"cat\", \"vinegar\").\nEats(\"cat\", \"water\").\nEats(\"cat\", \"tea\").\nEats(\"cat\", \"coffee\").\nEats(\"cat\", \"milk\").\nEats(\"cat\", \"juice\").\nEats(\"cat\", \"wine\").\nEats(\"cat\", \"beer\").\nEats(\"cat\", \"lemonade\").\nEats(\"cat\", \"coca cola\").\nEats(\"cat\", \"pepsi\").\nEats(\"cat\", \"sprite\").\nEats(\"cat\", \"gatorade\").\nEats(\"cat\", \"apple\").\nEats(\"cat\", \"banana\").\nEats(\"cat\", \"orange\").\nEats(\"cat\", \"strawberry\").\nEats(\"cat\", \"blueberry\").\nEats(\"cat\", \"blackberry\").\nEats(\"cat\", \"raspberry\").\nEats(\"cat\", \"cherry\").\nEats(\"cat\", \"cranberry\").\nEats(\"cat\", \"grape\").\nEats(\"cat\", \"grapefruit\").\nEats(\"cat\", \"kiwi\").\nEats(\"cat\", \"pineapple\").\nEats(\"cat\", \"mango\").\nEats(\"cat\", \"papaya\").\nEats(\"cat\", \"cantaloupe\").\nEats(\"cat\", \"peach\").\nEats(\"cat\", \"watermelon\").\nEats(\"cat\", \"honeydew\").\nEats(\"cat\", \"avocado\").\nEats(\"cat\", \"tomato\").\nEats(\"cat\", \"broccoli\").\nEats(\"cat\", \"cabbage\").\nEats(\"cat\", \"spinach\").\nEats(\"cat\", \"lettuce\").\nEats(\"cat\", \"onion\").\nEats(\"cat\", \"carrot\").\nEats(\"cat\", \"garlic\").\nEats(\"cat\", \"pepper\").\nEats(\"cat\", \"apple\").\nEats(\"cat\", \"banana\").\nEats(\"cat\", \"orange\").\nEats(\"cat\", \"strawberry\").\nEats(\"cat\", \"blueberry\").\nEats(\"cat\", \"blackberry\").\nEats(\"cat\", \"raspberry\").\nEats(\"cat\", \"cherry\").\nEats(\"cat\", \"cran", "completions": [".decl Eats(Animal:symbol, Food:symbol)\nEats(\"cat\", \"pancake\").\nEats(\"cat\", \"chicken\").\nEats(\"cat\", \"fish\").\nEats(\"cat\", \"milk\").\nEats(\"cat\", \"bread\").\nEats(\"cat\", \"cheese\").\nEats(\"cat\", \"yogurt\").\nEats(\"cat\", \"cake\").\nEats(\"cat\", \"sugar\").\nEats(\"cat\", \"chocolate\").\nEats(\"cat\", \"soda\").\nEats(\"cat\", \"soup\").\nEats(\"cat\", \"salad\").\nEats(\"cat\", \"sauce\").\nEats(\"cat\", \"sausage\").\nEats(\"cat\", \"ham\").\nEats(\"cat\", \"chips\").\nEats(\"cat\", \"candy\").\nEats(\"cat\", \"pasta\").\nEats(\"cat\", \"rice\").\nEats(\"cat\", \"tomato\").\nEats(\"cat\", \"potato\").\nEats(\"cat\", \"egg\").\nEats(\"cat\", \"onion\").\nEats(\"cat\", \"garlic\").\nEats(\"cat\", \"pepper\").\nEats(\"cat\", \"oil\").\nEats(\"cat\", \"vinegar\").\nEats(\"cat\", \"water\").\nEats(\"cat\", \"tea\").\nEats(\"cat\", \"coffee\").\nEats(\"cat\", \"milk\").\nEats(\"cat\", \"juice\").\nEats(\"cat\", \"wine\").\nEats(\"cat\", \"beer\").\nEats(\"cat\", \"lemonade\").\nEats(\"cat\", \"coca cola\").\nEats(\"cat\", \"pepsi\").\nEats(\"cat\", \"sprite\").\nEats(\"cat\", \"gatorade\").\nEats(\"cat\", \"apple\").\nEats(\"cat\", \"banana\").\nEats(\"cat\", \"orange\").\nEats(\"cat\", \"strawberry\").\nEats(\"cat\", \"blueberry\").\nEats(\"cat\", \"blackberry\").\nEats(\"cat\", \"raspberry\").\nEats(\"cat\", \"cherry\").\nEats(\"cat\", \"cranberry\").\nEats(\"cat\", \"grape\").\nEats(\"cat\", \"grapefruit\").\nEats(\"cat\", \"kiwi\").\nEats(\"cat\", \"pineapple\").\nEats(\"cat\", \"mango\").\nEats(\"cat\", \"papaya\").\nEats(\"cat\", \"cantaloupe\").\nEats(\"cat\", \"peach\").\nEats(\"cat\", \"watermelon\").\nEats(\"cat\", \"honeydew\").\nEats(\"cat\", \"avocado\").\nEats(\"cat\", \"tomato\").\nEats(\"cat\", \"broccoli\").\nEats(\"cat\", \"cabbage\").\nEats(\"cat\", \"spinach\").\nEats(\"cat\", \"lettuce\").\nEats(\"cat\", \"onion\").\nEats(\"cat\", \"carrot\").\nEats(\"cat\", \"garlic\").\nEats(\"cat\", \"pepper\").\nEats(\"cat\", \"apple\").\nEats(\"cat\", \"banana\").\nEats(\"cat\", \"orange\").\nEats(\"cat\", \"strawberry\").\nEats(\"cat\", \"blueberry\").\nEats(\"cat\", \"blackberry\").\nEats(\"cat\", \"raspberry\").\nEats(\"cat\", \"cherry\").\nEats(\"cat\", \"cran"]}
{"id": 2253, "answer": false, "completion": ".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Euro\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"Euro\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n\n", "completions": [".decl Has_density(Object:symbol, Density:float)\nHas_density(\"Euro\", 0.6).\nHas_density(\"water\", 1).\n.decl Answer()\nAnswer() :- Has_density(\"Euro\", density1), Has_density(\"water\", density2), density1 > density2.\n.output Answer\n\n\n"]}
{"id": 2254, "answer": false, "completion": ".decl Has_dentures(Animal:symbol, Dentures:symbol)\nHas_dentures(\"honey badger\", \"yes\").\nHas_dentures(\"wolverine\", \"no\").\n.decl Answer()\nAnswer() :- Has_dentures(\"honey badger\", dentures), Has_dentures(\"wolverine\", dentures).\n.output Answer\n\n", "completions": [".decl Has_dentures(Animal:symbol, Dentures:symbol)\nHas_dentures(\"honey badger\", \"yes\").\nHas_dentures(\"wolverine\", \"no\").\n.decl Answer()\nAnswer() :- Has_dentures(\"honey badger\", dentures), Has_dentures(\"wolverine\", dentures).\n.output Answer\n\n"]}
{"id": 2255, "answer": true, "completion": ".decl Has_disease(Disease:symbol)\nHas_disease(\"Cholera\").\n.decl Answer()\nAnswer() :- Has_disease(\"Cholera\").\n.output Answer\n\n", "completions": [".decl Has_disease(Disease:symbol)\nHas_disease(\"Cholera\").\n.decl Answer()\nAnswer() :- Has_disease(\"Cholera\").\n.output Answer\n\n"]}
{"id": 2256, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Elizabeth II\", \"Queen Elizabeth II\").\nHas_name(\"Charles, Prince of Wales\", \"Prince Charles\").\nHas_name(\"Harry, Prince of Wales\", \"Prince Harry\").\nHas_name(\"Meghan, Duchess of Sussex\", \"Meghan, Duchess of Sussex\").\nHas_name(\"Camilla, Duchess of Cornwall\", \"Camilla, Duchess of Cornwall\").\nHas_name(\"Anne, Princess Royal\", \"Anne, Princess Royal\").\nHas_name(\"Andrew, Duke of York\", \"Andrew, Duke of York\").\nHas_name(\"Edward, Earl of Wessex\", \"Edward, Earl of Wessex\").\nHas_name(\"William, Duke of Cambridge\", \"William, Duke of Cambridge\").\nHas_name(\"Peter Phillips\", \"Peter Phillips\").\nHas_name(\"Zara Tindall\", \"Zara Tindall\").\nHas_name(\"Savannah Phillips\", \"Savannah Phillips\").\nHas_name(\"Isla Phillips\", \"Isla Phillips\").\nHas_name(\"Mia Tindall\", \"Mia Tindall\").\n.decl Has_alleged_felony(Person:symbol, Alleged_felony:symbol)\nHas_alleged_felony(\"Elizabeth II\", \"Royalty and protocol\").\nHas_alleged_felony(\"Charles, Prince of Wales\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Harry, Prince of Wales\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Meghan, Duchess of Sussex\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Camilla, Duchess of Cornwall\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Anne, Princess Royal\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Andrew, Duke of York\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Edward, Earl of Wessex\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"William, Duke of Cambridge\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Peter Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Zara Tindall\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Savannah Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Isla Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Mia Tindall\", \"Inappropriate sexual behavior\").\n.decl Answer()\nAnswer() :- Has_alleged_felony(\"Elizabeth II\", alleged_felony), Has_alleged_felony(\"Charles, Prince of Wales\", alleged_felony), Has_alleged_felony(\"Harry, Prince of Wales\", alleged_felony), Has_alleged_felony(\"Meghan, Duchess of Sussex\", alleged_felony), Has_alleged_felony(\"Camilla, Duchess of Cornwall\", alleged_felony), Has_alleged_felony(\"Anne, Princess Royal\", alleged_felony), Has_alleged_felony(\"Andrew, Duke of York\", alleged_felony), Has_alleged_felony(\"Edward, Earl of Wessex\", alleged_felony), Has_alleged_felony(\"William, Duke of Cambridge\", alleged_felony), Has_al", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Elizabeth II\", \"Queen Elizabeth II\").\nHas_name(\"Charles, Prince of Wales\", \"Prince Charles\").\nHas_name(\"Harry, Prince of Wales\", \"Prince Harry\").\nHas_name(\"Meghan, Duchess of Sussex\", \"Meghan, Duchess of Sussex\").\nHas_name(\"Camilla, Duchess of Cornwall\", \"Camilla, Duchess of Cornwall\").\nHas_name(\"Anne, Princess Royal\", \"Anne, Princess Royal\").\nHas_name(\"Andrew, Duke of York\", \"Andrew, Duke of York\").\nHas_name(\"Edward, Earl of Wessex\", \"Edward, Earl of Wessex\").\nHas_name(\"William, Duke of Cambridge\", \"William, Duke of Cambridge\").\nHas_name(\"Peter Phillips\", \"Peter Phillips\").\nHas_name(\"Zara Tindall\", \"Zara Tindall\").\nHas_name(\"Savannah Phillips\", \"Savannah Phillips\").\nHas_name(\"Isla Phillips\", \"Isla Phillips\").\nHas_name(\"Mia Tindall\", \"Mia Tindall\").\n.decl Has_alleged_felony(Person:symbol, Alleged_felony:symbol)\nHas_alleged_felony(\"Elizabeth II\", \"Royalty and protocol\").\nHas_alleged_felony(\"Charles, Prince of Wales\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Harry, Prince of Wales\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Meghan, Duchess of Sussex\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Camilla, Duchess of Cornwall\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Anne, Princess Royal\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Andrew, Duke of York\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Edward, Earl of Wessex\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"William, Duke of Cambridge\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Peter Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Zara Tindall\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Savannah Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Isla Phillips\", \"Inappropriate sexual behavior\").\nHas_alleged_felony(\"Mia Tindall\", \"Inappropriate sexual behavior\").\n.decl Answer()\nAnswer() :- Has_alleged_felony(\"Elizabeth II\", alleged_felony), Has_alleged_felony(\"Charles, Prince of Wales\", alleged_felony), Has_alleged_felony(\"Harry, Prince of Wales\", alleged_felony), Has_alleged_felony(\"Meghan, Duchess of Sussex\", alleged_felony), Has_alleged_felony(\"Camilla, Duchess of Cornwall\", alleged_felony), Has_alleged_felony(\"Anne, Princess Royal\", alleged_felony), Has_alleged_felony(\"Andrew, Duke of York\", alleged_felony), Has_alleged_felony(\"Edward, Earl of Wessex\", alleged_felony), Has_alleged_felony(\"William, Duke of Cambridge\", alleged_felony), Has_al"]}
{"id": 2257, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thor\", \"Wednesday\").\nHappens_in_time(\"Thor\", \"Thursday\").\nHappens_in_time(\"Thor\", \"Friday\").\nHappens_in_time(\"Thor\", \"Saturday\").\nHappens_in_time(\"Thor\", \"Sunday\").\nHappens_in_time(\"Thor\", \"Monday\").\nHappens_in_time(\"Thor\", \"Tuesday\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thor\", \"Wednesday\").\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Thor\", \"Wednesday\").\nHappens_in_time(\"Thor\", \"Thursday\").\nHappens_in_time(\"Thor\", \"Friday\").\nHappens_in_time(\"Thor\", \"Saturday\").\nHappens_in_time(\"Thor\", \"Sunday\").\nHappens_in_time(\"Thor\", \"Monday\").\nHappens_in_time(\"Thor\", \"Tuesday\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Thor\", \"Wednesday\").\n.output Answer\n\n"]}
{"id": 2258, "answer": false, "completion": ".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"honey\", \"sweet\").\nHas_property(\"honey\", \"royal\").\n.decl Answer()\nAnswer() :- Has_property(\"honey\", property), Has_property(\"queen\", property).\n.output Answer\n\n", "completions": [".decl Has_property(Object:symbol, Property:symbol)\nHas_property(\"honey\", \"sweet\").\nHas_property(\"honey\", \"royal\").\n.decl Answer()\nAnswer() :- Has_property(\"honey\", property), Has_property(\"queen\", property).\n.output Answer\n\n"]}
{"id": 2259, "answer": true, "completion": ".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Robert Wadlow\", 2.72).\nHas_height(\"Frankenstein's monster\", 2.72).\n.decl Answer()\nAnswer() :- Has_height(\"Robert Wadlow\", height1), Has_height(\"Frankenstein's monster\", height2), height1 > height2.\n.output Answer\n\n", "completions": [".decl Has_height(Object:symbol, Height:float)\nHas_height(\"Robert Wadlow\", 2.72).\nHas_height(\"Frankenstein's monster\", 2.72).\n.decl Answer()\nAnswer() :- Has_height(\"Robert Wadlow\", height1), Has_height(\"Frankenstein's monster\", height2), height1 > height2.\n.output Answer\n\n"]}
{"id": 2260, "answer": false, "completion": ".decl Has_age(Person:symbol, Age:float)\nHas_age(\"kindergarten teacher\", 30).\nHas_age(\"New Testament\", 2000).\n.decl Answer()\nAnswer() :- Has_age(\"kindergarten teacher\", age1), Has_age(\"New Testament\", age2), age1 > age2.\n.output Answer\n\n", "completions": [".decl Has_age(Person:symbol, Age:float)\nHas_age(\"kindergarten teacher\", 30).\nHas_age(\"New Testament\", 2000).\n.decl Answer()\nAnswer() :- Has_age(\"kindergarten teacher\", age1), Has_age(\"New Testament\", age2), age1 > age2.\n.output Answer\n\n"]}
{"id": 2261, "answer": false, "completion": ".decl Banned(Book:symbol)\nBanned(\"The Adventures of Pinocchio\").\n.decl Written_by(Book:symbol, Author:symbol)\nWritten_by(\"The Adventures of Pinocchio\", \"Carlo Collodi\").\n.decl Answer()\nAnswer() :- Banned(book), Written_by(book, author), author = \"Alfred Nobel\".\n.output Answer\n\n", "completions": [".decl Banned(Book:symbol)\nBanned(\"The Adventures of Pinocchio\").\n.decl Written_by(Book:symbol, Author:symbol)\nWritten_by(\"The Adventures of Pinocchio\", \"Carlo Collodi\").\n.decl Answer()\nAnswer() :- Banned(book), Written_by(book, author), author = \"Alfred Nobel\".\n.output Answer\n\n"]}
{"id": 2262, "answer": false, "completion": ".decl Has_kinetic_energy(Object:symbol, Kinetic_energy:float)\nHas_kinetic_energy(\"ukemi\", 0).\nHas_kinetic_energy(\"ukemi\", kinetic_energy).\n.decl Answer()\nAnswer() :- Has_kinetic_energy(\"ukemi\", kinetic_energy1), Has_kinetic_energy(\"ukemi\", kinetic_energy2), kinetic_energy1 = kinetic_energy2.\n.output Answer\n\n", "completions": [".decl Has_kinetic_energy(Object:symbol, Kinetic_energy:float)\nHas_kinetic_energy(\"ukemi\", 0).\nHas_kinetic_energy(\"ukemi\", kinetic_energy).\n.decl Answer()\nAnswer() :- Has_kinetic_energy(\"ukemi\", kinetic_energy1), Has_kinetic_energy(\"ukemi\", kinetic_energy2), kinetic_energy1 = kinetic_energy2.\n.output Answer\n\n"]}
{"id": 2263, "answer": true, "completion": ".decl Is_special(Object:symbol)\nIs_special(\"special brownies\").\n.decl Is_forbidden(Object:symbol)\nIs_forbidden(\"children\").\n.decl Answer()\nAnswer() :- Is_special(object), Is_forbidden(object).\n.output Answer\n\n", "completions": [".decl Is_special(Object:symbol)\nIs_special(\"special brownies\").\n.decl Is_forbidden(Object:symbol)\nIs_forbidden(\"children\").\n.decl Answer()\nAnswer() :- Is_special(object), Is_forbidden(object).\n.output Answer\n\n"]}
{"id": 2264, "answer": true, "completion": ".decl Has_n_episodes(Series:symbol, N_episodes:float)\nHas_n_episodes(\"Futurama\", 50).\nHas_n_episodes(\"The Simpsons\", 699).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Futurama\", n_episodes1), Has_n_episodes(\"The Simpsons\", n_episodes2), n_episodes1 > n_episodes2.\n.output Answer\n\n", "completions": [".decl Has_n_episodes(Series:symbol, N_episodes:float)\nHas_n_episodes(\"Futurama\", 50).\nHas_n_episodes(\"The Simpsons\", 699).\n.decl Answer()\nAnswer() :- Has_n_episodes(\"Futurama\", n_episodes1), Has_n_episodes(\"The Simpsons\", n_episodes2), n_episodes1 > n_episodes2.\n.output Answer\n\n"]}
{"id": 2265, "answer": true, "completion": ".decl Lives_in_temperature(Animal:symbol, Temperature:float)\nLives_in_temperature(\"anchovy\", -1).\nLives_in_temperature(\"anchovy\", 1).\nLives_in_temperature(\"anchovy\", 0).\n.decl Answer()\nAnswer() :- Lives_in_temperature(\"anchovy\", temperature), temperature < 0.\n.output Answer\n\n", "completions": [".decl Lives_in_temperature(Animal:symbol, Temperature:float)\nLives_in_temperature(\"anchovy\", -1).\nLives_in_temperature(\"anchovy\", 1).\nLives_in_temperature(\"anchovy\", 0).\n.decl Answer()\nAnswer() :- Lives_in_temperature(\"anchovy\", temperature), temperature < 0.\n.output Answer\n\n"]}
{"id": 2266, "answer": false, "completion": ".decl Plays_game(Person:symbol, Game:symbol)\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero II\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero III\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith 2\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith 3\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 2\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 3\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 4\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 5\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 6\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 7\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 8\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 9\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 10\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 11\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 12\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 13\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 14\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 15\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 16\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 17\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 18\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 19\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 20\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 21\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 22\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 23\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 24\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 25\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 26\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 27\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 28\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 29\").\nPlays_game(\"Jim", "completions": [".decl Plays_game(Person:symbol, Game:symbol)\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero II\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero III\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith 2\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Encore: Rocksmith 3\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 2\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 3\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 4\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 5\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 6\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 7\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 8\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 9\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 10\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 11\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 12\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 13\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 14\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 15\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 16\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 17\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 18\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 19\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 20\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 21\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 22\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 23\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 24\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 25\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 26\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 27\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 28\").\nPlays_game(\"Jimi Hendrix\", \"Guitar Hero Live: Rock Band 29\").\nPlays_game(\"Jim"]}
{"id": 2267, "answer": false, "completion": ".decl Killed(Person:symbol, N_kills:float)\nKilled(\"Charles Manson\", 9).\nKilled(\"Marilyn Manson\", 5).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"", "completions": [".decl Killed(Person:symbol, N_kills:float)\nKilled(\"Charles Manson\", 9).\nKilled(\"Marilyn Manson\", 5).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\"Marilyn Manson\", 1).\nKilled(\""]}
{"id": 2268, "answer": true, "completion": ".decl Has_power(Group:symbol, Power:symbol)\nHas_power(\"US\", \"military\").\nHas_power(\"US\", \"veto\").\n.decl Answer()\nAnswer() :- Has_power(\"US\", power1), Has_power(\"US\", power2), power1 = power2.\n.output Answer\n\n", "completions": [".decl Has_power(Group:symbol, Power:symbol)\nHas_power(\"US\", \"military\").\nHas_power(\"US\", \"veto\").\n.decl Answer()\nAnswer() :- Has_power(\"US\", power1), Has_power(\"US\", power2), power1 = power2.\n.output Answer\n\n"]}
{"id": 2269, "answer": false, "completion": ".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Christian\", \"Sheol\").\nBelieves_in(\"Christian\", \"Heaven\").\n.decl Answer()\nAnswer() :- Believes_in(\"Christian\", belief).\n.output Answer\n\n", "completions": [".decl Believes_in(Person:symbol, Belief:symbol)\nBelieves_in(\"Christian\", \"Sheol\").\nBelieves_in(\"Christian\", \"Heaven\").\n.decl Answer()\nAnswer() :- Believes_in(\"Christian\", belief).\n.output Answer\n\n"]}
{"id": 2270, "answer": true, "completion": ".decl Has_government(Place:symbol, Government:symbol)\nHas_government(\"Egypt\", \"theocratic\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Great Pyramids\", 20).\n.decl Answer()\nAnswer() :- Has_government(\"Egypt\", government), Has_n_members(\"Great Pyramids\", n_members), government = \"theocratic\".\n.output Answer\n\n", "completions": [".decl Has_government(Place:symbol, Government:symbol)\nHas_government(\"Egypt\", \"theocratic\").\n.decl Has_n_members(Group:symbol, N_members:float)\nHas_n_members(\"Great Pyramids\", 20).\n.decl Answer()\nAnswer() :- Has_government(\"Egypt\", government), Has_n_members(\"Great Pyramids\", n_members), government = \"theocratic\".\n.output Answer\n\n"]}
{"id": 2271, "answer": true, "completion": ".decl Can_ride(Person:symbol, Ride:symbol)\nCan_ride(\"Justin Timberlake\", \"Shipwreck Falls\").\nCan_ride(\"Justin Timberlake\", \"Goliath\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\n.decl Can_ride(Person:symbol, Ride:symbol)\nCan_ride(\"Justin Timberlake\", \"Shipwreck Falls\").\nCan_ride(\"Justin Timberlake\", \"Goliath\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\n.decl Answer()\nAnswer() :- Can_ride(\"Justin Timberlake\", ride1), Can_ride(\"Justin Timberlake\", ride2), ride1 != ride2.\n.output Answer\n\n", "completions": [".decl Can_ride(Person:symbol, Ride:symbol)\nCan_ride(\"Justin Timberlake\", \"Shipwreck Falls\").\nCan_ride(\"Justin Timberlake\", \"Goliath\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\n.decl Can_ride(Person:symbol, Ride:symbol)\nCan_ride(\"Justin Timberlake\", \"Shipwreck Falls\").\nCan_ride(\"Justin Timberlake\", \"Goliath\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\nCan_ride(\"Justin Timberlake\", \"The Viper\").\nCan_ride(\"Justin Timberlake\", \"The Python\").\nCan_ride(\"Justin Timberlake\", \"The Beast\").\nCan_ride(\"Justin Timberlake\", \"The Wild One\").\nCan_ride(\"Justin Timberlake\", \"The Steel Eel\").\n.decl Answer()\nAnswer() :- Can_ride(\"Justin Timberlake\", ride1), Can_ride(\"Justin Timberlake\", ride2), ride1 != ride2.\n.output Answer\n\n"]}
{"id": 2272, "answer": false, "completion": ".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Oasis cruise boat\", 4).\nHas_length(\"Lincoln Tunnel\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"Oasis cruise boat\", length1), Has_length(\"Lincoln Tunnel\", length2), length1 > length2.\n.output Answer\n\n", "completions": [".decl Has_length(Object:symbol, Length:float)\nHas_length(\"Oasis cruise boat\", 4).\nHas_length(\"Lincoln Tunnel\", 4).\n.decl Answer()\nAnswer() :- Has_length(\"Oasis cruise boat\", length1), Has_length(\"Lincoln Tunnel\", length2), length1 > length2.\n.output Answer\n\n"]}
{"id": 2273, "answer": false, "completion": ".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Snoop Dogg\", \"Snoop Dogg\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"rapper\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"actor\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_", "completions": [".decl Has_name(Person:symbol, Name:symbol)\nHas_name(\"Snoop Dogg\", \"Snoop Dogg\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"rapper\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"actor\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_profession(Person:symbol, Profession:symbol)\nHas_profession(\"Snoop Dogg\", \"author\").\n.decl Has_"]}
{"id": 2274, "answer": true, "completion": ".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"amoeba\", \"cancer\").\n.decl Answer()\nAnswer() :- Has_cancer(\"amoeba\", cancer).\n.output Answer\n\n", "completions": [".decl Has_cancer(Person:symbol, Cancer:symbol)\nHas_cancer(\"amoeba\", \"cancer\").\n.decl Answer()\nAnswer() :- Has_cancer(\"amoeba\", cancer).\n.output Answer\n\n"]}
{"id": 2275, "answer": true, "completion": ".decl Listened_to(Person:symbol, Album:symbol)\nListened_to(\"U.S. soldiers\", \"Believe\").\n.decl Answer()\nAnswer() :- Listened_to(\"U.S. soldiers\", \"Believe\").\n.output Answer\n\n", "completions": [".decl Listened_to(Person:symbol, Album:symbol)\nListened_to(\"U.S. soldiers\", \"Believe\").\n.decl Answer()\nAnswer() :- Listened_to(\"U.S. soldiers\", \"Believe\").\n.output Answer\n\n"]}
{"id": 2276, "answer": false, "completion": ".decl Is_a_vegan(Person:symbol)\nIs_a_vegan(\"vegan\").\n.decl Is_a_traditional_Paella_dish(Dish:symbol)\nIs_a_traditional_Paella_dish(\"paella\").\n.decl Answer()\nAnswer() :- Is_a_vegan(\"vegan\"), Is_a_traditional_Paella_dish(\"paella\").\n.output Answer\n\n", "completions": [".decl Is_a_vegan(Person:symbol)\nIs_a_vegan(\"vegan\").\n.decl Is_a_traditional_Paella_dish(Dish:symbol)\nIs_a_traditional_Paella_dish(\"paella\").\n.decl Answer()\nAnswer() :- Is_a_vegan(\"vegan\"), Is_a_traditional_Paella_dish(\"paella\").\n.output Answer\n\n"]}
{"id": 2277, "answer": false, "completion": ".decl Accused(Person:symbol, Accuser:symbol)\nAccused(\"Mozart\", \"Richard Wagner\").\n.decl Accused(Person:symbol, Accuser:symbol)\nAccused(\"Richard Wagner\", \"Mozart\").\n.decl Answer()\nAnswer() :- Accused(\"Mozart\", accuser), Accused(\"Richard Wagner\", accuser).\n.output Answer\n\n", "completions": [".decl Accused(Person:symbol, Accuser:symbol)\nAccused(\"Mozart\", \"Richard Wagner\").\n.decl Accused(Person:symbol, Accuser:symbol)\nAccused(\"Richard Wagner\", \"Mozart\").\n.decl Answer()\nAnswer() :- Accused(\"Mozart\", accuser), Accused(\"Richard Wagner\", accuser).\n.output Answer\n\n"]}
{"id": 2278, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Year's Eve\", \"December\").\nHappens_in_time(\"candy\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"New Year's Eve\", month), Happens_in_time(\"candy\", month).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"New Year's Eve\", \"December\").\nHappens_in_time(\"candy\", \"December\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"New Year's Eve\", month), Happens_in_time(\"candy\", month).\n.output Answer\n\n"]}
{"id": 2279, "answer": false, "completion": ".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"perch\", \"yellow\").\nHas_color(\"Red Sea\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"perch\", color), Has_color(\"Red Sea\", color), color != \"yellow\".\n.output Answer\n\n", "completions": [".decl Has_color(Object:symbol, Color:symbol)\nHas_color(\"perch\", \"yellow\").\nHas_color(\"Red Sea\", \"blue\").\n.decl Answer()\nAnswer() :- Has_color(\"perch\", color), Has_color(\"Red Sea\", color), color != \"yellow\".\n.output Answer\n\n"]}
{"id": 2280, "answer": false, "completion": ".decl Elected(Person:symbol, Election:symbol)\nElected(\"Bela IV\", \"Kingdom of Hungary\").\nElected(\"Matthias Corvinus\", \"Kingdom of Hungary\").\nElected(\"Matthias Corvinus\", \"Kingdom of Bohemia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Poland\").\nElected(\"Matthias Corvinus\", \"Kingdom of Serbia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Croatia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Lithuania\").\nElected(\"Matthias Corvinus\", \"Kingdom of Denmark\").\nElected(\"Matthias Corvinus\", \"Kingdom of Norway\").\nElected(\"Matthias Corvinus\", \"Kingdom of Sweden\").\nElected(\"Matthias Corvinus\", \"Kingdom of Halych-Volhynia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Bohemia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Poland\").\nElected(\"Matthias Corvinus\", \"Kingdom of Serbia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Croatia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Lithuania\").\nElected(\"Matthias Corvinus\", \"Kingdom of Denmark\").\nElected(\"Matthias Corvinus\", \"Kingdom of Norway\").\nElected(\"Matthias Corvinus\", \"Kingdom of Sweden\").\nElected(\"Matthias Corvinus\", \"Kingdom of Halych-Volhynia\").\n.decl Answer()\nAnswer() :- Elected(\"Matthias Corvinus\", \"Kingdom of Hungary\").\n.output Answer\n\n", "completions": [".decl Elected(Person:symbol, Election:symbol)\nElected(\"Bela IV\", \"Kingdom of Hungary\").\nElected(\"Matthias Corvinus\", \"Kingdom of Hungary\").\nElected(\"Matthias Corvinus\", \"Kingdom of Bohemia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Poland\").\nElected(\"Matthias Corvinus\", \"Kingdom of Serbia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Croatia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Lithuania\").\nElected(\"Matthias Corvinus\", \"Kingdom of Denmark\").\nElected(\"Matthias Corvinus\", \"Kingdom of Norway\").\nElected(\"Matthias Corvinus\", \"Kingdom of Sweden\").\nElected(\"Matthias Corvinus\", \"Kingdom of Halych-Volhynia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Bohemia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Poland\").\nElected(\"Matthias Corvinus\", \"Kingdom of Serbia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Croatia\").\nElected(\"Matthias Corvinus\", \"Kingdom of Lithuania\").\nElected(\"Matthias Corvinus\", \"Kingdom of Denmark\").\nElected(\"Matthias Corvinus\", \"Kingdom of Norway\").\nElected(\"Matthias Corvinus\", \"Kingdom of Sweden\").\nElected(\"Matthias Corvinus\", \"Kingdom of Halych-Volhynia\").\n.decl Answer()\nAnswer() :- Elected(\"Matthias Corvinus\", \"Kingdom of Hungary\").\n.output Answer\n\n"]}
{"id": 2281, "answer": false, "completion": ".decl Has_genus(Species:symbol, Genus:symbol)\nHas_genus(\"western honey bee\", \"Apis\").\nHas_genus(\"Topa Inca Yupanqui\", \"Inca\").\n.decl Answer()\nAnswer() :- Has_genus(\"Topa Inca Yupanqui\", genus), Has_genus(\"western honey bee\", genus).\n.output Answer\n\n", "completions": [".decl Has_genus(Species:symbol, Genus:symbol)\nHas_genus(\"western honey bee\", \"Apis\").\nHas_genus(\"Topa Inca Yupanqui\", \"Inca\").\n.decl Answer()\nAnswer() :- Has_genus(\"Topa Inca Yupanqui\", genus), Has_genus(\"western honey bee\", genus).\n.output Answer\n\n"]}
{"id": 2282, "answer": false, "completion": ".decl Inspired(Book_A:symbol, Book_B:symbol)\nInspired(\"Alice's Adventures in Wonderland\", \"Macbeth\").\n.decl Answer()\nAnswer() :- Inspired(\"Alice's Adventures in Wonderland\", book), Inspired(book, \"Macbeth\").\n.output Answer\n\n", "completions": [".decl Inspired(Book_A:symbol, Book_B:symbol)\nInspired(\"Alice's Adventures in Wonderland\", \"Macbeth\").\n.decl Answer()\nAnswer() :- Inspired(\"Alice's Adventures in Wonderland\", book), Inspired(book, \"Macbeth\").\n.output Answer\n\n"]}
{"id": 2283, "answer": true, "completion": ".decl Has_n_occurrences(Mythical_being:symbol, N_occurrences:float)\nHas_n_occurrences(\"fairy\", 3).\nHas_n_occurrences(\"valkyrie\", 2).\n.decl Answer()\nAnswer() :- Has_n_occurrences(\"fairy\", n_occurrences1), Has_n_occurrences(\"valkyrie\", n_occurrences2), n_occurrences1 > n_occurrences2.\n.output Answer\n\n", "completions": [".decl Has_n_occurrences(Mythical_being:symbol, N_occurrences:float)\nHas_n_occurrences(\"fairy\", 3).\nHas_n_occurrences(\"valkyrie\", 2).\n.decl Answer()\nAnswer() :- Has_n_occurrences(\"fairy\", n_occurrences1), Has_n_occurrences(\"valkyrie\", n_occurrences2), n_occurrences1 > n_occurrences2.\n.output Answer\n\n"]}
{"id": 2284, "answer": true, "completion": ".decl Is_a(Animal_A:symbol, Animal_B:symbol)\nIs_a(\"Chinchilla\", \"rodent\").\nIs_a(\"Chinchilla\", \"felis catus\").\n.decl Answer()\nAnswer() :- Is_a(\"Chinchilla\", animal), Is_a(animal, \"rodent\").\n.output Answer\n\n", "completions": [".decl Is_a(Animal_A:symbol, Animal_B:symbol)\nIs_a(\"Chinchilla\", \"rodent\").\nIs_a(\"Chinchilla\", \"felis catus\").\n.decl Answer()\nAnswer() :- Is_a(\"Chinchilla\", animal), Is_a(animal, \"rodent\").\n.output Answer\n\n"]}
{"id": 2285, "answer": true, "completion": ".decl Visits(Person_A:symbol, Person_B:symbol)\nVisits(\"Elizabeth II\", \"Queen Victoria\").\n.decl Visits_every_n_years(Person_A:symbol, Person_B:symbol, N_years:float)\nVisits_every_n_years(\"Elizabeth II\", \"Queen Victoria\", 2).\n.decl Answer()\nAnswer() :- Visits(\"Elizabeth II\", person_b), Visits_every_n_years(\"Elizabeth II\", person_b, n_years), Visits_every_n_years(\"Queen Victoria\", person_b, n_years).\n.output Answer\n\n", "completions": [".decl Visits(Person_A:symbol, Person_B:symbol)\nVisits(\"Elizabeth II\", \"Queen Victoria\").\n.decl Visits_every_n_years(Person_A:symbol, Person_B:symbol, N_years:float)\nVisits_every_n_years(\"Elizabeth II\", \"Queen Victoria\", 2).\n.decl Answer()\nAnswer() :- Visits(\"Elizabeth II\", person_b), Visits_every_n_years(\"Elizabeth II\", person_b, n_years), Visits_every_n_years(\"Queen Victoria\", person_b, n_years).\n.output Answer\n\n"]}
{"id": 2286, "answer": true, "completion": ".decl Has_reason_to_pray(Person:symbol, God:symbol)\nHas_reason_to_pray(\"the Boy Who Cried Wolf\", \"Pan\").\n.decl Answer()\nAnswer() :- Has_reason_to_pray(\"the Boy Who Cried Wolf\", god).\n.output Answer\n\n", "completions": [".decl Has_reason_to_pray(Person:symbol, God:symbol)\nHas_reason_to_pray(\"the Boy Who Cried Wolf\", \"Pan\").\n.decl Answer()\nAnswer() :- Has_reason_to_pray(\"the Boy Who Cried Wolf\", god).\n.output Answer\n\n"]}
{"id": 2287, "answer": true, "completion": ".decl Connects(Wall:symbol, Team1:symbol, Team2:symbol)\nConnects(\"Great Wall of China\", \"Dodgers\", \"White Sox\").\n.decl Answer()\nAnswer() :- Connects(\"Great Wall of China\", team1, team2), Connects(\"Great Wall of China\", team2, team3), team1 != team3.\n.output Answer\n\n", "completions": [".decl Connects(Wall:symbol, Team1:symbol, Team2:symbol)\nConnects(\"Great Wall of China\", \"Dodgers\", \"White Sox\").\n.decl Answer()\nAnswer() :- Connects(\"Great Wall of China\", team1, team2), Connects(\"Great Wall of China\", team2, team3), team1 != team3.\n.output Answer\n\n"]}
{"id": 2288, "answer": true, "completion": ".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Happy hardcore music\", \"afternoon\").\nHappens_in_time(\"Happy hardcore music\", \"evening\").\nHappens_in_time(\"Happy hardcore music\", \"morning\").\nHappens_in_time(\"Happy hardcore music\", \"night\").\n.decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"firing\", \"afternoon\").\nHappens_at_time(\"firing\", \"evening\").\nHappens_at_time(\"firing\", \"morning\").\nHappens_at_time(\"firing\", \"night\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Happy hardcore music\", time), Happens_at_time(\"firing\", time).\n.output Answer\n\n", "completions": [".decl Happens_in_time(Event:symbol, Time:symbol)\nHappens_in_time(\"Happy hardcore music\", \"afternoon\").\nHappens_in_time(\"Happy hardcore music\", \"evening\").\nHappens_in_time(\"Happy hardcore music\", \"morning\").\nHappens_in_time(\"Happy hardcore music\", \"night\").\n.decl Happens_at_time(Event:symbol, Time:symbol)\nHappens_at_time(\"firing\", \"afternoon\").\nHappens_at_time(\"firing\", \"evening\").\nHappens_at_time(\"firing\", \"morning\").\nHappens_at_time(\"firing\", \"night\").\n.decl Answer()\nAnswer() :- Happens_in_time(\"Happy hardcore music\", time), Happens_at_time(\"firing\", time).\n.output Answer\n\n"]}
{"id": 2289, "answer": true, "completion": ".decl Has_value(Company:symbol, Value:float)\nHas_value(\"Sainsbury's\", 3).\nHas_value(\"Tesco\", 2).\n.decl Answer()\nAnswer() :- Has_value(\"Sainsbury's\", value1), Has_value(\"Tesco\", value2), value1 > value2.\n.output Answer\n\n", "completions": [".decl Has_value(Company:symbol, Value:float)\nHas_value(\"Sainsbury's\", 3).\nHas_value(\"Tesco\", 2).\n.decl Answer()\nAnswer() :- Has_value(\"Sainsbury's\", value1), Has_value(\"Tesco\", value2), value1 > value2.\n.output Answer\n\n"]}
